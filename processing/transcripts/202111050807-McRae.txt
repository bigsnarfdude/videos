Based on the logarithmic theory of Huang Lucaski-Jang. So we can get tensor categories that are not necessarily finite, also tensor categories that are not necessarily simple, semi-simple. For this talk, I will focus on the finite case, but the not necessarily semi-simple case. So then the, I think it was probably Huang who first formulated this case. Huang who first formulated this conjecture that if you have strongly finite VOA, whatever that means, then you should get a non-semi-simple, or not necessarily semi-simple, modular tensor category. Or sometimes I will use the term factorizable finite ribbon category because sometimes my modular tensor categories are semi-simple. Okay. So maybe I should start by saying a little bit about what a vertex operator algebra is, although Vertex operator algebra is, although I won't try to give a full definition. But basically, we have this Z-graded vector space and we have this vertex operator operation, which takes two vectors in V and gives out a series, formal Lorentz series, whose coefficients are in V. And then we have this vacuum vector of degree zero and this conformal vector in degree two. The vertex operator product satisfies some units. Product satisfies some unit properties related to the vacuum vector. There's some complex analytic version of commutativity and associativity for this vertex operator. If you think of replacing the formal variable x with some complex variable, then we have a Virusor action coming from the vertex operator for omega. And in particular, the grading here is given by eigenvalues for the L0 operator. For the L0 operator. And then when we have VOAs, any algebraic structure, we get the notion of module for that. So V module is also a graded vector space, although we allow the grading to be a little bit more general than something like a Z grading or half Z grading. And then we have this vertex operator action of V on W and similar unit properties. Properties, left unit for this left action, commutativity, associativity, Virasoro also. In this case, WH, the homogeneous spaces, are generalized eigenspaces for L0 in general. So now I can say what is a strongly finite VOA. I think this is terminology that Thomas and Terry came up with it, and it came up with, and it's sort of convenient, so I don't have to. And it's sort of convenient, so I don't have to keep repeating all of these hypotheses for V. So strongly finite has there are these sort of relatively minor conditions, but the positive energy condition should be non-negatively graded and degree zero is just the vacuum. Self-contragradient means that it is isomorphic to its contragrad as a V module. As a V module, the contragradient module is a V module structure that's built on the graded dual of V. So we saw these in Simon's talk a few days ago. Strongly finite VOI should certainly be simple. This is actually automatic if you assume the positive energy and self-contragediant conditions, but it's certainly something that we want. And then there's this C2 technical C2 cofiniteness condition. Technical C2 cofiniteness condition says this ocean space should be finite dimensional. So this is some sort of technical condition, but it turns out to be natural and it turns out to be a good condition to have to ensure that your representation category is finite. So if you do have a strongly finite VOA and you have a category, I will always use C V to note to denote the Always use C V to denote the full category of grading restricted generalized modules. Generalized just means these WHs are generalized eigenspaces for L0. Grading restricted means that these eigenspaces are finite dimensional and the eigenvalues are also lower bounded. And it turns out that for C2cofinite VOAs, we can assume that the Can assume that the generalized eigenvalues for L0 are actually rational numbers. So, this theorem on the finiteness of the category is, I would say, mainly due to Huang. It turns out the C V is a finite abelian category. So, most importantly, that means everything has finite length. There are finitely many simple modules, and every simple module has a projective cover. I think this. I think this part about the finitely many simple modules is actually originally due to Dongley and Mason using Tru's work on the Tru algebra. But I think the rest of it is basically due to Hong. And then this theorem is also due to Huang that we have a natural braided tensor category structure. We actually don't need a strongly finite VOA, we just need this kind of positively graded, n-graded VOA. Graded and graded VOA and C2 cofi-ness condition. We don't really need the self-contragrading condition to get a graded tensor category. So now I should say a little bit about how you get tensor categories from VOA module categories. So can I ask you a quick question? Yes. Yeah. You said it's a braided tensor category. Said it's a braided tensor category. Under which conditions do you have some control on the non-degeneracy of the braiding? Yes, well, yes, so that's something I will certainly be addressing later on in this talk. But I would say, just in general, I would say you don't really know much. Really know much. Certainly, I would say for a general C2 cofinite VOA, in particular, ones that are not necessarily simple and self-contragradient, I would say probably nothing is known in general about the non-degeneracies of gradient. Certainly the conjecture is that if you assume the self-contragradience and the as I mentioned, the conjecture is that if you assume the self-contra gradients, then you should get rigidity and you should get rigidity and non-degeneracy. Yeah, in general, non-degeneracy is not so clear. Okay, thank you. So yeah, so the important subtlety about VOA tensor categories is that tensor products of V modules are not based on vector space tensor products. Instead, they're based on Instead, they're based on these things called intertwining operators, which, as Simon mentioned in his talk on Monday, these are basically some sort of V bilinear map. So it's some kind of linear map that looks like a vertex operator for V or for V module, but we insert vectors from two modules, W1 and W2, and we get out a series. Get out a series whose coefficients are vectors in a third module W3. And we allow a lot more flexibility about the kind of powers of x and powers of log x that we allow in this kind of series. Yeah. So then the axioms are, there's some, again, some kind of commutativity and associativity axiom, which we saw in Simon's talk. Which we saw in Simon's talk. I won't go into detail about that. Also, an L minus one derivative property, which is important because of differential equations to get eventually to get associativity for tensor product modules. But that won't come up directly in this talk. So then, once you have this notion of intertwining operator, which is some analog of a bilinear map, then you have map, then you have the definition of tensor product as basically as the representing object for some intertwining operator or functor. So whenever you have an intertwining operator that originates from two modules W1 and W2, it should factor through a V-module homomorphism from the tensor product module. And the tensor product module here And the tensor product module here is equipped with some distinguished intertwining operator. So you define tensor products in this way, and as usual, when you define something by universal property or as a representing object or something like that, it's not always clear that it exists, in particular, whether it exists in the particular category that you're interested in. So this question of whether some V module category C. Some V module category C that you happen to like. The question of whether it's closed under tensor products is not really a trivial issue. But if you can show that it's closed under tensor products, if tensor products exist, then getting tensor products of homomorphisms, the unit property for the VOA V itself as a V module, the braiding, the ribbon twist, these are all easy because you can define them. Because you can define them directly using the universal property and properties of intertwining operators. But then the associativity is much more difficult. I guess from the informal field theory point of view, it's basically existence of operator product expansion for the fields in your CFT, but the important subtlety is that the fields are not just the fields in the vacuum. Are not just the fields in the vacuum sector, the ones that are associated to V itself, but also all the fields that are associated to V modules. So the associativity is in general quite difficult, but in many cases we do know that we have vertex operator algebras and we have categories of V modules that are graded tensor categories. And well, as we've been hearing in some of the talks this week, if you want to get applications of three manifolds, You want to get applications of three manifold invariants or construct TQFTs and so on, then you need this braided tensor category, or at least ideally, this braided tensor category should satisfy some additional nice properties like rigidity, for example, and also non-degeneracy for the braiding. So, of course, if V is strongly finite and the full category C V of V module is semi-simple. Category C V of V module is semi-simple, then this is precisely what it means for V to be strongly rational. And Huang's theorem applies to show that indeed C V is a semi-simple modular tensor category. So it's rigid and non-degenerate. If V is n-graded and C2 co-finite, but not necessarily self-contributing or simple, then we still know that C V is a graded tensor category, but it's definitely not rigid in general. Simon mentioned the WP. And mention the WPQ triplet algebras as examples of C2cofinite non-self-contragrant VOAs that definitely have non-rigid tensor categories. So we don't have rigidity in general, but we do in many cases. So we would like to know when is rigidity true. So again, the conjecture is that if V is strongly finite, That if V is strongly finite, so it's n-graded simple self-contragradient C2 co-finite, then Cv should be a not necessarily semi-simple modular tensor category or factorizable finite Ruben category. And let me now review what, again, briefly review what rigidity means. Well, at least rigidity in the context of self-contragradient VOAs, the dual of a module, if it exists, will always be the Module, if it exists, will always be the contragradent module, which is based on the graded dual of the module W itself. If V is self-contragradient, it's easy to get an evaluation because you just need to get an intertwining operator from W prime and W going into V, and that's easy from properties of intertwining operators. If V isn't self-contragraded, as Simon explained in his talk, you get an intergenerational. explained in his talk you get an inter a map going into you would get a map going into v prime instead but if v prime is isomorphic to v then you get this evaluation but even if you have a self-contragreen voa co-evaluations are not obvious especially because we're not assuming that our category is semi-simple if it was semi-simple we would have a map going from w tensor w prime to v similar to the evaluation and then we could just And then we could just use a semi-simplicity to get a map going back the other way, and that would at least give us a candidate for the coevaluation. But since we don't have semi-simplicity, even getting a candidate is not so clear. And then the other thing that we would need to show is the non-degeneracy for the braiding. And here is one of several characterizations of non-degeneracy that appeared in Azad's talk yesterday. Appeared in Azat's talk yesterday. Probably the easiest way to define it is that you have only that your only transparent objects are trivial. So if an object W double braids trivially with everything, then the only way that can happen is the direct sum of copies of your tensor unit, which is V in this case. So this is the easiest way to define non-degeneracy. And it's also the best way to define it for VOAs because the double braid. The double braiding is something we have a pretty good understanding of for VOAs. All right, so here's the main theorem that I want to talk about today, which is basically progress towards this conjecture, although unfortunately not a full resolution. The theorem is that if we have a strongly finite VOA and we assume that we already know the tensor category Cv is rigid, then at least we do get the non-degenerate. Least we do get the non-degeneracy of the braiding. So, in this case, C V is a factorizable finite ribbon category. So the proof of this uses the method of Moore-Seiberg that Huang used for proving modularity in the semi-simple case. It uses genus 1 correlation functions in the CFT that is associated to V, which are basically Q traces of some sort on V modules. Sort on V modules. For example, the most important genus1 functions are these one-point torus functions, the characters, where you just look at the trace of the vertex operator acting on some module W. Of course, since the module is infinite dimensional, we should take a graded trace using this, Q tau, to the L zero minus C over 24. So there's kind of a lot of notation here. So there's kind of a lot of notation in here. This U1 that I'm mentioning here is just some linear automorphism of V that's convenient to use. So it's associated to coordinates of punctures on the torus. Q tau means E is the 2 pi tau as usual. Tau is a variable in the upper half plane. C is the Viar-Soros central charge. This O notation means that you are taking the component of the vertex operator. The component of the vertex operator that preserves conformal weights. So, really, what this is just some trace of these operators, a sum of traces acting on finite dimensional vector spaces, these WHs. But in the non-semi-simple setting, there's a bit of a problem, which is that the characters are traces. The characters are traces, so they will only detect the semi-simplification of a V-module. They're never going to see any of the non-semi-simplicity in L0, which is certainly an important feature of logarithmic CFT. That's how you get the logarithms. So you can't expect the characters to contain all the information about your category that you want. And one solution to this problem that was introduced by Miyamoto is that. Introduced by Miyamoto is that you can use these additional so-called pseudo-trace functions that do see no semi-simplicity. Here I will give an alternate definition that's due to Erike and Erika Nagatomo. The pseudo-traces are constructed using associative algebras. So you start with an associate, just a finite dimensional associative algebra, say p, and we have a symmetric linear functional phi. phi which satisfies phi of AB equals phi of BA. And so you define pseudo-traces. Pseudo-traces are defined on projective p modules. So if you have a projective p-module, you can find some vectors bi in x. And then you can find vectors bi prime, which are p module homomorphisms from x to p, such that the identity of x can be split up in this way. X can be split up in this way. And then you can define the pseudo-trace, which is a map from key endomorphisms of X to C just by, well, it's this formula right here. You apply F to all the Bi's, and then Bi prime takes you from X into P, and then this symmetric linear functional takes you from P to C. So the pseudo trace is really just a number. Really, just a number. And in the special case that P is just the complex number field C and phi is the identity map, then you just get ordinary traces on finite dimensional vector spaces. So you can construct graded pseudo-traces on V modules if you have a V module X, which is projective for some associative algebra that's acting as V module endomorphism. Are thus acting as V module endomorphisms? Then each informal way space is going to be a finitely generated projective module for this algebra of V module endomorphisms. And you can define the graded pseudo-trace just like you define the character because these operators from the vertex operator are going are by definition they commute with p, so they're p module endomorphisms. L0 also commutes with p. L0 also commutes with P, so it's a P module endomorphism. So you can take the pseudo-trace of this thing. And what Miyamoto showed is that these pseudo-traces are modular invariant. So in particular, if you do the S transformation, changing tau in a pseudo-character, well, if you change tau in, for example, a character, which is a special case of a pseudo-trace, if you change tau to minus one over tau, If you change tau to minus one over tau and you put this factor in front of v, that's the s transformation. What he shows that you get some linear combination of pseudo-traces acting on v modules. So I'm just writing it down for V right now because that's really all that I need for proving this theorem about non-degeneracy if you assume rigidity. So it turns out that if you know Turns out that if you know the S transformation for the character of V, you can actually get the S transformation for all other V modules, or at least all other rigid V modules. So here is the theorem that is used to prove the main theorem on non-degeneracy. So you assume V is strongly finite and W is a rigid module, then the S transformation of the character of W is this linear combination. Of W is this linear combination of pseudo-traces. These pseudo-traces are actually the ones that are coming in the S-transformation of the character of V, but you are twisting this intertwining operator with the open hot flink endomorphism of X associated to W. And this is really the key for the non-degeneracy because this open Hotflink information contains information about the double grading. And in the semi-simple case, this formula is really what's telling you that what's telling you that is really what's telling you that the modular S transformation has some relation to the S matrix of the modular tensor category, which contains information about the double grading. So here is the diagrammatic depiction of the open hoplink. So you start with X, you co-evaluate W and W. X and you co-evaluate W and W prime. You double braid W around X and then you evaluate, and then you end up just with X again. And we are definitely assuming W is rigid here in order to have this coevaluation. So it's actually pretty easy to prove the non-degeneracy once you have this relation for the characters. For the characters, so let's say you have some transparent object, so W braids, double braids trivially with everything. Then, well, this open Hofflink, you can ignore the double braiding here. So you're just going to get the dimension, the categorical dimension of W times the identity. And so that means you're just getting a categorical dimension of W on each term of this sum here, which means you can just pull it outside that. Here, which means you can just pull it outside that sum. So, what that's telling you is that the S transformation of the character of W is really just the dimension of W times the S transformation of the character of V. And well, S is invertible, so you can forget about the S's in this equation. And also, characters of irreducible modules are linearly independent. So this kind of relation can only happen if the only composition factor W. The only composition factor of W is V itself. And then you might worry about whether you could have some kind of non-semi-simple self-extensions of V somehow. But it turns out that in a rigid finite tensor category, you never get non-trivial self-extensions. So actually, this is just a direct sum. So that proves the non-degeneracy. If you have a transparent object double-braced trivially with everything, then you just get, you just have. You just get, you just have some direct sum of copies of V. So this proves the non-degeneracy if you assume the rigidity. So then we should think about whether we could prove the rigidity using the same kinds of genus one correlation function methods, maybe generalizing what Huang did in the non-semi-simple case. Seems like it should be possible to generalize, just replace the traces with pseudo-traces. Replace the traces with pseudo-traces everywhere. But if you try to do that, there's a little bit of a problem because, in Huang's rigidity proof, there's a cyclic symmetry of the trace that gets used. At some point in the calculation, you're taking a trace of a product of two intertwining operators, something like this, and the order of the intertwining operators is wrong. So, you want to use a symmetry of traces just to switch the order of the intertwining operators to get. Twining operators to get the correct order. But when you do that, you change a trace on X to a trace on some other module, on the interior module, which is something like W tensor X. W here is the module that you're trying to prove is rigid, and X is some module that's showing up in the S transformation of the character V. So this works for pseudo traces. I mean, pseudo-traces have the same cyclic symmetry, but Cyclic symmetry, but the problem is you need these modules to be projective as modules for this associative algebra that you're using to define pseudo traces. So in this case, if we were trying to prove rigidity, we would be assuming that X is a projective P module because it's one of these modules that Miyamoto tells us is going to be there when we take the S transformation. And then certainly W tensor X is going to be a module for the same association. X is going to be a module for the same associative algebra because this algebra P just acts on the second factor, gives you an action of P. But is it projective? That's the problem. So if P is projective, or if X is projective as a module for this associative algebra, what about W tensor X? Well, in Miyamoto's modular invariance proof, he showed that you can assume that these algebras P are basic symmetric algebras, which Basic symmetric algebras, which just means all the irreducible p-modules are one-dimensional. And in this setting, you have this system of idempotence EI, where you have one EI for each irreducible p module. So, you know, EI acts on the ith module as the identity and trivially on every other p module. And then you have these corresponding dual elements that are in the socal of p. They're sort of dual with respect to the bilinear form that the form that the symmetric linear function is giving you. And so Miyamoto and Arike basically have this alternative characterization of projected p modules in this case of p being a basic algebra. Well, this characterization, I mean this condition here is due to Miyamoto and then Erike showed that this is equivalent to X being a projective P module. So Miyamoto showed that there's some nice basic There's some nice basis of p which contains all these EI's and Fi's in particular. And a P module X is projective if and only if the kernel of each Fi acting on X is equal to the span of all these other basis elements other than EI acting on X. So if this condition is true for X, it will also be true for W tensor X if we can get some relation like this. Can get some relation like this, where if we take W tensor, the kernel of Fi acting on X is that if that's the same as the kernel of identity tensor Fi acting on W tensor X, then this relation for W tensor X will hold. But to get this relation for the kernels, of course, we need something like we need tensoring with W to be exact or something like that. And we know that tensoring with W is right exact. That's an elementary. W is right exact, that's an elementary property of VOA tensor products, but left exactness definitely is not something that's always true. So this is a bit of an obstacle to proving rigidity. Usually, more likely we would be using rigidity to prove the exactness, but here we would need the exactness to prove the rigidity if we want to use these pseudo-traces. Okay, well, if we cannot prove rigidity in general at the moment, then we can at least ask whether we do know of any strongly finite VOAs that have rigid module categories. So maybe let me first say a little bit about the semi-simple case. Of course, if we know that Cv is semi-simple, then Huang's theorem tells us that it's rigid and modular, but then the problem is, how do we show that it's semi-simple? That it's semi-simple. So it turns out that if the Druh algebra A of V of your strongly finite VOA is semi-simple, when Druh was looking at modular invariance of characters for VOAs, what he basically showed was that there are not going to be any pseudo-traces in this S-transformation if A of V is semi-simple. And that means that pseudo-traces don't mess up the rigidity argument. Rigidity argument in this case. So if A of V is semi-simple, we get rigidity, and therefore we also get possibly non-semi-simple modularity. But actually, if we assume A of V is semi-simple and we assume we have a modular tensor category, well, then the tensor category is in particular unimodular, which basically just means the projective covers work out nicely, and then you can. And then you can actually prove that Cv really is semi-simple. So, this gives you a way of establishing rationality for VOAs if you know something about the true algebra. And so an application of this is rationality for all of the exceptional W algebras that were conjectured to be rational by Kasawakimoto and Arakawa. So, Arakawa showed there was C2 co-finite and also rational. And also, rational in the principal W algebra case. But then there are many non-principal W algebra examples that you can also consider. And Arakawa and Van Ekerin recently showed that at least the true algebras for these are semi-simple. So now we can use the true algebra semi-simplicity and this result here to establish rationality for these VOAs. Functionality for these VOAs. There's a slight subtlety in that some of these VOAs are actually half integer graded, and that leads to some extra difficulties in the analysis, but everything still works out. But since this conference is about non-semi-simple going beyond semi-simplicity, we should see if there are some non-semi-simple examples. So, Tsuchia and Simon Wood show And Simon Wood showed that, in fact, the P1 triplet W algebras do have rigid module categories. So therefore, they are also modular. Actually, the modularity of the non-degeneracy is not difficult to check directly. So Terry and Chris Negron did this earlier this year, for example. But then we can get more examples just by applying some standard constructions to To something like WP that we already know is rigid. And we can try to see if these standard constructions like tensor products, extensions, orbifolds, and so on, we can see if they preserve C2co finiteness and if they preserve rigidity. So first, tensor products. So this is a theorem that's kind of in progress right now, part of a joint project with Thomas and Tishanka and Tsinwei Yan. Nada and Tinway Yan. So, what you can show is that if U and V are strongly finite VOAs, then you can take the tensor product VOAs, also strongly finite. Its module category is actually equivalent to the Deline product category of Cu with Cv. And well, if this is true, then you get rigidity pretty easily because if Cu and C V are both rigid, then they're delian products. Then their DeLium product category will also be rigid for fairly easy reasons. So once this theorem is done, we will have tensor product examples. And then there are extensions, which is where we have one VOA that's included into a larger one. Let's assume V and A here are both strongly finite. Bund, Kirilloff, and Lepowski tell us that A is a commutative algebra object in the braided tensor category C V. Tensor category C V. And what Karilloff and Ostrich showed is that if C V is rigid and we also assume that the categorical dimension of A is non-zero, then C A is also rigid. And so Thomas and Shashanka and I here basically just checked that the tensor category C A you get in the abstract tensor categorical setting really is the VOA tensor category. So we can apply So we can apply both these, the tensor product, and the extension result. So what extensions have non-zero categorical dimension? Well, for example, if A, if V is the fixed point sub-algebra of some finite automorphism group that's acting on A, then the categorical dimension of A is just the order of G. So that means, for example, simple current extensions where the group G is abelian. Where the group G is abelian, those are going to preserve rigidity. Nice example of a simple current extension is a symplectic fermion VOA, which is the even sub-algebra of the symplectic fermion superalgebra. It's a simple current extension of some tensor product of a bunch of W2s. So given the tensor product and extension theorems, this symplectic fermion category will be rigid and modular. Will be rigid and modular. Maybe I should say a little bit about that. So, in a few of the talks, we've seen the symplectic fermion category. For example, Ingo's talk, symplectic fermion category as an example of a rigid modular category. In that case, that category is the one that Ingo constructed kind of explicitly that's sort of motivated by this. Of motivated by this Huang Lapowski Chang VOA tensor category story, but it's at the moment it has not quite been proved that that category is actually equivalent to the Huang Lepau Skijang VOA tensor category that you get from symplectic fermions. So the rigidity of that category coming from, that's literally coming from the VOA, it has Coming from the VOA, it has still been open up to this point. But these results will certainly establish rigidity for that. And finally, I would like to say something, say a little bit about Orbaford examples. So this is also something that's in progress. So now we assume that V is strongly finite with a rigid tensor category, and now we have G, a finite solvable automorphism group, and we look at the fixed point subalgebra. And we look at the fixed point subalgebra, the orbifold VOA. So, why finite solvable instead of a general finite group? Well, that's because in this case, Miyamoto showed that indeed Vg is strongly finite, in particular C2 co-finite. This is unfortunately something we don't know for finite groups in general, although it's certainly expected. And it seems like also to prove the rigidity for the VG category, somehow it's easier to consider. Category somehow is easier to consider the case of G finite cyclic, which you can then extend repeatedly to get finite solvable. So here's the outline of how you could try to do this. First, show that if you have a V G module W that induces to an untwisted V module, so in this case, V is a commutative associative algebra in the tensor category of Vg modules. Vg modules. And that means we have an induction functor that takes us from Vg modules to V modules. But actually, it's actually we don't necessarily get V modules. We might also get twisted sectors, twisted V modules. So we just want to, and we're not assuming anything about whether twisted V modules are rigid. We're just assuming the untwisted V modules are rigid. Assuming the untwisted V modules are rigid. So if we have a V G module that induces something untwisted and rigid, then we can use the rigidity to get rigidity for this. Secondly, it turns out we can use rigidity for these VG modules to get exactness of the tensoring functors, and then once we have. And then, once we have that, as I was explaining before, it should be possible to generalize Huang's rigidity argument to pseudo-traces if we have this exactness. And then we can get the rigidity for everything. And if this all works out, then that certainly gives a lot of interesting examples because WP has a number of interesting finite solvable subgroup automorphism groups that have been. Group automorphism groups that have been studied by Antun and Drajin and Sian Sulin. Symplectic fermions has a symplectic group as automorphism, so you're also going to get some finite, nice finite automorphism groups there. You can take tensor product VOAs and look at permutation orbifolds. So there are many examples you could consider from the orbifold point of view. Okay, I think that is all I will say. So, thank you. Robert, thank you very much for the nice talk. Please, everybody, ask questions. There's one. Well, there's one obvious question for me at least, but it's maybe not a question to you directly, but there must be a relation between these pseudo-traces that you just had in your talk and the modified traces that were in Ingos and others' talk yesterday. Can you say what this relation is? Yeah, I mean, that was, I was having the same kind of thinking when I was. Thinking when I was when Ingo and Azat were talking yesterday. Yeah, I think there must be some relation. I mean, I know I remember in particular Ingo talking about one of the pseudo traces that when look or looking at a modified trace on some module of just taking something like the theta to the n. Theta to the n and getting a factor of n squared in the pseudo-trace, that looks to me like there's some, I mean, that's something like the like sort of part of the semi-non, I mean, somehow it seems like that's going to be related to the nilpotent part of L0 acting on some symplectic fermion module, and certainly pseudo. Pseudo-traces are supposed to be able to detect the nilpotent part of L0. So, yeah, I think there must be some relation, but I don't really know. I don't know precisely. Maybe I can comment on the relation. Sure, do that. Yeah. So, these piece of traces, the partial trace condition, it uses rigidity in vector spaces, right? Rigidity in vector spaces, right? Not in the category. And so you should think about the category as a module category over vector spaces. It's a linear category. So it's equivalent to module category over vector spaces. And these pseudo trace functions, they are just module traces. So the general notion of generalization of modified trace to module trace. It's a similar concept. And you can talk about module traces for a module category over any tensor category. Over any tensor category with pilotal structure. And these pseudo-trace functions, they are just module trace for category C as model category project. And you say these pseudo-traces are of this kind. Why is that? Why is the pseudo-trace of this nature? You say, I see your module category point, but I don't see how the pseudo-trace fits directly into that scheme. Scheme, uh, no, I think if you want to classify them, uh, so the module traces do not have to be unique. Modified trace is unique, right? But module traces, they don't have to be unique. And I think if you ask if you want to, if you want to classify them, then probably the result is just there as many as linearly independent central forms on your algebra. Right? So you get as many epsilon trace functions as you have central forms. And that probably also you have as many more. And that's probably also, you have as many module traces as you have central forms. So Tudor also had a question. Tudor, do you want to go on or do you want to continue? I also had a modified trace question. Can they be expressed in terms of Taurus one-point functions? If you said that I missed it. I think these pseudo-trace functions. Yeah, I mean, you can think of these pseudo-trace functions as Taurus one. these pseudo-trace functions as torus one-point functions uh yeah of a of a certain kind yeah um yeah i'm not sure if i'm not sure if there's a consensus as to whether you really want to include all the pseudo traces as the you know the one-point functions in your cft but uh i mean i have the impression that some people are a little bit skeptical of whether pseudo-traces are really the right Traces are really the right generalization of traces that you really should be working with when you're doing logarithmic CFT. All right, thanks. Maybe sorry to add something quickly. So the Taurus one point blocks in the sense of view, right? Then the pseudo-traces are elements in this space because they just saw. Are elements in this space because they just solve the set of differential equations. But that's a different question from asking: can they be expressed as a usual trace over inserting a vertex operator over projective? That's a question which also Thomas said something about yesterday. And that I think is not known. Yeah, sorry, that's what I was asking. Yeah, my understanding is that this is exactly what one would like to know, and it's an open conjecture. Totally open, I think. Totally open, I think. Yeah, yeah, I don't think there's any good understanding of that. Yeah. Christoph, you also want to ask a question, right? Yeah, actually, it's a small comment. You mentioned at a given moment that if you d don't have that the vertex algebra and its contragrad are isomorphic, then that the coevaluation is not clear. Evaluation is not clear. But if you're in this situation, which was the situation of Simon Wood's talk, you actually do have a co-evaluation. You can show that there is a co-evaluation, but it goes into a different tensor product. So the interesting thing is you have in this situation a left exact and a right exact tensor product. And for the left exact tensor product, you do have a co-evaluation. You do have a co-evaluation, whether this is good, right? Right, yeah. So, you have I'm not sure, yes, yes, right, right. So, yes, of course, and I would say that when I am proving rigidity in situations where I can do so, for example, where there are no pseudo-traces, then definitely, yeah, definitely, this is definitely. Yeah, definitely, this is definitely going on because essentially the yes, essentially, this is how you define the co-evaluation. You do indeed have an obvious one going into the left exact tensor product. But if you want rigidity, of course, you want this left exact tensor product to be the same as your original right exact one. So you need the isomorphism between these two tensor products, and then the rigidity is basically immediate or automatic. Is basically immediate or automatic once you have that isomorphism. Yeah, yes, and that and that is how you get the code. Yes, this is a very interesting fact because, in general, categorically, there is no reason why the equivalence of the right exact and left exact tensor product should imply rigidity. It would imply a weaker statement. But for vertex algebras, apparently something stronger holds. Well, yeah, so I think, yes, maybe for vertex algebras, it's a little bit stronger than the general Grotendie-Verdier setting because you do always have double duals isomorphic to the dual. But so, in particular, the inverse of the contragradion functor is just the contragradient functor itself. In functo itself. That maybe makes things a little simpler, I don't know. But yeah, I think the rigidity is basically automatic once you have the correct once you have an isomorphism between the right exact and the left exact tensor products. I mean, it has to be the correct natural isomorphism. And we are also assuming self-contragredients to get the rigidity here. So, yes, I don't know if the isomorphism of left and right tensor products would imply rigidity in general unless you have some unless you have some proper candidate for the I'm not sure. I think you'll end up with what Boyachenko Trinity. Up with what Boyachenko-Trinfeld call R categories, and they have examples of R categories which are not rigid, but they are not easy to construct. At least in our world, they are not, I wouldn't know in a corresponding construction. Right. Yeah, I don't think we really know of any VOAs like that, which are self-contragradient, but they. Which are self-contra gradient, but they don't have rigid tensor formula. Do we have another question? Okay, then let's thank Robert again. Thank you, Robert. And we will resume in a few minutes, say three minutes or so with Zimon's talk. How do I get a hold of the presentation? You can just share. I can just, I don't. You can just share. I can just, I don't have to be a legitimate. Yeah, everybody's allowed to. Okay, that's easy. And then I will simply start doing that.