A style of modeling having to do with graphs and label graphs that I think may be relevant, at least from the discussions that we've had so far. And this has to do with local rules for changing things in graphs, either by having variables on graphs change dynamically, depending just on their neighbors, or by having graph structure change. Structure change. And so examples at the tissue level would be cell-centered models or vertex-centered models as shown here. So in a cell-centered model, when a cell divides, then the graph has to change somehow. Or one could do some combination of that with objects at different dimensionalities. So one would have 3D cells connected to each other by way of 2D cells. Connected to each other by way of 2D faces, and they have their own kind of potential for structural dynamics as well as quantitative dynamics. But of course, we've been discussing very multi-scale modeling. Here's kind of a picture from a recent paper in which the different tissue level is related to what's happening in microtubules, which is Which is very macromolecular, biophysical level that can also be described by dynamical graphs, graphs that change through time with lots and lots of labels on the nodes. And so here's a little example of a dynamical graph grammar, which tries to encompass these phenomenon of microtubule growing up and then And then intersecting with another one and undergoing catastrophe followed by retraction. And so, in a dynamical graph grammar, it would look something like this with more details, where the growth would be given by, for example, by differential equations in which cytosolic factors can affect the position of the end, perhaps the orientation of the end of a group. Perhaps the orientation of the end of a growing microtubule. And so we have differential equation solving rules, and then we have structure-altering rules representing the three things that could happen when two cortical microtubules in a plant cell collide. And that's very naturally represented with a graph grammar. And well, another example of a cytoskeleton dynamics that we have in a different Dynamics that we have in a different project is actin networks, cytoskeletal networks, where actually the set of rules is not all that different. Formally, one has growing and retracting ends, one has severing, just as with microtubules, and maybe something that's a little different is capping. And there's an agent, Cam kinase 2-beta, that mediates some kind of bundling. And one can also have. And one can also have here, probably rather than junction formation, one has branching as the primary graph structure changing thing. And so we have a package in Mathematica that will let you run this kind of model and more importantly to express it. And as in this previous example, each rule has a little mini theory associated with it, which is what's the differential equation. It which was what's the differential equation, or what's the probability distribution? Here's the probability distribution having to do with the critical angle that one can use to describe the details. So I'll give you a little bit more detail in a slide or two, but just to back up, you know, here's a level of modeling that's different from partial differential equations, and it's different from stochastic, although it encompasses stochastic reactions. Although it encompasses stochastic reaction networks and kind of encompasses, but is different to molecular dynamics as well. I think it's a natural intermediate scale of modeling for complex systems with very emergent phenomena. And an interesting problem is how to relate it in a multi-scale model, and perhaps by focusing on energies, which are sort of level independent things. Sort of level independent things. Well, this, I was pleased to be able to write down for each rule an operator that says how that rule in a dynamical graph grammar moves probability around. And then one has an algebra of these operators. And here it is. If you have two graph rewrite rules, they can be decomposed into a sum of other graph rewrite rule operators. Of other graph rewrite rule operators. So, this kind of like the fundamental thing for the mathematics of dynamical graph grammars. These operators change the labels and or structures. And given that, one can do algorithm design. I think one can do error analysis, for example, in operator splitting algorithms. And one could potentially find closed sub-algebras and thereby find exploitable solvable sub-models. Sub-models. This framework extends now to differential equations, ordinary differential equations attached to the rules, which would be regarded as special cases, and you can compute the product of operators and the commutators and so forth. And the basic idea is if you have a bump of probability around some parameter, like a position of the end of a microtubule, then dynamics can sort of steal probability from one side of that and shove it over. Of that, and shove it over into probability of another side, which allows a slight movement forward in the microtubule end. From this kind of thing, one can get algorithms, which are similar to what simulation algorithms, which are similar to what other people have done in generalizing the stochastic, Gillespie stochastic simulation algorithm. But one is not committed to that algorithm. There are many, for example, we had an exact stochastic simulation algorithm that would be different. There's many algorithms that Different. There are many algorithms that would correspond to one set of operators. Here's just an example of the Actin network running in a little model of a synapse where synaptic growth representing by the overall boundary there is supposed to have something to do with learning, strengthening a synapse. And CamK2 beta is in black there. Well, we would like to scale up this kind of thing. Scale up this kind of thing. And so, this, I should have apologized, had a time and said this talk mainly is about methods and computation and mathematics and so forth. And so the actual biological profit from all of this is not being demonstrated here very much, but hopefully you'll see the applicability. So to kind of reconstruct the simulation. The simulation software so that it can scale up to GPUs and things like that. Eric Medwoodf is working hard on that. And the basic idea is if we have a, we're looking for a particular left-hand side rule and we want to find where it is present in a large-scale system, we can hard code this left-hand side rule into our code, but we need to find where it maps everywhere in the system. And the idea is to define. To define a spanning tree inside of that that kind of organizes the search. And then you find the spanning tree in the system, that's easy. And then you impose all the constraints that were present, not captured by that morphism. And so there's a search, a branch and bound kind of search. And here's an example, a little close-up that I'll have the bigger. Up that I'll the bigger simulation I'll show later, which supposedly has all of these key grammar rules that I talked about. You can do growth either stochastically or as an ordinary differential equation. Those two should kind of agree in some limit. One can do the three kinds of microtubule meets microtubule events. The parameters aren't really adjusted very well to make it Well, to make it as realistic as I would like. We've been focused mainly on the algorithm development. And so, a big step is to try to parallelize all of this. That's hard for this graph search phase of the simulation algorithm, but I think it's possible. And so we have an idea for an algorithmic approach in which one does operator splitting over. Well, we have a cell complex, as you've seen in other talks. As you've seen in other talks. And so we have, like, in this case, a maximum of two-dimensional computational cell, not a biological cell, and a boundary region that's one-dimensional and a zero-dimensional boundary region. And we fatten them up each so they're all sort of two-dimensional in the set of graph instances that they would like to find. And they divide up the territory in such a way that if you're within. That if you're within one dimension, like all the blue in two dimensions or all the red in one, then during that phase, there's no overlap and you've got parallelism. That's the idea. Okay, so, but then we have operator splitting and we need to, you know, come up with an error estimate for what happens when you do this. And that's what the commutators are for. So here's just a prototype code. Here's just a prototype code, a prototype example of running the code. And Eric Medwood is busy making it better. So I don't know how I'm doing on time. I've neglected to note the beginning time. Sorry about that. But one could look. How much? One minute. Did you say one? One minute. Ten minutes more. Okay. Minute 10 minutes more, okay. But some of them, some of them, okay, all right, big chain, big difference. Okay, so one could do something like this with microtubules and graph using graph neural networks that came up in discussion the other day. No time to go into the detail of that, but it could contribute to this multi-scale framework with graphs at the center of things. And then there's dynamical graph grammars, dynamical Bolson distributions for further course. Boltzmann distributions for further coarsification, which, you know, ask me about that. So, the summary is: graph dynamics plus parameters and differential equations is a good way to do mid-level spatial modeling. Dynamical graph grammars will deliver all those things to you. It's applicable to cytoskeletal networks, both microtubules and actin. We've got some simulation software that's very expressive, but we're But we're working on another one that will be much better for scaling up. And it demonstrated a little bit of model reduction. And in general, for model reduction relating scales, machine learning methods can help with the scale changes. The questions were things that already came up in discussion. What about, can we do those model reductions? Can we use them in plant cell wall and cytoskeletal dynamics to preserve details at the coarser scale that seem structural? Seem structural, and then can we have rewrite rules at the level of a whole multi-scale graph lineage in order to with you know provide a theory for partial differential equations rather than just ordinary differential equations at each rule and for mesoscale plant morphodynamics? And that's where I should stop. Any questions? Okay, any questions for Eric? Either in the room or on Zoom? Olivia, my friend, go ahead, Olivia, if you want to say your question out loud. Hi, Eric. So I was a little bit confused because at the very beginning, the rules, the way as I understood them, they were about graph topology. And then you have all these animations in space. So somehow the rules. Somehow you rule they're about graph topology, but also the labels. These kinds of graphs are very heavy on their use of labels, which includes real numbers and angles and whatever. And so that really is the key to giving you a sort of universal level of modeling that can describe many both structural and quantitative and many other kinds of dynamics. The goal is to be for the framework to be invariant under model reduction. Since there are many clever model reductions, that means it's an. Clever model reductions that means it's an expressive framework. That's my idea about it. Okay, thanks much. Yes, Christopher. Eric, the learning curve to use this type of very generic model is very steep. And I was wondering in terms of pragmatic way to go, would go would more simplify models or simplify simplified part of these models could could these uh could these parts be taken so that be derived from the model so that people could reuse them in a sort of more more easier manner and for instance do we need the whole complexity of the graph writing system in order to Graph variety system in order to grow a cellular tissue because the cellular tissue is not a generic graph, and we have cellular complexes that could easily represent the tissue. And maybe a reduction of your approach to these cellular complexes might be enough and then more simple. Yeah, well, I guess the I guess one of the goals was to support multi-scale modeling, in which you have these coarse-grained models that can, with emergent variables that can, and emergent dynamics that can take a lot of different forms. So the expressive power was one of the goals. For making reduced models, there is the idea of a subgrammar, which could be either sort of in the style of a macro. Which could be either sort of in the style of a macro or a function call, which can hide a lot of complexity in a finer grammar that some mathematical person has worked out. And that's supported in the original theory paper of 2006. It shows how to, what's the semantics for subgrammars, either macro or function call. So, and also inheritance. So, these ideas of complexity management in the style of software, you know, well-designed computer. Uh, you know, well-designed computer languages is potentially relevant to what you're talking about. That's a little different from trying to create a nice visual interface to the whole thing. And that's laudable too. But I'd like to be able to preserve the mathematical experts' ability to go in there and actually write the equation rather than take somebody else's. Rather than take somebody else's equation because it was the only thing that was in the library. So I have a question that's related a little bit to the talk we heard from Oreski Budoud yesterday, you know, talking about the co-alignment between microtubules and cellulose synthesis in plant cells. Could you adapt the graph system that you've made for modeling microtubule dynamics to also include another layer, if you will, that recapitulates? That recapitulates the deposition patterns of cellulose microfibrils in the cell wall, some of which follow those microtubules and some of which don't. Absolutely. Yeah, that's just the kind of expressive thing, demand for expressive power that I think these dynamical graph grammars, as practiced here with lots of labels and mini theories attached to the rules, is good at. And so one would have, you know, a cellulose synthetase complex object, and it was one way to. Object, and it was one way to do it and to have not only cellulose and not only microtubules but also cellulose network and so on. That would be fantastic. Enrico? So I thought I'd just like to raise a general issue in a way as to what is the purpose of the modeling. And I'd be interested to know what you think. So one view, I think a very common view, particularly among biologists, is that the purpose of the modeling is to kind of model that kind of. The modeling is the kind of model that kind of replicates a particular phenomenon. Yeah. But there's another view, which is that actually the purpose of the model is to establish some fundamental principles that are guiding processes. In other words, you're not so much trying to that the replication of a phenomenon is actually a means to an end. It's not the end. The end is to arrive at some underlying principle. So, for example, if you take the microtubule interaction model. Tubule interaction model. There was the notion of the survival of the aligned, which I thought was an interesting idea, which kind of relates to populations, even sort of like selection type model. And that's the essence of the model. The fact that it produces the behavior is good, but what's in, you can produce a behavior, but not understand what the heck is going on. Okay. So, my question to you is: do you think your formalism, how do you deal with that? Not just the How do you deal with that? Not just the replication of the behavior, but getting to the essence. And does your graphical system allow you in some way to express that essence in an easier way than maybe other things? Or anyway, that's why I'm kind of obsessed with the model reduction across scales, because if you have, if you keep on reducing, then you'll end up sort of perforce with a. Sort of perforce with a model with a few key dynamical variables in it that summarize your understanding under some conditions, you know, some setting of all the fine-scale parameters, there's a domain in which a particular model reduction is valid. And in that case, you know, it could be that there's a density on average alignment between neighboring microtubules, for example. Uh, microtubules, for example, that itself evolves in a way that could be described by this dynamical Boltzmann distribution model that I didn't really get to describe, but it would give you a few key moments of probability distributions that can be on structural things that are the things that you picked out. The simulation and the software let you find some domain of validity, maybe not the whole domain of validity, in which that understanding is consistent with the fine-scale mechanistic. The fine-scale mechanistic, more mechanistic knowledge base that went into your simulation. And so, so, yes, go higher up in the model stack, formalize everything. And that can include formalizing your understanding and the feeling of how valid that understanding may be. Thank you. Right. Thank you so much, Eric. We are going to have to move on to our next speaker. So, our next speaker is Elena Dimitrova, who's an associate professor. Trova, who's an associate professor of mathematics at