All right, welcome back everyone. So our first after-lunch speaker is Daniel Martin, who's going to be talking about arithmetic and mod community martial art graphs. All right, thanks. Thank you guys for having me, for organizing this. Organizing this. So we're going to try and prove this consequence of the much broader theorem of Lil Chen that you just described to us, the consequence for Markov mod p graphs, which is That these connected components, I won't redefine them for you. I think we'll see them a couple times now. These connected components have size, the number of vertices is zero module. Okay, and as you've also seen before, Will was able to use this to, in combination with the word. To, in combination with the work of Alex Gambert, Peter Sarnak, and Jim Burgan, to prove that Arthur's conjecture from over 30 years ago holds, a strong approximation conjecture holds for all but at most finite energy primes. Okay, so I'm going to start. Now that Will has sort of shown us what we should be looking for, to discover this theorem, we might hope that there's new paths. We might hope that there's new paths to proving it. I'm going to show you one of those paths, and I'm going to show it to you in particular for primes that are 3 mod 4. There's a very small change that happens when primes are 1 mod 4. And I'll mention what that is to you now. But as for now, it's just an obstruction that we don't need. So let's assume that P is 3 mod 4. And all this does is it prevents 0 from being a Markov number. From being a Markov member, okay, so now I can divide by whatever Markov numbers I want to since they're not zero. All right, so to each triple, I'll call this x. This X. And for my Markov equation, I'll drop the 3. We're going to associate a new triple. I'll call it Y. And here, Yi. Here, yi is going to be xi over xi plus 1, xi plus 2, where you do addition with indices mod 3. All right, so what are these new, and also, by the way, please interrupt me if you have questions. So if if the mod one just yeah, P is one mod court case, or you only call it all the Um this is going to work even for components that do contain zero, but I have to describe it's just an extra little catch that I have to describe that I didn't want to bother with right now. But it'll work for any component. All right, so so this is our formula for the new triple. What are these triples that get out, that we get out? They're obviously not triples that satisfy this Markov equation anymore. So what describes these new triples? So these are the triples we get. Yeah, so the relation that we really need is this first one, which comes directly from the Markov equation. All I've really done here is taken this equation and divided both sides by x1, x2, x3. And you see the x1 squared here is going to give Squared here is going to give you exactly y1. These x1s will cancel, and you'll have x1 over x2, x3. So what you'll be left with is y1 plus y2 plus y3 equals 1. That's the relation that will be indeed. But of course, not any triple that satisfies this is going to show up. So the ones that we get are ones that satisfy this, in addition to the following. They just have the same, they're either both, they're either all quadratic residues or all non-residues. In other words, you don't need this next fact in order to prove this case of Will's theorem, but I'll just mention it because I think it's nice. I think it's nice. I like these triples for several reasons. One of them is that they do provide really obvious parameterizations, at least one in particular. We're getting all triples of this form. Where this has to be non-zero. Okay. So this map that sends X to Y is not quite a bijection, but it's really close to one. It's four to one, and you can make it a one to one if you'd like. So what is the statement? That's again? What is the statement? What do you want to say about that set in the bottom? It's a continuation of this. So we get these triples, we get this. In other words, this is what we're getting. These are all this is the set of triples that you get. Does that make sense? Set of triples that you get. Does that make sense? Okay. All right. So this map, it's a bijection if you'd like to quotient out by this relation. Where you just take any pair of them and negate them. The Vieta involutions act perfectly well on those. It respects that. It respects that equivalence relation. And with inverse. And I don't care whether you take the plus or minus square root, because we're positioning out by that relation. And so from this, you can get a nice parameterization of Markov numbers as well. Markov numbers as well. You can just plug this parameterization in here and you get parameterization of all Markov triples using three variables. Alright, but we actually don't need that parameterization. I'm just, these are recent observations right now and I wanted to share them with you. The only observation that we really need so far is this one right here. We're going to combine that with one more observation about these triples in order to prove the theorem. Okay, so let's consider an edge in the Markov graph. There are two types we need to consider. The first connects to different vertices. And I'll do the first VIT evolution, so I'll change up. Evolution, so I'll change up x1. And I don't really care what happens with y2 when I apply this via the evolution. It's going to change somehow, but it doesn't really matter. For this particular type of edge, I only care what happens with the value of y1. And you can just compute, I'll call it maybe y1 prime. Making y1 prime, that the sum of these two is, so there's 1 minus y1. So over one of these types of edges, the sums of the two y coordinates, the first coordinates are always 1. And importantly, what this is, is it's 1 half of the number of vertices that you see above you. That you see above here. Okay, so here's the other type of edge. So, what's going to happen with this edge is when you apply this first Vieta involution, you have the exact same vertex. And so this equality tells you that, well, 2x1 must equal x2x3. x2, x3, or if you want to compute the corresponding y1 value, since this is a 1 edge, just by dividing both sides by x2, x3, you get that it equals 1 half, which is again 1 half the total number of vertices that are on either end. I'm sorry. Do you care about the second quarter on the. No. You don't care about the second quarter. Oh, oh, are you saying, are you saying Are you saying, are you saying, am I also sort of pushing you out by this relation where I swap? 1, 2, 3 for you is the same thing as 2, 1, 3? X 1, X 2, X 3 is the same thing as X 2, X 1, X 3? No, it's not the same thing. So you only you're always replacing So that's a why that's not an edge, and why is that an edge? The way these graphs are defined is that you connect two vertices when they're related by one of the Vieta involutions. And so this is... Okay, okay, okay. What is the meaning of one above the edge? That I'm doing the first via the I'm swapping. Yeah, yeah. If I was doing the second one, then I would have carried about the relation. Care about the relationship. Okay, so let's um let's consider a connected component. All right, so on one hand, we can write this number one. I just erased it, but we have the first relation that we came up with, which is that y1 plus y2 plus y3 is always one. So this is, that's v. Just the sum of those is always one. Okay. Of course, we're going to switch order of summation. And now all of these, so now if I fix a particular index i, so if I look at i equals 1, all of these y1s can be paired up. So y1 So y1 pairs with a y1 prime, which may equal itself, but in any case, whichever partner it has along that one edge, the two of those, or just one of them, will always add up to half the number of vertices counted by that particular edge. So you will always get that this is half the number of vertices. The inner sum is half the number of vertices for each of the y. Is half the number of vertices for each of the yi's. And that's just this relation right here. The sum of y's is always one-half the number of vertices accounted for by that particular edge. So this is, of course. And this tells you that v has to be zero, because it's three halves itself. All of this is done mod P. So it's just zero mod P. So it's just zero mod p. Alright, so what is the what Arthur had asked what happens at one mod four? What is the catch? You can't define these triples in that same way for when you had zero as one of your coordinates. So in the special case where you do have A triple like this, what should you associate it to in order to make these relations, excuse me, in order to make these relations continue to hold? Well, we're going to keep the 0 over x2 x3 as our y1, but as our undefined values of y2 and y3, we're going to replace those both with 1 half. We're going to replace those both with one half. It's just sort of a small combinatorial solution to this problem where the sum of these three coordinates has to equal one, and these pairs along these one edges or two edges have to also be twice the number of vertices, one half the number of vertices. So this satisfies, yeah. I'm still confused about my question before. So you say that you tear out the second quarter, but if you do the data involution, But if you do the data involution, you should exchange x3 and x3. You might be thinking of Alex and Peter, their modified rot maps. No, no, no. Talking about the V-Ten body should be replaced X block, which you have to exchange with the two of it. I think there's more than one definition of that. This is a Vietnam volume. This is exactly the VM definition. That's exactly what it is. But when you look at it in the farm in the topography, if you like, and you you move from one super base to another super base, what happens is that you change the fast coordinate like this, but you have to change the super base. But that's a combination of the evolution with the transposition, which we call rotation. It's a dan twist. No, no, it's not a dang twist, it's a reflection in evolution. I think the y2 and y3 will change in the. I think the Y2 and Y3 will change in some other way, which I hasn't said, but it doesn't matter. Yeah, I'm just afraid it might make my own recommendatorial, so I'll be rough. Okay. Very much. Okay. All right. So all we needed to do was fill in some way to find some triple that satisfies these two relations. That's all we used for the proof. And you can just check that this choice of value for y. A value for y works. So that holds for one mod 4 as well. So, what I'd like to do is mention another reason why I kind of like these triples. They can provide some information even about components, subgraphs that aren't necessarily connected components, that maybe have edges extending outward, and you just haven't added those vertices yet. So, let's consider what happens with these triples on a What happens with these triples on a different type of subgraph? Just an example that's going to convince you that what I'm going to say is true. So let's say this is edge one. So here to get from this vertex to this vertex, I've applied the first V involution. So that's this one right here. We'll say this is a two edge. We'll say this is a two-edge, three-edge, a one-edge. And so it's not a connected component. I have this, I'm missing this vertex here. So what I'm going to do is something that's going to seem kind of random at first, but I hope that the result convinces you that it's a useful thing to consider. So on the So, on these boundary edges that don't have all of their attached vertices, I'm going to add. So, that's some Markov triple. It's got some corresponding y vector. Since this is missing its 2 neighbor and its 3 neighbor, I'm going to add y2 plus y3, whatever the meaning for this particular vertex. I'll add nothing here because this has all three of its neighbors. Here, I'll add... Here, I'll add y3 and y2. And so, what I'd like to do is consider the sum of these numbers and show you that it's unvenable. Okay, so we've got these two relations that we're going to work with. So first of all, y2 plus y3, I can replace that with 1 minus y1, because the sum of these is always 1. And 1 minus y1 on this particular y1, y 1. Minus y1 on this particular Markov triple is exactly the value of y1 for this Markov triple. So I might as well have just added y1 right there instead. This is this neighboring relation that's written right there. Alright, so this is gone, and I've got y1 right here. Alright, same thing here. 1 minus y1 minus y2. I will go ahead and I will go ahead and take this 1 minus y1. It's got a 1 neighbor right here, so I can replace that with the value of y1 for this. I'm using the same two relations over and over. Alright, now that I've got this, I can replace it with 1 minus y3. Okay, 1 minus y3 is the exact same thing. The exact same thing as y3. I'll add one and subtract one right here. That value is exactly y2. And this value is exactly 1. So all that's left, maybe I shouldn't have circled that. All that's left is 1 and negative 1. So the sum of all these boundary values is exactly 0. So why is that? Will we always get? What will we always get zero? Well, you certainly won't always get zero. I mean, if you consider this simplest example, where you just take a simple vertex, just one, and it's missing all of its neighbors, then if you. Yeah. That was a little too fast. So the statement you just made is that you take any subgraph, you add the values, maybe just. Maybe just make a statement. I will, yes. It'll come in just a moment. Yeah. If you do the same procedure with a single vertex that's missing all of its neighbors, so now you're going, because it's missing all three of its neighbors, you're going to add y1 plus y2 plus y3, all three of the y values. That adds up to 1, not 0. So why is this one adding to 0 and this one's adding to 1? What this will always add to, this is the statement that you're asking for, is the Euler characteristic. Listed. So I'll maybe call this BI. These are sort of, maybe I'll put in quotes, I boundary vertices. So like this particular vertex would fall in both B2 and B3. So in this case, the sum was 0. So in this case, the sum was 0, but the point is that that's exactly the number of vertices minus the number of edges. 4 minus 4 in this case. Oh, with a small catch, maybe I'll put a star here. Whereas edges like that have to count as one half, not one. Is one half, not one. So it's kind of a modified Euler characteristic. If you want to think of the Euler characteristic as number of connecting components minus the rank of the fundamental group, you would have to do the same thing here. The loop contributed by this would also count only as one half towards the rank of the fundamental group dot one. Okay, so what's the point? Well, for a connected component, For a connected component, because this is a three-regular graph, every vertex has three edges. Every edge has two vertices, except for those. So, what we would expect is that, or what we have, is that two-thirds the number of edges is exactly the number. Edges is exactly the number of vertices. Well, what about for a subgraph that's not necessarily connected? There's this expander graph conjecture by Rorgan-Gibbon-Sarnik that says that you expect the number of boundary edges to be some at least epsilon times the number of vertices. So, what about a subgraph like this? So, in general, this, of course, won't hold if you're missing some edges outward. Edges outward, like in that case on the left sideboard. In general, if I call if I keep track of all these boundary edges, boundary vertices. So this is a disjoint union, meaning I'd like this vertex, for example, to occur with multiplicity 2. It occurs in both. Multiplicity 2. It occurs in both V2 and V3, and I want to keep those separate this part. Alright, so essentially what I'm doing is this counts boundary edges. Okay, so if I set V equal to this disjoint union, I don't have this unless V equals is the empty set. What I get in general is the following fact. And this observation has nothing to do with these y triples. This is just a basic graph theory observation. But the point is that if you have this relation between these boundary sums, you can replace E with B and use it to get a relation between the number of boundary edges and the number of vertices. Of boundary edges and the number of vertices, which is the whole question that you're asking when you're trying to show that these are expanded as. So, what you get when you take this, solve for E star, and plug it in, is you get the following. This sum is the exact same as the double sum that I wrote up here, just with shorthand. Sum that I wrote up here just with shorthand using my capital V notation. So again, this sum, this sum, this double sum, they're the same. This is exactly the sum that we started with over here. That's what my notation intends to say. I'm adding up all these y2 plus y3, etc. That's this sum. All right, so I'm not saying that this is going to provide some path. To provide some path to proving the expanded graph projecture. All I'm doing is saying that this is another perspective on that. And in particular, it's a perspective for small subgraphs. So you want to show something like this, that for some epsilon, this inequality is always going to hold. So what this perspective is saying is that you're essentially trying to show that this sum. That this sum is bounded away from negative one-half times the number of vertices. Now, this is all equality mod p. So that's only going to help you. I mean, if you have a subgraph that's size close to p squared or something, you know, p squared over 2 or something, then you'd have to have a completely separate argument for why this inequality should hold. But if you've got a subgraph whose number of vertices is some bounded multiple of p, then showing that this sum is... Then showing that this sum is bounded away from negative b over 2 is the same as showing this expander graph part, just for these small subgraphs. Well, why, thank you. It should be y. Thank you. Okay. Let me just end by saying what other, all of these arguments, all these observations. All these observations, what other types of polynomials do they apply to? So these arguments are. So you can throw coefficients in front. I think Arthur, you said this was something, what was the name of it? Rosenberger. Rosenberger. So you can take these variations where you throw coefficients in front. All these arguments apply equally well to those. You can increase the number of variables as well. There's a small catch, though, that I have not thought about this much, and I need to. I don't know what happens when you increase the number of variables. Variables in this case. So there's not an obvious sort of combinatorial way of filling this in with like 0, 1 half, 1 half, just kind of works perfectly. When you have greater than 3 variables, it's not quite clear what to do with connected components that contain 0 as one of the numbers. So, but what to do with When n is greater than 3. Okay, thanks for listening. Questions for Daniel? So the question, Peter. Oh, yeah, that's Peter now. Oh, yeah, it's Peter now. Ah, wonderful, wonderful. We're going to be looking for this for a long time. Question. As you know, Will proved not just the case when the trace is minus 2 when it's divisible by P, but if you have the trace is A, then he has a congruence condition on each component, which, if the order of, if you write A is B plus B inverse, if the order of that is B, which is probably what is used with the Which is probably what is used with a parabolic element, which is a P. And you would still be able to get connectivity from, as he remarked in his talk, as long as you, because we already have the P to the epsilon. So is this method of yours work for other phrases? I don't know, is the short answer. It's a pretty. Will had asked me to send a preprint so he could look over it, and I had to tell him I don't even have it written up here. I had to tell them I don't even have it written up yet. It's a very recent proof. I haven't looked into all the different places that it could apply, but I certainly will. I'm not sure right now just the answer. Okay, that's, I mean, the case you've done already is, of course, under 19%. The other question I have is: does this help get rid of half-normal arguments? In other words, you start off, so you've got this divisibility by P, you have to group. That's cool. But you also have the sub-graph argument that you were indicating in the second half of your talk. Maybe it can be used to simplify some of parts of our order increasing algorithm. So it looks like this is very good if you start with something which is very small. Yeah, I don't expand the part would be very difficult when the sizes of the sets are large, but when you small this would be. Of the sets of articles, and you small this looks very powerful. It might allow you to do some aspects of what we did in a different way. That's all. Anyway, it's all I see very fresh. And congratulations. Thanks, Philip. You have a question? It was more of a comment. So this this these white coordinates as you call them. Um so I I saw them earlier I was listening a paper of uh I've written a paper of Brian Bodich, reproving Machine's identity for simple curves in the torus. And so he's got this flow, so now they kind of be hours oriented. And then he looks at infinity, and then he's got the sum, which at the end vanishes at infinity, and that's how we prove Markov's Maxen's identity. Thanks. After, can you help me find that paper? Sure. Thanks. Sure. Thanks. Maybe you've got some kind of mod P identities that you could show using I I mean it seems like that's what you you have some using Daniel again. The next half is thirty thirty. Sorry, is it two thirty? Let's pull the wrong time. Two thirty. So this is the other. So let's go out there.