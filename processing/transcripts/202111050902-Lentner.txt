structure briefly so that is a tensor product an associator braiding rules and twists and it does not have to be semi-simple for me so that the braiding is non-degenerate means for example that the double braiding with an object cannot be trivial with all other objects except this object is the sum of the tensor unit. And the semi-simple modular tensor categories are interesting because they produce topological field interesting because they produce topological field theories and arbitrary, maybe non-semi-simple modulotensor categories still produce actions of the mapping class group. And there's recent progress of this. We've heard this on the one side by using modified trace, on the other side by going to this differential world and comological world. And so we saw things like this also in the talks of Lucas Voike. So there is problem. Of Lucas Voike, so there is progress. But this is things I'm not going to talk about. Let's go to the simplest case that will appear later on a lot of times. So we have an abelian finite group and a quadratic form. And there's an associated bi-character, so that's the definition of being a quadratic form. And to this, we can associate so-called abelian two-co-cycle. That means we have a two-co-chain that. A two-co-chain that basically a square root of this bi-character, and we have some three-co-cycle that measures the failure of this square root to be a bicharacter. So for odd groups, we can put omega to one. For even groups, that is not always possible. And then this modular tensor category, so this tensor category will be defined by having simple objects for one-dimensional objects graded by some element of this group. The tensor product is the product in the group. Well, the product and the group associativity is simply multiplying with this factor omega ABC, and the braiding is multiplying with this sigma. And if the bi-character is non-degenerate, then this is a semi-symbol modular tensor category called quadratic spaces. So A graded vector spaces with braiding and associator defined by this quadratic form. Other examples of modular tensor categories that you, of course, all know is if I have a finite tensor category, I can define that Rinfels. Tensor category, I can define the Drinfill center. So the Drinfill center means I take all pairs of objects in the finite tensor category together with a way to braid past any object, so a half braiding. And this produces, again, a tensor category, which has by definition a braiding, and it turns out to be a modular tensor category. So for example, if you take center of representations of a group, then you get the category of G-Yeder-Renfeld modules and the associated And the associated state space that you would get in this construction I mentioned would be G bundles over the respective surface. So, in this case, you can imagine what the topological field theory looks like. Another example that we will now look and use more, suppose we have a tensor category and we have a modular tensor category inside and we have a projection. So, it looks so it's like a semi-direct product. So, C sits inside B. Product. So C sits inside B, and I have a monoidal functor from B to C that is the inverse on one side. One example that I have in mind is we have an algebra, Hopf algebra, inside the category C, and we take representations of this Hopf algebra inside the category C. Then this category B, of course C sits inside. Well, if B should have an augmentation, C sits inside. On the other hand, I can project to C by forgetting the structure of B. To C by forgetting the structure of B. And this is this structure. So suppose I have this. Then C and C with the reversed braiding are both embedded in the Drynfil center of B. And what I can do is I can kick out one of them. So I take the centralizer or the commutant of this copy with the reverse braiding. And what I get is a multi-tensor category called the relative drill fill center. So basically what this does is you double You double B, but you don't double C, because C already is modular, so there is no need to make the center of C. So somehow you take the center of B, but then you reduce the center of C inside just to one copy of C. And if you do this for Hopf algebras, what this is, is something that people have studied for a long time, that you basically take the Drinfill double, but then you divide out stuff. So you don't want to double everything. And if you want to formulate it that way, then And if you want to formulate it that way, then what this category is, it consists of pairs of objects with half braidings, but you restrict yourself to half braidings that are compatible with a given braiding on C. So in this way, objects in C only have the braiding that they have by the already existing braiding in C. So this is a main construction I will use and Matt will use later on. Now, the main example for a modular tensor category that many of us have in mind, at least me. Many of us have in mind, at least me. If you have a Lie algebra, semi-simple, finite-dimensional over the complex numbers, and you have a root of unity, which for now should not be divisible by two and not be divisible by three for G2, then we can define the small quantum group. So that's a finite dimensional non-semi-simple Hopf algebra. And in these cases, so if it's not divisible, then representations of this algebra is a tensor category. And in fact, you have a braiding, and this braiding is non-degenerate, so you get a non-sensor. This braiding is non-degenerate, so you get a non-semi-simple modular tensor category. And this tensor category is important for many reasons. It's related to the Lie algebra and characteristic L, so that's a good way to imagine it. It's also related to the affine Lie algebra at negative level. It can be semi-simplified, then it has to do something with positive level and with fractional level W Z W models. We saw this in David's talk. So this is an interesting, non-semi-simple modular tensor category. Simple modular tensor category. Now we want to use these tools from the last slide to understand this a little bit more. So let's try to deconstruct this so we can obtain the quantum group representation category as a relative drenfill center. Namely, we start with the category, this is semi-simple modular tensor category, the category of weight spaces. So this is the Carton part of the quantum group. And then we look at the positive part of the quantum group. This is a Hopf algebra in C. Is a Hopf algebra in C. And now we can take representations of this Hopf algebra inside C and take the relative Trinfill center. And what this is, is again this category, and we get for free that it's a multiple tensor category. So many structures are encoded in this construction, and that's something I want to advertise at this point. So I think this is a good way of looking at this category if you want to do certain things in tensor categories with it. And this And this UQ plus, this positive part of the quantum group here, is an example of what's called a Nichols algebra in this braided tensor category. And a first gain that we get from this perspective is, I mentioned before, if you have divisibility, then you don't necessarily have a braiding and it's not necessarily modular. So you have problems with quantum groups at even root of unity. However, what I wrote here, you can still do. You can still do. You just have to start with C A-graded vector spaces, and in these cases, A will be an even group. And to an even group, if we take a non-degenerate quadratic form, we know it takes a non-trivial associator because we have problems with the square root construction. So already C will have a non-trivial associator. And then it's clear if you do this construction, you have to look at this Nichols algebra inside this category with a non-trivial associator. Category with a non-trivial associator, and then if you construct the relative Drinfill center, it will again have a non-trivial associator. But it's not so bad. The non-trivial associator just comes from the one, I mean, you would expect because of this quadratic form on the Carton part. So somehow the complicated stuff is almost the same, but the Carton part has this non-trivial associator. And then it works. Then what you get is the category as a multi-deletal tensor category, and you can construct. Tensor category, and you can construct to this a braided factorizable Kvasi-Hof algebra. So that's a modification of the small quantum group that produces you also in this even root of unity cases a modular tensor category. And that's, of course, the cases interesting to CFT. And so this is worked together with Azad and Tobias, a PhD student. And I should, of course, say that Azad, Thomas, and Ingo have constructed this somewhat more by hand for SLT. Somewhat more by hand for SL2 already. And so, so our contribution was sort of to come up with this general approach and see where this comes from, and then you can do it for arbitrary Lie algebras. And Chris has worked on the same things and did it in a very different way. So by equivariantization. So he starts with a big quantum group and then he divides out stuff. And you see that dividing out stuff doesn't work so well if you're in the even order case. And you get the same problems with the associator. With the associator. So, in this sense, I think that even quantum groups, even root of unity quantum groups, are not so much worse. They are just you have to start with the right semi-simple modular tensor category. So, it doesn't like me anymore? Why doesn't it like me anymore? Why doesn't dislike me any more? I'm sorry. So, like that. So let's try to make these things now a little bit more general. So we said we have here a very specific Hopf algebra in this very specific category. We can do this much more general. And this is a notion I want to advertise a little bit. I like it very much. So suppose you have any object in any braided tensor category. Then there is a construction called the Nichols algebra. And what it is, is plainly speaking, the smallest Hopf algebra in this braided tensor category. Algebra in this braided tensor category C, which is generated by X, by this object, and it has on X a co-product that looks like a Lie algebra. So delta of a little X is one tensor X plus X tensor one. So you can just do this. I mean, this is a universal object. And if you have a symmetric braiding, what this produces is a braided commutative algebra. So it's commutative up to this braiding in the category C. But if you now start with a non-symmetric braiding, With a non-symmetric braiding, you get something much more complicated. And in particular, the example that we're interested in is if we fix a semi-simple finite-dimensional Lie algebra with simple roots alpha i and a root lattice, and we take a choice of q, maybe a root of unity or maybe not, some complex number, then we can define a diagonal braiding basically by taking q to the alpha i alpha j. So this is the scalar product in the Lie algebra. So it's a braiding that simply comes from. So it's a braiding that simply comes from putting scalars in front of stuff that you interchange. And these scalars are given by Q to the power of the scalar product in this root lattice. And if you start with this initial data and you compute the Nichols algebra of this object in this Barriot category, what you get is the Borel part of the small quantum group. And if Q is not a root of unity, you get the Borel part of the big quantum group. So somehow all these. So, somehow, all these quantum circulations are produced automatically by the fact that you want the smallest top algebra with this property. And that is, I think, a very nice thing. You don't have to put them by hand. They get produced by the structure, by the universal property. There's an equivalent definition that I only want to scratch, so you can also be more hands-on. You can say the Nichols algebra is the tensor algebra where you mod out the kernel of the quantum symmetrizer map. So, what you do is So, what you do is in each degree, so the tensor algebra of this object x, and in each degree you sum over all permutations. And for each permutation tau, you take a shortest length braid that represents this permutation. And then you act with this shortest length braid. This is rho k, so you act on this tensor product by this braid, and then you sum this up over all permutations. And of course, this shortest length braid is not a multiplicative. Braid is not a multiplicative assignment, right? There is no section from the symmetric group back to the braid group, and that what makes this definition interesting. So, somehow you sum over stuff that's not really multiplicative, but the kernel of this map, so this is an endomorphism of x to the tensor k, the kernel of this map you can divide out, and the result will again be the Nichols algebra. And that's how people view this as a quantum symmetrizer algebra. And if you work with these Nichols algebras, you find Work with these Nichols algebras, you find that quite surprisingly, I think they do have a generalized root system theory, they have a PBW basis. And what they are used for in this work by Anderskevich, Heckenberger and Schneider is you use them to classify pointed Hopf algebras. So you somehow it's not just an example, but it's something that is inside every Hopf algebra. You find a copy of such a Nichols algebra, and that's their suggestion. And that's their significance. And if you, there's a classification in certain cases, so, for example, for diagonal operating, there's a classification, and what it does is produces to you quantum groups, but also more general things that look like quantum groups. So they produce Borel parts of things that look like quantum groups, but they are more general. So, for example, super Lie algebras. So, one example of such a generalized root system is the one printed here for the super Lie algebra T2. For the super Lie algebra T21α, this generalized root system would look like a cube octahedron. So that's an Archimedean solid, and you have seven planes. So I've written this in the projective picture also. And these seven planes correspond to seven roots. And this is the, so some fermionic roots and some bosonic roots. And this perfectly fits well in this framework. So if you look at the classification, what you get are quantum groups, also some super versions of quantum groups, and some other Versions of quantum groups and some other examples that you don't otherwise know well. So, and this brings me to the modular tensor categories again. So, we have this problem that of course is much too hard, at least for me. So, how to classify modular tensor categories? I think we have no hope to do this soon. We could even ask for semi-simple model tensor categories. I think this would also be a very, very hard problem. Think this would also be a very, very hard problem. So let's try to make at this point life a little bit easier. Let's try to classify modular tensor categories where we fix a semi-simple part. Let's leave a little bit open what that means. So sort of, I want to give a semi-simple multi-dotensor category and then know all non-semi-simple multi-tensor categories that contain the semi-simple. That contains this semi-simple model tensor category as its maximal semi-simple part. And so, results on this will be, very, very small results on this will be in the next talk by Matt maybe. But let's look in general what would be something you could guess. So, for example, if you have a Nichols algebra in a modular semi-simple tensor category, which you have been given, then you can simply compute this relative Trendfield center. Compute this relative Trent fill center. So, this produces you a modular tensor category with semi-simple part C, because the Nichols algebra is basic by construction. And the question is, how general is this construction? So is there, probably there is, but is there other non-semi-simple modular tensor categories except these? And this should be a little bit compared to how Nichols algebras arise in the classification of Hopf algebras. The classification of Hopf algebras, because there, what you do, I mentioned this already, what you do is you say classifying semi-simple Hopf algebras is very difficult. We are not near that. But what we can do is we can fix the co-radical, that's the maximal semi-simple part of a Hopf algebra. We can say, let's fix this. For example, let's say this should be an abelian group. Then what are all Hopf algebras with this co-radical? And in fact, the answer is expressible in terms of Nichols algebra. So there is nothing more than a Nichols algebra around. So there is nothing more than a niche algebra arising and maybe multiple ones and they connected in some sense. So this is a complicated theory, but this classification has been successful. So now we can ask which of those are braided and which of those produce tensor categories and model tensor categories. And what you find is, well, the ones that I already mentioned. So you get small quantum groups, you get also these quasi-small quantum groups. If C has a non-trivial associator, you can do the same thing for C. You can do the same thing for super quantum groups, again with these quasi-versions where this has a non-trivial associator. You get some more by Isthan Heckenberger. And the question is, are there more Hopf algebras with this semi-simple part which have a braiding? And we don't know the answer, but I would say because we have the classification, this could be checked. So this is work, but it could be checked. And I'm not sure that you would find more. You would find more. So, in this example, of course, there could be still tensor categories that do not come from Hoff algebras, but let's say it's difficult to find other examples in this case. But of course, now you can play this game with much more difficult tensor category C, right? Nobody says I have to start with A-graded vector spaces. I could start here with non-abelian group things, or I could start with a tensor category that doesn't come from vector spaces at all, right? Come from vector spaces at all, right? Like I find Lie algebras or something. And it produces me in each case non-semi-simple modular tensor categories where the non-semi-simplicity is controlled by this choice of B, where there's of course a long list of possible B's, and the semi-simple part is controlled by this choice of C that I put into. So at this point, let's make a mental break. So now I start to introduce what we do on the Introduce what we do on the vertex algebra side. So we've seen this already, so I do my own little introduction. Vertex operator algebra is a graded vector space V and a map that I always imagine as a multiplication that depends in addition on a complex parameter Z. And you have an action of the Vidasoro algebra, which should be compatible with all of this. And you have compatibility axioms like locality, and from this follows assertivity, all in this. Folllows assertivity, all in this version which depends on z. And once you put the definition in this, it seems straightforward to say what a representation is. You simply replace the v here by an m. So it's a vector space, a graded vector space m, such that you have this multiplication of v on m, again depending on z. So now you have a representation theory and the theorem that was already quoted several times. Suppose V is C2 coherent. Suppose V is C2 co-finite, then representations is a pre-tensor category. And in the semi-simple case, we even know it's a modular tensor category. And in a non-semi-simple case, this is open, but we've seen progress of this by Robert just in the last talk. And the endpoint functions in genus G, you can explicitly compute as traces of these products of vertex operators of some elements in some. Of some elements in the vertex algebra, or maybe in some module acting. And then you use some sort of trace, and you can glue this together to genus G surfaces. And the point is that these, of course, transform under the mapping class group of these surfaces as they should. And this is the part that's visible in the modulo tensor category. So there is a functor in some sense that goes from vertex algebras where you have all this analysis in the game, where you forget the analysis. The game where you forget the analysis, and you're simply in the world of modular tensor categories, where you see still the mapping class group action, you see the fusion product, but you don't see anymore which concrete functions they are. And the main example we all have in mind, maybe it's the even integral lattice. Then there is a lattice vertex algebra, which, as representations, has a graded vector spaces for the dual lattice. The dual lattice divided by the lattice. So, this is the discriminant group. This is an abelian group. On this, there is a quadratic form, e to the pi i mu mu. And with this, you can construct this modular tensor category I've introduced in the very beginning. And the braiding, for example, is e to the pi i mu nu. But the problem is if this is an even group, then e to the pi i mu nu will not be independent of the choice of representative. Of representative here. If you add an element from lambda, because it's pi i, not 2 pi i, you have a problem. So, for 2 pi i, this is the bimultiplicative form, this is very nice, but for pi i, you have a problem, and you get another associator. And the zero point functions in this example are some eta functions, and no, sorry, are some like one over z one minus z two square or something like that, and the genus one functions are. Are vector-veloped modular forms which look basically like Jacobi theta functions associated to some coset in this lattice? So how does one establish this braided tensor category structure here where we need somehow to get a braiding and a tensor product? So this works as follows. You define what an intertwiner is. So an intertwiner between three modules of a vertex algebra is a map that goes from m tensor n to l. That goes from m tensor n to l again depending on z, but it's not anymore depending on z like a power series, but it's depending on that. So, here it can be arbitrary exponentials with complex numbers, and there's some logarithms appearing. So, the pole at zero got worse, and it's now a multi-valued analytic function. If you try to continue that on C without zero, then this is multi-valued. So, this is what makes the intertwiner more complicated. And if you have defined intertwiners, If you have defined intertwiners, then you can define the tensor product as the universal object which has such an intertwiner. Universal means if you have another intertwiner to some other module, then you have something that factorizes. So in that sense, the tensor product is very close to the tensor product of a commutative rain, right? Where the tensor product is the representing object for balanced bilinear maps. But now again, everything depends on Z. And this dependence on Z gives you a braiding. Gives you a braiding. Namely, you define the braiding roughly as the map that has the property that if you pre-compose with a braiding, it's the same as having the intertwining operator in the other order, and you analytically continue z to minus z. And because these functions are multi-valued, if you continue z to minus z and back to z, you're not ending up in the same intertwiner anymore. And that's why you have a non-trivial double braiding. And in fact, Trivial double braiding, and in fact, maximally non-trivial as we know we want to get a multi-tensor category. So, these are the essential tools to prove this representation theory. This is, of course, very difficult. So, let's now come to screening operators. So, and I want to define this in a little bit more general setting that one would usually think about it. Namely, just using the structures are just. Namely, just using the structures I just introduced. So, suppose we have a vertex algebra, then I have, if it's good enough, some braided tensor category of representations. Now let's fix a module M. Then for every module N, we have by definition an intertwining operator of M tensor N into the fusion product, the tensor product in the category. I mean, this is the definition of a tensor product that we have this. Now let's fix an element V. Now let's fix an element v in m. Then what we can do is we can look at left multiplication with this element. So that gives me a map from n to m tensor n in the tensor category, but it still depends on z. And now I want to integrate out this dependency on z. So I want to take a residue, but now this is a multi-valued function. So taking a residue is not something you would want to do. You would want to do. So, what we do is we take the circle, lift it to a path in the multi-valued cover, and then integrate over this. So, this is not a closed path in general anymore. And it looks rather weird. I mean, if you integrate z to the m for m, which is not integral, then you get something like this, right? Of course, if you integrate z to the m and m is integral, then this will be zero, except for the z to the minus one. So So, having said, so I would call this a non-local screening operator, and they appear in literature, but maybe not in this setting, or maybe not in this view. Let me say that usually you ask for a screening operator that L0 of V is V, so that the L0 eigenvalue is one. And then usual screening operators, so where M is the vertex algebra, and this is just the usual residue, they have very, as soon as this is the case, they have very nice compatibility with the Vidasoto algebra. Have very nice compatibility with the Vidasoto algebra. That is not like that here. So, even if we ask for this condition, the screening will not commute with Vidasoto algebra. But if you look at the examples, you expect that the right powers, certain powers of screenings, will commute with the Vidasoro algebra. And you can see this already in these classical works by Felder, right? In the Felder complex, the single screening is not commuting with Vidas Ordo, but there's these right powers that commute with Vidasoro algebra, these local powers. Fillers or algebra, these local powers. But so we can define this in this very general context. So for a fixed module and an arbitrary VOA, and it only depends on the tensor product and the braiding. So now the question is, in this very general context, what are the algebra relations between the screenings? And a theorem by myself was, let's first go to lettuce view A case. If you have elements in maybe a letter or maybe not, then you can look at the screening option. Then you can look at the screening operators associated to these elements, and they fulfill the relations of a Nichols algebra with exactly this braiding. And why this braiding? Because this is exactly the braiding in the tensor category of this lettuce vertex algebra modules. Under the additional assumption that the scalar products are not too negative, so there is this condition called subpolarity. If you sum over any subset of indices, then the sum cannot be too negative, because otherwise. Negative because otherwise certain integrals don't converge. And if this is, this does not hold, so if the poles are very bad, so to speak, if the poles of the intertwiners are very bad, then you don't get Nichols algebras, but you get extensions by Lie algebras. So this is, for example, the case for a negative definite lattice. And then the powers of the screening will not be zero. And then you get this business that you saw in Bodis Fagen talks and other talks, that you have this quantum group. That you have this quantum group with a large center appearing. So, this happens if this condition fails. So, in particular example, if we take a rescaled root lattice with these rescaled roots, then if you compute this braiding, what you get is e to the pi i alpha i alpha j over p. So this is q to the alpha i alpha j, if q is e to the pi i over p. So then, automatically, what you get is that those screening operators give a representation of the Borel part of the small quantum group. And this was Quantum group. And this was expected, but not proven. And what I work on currently, and I'm pretty sure that this is true, so that's not the point. We have to iron out stuff, but what is basically true is that whenever you have a good tensor product in this category, that is vertex algebra modules, then the screening operators in the general way I defined here, so you can do this in any category over any vertex algebra, then those should. Algebra, then those should always fulfill the relations of this Nichols algebra associated to this object. And you're using exactly the two things you have. So you don't know. So here I compute explicitly all the structure constants and so on in terms of these generalized steelback integrals. But here you really use what you have. So you have a tensor product, which means you have intertwiners, and you have a braiding, which means you know about the analytic continuations of these intertwiners. And that's the only two things you use, and this is exactly what you need in the statement. And this is exactly what you need in this statement, right? Because the Nichols algebra depends on the tensor product and on the brain. So that's the setting I'm in very general setting that I'm interested in. So we have an arbitrary vertex algebra with a good enough category of representations. We pick objects, and then that way we get screenings, non-local screenings, and those generate a Nichols algebra in this category. Generate a nichols algebra in this category. So now we can do what people do in the special cases: namely, we can take the kernel of the screening operator. So we take the sub-vertex algebra of elements which are sent to zero by all of these screenings. And in this way, we get, if we are lucky, a good vertex algebra. If we are not lucky, we get a bad one, but let's assume we get a good one. It has, again, as representation theory, a modular tensor category. And a question one can ask is, And the question one can ask is, which one is it? So we started with a modulo-tensor category here for this vertex algebra. We have some screenings generating a Nichols algebra in this category. And now we have this smaller, more complicated vertex algebra. What is its representation category? It should be again a model tensor category. And a good candidate, but I'm not sure this is the right answer always, but a good candidate that is tempting is again the relative drenfill center, because basically that's the only thing you can write down in. That's the only thing you can write down in this generality. So it's the only thing that you can write down if you have given a model tensor category and an algebra, then this is again a model tensor category. And in the example that people look at, this is exactly what comes out. So in this rescue root lattice example, you have this Borel part acting as screenings. And C is this graded vector spaces that come from the letters. And then if you take the kernel of the screenings, you get this triplet algebra. Screenings, you get this triplet algebra depending on L and on the Lie algebra, of which you take the root lattice. And the conjecture, which is the logarithmic Katanluci conjecture, is exactly that the representation category of this sub-UA is the same as, well, at the beginning people wrote small quantum group, but this is not true, of course, because this does not have a structure of modular tensor category. So you have to replace this by this quasi-quantum group that I introduced. And this is exactly constructed like this. Constructed like this. So, this is sort of the main example for this general approach. But of course, it would be nice also to look at other examples of Vertics algebra here, right? And so what I find interesting is that you have this relative Drinfill center of these Nichols algebras appearing on both sides. So we have a construction how we get non-semi-simple modular tensor category. Simple modular tensor category from a given modular tensor category and a Nichols algebra. And we have a way of having a vertex algebra at the Nichols algebra acting on it and the fixed points of it. And I would imagine this a little bit like orbifolding, but not by a group, not by a Lie algebra, but by a Nichols algebra. And if you look, what happens if you Orbifold by a group, you also extend the category by somehow the double of this group. So that's somehow the same thing happening in the group case. Somehow, the same thing happening in the group case, but now it's not a group acting of symmetries, but it's a Nichols are river of non-local screenings acting. And we see, I see, maybe two interesting applications when you try to use this idea on examples. So the first application is you can try to prove that there is an equivalence of this fixed point VOA to some category. I mean, as an idea, by trying to By trying to sort of classify what possible multi-tensor categories can there be. So, whenever you have this, then you have certain induction functors and so on that somehow fix what kind of category this can be. And in some easy cases, the hope is that you can fix the category so much with this that it just can be the relative to infill center that you want. So, basically, you want to characterize the result of this. The result of this fixed point construction by screenings as that it can only be the relative to infill center and not something else. And once you have done this, then you can of course try to realize modular tensor categories as representations of vertex algebras. Because you can start with a fixed semi-simple modular tensor category. Simple modular tensor category where you have a vertex algebra realizing it, like a lattice VUA or an orbifold of a lattice. I've looked in this a little bit, or an affine Lie algebra. You can start with this and then you can try to realize all the multi-defensor categories you can build from this by Neckels algebras as the respective orbifold construction. And this is, of course, exactly what people do in this cartoonostic business. And the And the results that Matt will now talk about is basically trying these two things in a very, very tiny first step. So fixing how this category can look like from all the stuff that you have from the VOA side and sort of pinning down that it can be nothing more than the relative Druinfill center of the very easy Nichols algebra in this case. A very easy Nichols algebra in this case. And what thereby comes out is you have fixed this so much that you can conclude that this logarithmic Kashdan-Lustik conjecture holds at least in this very, very small case of stempleactic fermions, which is SL2 and L equals 4. Yes. And I think this produces sort of many scenarios, either starting with lettuce VOAs or something more general, but also starting with much more complicated categories where you have a gap. Much more complicated categories where you have a guess for the respective modular tensor category, and you have a guess for the respective vertex algebra that you think would realize this category. And I think this is interesting to look at more examples and to see what one can prove. But as I said, many of these things I think are very, very hard to prove. But it points maybe to interesting cases, like super Lie algebras, but also more general cases. But it's interesting to look at. Yes, thanks. Thank you very much. Thank you very much. We could ask a few questions now, but the next talk will continue with the example. So if there's a specific question to this talk now, please ask, but you can also ask in 40 minutes, both of them. Tomiyuki has a question. Tomiyuki, please go ahead. Do you know what is the cohomology of this modified small quantum group? The cohomology. Yeah. So for SL2, they are the same as an algebra. So that's why you get the same cohomology. For general G I mean, it's a subtle difference. It's not so much different from the usual quantum group because you can... No, but I cannot give a definite answer to that. I mean, I would think that it's very, very similar. But this is a question one should look at, yes. I don't know. So I would probably try to compute this again in the category, right? I mean, it wouldn't go to the algebra, but you have this explicit category. Algebra, but you have this explicit category, you can try to see what x11 is. Okay, thank you. Uh, Zimun, sorry. Um, so I thought this modification only changed something about the co-product or changed some associator. Um, does it actually change the category as a category if you don't even think about braiding? I'm not sure. So. I'm not sure. So, I mean, for UKSO2, it doesn't. But I mean, in the construction, you use the algebra and also the stool algebra because you use the Strinfeld center. So I would hesitate. I mean, that's why I hesitated. So of course, it's a good question. Of course, I would think that there is not much difference, but I would hesitate to conjecture that it's really always the same category. I see. You're giving a definition of it where it's not actually obvious. No, it's not. No, it's not. It's not. The definition, I mean, we have. So basically, the definition I prefer is the one where you just define the category. So not the algebra, because the algebra is not maybe not the most interesting part of the whole thing. But we have also in this paper with Azad and Tobias worked out exactly how this Hop algebra looks like. But I wouldn't say it's obvious from that. No, no, I don't. But of course, it should be close, but. It should be close, but well, I have one question too. It doesn't seem like you have a grading sort of something corresponding to the unrolled quantum group. Is that true? Is there some way to try to put that in there? Obviously. So I don't think you have to because you deal with the problems by representatives. Problems by representatives by dealing with them on the carton part. So that's sort of the idea that you don't have to unroll, but certainly you can. So you can replace the semi-simple module tensor category, which I put lambda star over lambda on the VUA side or simply A on the Hof algebra side. You can simply replace this by the unrolled version. So I think that's the flexibility of the method. I mean, you choose the C you want and you choose the Nichols algebra and you would get the unrolled quantum. And you would get the unrolled quantum group if you start with an infinite semi-simple tensor category of weight spaces, not just of rolled up weight spaces, but really unrolled weight spaces. And then you take the same Likos algebra, and that produces the unrolled quantum group. Yes. So it's a change on the Cartoon part. And so that already exists in your theory. You already get some sort of center construction for that theory. I would hesitate to say it exists because I didn't write it up. To say it exists because I didn't really write it up, but I think this is quite obvious that this should be done. It should work, okay. I mean, I mean, this is a choice of the carton part. It doesn't change all the cell relations and everything. So all of these things change, you just change the carton part. Okay, interesting. Zima, can I add a comment? Yeah, please. So at Trajan, he presented. At Trajan, he presented how one can realize fine vertex algebra via free field realizations. Obera said in his case, fine SL3 was realized inside a free field algebra times a simpler W algebra. And the first example of this is SL2, which is realized inside VRASO times somehow a free field algebra, actually a half lattice VOA. And this is exactly the corresponding categories, the one that David has presented. Is the one that David has presented in his talk. And our methods, I mean, the methods that you presented should also apply to that. And then the underlying semi-simple category would be the modular tensor category of the Rossau minimal models. So this is something we like about this approach. Yes, I would very much like, of course, to see examples like this because they are sort of very inherently non-Hop, right? I mean, you don't realize them over Hop algebra, but still you. Algebra, but still you realize in sort of overhop algebras in some more complicated categories. And yes, I would very much like to see that happening. So, also, I think computations in these affine Lie algebras and minimum models are not so bad, right? I mean, they're not so much more complicated than in the lattice VOA case. So, yes, this is a direction that's very interesting. Let's please thank Ziman again for his very nice presentation. And we will now switch for Matt, who will continue with the presentation with, I think, an explicit example. So, Matt, are you there? Yeah. Very good. Can you please try to share your slides? Okay, um, you can