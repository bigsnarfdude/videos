Workshop. It's a delight to be here and to meet a bunch of new people, as well as see some old faces. I've worked with some new people too. So, this talk, the kind of new result that I'll mention is a timing threshold in three uniform hypergraphs, and that is joint work with Amaja Kathuka, Natasha Morrison, and Richard Minecraft. But I guess for this talk, I want to give maybe more of a general, hopefully fairly gentle overview of sort of. Gentle overview of sort of timing thresholds in graphs and hypergraphs. I think that might be kind of more enjoyable for this audience. So I'll start with what I mean by tiling thresholds just in graphs and the particular question I'm interested in for this talk. So what I want to do is I want to choose a connected graph F and I just want to fix that graph and then I want to let G be a graph on M vertices. To let G be a graph of n vertices with some minimum degree condition delta, and this n needs to be divisible by the number of vertices in this Fixed Graph that I chose. So, the question I want to look at in general is: can we cover the vertices of G by vertex-district copies of this Fitzconnectic graph F? And if we can, then we say that G has an F tiling. So, in the literature, So, in the literature, maybe this is usually called a perfect deaf kilo. I'm only interested in perfect deaf kilos, so I've dropped the word perfect for most of this talk. Okay, and so just a very somewhat boring example. We've got this graph D on the left, and it has a triangle tiling just by taking these two triangles and vertices. Okay, so in particular, what we're looking at is a sufficient. What we're looking at is a sufficient condition to guarantee that by removing edges from a graph, it remains a symmetric spine self-graph. So we are interested in the thresholds for this case. So rather than just when does my graph have this set island, what I want to look at is a minimum degree threshold. So I want to look at what is the smallest delta such. The smallest delta such that every graph on n vertices with this minimum degree delta that also satisfies this divisibility condition has an f value. And I'll just focus on n being sufficiently large because I want to understand the general behaviour and maybe sometimes there are kind of small values of n for which things are. Okay, and so this n being divisible by the number of letters. Being divisible by the number of vertices f is clearly a necessary condition, otherwise, we can't hope to have an x-type log. And I'll say a little bit more about that. But this is basically the general question for the whole talk. And so, first, I want to know kind of what do we know about graphs. So, the simplest graph you might think of is just my graph F is just an edge, and then an F timing here is just a perfect round length, and so. Perfect matching. And so we know that delta in this case is m over 2 thanks to Dirac's theorem, and that this delta is our best possible delta by this extremal example, where we take the slightly unbalanced, complete bipartite graph, and we can't get a perfect matching here, and it has a minimum degree n over 2 minus 1. So this delta really is our threshold value that we wanted. The next simple graph you might think about is the triangle, and Karadi and Heinel proved here that delta is equal to 2n over 3. And again, to show that this is the best possible, this is tight, we have a very similar example where you take sort of the blow-up of the K3 and then you just unbalance two of the classes. So, then more generally, for complete graphs in general, Panel and Samaroti showed the special example. Showed the threshold exactly as being 1 minus 1 over r times n, which generalizes this edge and triangle situation. And again, the examples that show it's tight are these generalizations where you take the blow up and then unbalance two parts slightly. And you just don't have enough space to fit all of the copies in, so you can't get a perfect timing. But it turns out that actually for graphs, we really do know everything. And Kuhn and Ostis showed in 2009. Showed in 2009 that the threshold for any fixed connective graph is 1 minus 1 over chi star of f times n up to an additive constant. I don't want to go into the detail of what this chi star of f means, it's not important for the rest of the talk, but it is a function of the chromatic number, but also kind of the size of the classes that you get when you separate into your independent sets based on the chromatic number. Your independent sets based on the chromatic number, and it's bounded, it's strictly larger than the chromatic number minus one, and at most the actual chromatic number. So, this problem of tiling graphs based on minimum degree thresholds is really everything's known. But it turns out that for hypergraphs, the story is quite different, and we really don't know so much. So, I want to look at this question now in terms of hypergraphs, and in particular, I want And in particular, I want to focus on k-uniform hypergraphs, which obviously just referred to as k-graphs. And so I need to generalise this notion of degree as well. And there are various different directions that you can extend the notion of degree. But the one I want to focus on for this talk is for the minimum codegree. So what I want to look at is a minimum degree condition that is concerned with sets of size k minus 1 in my graph. In my graph. So now this question is exactly the same, but I add a k-dash onto my graph, and I'm now calling my hypergraph H. And so what's known for general K? Well, if we start with an edge again, then we do know these perfect matching thresholds, and this is very close to matching. Is very close to matching the perfect matching threshold for graphs. You have this delta is roughly n over 2. But then not so much else is known. So in 2016, Richard Meyer gave us asymptotic thresholds for most k-partite k-graphs, which are sort of natural generalizations of bipartite graphs to the k-graph setting. But this doesn't. graph setting, but this doesn't cover all k-partite k-graphs, and this is still kind of a relatively small proportion of all hypergraphs. And then other than that, the only results we have in general for k-graphs are improving asymptotic thresholds to exact thresholds for loose cycles, and then we also have some asymptotic thresholds for tight cycles, but again, not the whole range of tight cycles, just some infinite stuff. So for general case. So, for general k graphs, this really is all that's known, and so there's kind of a lot left to wonder about. If we focus in on three uniform hypergraphs, and just k equals three, then not much more is known, but a tiny bit more is known. And it all fits on this page. So, we already covered the case where we take the graph on the fixed connected graph on three vertices, it's just the edge, so we're done. Then, if you look at four vertices, there are three different graphs that could possibly be, F could possibly B. And so, the first one is actually also a 3-bar type 3 graph, so we had asymptotic thresholds in the general result, but it would separately already been proved asymptotically and exactly. And then we also have the complete three-uniform hypergraph on four vertices minus an edge, and the complete three-uniform hypergraph of four vertices. Three uniform hypergraph or four vertices, also known as the tetrahedron. So we have the exact results for these graphs, but as far as I'm aware, this is really the whole picture of what was known. So compared to graphs, there's really so much left to kind of understand and figure out. We don't have good guesses for what the answer should be. So it's helpful and interesting to try and still explore. Even so, it's nice to get these general results like we have. Nice to get these general results like we have with these thresholds for loose cycles and for tight cycles, and it's great to get these general results, but still, there's so little we know that exploring small specific sub-grass is kind of still useful to try and understand and try and develop things further. So, if we just keep going and we look at three uniform hypergraphs and focus on a fixed graph F on five vertices, well Five vertices, while the results that we already have are just covered by these three partite three graphs here. So one with two edges and one with three edges. But already we hit another graph which is on five vertices and three edges. And this graph is not covered by any of the previous results. So it's not a three-partheid graph. And you could call it a Burg side. And you could call it a Burge cycle if you use that terminology, but it's not a loose cycle or a tight cycle. And so the main new result we have is an exact tiling threshold for this graph F. And so the result is a minimum degree of 2n over 5 guarantees an F tiling. And this is best possible by this extreme of example. By this extremal example. So here we have we partition our vertices into two sets, A and B, where A has size 3n over 5 minus 1 and B has 3n over 5 plus 1. And then we put all of the edges that have at least one vertex in A into our graph. And so this gives us minimum codegree at least 2n over 5 minus 1, which is all of these pairs, see all of this side, and then every side. See all of this side, and then everything else over here, all of the other pairs, see kind of lots more of the graph. But this graph does not have an F tiling. And sort of the easiest way to see this is to note that if I did have an F tiling, then I need to have one copy of F that has at least four of its vertices in Part B, because I can't have every copy having at least two vertices in A. These two vertices in A. But now, whenever I look at any four vertices on my graph F, they force an edge in my graph. But since B has no edges at all, I can't find that copy of F with four vertices in B. So there's just not enough space in this example to fit an F silo. Okay, so rather than talk about the proof of this result, I want to talk. I want to talk a little bit more about the sort of conditions that make it difficult or that you have to overcome these barriers you have to overcome to be able to approve these results. So in this case, it's tight because we have this example. So then we have to approve, of course, that when we're above this example, we always find the long tiling. But understanding what these barriers are that prevent us going lower is kind of important and useful. Is kind of important and useful to figuring out what these thresholds are. The only thing I'll say about the proof, just following on from Michelle's talk, is that it does use the absorbing method. And that's what I'll say. So instead, I'd like to focus a bit on sort of general barriers and information about tilings. So one barrier is so-called space barrier, which is the one that all of the examples I've shown you so far uses. So the So far, users. So, the point being that I sort of prevented myself from finding a perfect matching here because I didn't have enough space in this part, I prevented my triangle tiling here because I didn't have enough space in this part. And again, I prevented by not having enough space. And these examples, there's kind of some robustness to it in that I can bring my, if I bring my countdown just by one here, then I. Just by one here, then I still can't find a matching of size n minus one and stuff. So you can sort of force yourself to get a smaller and smaller matching one by one by just increasing and decreasing one of your part sizes. But this isn't the only barrier that exists. Another barrier you can have is called the divisibility barrier. And okay, a sort of slightly boring thing which shouldn't be forgotten is this original necessary condition. Is this original necessary condition that we need the number of vertices in our graph? Our FITS graph we want to tile with to divide the total number of vertices. But there's actually some more interesting barriers that come up that we refer to as divisibility barriers. And so rather than it being about space, it can be about sort of forcing some parity or divisibility issues. And so one example where our sort of types Example where our sort of tight result comes from a divisibility barrier is this result of Raylon-Rutzynski and Samarodi, which is about perfect matchings in k-graphs. And so here they show that you need this threshold which was close to n over 2. So like the graph case, but in the graph case it's a space barrier. Now in the hypergraph case, what's actually going on is the way you get this value is by Get this value is by splitting your vertices into a partition that is roughly equal. But the key thing is that you take one of your sides A to have an odd number of vertices in it. And then the edges that you allow in your graph are those that have exactly an even intersection with that part A. And then, of course, now you just can't get a perfect matching because every edge. Every edge uses an even number of vertices in A, but the size of A is odd. And so this is no longer a space constraint, it's this sort of parity constraint of odd and even, but in general it fits into divisibility where you could have other versions where it's more about forcing yourself with the visibility of three and other things. So this is another barrier. And this barrier is slightly different because what I said about the space barrier. Because what I said about the space barrier forcing you to kind of knock down the number of edges that you can find if you rebalance these parts a bit, actually, these invisibility barriers kind of if you instead ask to find a matching that covers almost all of your vertices, then actually this divisibility, this barrier, can't be modified simply. And it turns out specifically in the case of perfect matchings here that if I don't want Matchings here, then if I don't want this perfect matching, if instead I just want a matching that misses at most k of my vertices and n isn't divisible by k, then in fact the threshold goes right down to n over k. So there's really something kind of different going on in this set. The third barrier that you can have is known as a covering barrier and sort of simply And sort of simply put, it just says, of course, if I have a graph where some vertex is not contained in a single copy of my graph F, then of course I can't tile my graph with copies of F. Okay, so these are all kind of necessary barriers that we need to overcome in order to get a perfect island. But it turns out that sort of Sort of really, in general, these are essentially the only barriers that we need to overcome, and it's sufficient to overcome these, at least in some robust sense. And in particular, last year, Richard Lang introduced a paper where it essentially proves that this is true. So, if we can overcome these three types of barrier, this space divisibility and covering barrier, and we need it in some robust sense. And we need it in some robust sense, so this is where we have the asymptotics rather than getting exact results from this. But if we can do this then asymptotically, this is sufficient to guarantee a perfect timing. And so the setting I'm looking at is this minimum degree, and this sort of meta-theorem holds for minimum degree conditions. But Light also shows that it holds for some other conditions as well. So this is very nice to see that we sort of haven't missed any. Missed any other kind of barriers. Unfortunately, it doesn't kind of give us all of the timing thresholds for free because you still need to figure out that you know you might find a space barrier, but how do you know that there's not a space barrier that is kind of further up? It's not obvious how you're going to figure that out. So there are still lots of cases where this doesn't sort of give you new. This doesn't sort of give you new information, but it's nice to understand this, and actually, it does give us back a lot of results that we already found with kind of simpler proofs and methods. Okay, and actually, in this paper, Lang also looks at kind of relating what's called the rainbow or transversal tiling problem to the straight standard tiling problem. Tiling problem. And so I want to speak a little bit about that. So instead of looking at fixing a graph F, having your minimum degree condition on a graph H, and asking can I tile H with copies of F, instead I can look at a collection of graphs H which all lie on the same vertex set and now I want to ask if I can I find Can I find an edge from each of these graphs such that their union gives me an f tiling of this universal vertex zero? So I've written this fairly informally, but the idea is: so if f is this triangle and then I had six graphs on six vertices, then a rainbow f tiling, a rainbow triangle tiling here, would correspond to me being able to pick one edge from each of these C. Pick one edge from each of these six graphs such that their union is a triangle tiling. And we can do that in this setting by picking these edges I've highlighted. There might be other ways to do it, but you always use a different edge because, so this number here is just forcing you to pick exactly one edge from each graph and then read different edges for the different graphs. Okay, and sort of a reason it's natural to think about this. A reason it's natural to think about this problem is it actually generalizes our original problem because there's nothing here that says that these graphs can't all be the copies of the same graph. And if we have copies of the same graph, then we just find our original tiling. So any rainbow tiling threshold must be at least the normal tiling threshold. And so, what we're able to show is, as well as our exact tiling threshold for our graph F over here, we actually get an asymptotic tiling threshold taking the same minimum degree asymptotically for rainbow F tilings. And so, sort of historically, I think until this result, people have had to put quite a lot of effort into. People have had to put quite a lot of effort into proving this rainbow version. So you'd get the normal version first, and then you'd sort of have to sort of repeat some things and do a bit of clever auxiliary graph work and things to actually get the right vote thing. But whilst Lang's previous result didn't necessarily help us find this threshold in general, some other work of Larry and this paper to try and understand these relationships actually means that this. Actually, it means that this theorem here is really just a corollary for us. We get it as a really cheap result from this work of Lang. So, what we've done here is we've said that by replacing a single graph H by a collection, we're allowed to now move the edges as long as we maintain something and we still find a symmetric sample of the graph. Okay, so as I said, it's a Okay, so as I said, the proof is a consequence of a result of lang. And again, I'm really not going to write this theorem formally in any way. But what it says is that if I want to get this asymptotic minimum degree threshold for a rainbow F-tiling, then it's just the largest of two things. We already said it has to be larger, or it has to be at least the threshold of just a normal left eye length. Just a normal antiloe. And then he also defines this colour covering the mean degree threshold, which is related to this covering barrier, but now it's not just the covering barrier, it has to be some covering barrier where you sort of involve having your different graphs. And so, in general, this is a bit technical to define, but in terms of our specific case, But in terms of our specific case, it really boils down to something very simple. And in particular, so we already know that this is true for our results, so we just need to check that this asymptotic colour covering minimum degree threshold is at most this. And really what that means for us is something very, very simple. We just have to check that if you take two different graphs on the same vertex set with your minimum. With your on the same vertex set with your minimum degree threshold, then whenever you look at an edge in the first graph, you can find a copy of F that uses two edges from the other graph. And this 2n over 5 minimum degree is massively overkill for us to find it here, because if I take my edge E in H1, then even a codegree of like 4 means that I can find an edge in E2. Can find an edge in E2 that covers these vertices and another one here. And now I just need to find an edge in E2 that covers these two vertices and doesn't include these. And the F code degree, I guess at least three, gives me that. So it becomes really simple, and that's the proof of our rowboat theorem based on the original one. Okay, so I think that's basically everything I wanted to say. I'll just finish. I'll just finish by putting open problems on the board. So, like I said, we still really don't understand what's going on in general for these hypergraph tidings. And so, that even the Heinle Semerodium result for graphs, which was about complete graphs, we sort of don't have guesses, we don't understand what's going on for these. And the smallest open cases are the complete graph, three huff on graph and five vertices, and the complete. Graph on five vertices and a complete four uniform graph on five vertices. This one could potentially be more attractable than this because it has fewer edges, but the uniform is higher, so it's unclear. There are other notions of minimum degree threshold that you can look at, and there are again some variety of results that are known, but even less is known than is known for this code degree condition. And as well as fits in your small connected welfare, you can also look at Breakfast World First, you could also look at Sparrow and United Works. Yeah, I'll finish that. Thank you very much. Any questions?