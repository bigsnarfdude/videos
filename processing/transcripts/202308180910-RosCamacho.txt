I would really like to thank the organizers for organizing this, for all the effort I put in. And thank you for this opportunity to give talk here. So in our group, there are four of us. So Adean, Mejia, Guadafla, Megan, Orscamach, and me. So, let me see. Sorry. Okay. Alright. Okay, so here we are for those of you who don't know us. And what are we going to be talking about today? So first to introduce the setting and the main objects. So those are the module tensor categories and vertex operator algebra. And the natural Natural setting is actually the study of conformal field theory in which the tensor categories arise. And this has been noticed ever since the 80s when the physicists started studying the CFT. And in fact, Moore and Zeiberg have noticed that in order to better understand rational CFTs and to be able to formulate And to be able to formulate and solve some problems, they defined the solution of what we today call a modular tensor category. And it was later put in non-mathematical terms by Frank. On the other hand, vertex-operated algebras or VOEs are certain algebraic structures that encode the cardiological In code, the cardiology of the two-dimensional homo-field theory. So it seems natural that those two would be connected, and in fact, they are. And this connection can be explained shortly in such a way that sufficiently nice VOEs have the property that. Have the property that the certain categories of their modules have the structure of a module tensor category. So I will first briefly introduce the arrays and their modules and then Julia will explain to us what module tensor categories are and especially what is zesting, which is a little procedure that we use in our project. And this is a way to And this is a way to, so given an NTC structure, to produce new NDC structures. Okay, so a VOA is a Z-gradient vector space with two distinguished vectors. So we have the vacuum vector and we have the reversor or the component vector. And then we have something called the vertex operator, which is a map going from the vector space to the Going from the vector space to the space of Laurent series, where the coefficients are, in fact, endomorphisms of the space V. And they satisfy certain axioms, so which we will not go into details here. So for today, we don't need all of this. But one of the reasons why we skip it is because the axioms when you look The axioms, when you look at them, they seem quite technical, and in fact, they are, but they are very much physically motivated, so it can be shown that they can be derived from the Weidmann axioms for CFDs. And the very important notion is the notion of a module for vertex algebras. So to put it shortly, a module for the vertex algebra. module for the research scientific journals has the same definition keep but keeping so up to the up to the essence which makes sense so not all of them are the same but it looks very very similar so take note here that the space in in which we go with this map with the vertex operator is now The vertex operator is not the endomorphism space of V, but it is an endomorphism space of another vector space M. So there are many types of modules for vertex algebras, but for today we'll just keep it simple and state by this notion of a weak V module, or just say V module. Okay, so now Julia will introduce empty C's and testing. Thank you, Ona. Let me share my screen. No, nice thing. There. Okay, so I want to tell you a little bit about this modular. About these modular categories, which are very highly structured algebraic objects that appear in many fields of mathematics and physics, as Anna was telling us. CFTMBOAs is one of them, the one that we will be interested in today. So for me, in this case, I will be always working over the complex numbers. And a modular category is, for short I will call it MTC, is a category that has a lot of structure and properties on it. And properties on it. And I will focus on some of them. But the first one is that we need to have an abelian C linear category, which means that we have the exams and exact sequences there. So it has a flavor of representation theory or modules over certain rings or things like this. And c linear means that the species of morphisms are not just only steps, but they are also. But they are also vector spaces over the complex, and moreover, in this case, they will be finite-dimensional. One of the main things that we will be doing today, or paying attention today, is this monoidal structure. So, in our category, we have a tensor product. We are able to tensor two objects and get a new one. And this product is associative. Now, since we are in categories, we don't have the associativity to be on the nose, meaning that we have equalities, but we will have some more recent showing. We have some more systems showing that associativity that I will call this the associator alpha. We have a distinguished object in the category, which is the unit object. And saying that it's the unit comes from these two other morphisms in my categories that are the left and right unit. Meaning that one tensor x is x and x tensor one is x two. But the important idea is this, that I can now tensor in a coherent way my object indicate. Object in the categories. The other thing that I will not enter in detail, but I will mention a little bit sometimes, is that we have rigidity in this category, meaning that we have duals. And a lot of the time when we are trying to prove that the category is actually modular, finding the duality is sometimes hard. The duality is not only having another object that we usually call X dual, but it also comes with some maps, evaluation and With some maps, evaluation and co-evaluation, which I will not enter into this case. But the idea is that resembles a little bit duality of vector spaces. This evaluation and co-evaluation map, if you know more about graphical calculus, let you strengthen some lines. Or if you are familiar with physics, these are kind of creation and annihilation maps for the particle and the quaxy, but things like this. But things like this. So, the other feature that we will be using a lot, and that sometimes people complain a lot about the terminology and so here should be maybe fusion, is that we will be in the setting of semi-symmetry categories. So, what it means is that we will have or that every object in our category be composed as a direct sum of some special objects called symptoms. So, if you are familiar with representation theory, for example, representations of any Theory, for example, representations of finite groups, the simple objects are the irreducible representations. So we can express any of our objects in terms of these simple ones, and in particular, one thing that we will require is that the unit is a simple one. For representations, again, the unit is the trivial representation of your category. So we have some simplicity, and that is very useful because basically what we are doing at certain time or certain ways. Or, a certain way to think about this is that we are doing higher linear, higher-dimensional linear action. We will be able to express a lot of our maps in terms of matrices, and that's very helpful. The other important thing is that for us, there will be only finitely many simple objects in this category. The other thing is that this sensor code for us is commutative, so we have a brake that lets us commute this uh sensor code and also it's coherent. Here I'm avoiding a lot of the coherent Avoiding a lot of the coherent size, I said that this tensor code is coherent. We have tentagons and triangle axioms. And here we have two x-a-1 axioms. That basically, the idea of these x-a-1 axioms is that you have the braid equation, you call it, or the young-Baxter equation, for when the category is tricky. This and these are the identity. Basically, that is what we are doing, is telling you how this grade behaves with respect to the tensor colour. And then the other thing that we will have is the Riemann structure or a twist. Structure or a twist, it's a nice isomorphism. That one of the virtues of the thing is that you will be able to take traces in your category and that also gives rise to nice things. So, for example, because of this twist, we have a T matrix and also give rise using the brain to an S matrix. It's the square of the brain, which is encoded there, but anyway, and these two together give rise to a projective representation of the A projective representation of the modular group, a set to set, and that's why the name modular category comes from, I think. And the last condition that I will not go in detail is that this category, this break here, this bread here, sorry, is non-degenerate. And one way to encode that information is that this S matrix is inverted. So some of the things. I know that it's a lot, but the idea is that I will fix some idea when I fix the notation. So if I have one of these, maybe this list directly, this is what Maybe NTCs directly. This is more general for NTC. I will have my simple objects. This is just a finite set because I'm taking simple objects up to isomorphism. So I have finiteness of the category. I have finitely many of them. And there is another collection of objects that is very important and actually all of them are simplest. That is a collection of invertible objects. So, the invertible objects, and maybe I should be more careful, maybe that maybe this was this for a second, are objects that are invertible for my category. And remember that I have my tensor product, so I want to have an invertible with respect to the tensor product, but the inverse will be the dual in this case. This is one way to define virtual. And basically, that is the evaluation of convolution maps that I mentioned before. Are isomorphisms. And moreover, I have a nice group attached to this set of inverters, which is the inverters up to isomorphism, they form a group, and every inverter is simple. That's what I wanted to say. And the last thing that I will talk a lot about today, so I want to mention, are the fusion rules. Remember that we can tensor any objects in our category, in particular the simple ones. And the category is semi-simple, so now I can decompose. Semi-simplus, so now I can decompose my new object as a real sum of symptoms. And what I think is that this is just a multiplicity, so this is a number, a natural number of zero. So we have these fusion rules that are important and determine a lot of my category. The fusion rules plus the associator determine the underlying fusion category. So I will mention very quickly some examples just to give you a sampler. So if you give me a finite group, and I know So if you give me a finite group and a non-degenerate quadratic form, I can give you back a modular category. This is an important class of modular categories called pointed, or also in physics they call it an abeyan theory. And what the category is, is finite-dimensional G-graded vector spaces. So we have finite dimensional vector spaces and we get a grading by the group G. This G needs to be a median if I want to have a grading. Braiding. And this non-degenerate quadratic form actually is associated to, or it's related to an abelian trichocycle. So it's encoding both the breeding and the associativity and moreover also give us the twist. So this Q here encodes a lot of information. So this is one of the simplest examples. But other examples that also comes from finite groups and it's very natural. Very natural is instead of taking here a quadratic form, I could have taken directly a trico cycle, like here. Instead of an absolute tripocycle, which has a trico cycle, what that is letting me do is changing the associativity in my category vector tree of finite-dimensional G-ready vector spaces, and I change it by this trico-cycle. That will be a fusion category, a nice enough fusion category, and what I can do is I can do one of the traditional constructions for monoidal category. Reconstruction for modular category, which is taking the center, the mean calculus. This is always graded and always non-degenerate. So, this is a modular category. And actually, another way to look at this is looking at the representations of the total of the group or the twisted toggles that have an altogether here associated or co-cycled here. So, this is a quasi-cofalgebra or a cofalge here, just to the double. And this was one of the ways that these things were. And this was one of the ways that these things were studied when Green Kelly studied it in the 90s, looking at these one-two groups and the doubles and these kind of things. So the other real family of modular categories come from real algebra. In this case, you can have a simpler or semi-simple algebra and some mode of unities. For getting modular, you need some restrictions. So what we first do is you take the enveloping algebra, then you quantize by this mode of unity, you look at representations, and then you need to do some kind of And then you need to do some kind of purification, which is taking some tilting modules or washington by certain objects that have bad dimension in order to get something simple and finite. And then the example that we can not enter in details, which Anna will tell us more, is the representations of a nice or modules of a nice VOA. So let me just tell you a little bit about the testing construction before I give back the screen to Anna. The screen to Anna. So, the second construction: so, modern categories are in an early stage. We don't know that much about these categories. They are important because of many fields and they are interesting by themselves, but it's a theory that it's in the early stages. So, we are looking for more examples. We need to understand better the structure. And one way to do this is through constructions. So, this is a construction that was developed in a nice, interesting historical way. Historical way, in my opinion. But the important thing is that if we start with a modular category, we can get a new modular category out of this. This is actually more general, but it works in this setting. So I will start with a modular category, and any modular category admits this grading here. This here is the group of invertibles of the category. So what I'm telling you is the group of invertibles of the category is very dual category, meaning that they can decompose it as a billion subcategories. Cancer factories that when you do CG cancer CH and you do the cancer pro, you run in CGH for example. So that's in my grading, what the grading is doing. Also the USB headwell and some other things. And then we use that grading in order to define a new multiplayer category. So what we will do, we will do it in three steps. First, we will twist the multiplication or the tensor product, and if you twist the tensor product, Tensor product, and if you twist the tensor product, you also need to twist your associators. So that's what we will do. And we will do this via homological data. Here's that change in the tensor process using an invertible object, one of these objects, but some of these objects, but also it's given by the tuple side. Then we will change the braiding. The braiding is kind of changed by something like a by character or something like that. Something like that. And at the end, we will change the ribbon structure, so I will twist, and that will just be a function, a phase that depends on the grading component that you are looking at. And the output will be a new older category. But the category will admit the same grading as the abelian category level, not in the tensor proton or this, but at the abelian level. So let me just say what we are doing, at least in the fusion rules, so it's a little bit more clear. So if I want to define my new. So, if I want to define my new fusion rules, what I will do is I will stay with my old fusion rules and I will multiply, I will change it only a little bit, by one of the invertible objects that lives in the terrible component. And this invertible object only will depend on which component X and H live in X and Y live in. That's why I decorated with each G and H, trying to tell you that leaving the G and H component. G and H components. So now, why this two Co cycle appears? Because you want this tensor flow to be associative. For this to be associative, there will be a two-co-cycle quantition in this lambda, in this invert rules. And then for satisfying the pentagon a little bit more. One comment is that the trivial component of our trading is the nice fusion subcategory, which is called the adjunct and generated by this x-tensor x-d1. So some important ingredients that we So some important ingredients that we need to know when we do testing are the grouping verticals, the term took battery and the group of verticals in that joint. And now I will give back to Anna's screen so she tells us every bit more about the project. And now you can see can you see me? Okay, thank you, Julia. So I'll just very briefly explain what we're doing and what is the connection. So the connection to DOAs, as we said before, is that there is a theory for categories of modules of rational VRAs which was defined by Point and Lebowski. So they managed to define So they managed to define this gradient and modular tensor category theory, in this case when the VOE is nice enough, in this case rational. Later they were able to make this a bit more general and generalize to logarithmic theories. So most of the examples we have, most of the known constructions, are in the case of seasonal final theories, but there are some results Some results for VAs which are non-CTCO finite, and one of those is by POR and people. But for us, we will restrict ourselves to the nicest case, so the cytical, finite, and rational. So given sufficiently nice VOAs, certain categories of modules form a module category. Okay, so another notion that we need is something called a genus. Something called a genus of VOEs. So given a module tensor category C with a central charge C, we say that the genus of the VOAB is the pair consisting of the representation category of modules of the VOA and the central charge C. If a certain module or tensor category C is modular tensor category C is isomorphic, isomorphic to the representation category B, we say that V is the realization of the genes. Okay, and why is this important? So we come now to the question to the biggest question of our project. So given a nice So given a nice DOA, its central chart C, and its category representations C, what happens when we say this category? So when we say C, can we find the realization of the genes? And in particular, the case that we want to understand is the case of the astronomy models, which are quite famous and important in physics and mathematics. So I don't think I have the time. But yeah, let's just say that if we take the Universal Reservoir VOA and then its simple quotients, and if we look at the special cases when the central chart has this form, then the simple vertex algebra is a rational state confined and it is. Rational C component, and it is called the Lessora minimum models. And from the formula of positive theory, we have that the modules form an NPC. So the categorical data is known. The simple objects are the usable highest weight modules of L CBQ0 with the conformal weights given in this form, so HRS. And the rank or the number of symbols is or the number of symbols is given by this simple formula. So it's b minus 1 times k minus 142. And we of course we have fusion rules, we have twist, quantum dimensional test matrix and so on. So what you'll be doing is zesting the unitary minimum models. So as Julia said, zesting an FTC Zesting, an MTC produces another MTC structure. And in this process, we preserve certain properties like rank and the agent subcategory, but we change others like central chart, base, fusion rules, estimatics, and so on. So why this is a very nice construction from a perspective is that all the quantities are very nicely controlled and we can. And we can precisely compute what we get after testing. So, for example, the component weights can be a paradigm twist, and the results of a paper by Uria and other people give us explicit ways to compute the Zested SMT matrices. And this lemma I will not go into detail, but let's just say that the central charge of the Zested category can be computed in quite a simple way. In quite a simple way from the original structural charge. Okay, so the first case that we study is the Ising model. This is the case L C 340. And in this case, the rank of the MTC is 3. So this is quite nice and easy. And we can check our data in the Oman PLV database, which is On a UV database, which is very helpful. And in fact, we know that after testing the ISO model, we obtain eight different tested categories. This was proven in a paper by Juria and other people, of Permian Module Category 16 Paul Bay. But we were able to see that this type of result holds more general in the case of so-called superconducting. In the case of so-called supercanikian categories, will have the same thing happen, we'll have eight different tested categories. So in this case... every eight of them to the three genes. Yes, yes. So in this case we can obtain a realization of the genes. The problem arises when we go higher up in rank, but the method that we hope to use is a so-called factorization of the category, which allows Characterization of the category, which allows us to sort of reduce rank so that we can divide the category into two parts and then use this classification of our MTCs in order to understand a bit more hierarchy. So now we will say something about this factorization. So, yes, we were able to prove a factorization result at the level of the modular category. So, we focused basically on the unital minimum. We focus basically on the unitary minimal model when Q is P plus 1. And in that case, we can see that the casual representations of this minimal model BOA always decompose using the SUK theories. So there are two cases because it depends on the parity of P, so don't pay that much attention, but important thing is that we always have a factor that has some odd level here and one factor that has an even level here. An even level here. And one interesting thing that happens is that in this side, in the old, so all level and even level behave very different. And even level, depending on the congress mode 2, also behave really different and it's related with the supertanacana was selling. But in the both level, there are no inverted. So at the categorical level, we will not be able to do anything with testing in this side. So basically, if we want to set the minimum. So basically if we want to test the minimum model, we are used to testing this piece, which is something that we can do quite well. So depending, so maybe let me say, yeah, the SU2K is one of these quantum root scatters that I was mentioning before related to the simpler SL2 and some root of unity. And maybe for small piece, let me say this is easy and this. Ising and this is trivial. This is the Fibonacci catalyst, which is a famous one, and again, easing, so the old part is changing, but the old part is the one that is not modified. So we are interested in changing this side of reassessing. This one is very well understood as I said, because we have a previous paper. But one interesting remark is that for this minimum model and specifically this even SU two level K levels, Level K levels, the group of invertibles that is always inside the abstraction actually is always set two and comes in two flavors. Sometimes it's Tanakian, representations of set two, and sometimes it's super tanakian, which is X5. And they behave quite differently, and we have some nice ideas in each of these cases. And maybe I will stop here as well. We're turning off the recording. Are there any questions, comments?