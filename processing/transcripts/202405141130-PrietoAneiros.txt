Can you hear the speaker? Okay, can you hear the speaker now? Hello, hello, hi. Can you hear me? Excellent. All right, so my long time before our next speaker of this session. So the next speaker is Andres Prieto Aneros from the University of Pacquiao. And even though I do not have any direct uh scientific attention, Direct scientific, we don't know. I am very glad to have his talk because he's going to talk to us about a different flavor of trust components related to the partition of units. So, Mikey's point. Thank you. Thank you. First of all, I'd like to draw to say thank you to the organizers, Tulene, Lisa Maria, and Bettinia for inviting me. For me, it's a pleasure to stay here. And talk about some of the research lines that recently we have made in our center. made in in our center in the galician center for mathematical research and and technology obviously this this is uh this talk is is a collective effort for work for trying to push in um not exactly a trough method because the partition of unity finite element method strictly is not a trough method because we will see later that it's quite flexible and we don't we don't require to to use sac solutions of of the operators of the of the model that Of the model that we are trying to approximate. During my talk, I'd like to start with something that is pretty obvious for all of us, but I think that sometimes rethink about this kind of things about the scales is important. Obviously, when we are trying to approximate an harmonic wave propagation problems, the scale matters. The scale matters because obviously the challenge The challenge of anomalic simulation, for instance, for the kind of equation depends on the size of the computational domain, obviously. It's not the same to try to, in this context, that is underwater acoustics, where you have some sediments, you can see some aggy, seagrass in the bottom of the sea, or even there are some seafood shells on burying. On burying in the sand. If you are looking for the computational, the size of the computational domain of the water column is not exactly the same as if you are looking for any scheduling problem around the shell of lamp or muscle. Obviously, everything depends on the way it lay, obviously, because the size The size, the computational, the size of the computational domain and the challenge that are related with the size of the computational domain depends on how many web lens do you have on the domain. And usually, the relation between these two scales is what matters at all. But I'd like to emphasize in my talk that there's other scale that matters. It's the scale of the material. So sometimes we are missing in these environmental settings are quite important that the materials are not homogeneous. The materials are quite deteriorous and they are not graded materials, Professor Mong was emphasizing yesterday, and they have very non-smooth profiles, just by the nature of the materials that we are dealing with. For instance, for different templates. For different temperatures, different mass densities, the presence of biological elements, the sediments, the sands, the granular material that is on the bottom of the sea. There are so many different aspects that makes almost impossible to consider that these kind of materials are homogeneous or even smooth, very smooth spatially. So, this talk I'm going to try to deal with this third. to deal with this third the third scale on the products, the characteristic length of the material iteration is. For doing that, we have chosen a partition of unit finite element. As I seen yesterday and today, almost most of you are using DGTREF methods. That's fine. I haven't any problem with that. But I'm really happy with the flexibility. Really happy with the flexibility that the partition of unity finite element method provides because I'm going to enrich my discrete space with a lot of flexibility. I'm not restricting myself to the solutions of the operators of the model. And since I'm working in very heterogeneous materials, maybe sometimes are not accessible or computable that kind of search solutions. So for doing that, we are going to follow two different strategies. To follow two different structures. The first one is going to be locally, and this is going to be the first half of my talk: how to enrich the discrete base of the partition of unity method with sample local solutions. And the second one, we are going to show you a global approach. Try to, at some point, if it's possible, try to enrich my discrete space with global solutions of the problem in the entire completion. In the entire completion project. So, for each part of the talk, I'm going to show you a small motivation that comes from either acoustics or from mechanical computational mechanics. In the first case, for the local-based partition of unity method, we are going to talk about either acoustics. When you want to sample what's happening here in the sea, in the sea. Well, in the sea bottom of the UCM, you are going to rent a boat and also purchase a transducer, an acoustic transducer that basically is a piece of plastic that is floating in the free surface of the sea. And mounting on this plastic bubble, there is a piecelectric device that is emitting some. Some energies and waves, like the pins that you can see in the films of, you know, with the submarine is trying to locate the other one. They are emitting some pins. The pins are very, very short, 10 or 15 milliseconds, but with energy enough to reach the C bottom and coming back, and then the epistolatric itself is recording the reflection signal that comes from the C-bed. So at the end, we are just trying to reproduce that kind of phenomena, the meeting and reflecting from the water column of the CM. And the main point is that the speed velocity of the water column depends a lot on the vertical direction. This profile, it's in the Caddiff Gulf where the Atlantic Sea is mixing with the Mediterranean Sea. It's mixing with the Mediterranean Sea, and so different temperatures, different salinity collapse and create a profile that you can see that this is quite clearly not constant. And I don't know if you can appreciate it, but it's not smooth. Here there is a fine-grained granularity where the, it's not physically, but it's, well, it's quite difficult to mimic with a smooth profile. with anger smooth with anger smooth profile we are introducing um science predicted servers so uh our approach here is that we are going to use the partition of unity methods yep yep yep yep yep this is just the water just the water but you see that this is a kilometer depth uh more or less It's called a thermocline. Yeah, it's the different, basically different of temperatures and different of saline. Here it's kilometers, well it's meters, zero from 1000. And here it's, oh, it's 1,000. 1,500 and why? And why 1530 this is in this space 30 units. It's a small, it's quite small in comparison with the kilometer scale. So let me introduce the partition of unity method for a constant sound speed and then Sound speed, and then we are going to talk about how we introduce this non-smooth profile on the discretization space. For those who didn't know the partition of unity finite element method, it was introduced by Melen Kambabushkai in the 90s and middle of the 90s, 1996. And basically, the idea is instead of using a finite element discretization, we are going to use a partition of any Use a partition of any piecewise polynomial discretization. That is, if you add all the basis functions for this discretization, you are going to get the constant one. And so instead of using the span of these basis functions, we are going to multiply these basis functions, but something that is going to be oscillate. Basically, for the Herr Hoff equation, we can use plane. We can use plain webs if you want, or there are many other works that instead of using plain webs, they are using spherical or in 3D or cylindrical versus solutions. But at the end, the partition of unidefined element method doesn't require that the functions that you are going to use to multiply and enrich in some sense the discrete space are solutions of the original algorithm. You can use what Original model. You can use whatever you want. The main point is that they should oscillate at some point as the size solution that you want to approximate. So in our problem, I'm going to use a 1D A toy model problem. We are going to introduce here the way number that it's especially varying with respect to x. It's varying with respect to x, to special coordinate. And so there are many different ways of defining the functions that we are going to use just for enriching the partition of unity discrete space. For instance, it's a brute force, maybe a very, very, very silly way of introducing the function, say, okay, I'm going to forget the variability of the wind number and say, I'm going. Of the wave number, and say I'm going to use a global average of my wave number and get something that is the classical exponential plane wave function with a constant wave number. That would be great. Or there are other alternatives that say, okay, I'm going to keep my exponent k on this ponytail and say, okay, maybe k depends on x, but it doesn't matter. I'm going to put this potential with plus and minus a keyk, and that's all. Remember that we. And that's all. Remember that we are in 1D, so there's only one plane to the right and other one plane to the left. There are many other options. In 2004, Pablo Ortiz was playing with local averages, something that is really interesting for us because, as you can see before, this kind of data contains noise, errors that comes from... Errors that come from the experimental measurements. So, try to clean that noise with some local libraries could be a good idea, just for just trying to clean the noise from the spectrum. In one of our works in 2017, we proposed something a bit different based on the local laboratory ideas. We are going to try to, I'm also inspired by... I'm also inspired by a domain decomposition strategy, try to solve a very small problem inside the support of the finite element basis that the partition of Unity provides for the mesh. And so we are using local average different parts of the support of the Of the support of the canonical basis functions of the finite element. And then we try to impose the continuity of them now and also the continuity of the derivatives. And we are completing the system with some robin boundary conditions just for saying that the plane wave is traveling to the left or traveling to the right. Obviously, at this point, I'm sure that Liz Marie is just waiting. Liz Marie is just waiting for saying, why not use generalized plane waves as in the trust muscles? The main point here, I'm coming back to this, is that the pointwise evaluation of this SAM profile is not reliable at all, because it's not smooth enough just for saying, I'm going to evaluate a point-wise this profile, or compute the first derivative or the second derivative that could be. Derivative or the second derivative that could be a requirement for computing a generalized spin wave enrichment in this context. So at the end, what's happening? These four plots are a very simple scenario where you have two different wave numbers. I think that the ratio between I think that the ratio between the left and the right is one over four. And you can see the global average doesn't work at all. The dimension that we are using here is, I think that is only four elements, right? It is just for illustrating the accuracy of the method. And you can see that using a local element whites, I mean, that includes something that is not a solution of the problem, using kx. Of the problem using kx directly on the exponential. More or less, does the work at the end of the day, and also the local averages. But since if you enrich the solution, the discretization space with exactly what you are expecting here between one value of the waving number and the other, you get exactly this solution because the solution itself, if it's in the belongs to the it's in the belongs to the to the descript space so uh you can see that small changes small changes on on the way that you are enriching the the the finite element space small changes on the wave number change completely the behavior uh the behavior of of uh of the the method so uh a natural question is a natural question arising in this in this uh kind of partition of In this kind of partition of unit methods, is what happens if I'm introducing some errors in my exponentials. And this is what we have made some years ago. Imagine that you have some errors on the definition of this pony, right? Instead of using k as in a constant case, wave number that is known, Number that is known for, I don't know, experimental errors, I don't know, because the process of reaching the speed of sound is stochastic. You are suffering from sign errors, right? And so you don't know exactly which is the way number that you have to use on the enrichment of the discrete space for the partition of unit method. So, how this small gap in the knowledge of your In the knowledge of your wave number, introduce spurious errors in your discretization. So, at the end, what we are going to do in that work is a dispersion, an emergency dispersion analysis of the partition infinity method, depending on this new parameter, delta, that at some point try to mimic an error that is introduced for your for the knowledge of your sound sound profile. Some profile. For doing that, well, we were doing this analysis in 1D and there are different steps. One of the key points in this analysis is the compose the partition of unity discrete spacing in the sum of two different spaces, one that will resemble the standard finite LM. Standard finite element discretization that it's defined by the values at the vertices of the mesh. And the other, this is really, really, really funny, it's a subset of the discrete space that it's called, well, we call it a twin-bubble discrete space because instead of being the span of bubble functions, it's the span of bubble functions that are impaired. That are in pairs. And one of the bubble functions is upward, and the other bubble functions is downward. So it looks like a sinus in the support of the mesh, of each canonical basis function. And doing this decomposition of the discrete space, you can introduce also a global interpolation operator just for checking the asynchronic behavior. The asymptotic behavior of the solution. Depending, well, there are two regimes: the parasynthotic regime and the asymptotic regime. Well, it's quite interesting how to define that, but I'm going to skip for a while. I'm just show you some results that say that at the end, introducing some errors on the wave number, introduce some dispersion. uh introduce some some dispersion some numerical dispersion in the in the interpol uh in the interpolation results you can see that everything uh depends on on delta square in l to norm or in h in h1 um and also this is quite interesting to to make the difference between the presymptotic and the asymptotic regime in the presymptotic regime when k multiplied by h is large enough you can see that there is no k there's no difference by the There's no difference by the wave number. You see that here those estimates do not depend on k. But as soon as the finite element mesh is decreasing, the standard finite element properties of the mesh plays a role. And at the end, you get something that depends on K in L2, not in H1, but just in K2. just in case in each one it's independent independent okay but obviously you have some dependency on delta on the error that you are introducing on on the on discretization uh well uh to get an a priori estimates of of uh of this scheme uh it's quite involved even in 1d you have to well derive some discrete game slope and working with the discrete green function off of the Working with the discrete Eagle function of the operators and with some discrete dispersion of relations, but at the end of the day, you are going to get some estimates that show you, here it is, the error that you are committing when you are introducing this parameter delta. It's delta square on H1. And this estimate is quite sharp for L2 because you can see that barring k you have here a k and you can see the difference. But for the numerics in h1 is not the case. In h1 you can get something overall that is independent of k, but our estimates include here a factor k. So there's something missing in our computations, maybe something related with these peaks that we could. Something related with these peaks that we couldn't explain at all, the origin of those peaks. But anyway, which is important at least for us, is the delta square factor on the error estimates. So this is for the local strategy. So introducing some errors on estimating the way number introduced this delta square term on the error estimates. But in some But in some much more simple scenarios, we can avoid this. And this is the way that we are going to work with a model-based partition of unity methods. I'm going to try to motivate my example with a multi-layer pipe with different pipes, but different pipes, different layers, but each layer has a constant property, a constant mechanical properties in terms of mass density, in terms of elastic. In terms of elastic modulus, personal modulus, whatever you have in mind, but each layer has a constant. Since the number of layers are finite, I don't know, seven, eight, you can think about computing something analytically, taking into account the seven different layers of the pipe. So in this case, we are going to compute the transversal displacements of the pipe. Of the pipe. Maybe at some point there's some defaults on the interface between the layers of the pipe. We are going to get an angular section of this. For this talk, I'm going to center on computational domain. But essentially it's not strictly related because here we are working on radar coordinates and here I'm using computational coordinates, but global strategy strategy. Global strategy can be structured. So the most efficient way of working with this kind of configurations, if we neglect for a moment the crack, the defect on the interface, is just use a model representation of the method. So in an abstract context, what we are going to do is just if the operators m and k are agreed. M and K are good enough. Good enough, I mean. Enumerator Maybe I was doing something wrong here. Oh, yep, that's enough. Okay. Okay. Oh. Perfect. So if f is uh the source term is smooth enough, the numerator here decays quite quite fast. And obviously if the denominator is small enough, we can, large enough, we can neglect most of the coefficients in this expansion and get with. efficiency in this expansion and get with five, ten, fifteen modes a good approximation of the solution. So the main point here is that this kind of abstract setting it's feasible and applicable if in these conditions, in these ideal conditions, that operators are self-adjoint, you have a compact embedding of B on H, and everything works in this simple setting quite easily. But what But what happens if we are not in this setting? Well, we can use the partition of unity method just for trying to fill the gap between the complexity of the physical, the mechanical problem, and this simple astro setting. And so instead of working with plane waves as in the local In the local version of the partition of unity method, I'm going to enrich my discrete space with modes. The modes, obviously, are not solution of my problem because the modes has an eigenfrequency that is different from the frequency of interest that I'm using from my omega. But it doesn't matter because at the end they are oscillating at some point, right? So, doing that, we need to try to answer these questions. Is it possible to Is it possible to implement this efficiently? Maybe, since I have the flexibility of the partition of unity method, I could use the modes of model A that could be different from the different model B. That's the model that I'm trying to compute. And the other point is how to choose a convenient bunch of eigenmodes because Because it's much better to enrich with sanguine-specific modes that are just focused on the solution that you have to compute. So for illustrating these ideas, we are coming back to my original domain without the crack, and we are going to try to solve this problem. This problem could be much, much, much more quite easy to solve. quite easy easy to to solve because it's just a contest domain, only two layers. So, well, it could be feasible to use, I don't know, many other methods. But the main point here is that you have here this impedance boundary condition, a probing boundary condition, that from a model expansion point of view, from a spectral point of view, they introduce a lot of Introduce a lot of issues because at the end the operators, the resolvent operators fitted with this model is not self-adjoint. And which is much worse, the essential spectrum of, from a model point of view, the essential spectrum is not only the zero. There's here an accumulation point in the spectrum that depends on beta minus i beta divided by c. So there's an accumulation point. So there is an accumulation point and so try to guess which is the best model basis for this problem is not so easy. But no problems, remember that the partition of unit method allows you a lot of flexibility. I'm going to change my model. And so instead of using an impetus boundary condition, I'm going to use any other boundary condition. You could use that, or even you can combine a third model predominant C. Third model pronounced C and include other models based on the partition of unit. In this case, it's quite easy using a simple separation of various procedures to compute the modes. In this V-layer material, there are two kinds of modes, interior modes that are oscillating in the two layers of the model, but also there are exterior modes. Oh, exterior mode, sorry, surface modes, interface modes that are called in computational mechanics LOF modes, right? So this kind of computations can be done very, very fast. You have only to compute numerically this dispersion equation. And once you have the series of dispersion equations, you can explicitly define the modes. Here, this is quite interesting because in another Quite interesting because, in a natural way, you have some abanescent waves on the stereo layer of the computational domain. At some point, for example, the ideas of Andrea Moyola was talking this morning. So, and finally, you introduced those modes on the partition of unitic finite element methods. Obviously, it's much more complex because you have to include a lot of different modes. Include a lot of different modes, and you can split on the modes that are traveling to the left and the modes that are traveling to the right, but they are enriching the final element space. And remember that these functions are not solution of the problem, because they are working at a different eigenfrequency. So you use a galaxy approach with those. approach with those with those with those finite element, finite element, the partition of unit final element discretization, and you get some errors here. This table is reporting the errors and the condition number for a source term that is discontinuous. So it's expected that the model representation in this kind of F is going to be slow because the low regularity of the source stem. But you can see that depending of You can see that depending on if you use only love modes or you use also interior modes, you get with very coarse meshes. This M is the grid mesh, 10 by 10, for instance, here, or here is 4 by 4, more or less. And the modes that you're using, the degrees of freedom of the complete partition of unity method is here, you get some, well, not bad at all, almost five digits of accuracy with. Digits of accuracy with a very small, a very small viscutization, 150 degrees of freedom. Obviously, we are suffering a huge, a huge condition, for sure. But it's something that we have to live with that. In the case of a smooth source star, where the model representation could be much more efficient from a representation point of view. So, when you try to guess which is the behavior of with respect to the frequency, you can see something that is unusual for a finite element discretization. That is, if you look at a finite element discretization in this span of the frequencies, as soon as you get a mode, a gigant frequency, you have a peak on the error. Because it's much more difficult for the final element discretization to reach what's happening here. But in the partition of unity method, the partition of unity method enriched with the model with the model base is at the contrary because close to a close to a mode it's uh the the enrichment of the discretization space is quite close to the solution that you are looking for and so it's just on the contrary right what the peaks that are worse for for the finite element the peaks that are much better for for the partition of them and finally and this is um my my last my last slide last slide let me show you uh how to choose the model basis uh for for an application point of view um coming back to the to the picture of the transversal section with a crack right at the end of the day uh if you are using this kind of methodologies for for the observability for the detection of a crack in the interface between these two layers what we want is a basis a discrete space A basis, a discrete space that are able to see that crack, right? And so what you can do is: okay, I'm going to select my model basis in order to identify or observe that crack. And so for doing that, we have to find two indicators that in some sense they represent the singularity on the tips of the crack. The crack is so skier, right? The crack is so skier, right? And so that's the two two solutions that try to represent the singularity that the crack is introducing in your model. And so we are going to project these singularities against the model basis function that we are using. And what we get is this panel of values for both indicators. Here on the left, from Here on the left from this wide line are the interior modes and here are the interface modes. And the values indicate at some point the observability indicator of which are the much more important relevant modes that you should use in the enrichment of the partition of unity finite element discretization. And you can see that there are no many, many of them. There are no many of them, maybe no more than 10 or 15 from some point of N and J. It's a waste of computational resources to include much more models. So close to the origin is fair enough, and no use in more than okay. So finally, there are many open questions in these two works. These two works. Obviously, we have a problem with the condition number for sure, but I think that there are some ideas around the DG dreft method that could be useful in this context of partition of unit-defined diameter methods. We have played with some regularization techniques, but we are quite confident with an approach that could be a brute force approach, that is use the variable arithmetic precision. Use the variable arithmetic precision. I mean, that for the guys who are working with Fortran, quadruple precision is an option. If you don't have enough with 16 digits, why not? 32 and that's all, right? Maybe this is a brute force approach, but at least it works. Obviously, we were working with some finite element, a fixed finite element mesh. A fixed finite element mesh, and then we chose a model basis, but we could do exactly the same in the other sense. For a given model basis, which is the best mesh for doing that, that's something that we are thinking about. And also, we are working on the fission assembly of everything because right now, when we are working with partition of unity method, we are trying to use a standard galaxy approach. So, we need to integrate. Approach. So we need to integrate on the volume, on the area of the triangles, not only on the edge, as in a DG dreft method, right? So the quadrature, efficient quadrature rules for doing that is a key point on this kind of methods. The next steps, Paolo Lopez is also working in Gobiedo with the department of Virtinia. It's going to talk about the extension of these ideas to the problems. the ideas to the problems and also we are working with uh in scattering problems uh computing modes eigen modes uh for for open for open categories that's the other and the final the final thing to to think about is that this uh all these research lines are part of um of a research project that i'm coordinating that is endorsed uh in the united nations uh in this united nations program so if you are So, if you are curious about the challenge that hydroacoustics can provide you for the use of the DG dreft method of any other, please go there and check how difficult and how challenging are much of the problems that are around DOC. So, thank you very much. Thank you. Yeah, I think so. All right, so do we have any questions in the room or online? Thank you for the great talk. Before I ask the question, I would say that the first talk that I was ever going to give is a teaching student. Used I went the second time that I met my applied uh gave me the favor of mail like a pushback or keep that. So and after that I mean I was here in decision of unity methods and I was uh planning a little bit because I started doing adaptive methods only polynomials. And it was thinkable for me to think I'm going to also change the kind of functions of the logo. This is what I'm going to ask. I mean if you do If you do PG position of unity, you just take the position of unity along certain elements only like plus local position of unity separate a little bit because you have some things so maybe much of cache yeah I suppose so but at the end you have to take So, but at the end, you have to take care because the partition of unity method gives you a lot of flexibility in the sense that you can put in the descriptive space whatever you want, right? It could be not a solution at all of the original model. In other Digital methods, since you are trying to remove the integration inside the triangles of the T-trahidra and get only the facets and the edges of the mesh. Of the mesh, you need that property, right? And so I'm not sure. Maybe with some efforts, you could mix both of them, but I think that it's not straightforward. Sorry, but I couldn't say more. Okay, well, thank you for thank you for the talk. It also brings back some memories when my students and I would write uh that approach can be a length speaker. That of the Lang's papers came out. And the issues that we encountered, I would appreciate your kind of refreshment memory. One was ill conditioning that you already mentioned. I think it's even worse than that. I think you get linear dependence in some cases. Let's say you have linear basis functions multiplied in by linear energy functions, you get quadratic, and that's redundant. But even maybe even worse in practice, the results are quite comfortable. kind of the results are quite cumbersome when you have some special functions, let's say oscillating functions, some other functions kind of locally trying to approximate the behavior of the solution and then you multiply those by potential unity functions. Guess something that's very cumbersome, certainly no analytical expressions for stiffness of mass matrices and then integration Gauss, the Gaussian integration points do not make any sense anymore. And so that became kind of a stumbling block practice. So are there any So are there any kind of advances in those directions? Yeah, the main point, I completely agree with you first for suffering very huge condition numbers. That's something that we have to live with that. But the main point for us, for using partition of unit methods, is that at some point when you are working with, let me go to the with this kind of profiles, We cannot compute, we cannot access to the sex solutions of the model. That's the main point. And even in this talk, I'm not dealing with this part that is much more interesting because the seabed has stratified media. There are some porous materials, granular materials on there. If you are working with import elasticity, you have many different. Have many different plane waves. You have two logent plane waves, at risk verse plane waves, a lot of uncertainty on computing that. And so computing something analytically in this part of the CBELF is almost impossible. So to have the flexibility and say, I'm going to reach my description space with something similar to a plane wave on that media saves the day, I mean. But obviously, But obviously there are a lot of disadvantages as you mentioned. The high, high, high condition number that we have to suffer is a big issue for sure. Right now, I have not a right solution for that. It's just quadruple precisions and times, a variable arithmetic precision. There is some packages that provides you for small matrices as here. As here, if you see in the table, all our matrices are quite small. Even if you play, instead of working with sparse matrices, and you consider, I'm going to use a dense representation of this matrix, a matrix that is 3,000 by 3,000 is not so big. I mean, that you can handle that in a dense algebra point of view and do some computations more or less fast. More or less fast. Thank you. We're going to take one more question. Thank you. So, in your conclusion, perhaps you can show the last slide. Yep, there is a question I quite don't understand, perhaps you can develop. So, it is the question of the criteria for a when it is in the last slide, if you don't mind. Okay, yes. A criteria for an optimal mesh because for all the numerical methods I know about, at the end of the day, At the end of the day, it is always a compromise between the accuracy and the numerical cost. So, any pitariat that I can imagine results for a study of this compromise. So, then if, for example, if I have a theoretical estimate for the numerator, try to build the criteria on working with this theoretical estimate. With this theoretical estimate, or perhaps I do not have such an estimate. So I have a rough estimate, or I introduce physics. So, can you develop more on that? What is look at this? Look at this question. I'm going to exactly. Yeah, basically the computational time. Look at this. For this kind of problems in the crack detection on the interface between Detection on the interface between two different layers. What we need is to say if this structure is safe or not, if it has a defect or not. It's just a traffic light, right? And so accuracy is not bad at all. Exactly, exactly. And so say, okay, I have my indicators and say, okay, you have to get 15 modes here to try to observe the crack. Survey the crack. And also here, yeah, more or less. Okay, I'm going to fix my model base to 15 modes, which is the mesh that I should use in the partition of unity method for computing, for solving the problem, right? And so it's now clear if you fix the model base, which is the best mesh for doing that. And basically, the main difficulty comes from this part. In this part, you see. In this part. In this part, you see that this exponential decay. But I agree, but if you have a theoretical estimate on the numerical, it should be enough to look at the theoretical estimate. Yeah, it should be great to have you do not have. No. No, currently. Okay, no currently. Okay, next page. Thank you very much. There might be one more question online. Manuel did. Question online, uh, Manuel. Did you want to maybe unmute and ask your question? Yeah, thank you. Can you hear me? Yes, we can hear you. Okay, okay. This is sorry, it's not a question about the partition of unity, but when you show the thermocline at the beginning, there is a region where the speed, the wave speed is greater than in. Is greater than in above and below. So I wonder if there is a waveguide effect. At some point, yeah, at some point. Yeah, indeed, it is. Obviously, I'm just in this, well, you can not see me. Remember that we are talking about the simulation of how the DPIN, the transformation. Of how the pin, the transducer, is emitting a signal, it's impeaching the C bottom, and then it's coming back. I'm not working on how the acoustic waves are propagating in parallel, in a parallel direction through the ocean, right? So the waveguide, the waveguide effect that you are mentioning was if you are working with entire 2D or three-dimensional problem, could be focused. Could we focus the intensity of those waves on that depth of Deep CM? But in this case, this is not the case. Thank you. Okay, thank you very much. We can thank our speaker again. And we will be back in some 10 minutes for the last session before lunch, where we're going to have my two most recent collaborators. Thank you.