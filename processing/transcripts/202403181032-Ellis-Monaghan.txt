DNA origami, but we're going to be talking about origami on wire frames, so not 2D mats like we often see with DNA origami. So these are wireframes modeled that can be modeled by spatial graphs. And the spatial graph is a graph where you've got a place in 3D, each of the vertices, and the edges don't. And the edges don't intersect each other except at the right distance. DNA origami. I imagine everybody in this room knows what this is, but always good to have this. We've got a scaffolding strand of DNA, single strand of DNA, and these short staples that are also single strands of DNA, and one half of them is complementary to. Complementary to one place on the scaffolding strand, and one part's complementary to some other place, and they cause the strand to fold, hence origami. So, yeah, and you can make all kinds of fun things. We're going to be thinking more about this sort of thing. And yeah, so fire brakes. So, basic design process. So, basic design process for a wireframe at a very kind of simplified level is you've got some wireframe object you want to make, in this case it's beach ball. You represent that target as a graph, and you find some optimal route for the scaffolding strand through the graph, and then you locate the states. It's just an Euler circuit if the target happens to be an Eulerian giraffe. If it's not, you need to do some fuss. We're assuming a circular scaffolding strand. And I'm going to assume that any adjustments necessary have been made, augmenting edges, edges that will be duplicated, whatever you needed to do to make it Eulerian and traceable. Eulerian and traceable. And all the graphs that we're looking at are Eulerian. They're connected. All the vertices have even degree. There are constraints on the scaffolding and staples. Now, taking a step out in magnification from the talk that we just saw from Simon, where he was actually looking at the intermediate and stuff around the junction. Intreaving and stuff around the junctions and how the DNA strands twist around each other. I don't care. All right, on a deep level in my heart, I care. But for here, what I'm caring about is just where does, grossly, where do the strands move through space? And in general, yeah. Yeah, the each edge is going to be covered once by a scaffolding strand, once by a staple strand in opposite directions. And you don't want those patterns to either try to interweave or to separate at the vertex. Or either the thing won't form, might have difficult. Form, might have difficulty forming. As we've seen, we've got some pretty sophisticated tools for making strange things happen at vertices. But also, if they disconnect, won't get your target. You'll break apart. So, but these targets are becoming very complex. And that means that the topology for them is. For them is becoming increasingly complex. And you've got a circular scaffolding strand, which isn't knotted. You know, unless of course you knot it. But anyway, bottom line is we need to be able to control knotting in those government strands. So So, this means that the DNA application has opened a new direction in mathematics, which is our knotted Eulerian circuits, these spatial graphs. Now, at the end of the talk, I kind of put it to the end in case I ran out of time. There's a long history for looking at something called intrinsic knotting. This is knotting of cycles in graphs. Talking about circuits. Talking about circuits. We're going to cover all the edges exactly once. And the reason is: suppose this is your target, and the way to read this figure is the lighter the vertex, the closer it is to your face in space. Dark ones are pushed to the beginning, generally kind of followed faces. If I did that and I said, oh, there you go, and I. Said, oh, there you go. And I gave a design like this to the lab that could not form from a circular strand of DNA, circular scaffolding strand, going to trap oil knot here. So, I'm going to look at this problem in two settings, two kinds of spatial graphs. Two kinds of spatial graphs. One special kind of spatial graph are graphs that are embedded on surfaces. DNA is directed, so these will be oriented surfaces. And the graphs are cellularly embedded on the screens. And then the graphs in space. There's no a priori surface sitting underneath them. Although, this is an open question for any. This is an open question for any hardcore topologists in the audience or somebody who may have seen this before. If I give you a spatial graph, does there automatically exist some surface embedded, not immersed, embedded in free space that lies underneath it? So that this arbitrary spatial graph is. This arbitrary spatial graph is cellularly embedded on the surface. As far as I know, I couldn't find, we looked pretty hard in the literature, it came up empty. As far as I know, there's someone whose dissertation is almost done who's got some partial answers to this, but that's the state of the art there. All right, so. Alright, so, whoops, okay. I'm going to start with the cellularly embedded graphs because there we've got something very nice going on, which is there's something called an A-trail. There's a vertex, and a trail can come in and go out by following a face on a cellularly embedded graph. If I'm on a surface, I know who my right-hand and my left-hand neighbor is. And I'm on an oriented surface. Okay, and I'm on an oriented surface, I know which is which. So if I come into a vertex, I tell myself I can only go out by turning sharp right or sharp left. I can't go across the street. Those kinds of circuits have been heavily studied. They're called atrials. And here is an example. There's an augmented cube. So it's a cube that's been made Eulerian. It's on a sphere. On a sphere, and there is an A trail in the embedded graph. Okay, it's an Euler circuit, covers all of the edges exactly once, but every time it comes into a vertex, it only turns left or right. No crossing. And these give in some sense ideal potential routes for scaffolding strand. Because if you do something like that, suppose the red is your scaffolding strand, there's a nice Is your scaffolding strand, there's a nice natural place to stick your staples. And these are the bad situations I said before. We don't want any of the staples and scaffolding strands to be crossing over. Okay, or trying to interweave, the strands are trying to interweave. And also, if they disconnect the graph and form kind of two components at the vertex. And form kind of two components at the vertex, the structure is going to come apart. So, in a cellularly embedded graphs, there are exactly two, at every vertex, there are two possible transitions, one that you can use for the A trail and the other for the staples, or vice versa. Okay, so having an A trail, having a graph that's on a surface, and having an A trail is a nice thing. An atrio is a nice thing. Meshes, surface meshes are nice examples of these. And there's an example on the cube. Okay, so the cube, this cube, this is a triangular mesh of the sphere. It's kind of like that bunny rabbit you saw as a triangular mesh of a bunny rabbit. And a trail with little purple daple strands. Just look. Just look. The key to cellularly embedded graphs and A trails is checkerboard coloring. So it turns out that A trails in a checkerboard colored graphs bound a disc, they basically end up tracing a black region made up out of the Made up out of the parts of the graph that are shaded. And because it bounds a disk, it's automatically unknotted and light is good. Okay, so some results for checking. The problem is that not all cellularly embedded graphs are checkerboard color. If you're not, you can get in trouble. But if you have a checkerboard color, Trouble. But if you have a checkerboard, colorable graph, and a torus, it has an unknotted A trail if and only if it contains an A trail. But they don't all contain B trails. And there are infinite families of toroidal triangulations that are called origami constructible. Every single atrial they have is unknown. Life is as good as it gets. But there are also some that. But there are also some that don't have any atrials at all. We've classified triangular and rectangular grids, which covers all the toroidal meshes. Yeah. And I'll come back to this later. If you don't worry about what you're embedding in space is, every Eulerian graph can be embedded in space with an unknotted atrial. Trail. And there's quite a bit known about A-trails that can already be leveraged. So every A-trail in the plane is I've got it. This was generalized shortly after that paper came out. Mohavan, Yoneska, and Sato, talk to them in person if you want to follow up on this. They relaxed these A-trails to non-crossing Euler circuits. So they don't worry. They don't worry as much about going across. But what's nice is: so, this is a non-crossing transition, it's not an atrial transition. This preserves checkerboard colorability, which was a lovely observation. And it means that checkerboard colorable graph embeddings will have unknotted non-crossing Euler circuits that can potentially serve as scaffolding strands. Scaffolding strand roots. And being not checkerboard colorable just means life can get very ugly. So if you're not checkerboard colorable on the Taurus, you've got some unmetting where all of your atrails are, all of your, sorry, all of your non-crossing Euler circuits are not. So yeah, you can get yourself in a mess that. So, yeah, you can get yourself in a mess that you can't get yourself out of with the wrong choice of graph. All right, so there's already been kind of some nice foundation laid for graphs on surfaces, which cover, like I said before, a lot of the kind of natural shapes that you would make. Any form that you've put a mesh on top of falls in that category. But geometrically embedded graphs are another story. Story. They also generalize graphs on surfaces. And you need an analog for these kinds of graphs that aren't necessarily surface embeddings. I'm already over time. Give me two more minutes? We still have time. A couple more minutes? Okay. All right. So This graph is something that we call strongly origami knotted. So every one of its knot disconnecting Euler circuits is going to give you a knot, right? If I do pair. I do pair those guys. This is going to disconnect the graph. That's no good. If I pair these guys, again, I'm using this convention that the lighter it is, the further out it comes. So these five vertices lie on a plane. And so that crossing is not allowed. And if you do the only other possibility. And if you do the only other possibility, bearing the two left and right ones, yeah, you get a knot. So this has got no solutions. All right. On a surface, you know exactly what we mean by good and bad turnings as you come into a vertex. Come into a vertex. But what does that mean if you've got something like center vertex of this tetrahedron? Well, we know we've got some things we don't want to have happen. We don't want this to happen. We don't want to create some kind of gratuitous linking in there. Do you have any idea how hard it is to mathematically formalize? Mathematically formalized. Just don't be stupid. This has just taken way more time than it should have, but we don't want this to happen. And the other thing that we want is some kind of analog for not crossing when the neighborhood of the vertex is not planar. On a surface, if you zoom in enough, it's effectively on a planar. If you zoom in enough, it's effectively on the plane, and you know exactly what crossing means. Here, what we want is: I don't want a front guy and the back guy and the left and right guys to be put. They kind of cross over at that apex. So, we talk about something called non-crossing cocyclic transitions. I stick a sphere around the vertex and I And I look at the points where each of the incoming edges hit that sphere. And then I'm going to draw the minor arcs. So every pair of points on the sphere that aren't antipodal will define a minor great circle arc. Okay? And what I want is I want a cycle of those minor arcs that hit. That hit all of the edge end points. And that's going to be my analog of the A trail with the stables. On a surface, there's only the two possibilities. There are only two atrails that are transitions at every vertex. Every vertex. In these settings, there can be more, but more flexibility. And also, I can't prove it, haven't really tried all that hard yet, but I strongly suspect that if your degree of the vertex gets too high, you can't do it, period. You won't be able to find a cycle of those. Um, minor arcs. But once you've got that idea, an O-trail, an O-trail is a, sorry, is an Euler circuit using non-crossing cosical transitions at each vertex. These legal smoothings at the vertices. So, and it generalizes a trail. And it generalizes atrails. And there's an example. And because you've got a whole cycle of kind of alternating colors, that gives you one color for your scaffolding strand, one color for your staples. So there's a scaffolding strand, and then at each vertex fitting in between them is a really nice place to put your staples. Many questions. Many, many, many questions now. Characterize spatial graphs with unknotted O-trails. You first need to know when O-trails even exist. Does your graph have one? Might not have one. Do they all... Do you want them all to be unknotted? Is it enough for there to be at least one unknotted atrail? I would give you a possible design strategy. You have a possible design strategy. What do you do if all of them are knotted? And you characterize graphs where all the o-trails are knotted. Okay. Then very quick. Every graph has some embedding because you can just take any Eulerian graph and an Euler circuit and use that Euler circuit to define a Define a cellular embedding where that Euler circuits one of the bases. And that will bound an unknotted disk and therefore be unknotted. So, but just as with intrinsic knotting, flatness can help. So a flat graph is a graph where every cycle is the boundary of some disk in three-space whose interior doesn't intersect the graph. Intersect the graph. So if I take, for example, this 5 cycle here, I can make kind of a dome on top of it. That's a disk that doesn't intersect. Yep. So no linked cycles and no knots. So if you're four regular and flat, every Every A trail, I mean, every O trail is going to be unknotted. So you first have to show that you'll always get these, and then that graphs buttons unknowingly. Alright, conversus false. But graphs where every O trail is unknotted, but the graph isn't flat. But the graph isn't flat, and that's unclear. And then it's just a huge flag right now. Look at these for cellularly embedded graphs. You can look at it for straight-edge graphs, general spatially embedded graphs. What are some noted missive parameters? Okay, so that's basically it. I will just say that it's also fundamentally different from the Fundamentally different from the intrinsic knotting that's been discussed previously. Classic result: every 3D embedding of K7 has a knotted cycle. But yeah, forensic knotting is cycles, origami is circles, circuits, and needs a specific spatial embedding. Intrinsic modding goes over all possible. Intrinsic knotting goes over all possible embeddings. Yeah, and there's K7 on the torus. It's got a knot in it if you look at the cycles, but every single A trail is a knot. So that's it. Thank you. There's time for questions. 