A bunch of different approaches based either on mathematical modeling or on feedback control to both design and prototype gene networks. Well, we have been discussing different types of gene networks over this couple of days and for sure over the past 10 years or so, we became better and better at designing and engineering gene networks, which can perform very complex functions into cells, for example, for recording events or for biosynthesis production, but still there are a lot of But still, there are lots of urban challenges, and over the next 20 minutes or so, I will be discussing a couple of them. One for sure is the competition for resources and gene expression burden. As we know, burden can happen when big circuits are expressed into different types of cell types. And the second issue I will be discussing is how to prototype gene circuits, in particular, how to prototype their How to prototype the robustness of gene circuits with specific temporal dynamics, such as vastable dynamics or oscillations, to variations in the physical parameters. So, regarding the first topics, I will be discussing a couple of approaches we have been exploring in my research group in Bristol. The first one is about using the so-called wholesome models to predict the behavior of cells upon gene secret integration. And the second one is more about our. The second one is more about how to build an architecture of a robust gene network. And I will be discussing in philical and experimental results about multicellular but clear consortia. And I will then conclude my talk about proposing a new completely model-free approach that is based on feedback control to prototype non-linear dynamic subgene circuits using the bacterial topple switch as an example. Let's start. Let's start with the first idea about using all cell models to predict the behavior of gene circuits. In these slides, there are mathematical models we are already familiar with. So we have the stable turbo switch, we have the pressulator, and this is a gene network I worked on during my maybe at the time in Italy. What we usually do to describe and predict the dynamics of these small scales. And predict the dynamics of these small circuits is to write down a bunch of differential equations. They can be ODs, SDs, and so on and so forth. They're quite standard equations. Usually, nonlinearities are captured by Michelismant and Solid functions. And we can describe in different ways the dynamics of the genes in the circuits. These models are great, also, for example, for the toggle switch in predicting the parameter region that ensures that the systems behave. Ensures that the systems behave as a bi-stable system. However, these models are very specific for the circuit that describes. So, if, for example, we re-engineer some parts of the circuits or we transduce them in different strains, at least we need often to refit the parameters. The other thing to consider is that they just describe the genes that we are adding to the cells. They usually don't describe everything else that is anyway happening in our cells. And that can be Happening in ourselves. And that can be important for the functioning of the circuit. So, something we have been thinking about over the past few years with my colleague Ker Gibson in Gristol is about instead of just using these small models to use much bigger models, the so-called whole cell models that the systems biology community has developed to redesign genomes. All cell models aim at describing all the known processes of cell and. All the known processes of cells and are describing all genomes as well as all molecule, all molecules into cells. These models are dynamical models, they are mainly based on differential equations. I will go into the details of the two what some models developed today shortly. And also the IMF modeling the cell cycle, so cell division, and stochastic effects. And the idea is that once these models will be perfect, they're not perfect now, there are processes missing, but once they will be complete and Be complete and hopefully we will have at some point a mathematical digital to know Sun. We think that by embedding these models into both the design and learning phases of the Sun B test learning cycles, we should make the design of different new circuits, for example, to our biosensors or to be used for bioproduction, both more robust and more predictable because that will be based on. Predictable because they will be based on models of OLSAs. Let me start showing you some results we had in the past using the very first OLSAR model that was developed 11 years ago by the group of Marcus Covert in Stanford. It was developed for the bacterium Metoplasma genitalium. It is a very, very tiny cell, but the good news is that there was lots of data. So what they did mainly manually at the time was to pull together Time was to pull together data and parameters from thousands of publications, and they came out with this differential equation model that is multi-scale. So it describes the metabolome, the genome, the transcriptome, and the proteome. There are actually within this OLSA model 28 cellular sub-models that describe the processes that are represented here in this cartoon. I don't have much time to go into the mathematical details, but again, it's mainly differential. But again, it's mainly differential equations. There is some stochasticity, and the metabolic model within the OSAR model uses FBA. Importantly, it describes the function of every known gene product. So it describes mathematically 401 of the 525 genes of genitalium. And in the original publication, its accuracy was tested versus experimental single gene of cloud essentiality, and it was about 80%. So, what we did So, what we did a few years ago was to use this OT cell model to predict minimal genomes. We did it both because we like small cells, we think they can be a very useful tool to understand rules of life, and also because having the model that describes almost all the genes in the genome can be useful to predict how gene essentiality depends on the context of the genes that are left when we start removing genes. Joshua and Ollie, two former catches in my group. And Ollie, to former catching in my group, they developed two different genome-designed algorithms. Very briefly, they both try to maximize the number of genome codes that still allow us how to divide. Minesweeper is deterministic, is basically a dividing conqueror algorithm. Gamma is basically a genetic algorithm. So it was much slower to run, but it allowed more widely the parameter space, where parameters in this case were the number of genoc. Of genocounts. And this is what we predicted. So what I'm showing here, the other cycle is a wall-type cell. I'm also representing the model genes, the gray ones. Light blue is the genome minimized using Minus Weeper, the deterministic algorithm. The smallest one, Gamma, is the one that we predicted using Gamma, the genetic algorithm. What is interesting, or I think, although these are just Although these are just simulations, is both the fact that we predicted a cell, the gamma one, that's smallest than the smaller genome ever engineered in the lab, that is C3A, that has been developed in the Craig Venter Institute. What I also think is interesting, looking at PCA results here, is that the two predictive genomes are very far away. So it looks like there are different routes to minimize genomes. And this is something that. Genomes, and this is something that just by biological knowledge it would not be possible to find out. This is previous work. We want now to start doing something in the lab, and also we are keen to work on gene circuits. The good news is that now we can work with the OLSA model for E. coli. It was developed by the same group in Stanford. It's very similar, mainly differential equation, a multi-scale model. As you can guess, E. coli is a bigger cell, so the number of equations and parameters. The number of equations and parameters is much higher. Good news is that this model can also represent cell division, so we can simulate multiple generations of cells. It's better coded, so we still use the cloud or cluster, but it's much faster to run this model as compared to the gene-21. However, it just represents less than 50% of the annotated gene, so it's not complete from this point of view. Still, we think it can be useful to try to use this model to make predictions. To make predictions, and among different projects we are running now in the group, I would like to show you some preliminary data that Joanna generated recently. So, both for the Mycoplasma and the A.Q.LIE models, originally we could just delete genes. So, we are now collaborating with Marcus in Stanford to also include the gene of kin functionality in the model. And we have been doing this using this biosynthesis pathway just for a test. It is a pathway. Just for a test, it is a pathway that produces biolacine, and there are five genes, for example, that can be put under the same promoter or multiple promoters for production of biolacine. So, what Joanna did was to simulate an integration of these five genes into the model with all of them being driven by the same promoter. What you can see here are the simulations average protein molecules. This is the average across. This is the average across eight generations, so eight cell divisions, when the basal expression rate that would be basically the strength of the promoter goes up. As you can see, the expression of all the five genes we are expressing increases, but for when the strength of the plumoder is too high, also the growth rate goes down, which is something that makes sense. You can see similar results here also in terms of cell mass. So here she's showing in time what happens when. Showing in time what happens, for example, to the molecules of Value A, the first of the genes we are overexpressing in the model. And for high basal activity of the promoter, these are the yellow and green line, the cell mass goes down. Now, the beauty of this model is that we can ask you to model why this is happening. So what's happening, why the cells, when we express these genes too much, stop to grow and the cell mass goes down. This can be done in a number of ways. This is very preliminary, but for example, you are in some. For example, Joanna had some PCA looking at the first time point of generations two to four. And as you can see here, these dots that basically represent what happens when the expression of these exogenous genes is very high, they're quite separated from the other ones. We can also look at the variables that basically separate this from all the other ones. And this variable includes molecules such as ATP, ABP, carbon dioxide, and so on and so forth. So, again, this is preliminary. Uh, so again, this is preliminary. What Joanna is doing at the minute is also to integrate these five genes with the metabolic model within the ulcer model to have more precise predictions. And then the next step will be to test these predictions in the lab. This is about the first approach that we are using to predict and design circuits into cells. Second one here, the idea is quite different. So, again, this is about competition for limited resources. But the idea here is Here is more about how to design controllers that allow them to work in a robust way, also when there is possibly competition for the resources if the biocontrollers are implemented into a singular cell population. So, in this case, this is more about the design of controllers in a different way. And this idea that we had a few years ago with our colleagues in Bristol was to design biocontrollers that are not implemented into singular. Are not implemented into a singular cellular population but into two populations. So, what actually we have got here is a distribution of the components: so, computation, sensing, and actuation within two several populations that we name the controller and the target. For sure, we need feedback between the two of them. And the idea is that if this works, the target population should be able to draft a control reference provided to the controllers. We started to test this. We started to test if this was going to work during some mathematical modeling. So we developed a differential equation model where we describe different parts, enabling this communication with inducer molecules between controller and targets, and also the sensing of the controllers to an external reference provided to them. And we perform some agent-based simulations. So, what I'm showing you here are simulations done in PC. You see, blue are the controllers, red are the targets. And at least from the simulations, it looks like the controllers that are, the output of the controller is plotted here, are able to track this control reference that is provided externally with a user molecule to the controllers. These are simulations. What we are doing now is to perform experiments. So, David, he just graduated with us. He designed. He designed these gene circuits in the controllers and in the targets. So, first of all, we need a comparator in the controllers that allows the controllers to compare the external reference, in this case it's a PTG, and the molecules coming from the target 3C6. And we did this by employing a sigma-anti-sigma pair. This is basically an anti-detective controller. Then we also need an actuation, and this is done by And this is done by Lasi. So sigma is activating Last Psi, and this in turn allows the production of 3OC12, which activates LASR in the target. So this is how we are basically enabling the communication between controllants and targets. And finally, because the loop via the production of 3OC6 that is produced by Laxi and is in turn activating expression of the anti-sigma in the controllers. The in the controllers. So, overall, this is a negative feedback loop. Again, we can also sense the external reference, and we have a GFP in the targets. It allows us to have what happens when you start playing with the various drugs. The expression of RFP in the control cells is under a constitutive promoter. So this would be always on just to distinguish off-controllers from controllers that from off-targets, basically. So this is unpublished data. Is unpublished data. What we did first of all was to test the individual population inductions. Firstly, with the controllers, so this is closatometry data, is a version of the controller that has a GFP here, so that we can basically measure what happens when we induce them, both with IPTG and 30C6 without co-culture with the target. And the response is as expected. So basically, IPTG is activating LaSalle and the GFP here because it's driving expression of the signal. Because it's driving expression of the sigma, vice versa for 3OC6 because it's activating of the sigma. Similarly, targets when cultured by in their own on their own, upon increasing doses of 3OC12, we can activate GFP. So individually, they work. What happens when we mix them? We did a comparison of an open loop architecture with a closed loop one. So the closed loop one is the one I showed you. The open loop is the same, but the controllers don't have the The controllers don't have the anti-sigma, so it means that basically this link here is broken, and so in this case, everything is just happening in OpenLoop. Davide did the various facts experiments. So first of all, he performed 10 courses. In blue, there are the experiments of coculture in open loop. In red, closed loop with varying levels of IPDG. So, first of all, as you can see, the levels on the right are generally The levels on the right are generally lower than those on the left, which makes sense because, in closed loop, we are activating the negative feedback loop, so everything is lower. And also, what is important is that the noise, the variation across experiment is reduced. So, we believe that the negative feedback loop is also allowing a reduction in the variability across different experiments. Also, when we compare just the value at city state, so collected at six hours in open and closed. Hours in open and closed loop configuration for different values of a PTG, we not just see that again levels are lower and that the variability is also lower, but also that the trend is much more linear. That is something that is desirable under this survey. What David is also doing at the minute is to try to understand if the closed-loop topology also enables higher robustness of the surface to vary. Of the circuits to variations in the numbers of cells that are controllers and cells that are public. Finally, to conclude my talk, I want to mention something else we are doing in the group to address challenges associated with the prototyping of non-linear dynamic subject metrics. What you can see here is a recent implementation of the total switch. What you usually do when you have a system that you would like to show specific dynamics, in this case, by stable dynamics. Dynamics, in this case, by stable dynamics, is to write down a mathematical model of the system, for example, differential equation one. And then, once you have some parameters, some values for these parameters, what you do is usually to perform a continuation analysis. So, in this case, we would expect that there is a range of your parameters where your system is best stable. And if that's the case, then this will be the range that you will use in the lab to be sure that there are two stable city states separated by an unstable branch. States separated by an unstable branch. This is great, but if there are uncertainties in the parameters of your model, also these results might not be completely reliable. That's why we are proposing a new approach that instead is based on feedback control. And if the controller is model-free, it should be allowing to basically get full continuation plots even in the absence of a mathematical model of the system. Mathematical model of the system. How to do this? Marcel has been discussing this. So, the idea is to use external feedback control. So, in external feedback control, all the control action is placed outside of the cells. So, if, for example, we want to control engineered equalizers that carry the topical switch, the idea is to do time-lapse imaging. In real time, for sure, we need to quantify the output, for example, via segmentation, and then we close the loop by changing the drugs that we provide to the doctors. Changing the drugs that we provide to the dog reach, for example, IPTG, so that we can track an extra map control reference. This is the idea. We have the platform to do that, but how to do this in such a way that we can obtain continuation curses without a mathematical model of the system? Well, here, this is a simulation, we don't have experiments yet, but in principle, it should be possible if we design a control reference, is this gray line here that contains both. Here that contains both the stable solution, so the two stable steady states iron law in this case for tetar, but also the unstable solution. So, if our controller, which could be model-free, this is a simulation with the proportional controller, is able to identify IPDG values that allows the tetral signal to explore all DCB states, also unstable ones, then in principle offline, we should be able to reconstruct the full Construct the full continuation curves containing both again the stable and unstable solutions. We didn't do the experiments yet, but we have performed a bunch of simulations. For example, these ones I'm showing here. Here, again, we're using the sim, our agent-based controllers. We are simulating what would happen if we were able to control a single cell in a device that would be something like the model machine. And we are also using the aristochastic model of the toggle switch. So, for sure. Of the toggle switch. So, for sure, the results are more noisy, but it looks like if we were doing experiments at single-accelerated control, we would still be able to reconstruct the full curve. These simulations are done with model-paid control, so we are using the model, but it's a much simplified model as compared to the full non-inter one. We also perform simulation with the proportional controller, it's a bit more noisy, but it should still work with a completely modified approach. Finally, we also Finally, we also try to understand if control-based continuation could be used for parameter fitting. So, what we did was to try to see if we could fit 14 of the parameters of the original model at the top of each. First of all, we simply performed a parameter sweep. So we randomly changed the PTG. And what we found is that the point we retrieved were mostly those either in the high or low C state. This was both simulating the aggregate model. Simulating the aggregate model, the stochastic version, and performing the agent-based simulation in the SIM. Instead, if we were collecting points using CBC, what we saw is that we were able to find lots of points lying here, basically, in the unstable branch. And this was shown both, again, with the aggregate stochastic model and with the HLPS linear. So it looks like CBC should also be able to help at the time of getting good data to fit non-linear models for systems of this type. Linear models for systems of this type. So, to conclude, we are investing a lot in my group in all cell models. We think they have lots of potential because they can describe entire genomes. But at the moment, we just have them for a few organisms. These models are not perfect. And also, these models are quite complicated to analyze. I didn't show other stuff we're doing, but also we're doing a lot of machine learning and surrogate modeling to try to simplify both the run and the The run and the running time and the analysis of these models. Regarding separate genetics and control-based continuation, it can be model-free, but the experimental platforms to do this type of experiments are not available to everyone. And usually, you can just control specific processes or two, three outputs at a time. So there are limitations. Ongoing work, as I mentioned, we are going to test soon predictions of the Oxen model in the lab regarding synthetic biopathy integration. Synthetic biopathways integration. Regarding multicellular control, we are going to do further testings and I would like to explore extensions for mammalian cells. And finally, CBC also, we should certainly be testing the mathematical predictions in the lab. And we are also working in CIRICO for extending the methodology for oscillators. And well, with this, I would like to conclude. For sure, I thank all the PhD students and postdocs in my group, a wonderful team of collaborators. A wonderful team of collaborators here in Bristol and abroad, and all of you for your attention. Thank you. Do we have any questions from the audience? I have a question for Lucia. It's on the whole genome. Can you go back to the slide that shows? Can you go back to the slide that showed the whole genome model for E. coli? This one? No. Yes, this one. One question I have for you is: are you guys looking at as more genes are, I guess one of the things that I'm going to do? I guess one of the questions I have actually about this model, maybe this is a background question that I should ask Marcus, but I'll ask you if you don't mind: is, you know, why is it that only 43% of the genes are represented in the model? Yeah, that's the question that Marcus always gets, but I will answer for him. So they are well annotated, but these models, you know, it links processes at different levels. So maybe the gene is well annotated, but then there are links that are missing. But then there are links that are missing, for example, about how the gene is linked to the metabolic networks, or maybe it is not known how the genes behave in different media, because this model also captures how different results grow and behave in different media. So the fact that they're well annotated doesn't mean that they can write all the other equations in the model that created a gene. That's why they're not there. Said that they are, we are not working on this because it's a bit. Because it's a bit out of the scope of the stuff we do, and also because they've been doing most of these things manually. So it's a bit difficult, to be honest, I think, for other people to do this type of changes. The group of Marcus is working on this a lot. So they are planning to have a much, much more complete version within the next few years. It takes time because this type of models, again, they are fully mechanistic. And both the data aggregation and model derivation, parameter fitting, everything has been done most. Underfitting everything has been done mostly manually. What we are doing here, apart from trying to use this models for genome design, we are trying to use machine learning, as I mentioned, for analyzing the outputs, for reducing the simulation time. And also, I would like to explore the idea of using machine learning also for the development of these models. So, having a different set of models which are not fully mechanistic, which are in part data-driven and in part mechanistic. Even and in part mechanistic. Because I have to say that we have just started to work, as I mentioned, on changing the model for allowing gene integration. And we are doing some small changes to the metabolic model. It's quite tricky because it has been really, really developed ad hoc. So I think that enabling some automation in the derivation, at least of parts of the model, would also increase its robustness. Thank you. Thank you. You got another question from Howard Salas. Hi, great doc. If you introduce a genetic circuit into a whole cell model, is it possible to calculate the different types of burden, let's say, on the transcriptional resources, on the translational resources, and then predict the effect on growth rate from your different feedstocks? Are we here again? Yeah, yeah, yeah. That's a good question. Yes, we can do that with the model. We are not doing that yet. That we are not doing that yet because for two reasons. The first one is that the way we insert it is now we are inserting it in the chromosome, while really we will insert it on plasmids. So before we are going to the experiments, we would like a proper representation of the experimental implementation we use. And secondly, what is missing there is coupling those five genes to the metabolic model that is in the ulceral model. And that's something that we have to do. For example, the precursor, Example: the precursor tryptophan is something that is there in the cells. So, we didn't do yet because this representation is not the final one yet, but once we will have the final mathematical representation, we can do that definitely. We will be because that's the beauty of a cell model, because you know, most of the models in the literature that explore burden and competition have two, three questions for resources, right? But they cannot specify which processes really there. Is really there. So you can do that with the model. And something else that I would like to do, once we will have again a better mathematical description of genome integration, either on the chromosome or with plasmids, is also to then use the model to predict how to cope with effects you wouldn't like to have. For example, if you observe a certain metabolic burden or gene expression burden, but anyway, you know that you need to over-express those genes at a certain level, can you maybe knock out other genes? Level, can you maybe knock out other genes to prevent that effect? And again, these are things that we can do with the model because it doesn't have all the genes true, but it has genes there. It has got that kind of representation at the genomic level. Thank you, Theo. Great. Thank you very much, Alicia. I appreciate it. All my time was. Stop the recording. Thank you, everybody, that persevered to the very end. And we're almost there. Almost there.