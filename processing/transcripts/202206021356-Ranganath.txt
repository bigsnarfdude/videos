Okay, so I was talking about these problems before with threshold delays. If you've forgotten what those are, that's great, because I'm not going to go back. They're an example of distributed delays, and I've decided I'm going to talk about distributed delays today because several of you have used them or had them hidden or should be considering them. So if you're a nurse, this is not for you. I'm talking more to the modelling people. I'm talking more to the modelling people this afternoon because I figured those are the only people here I can actually say something useful at the minute. So here's an example of a distributed DDE. Basically, you have the rate of change of U depends on, it can depend on the current time, it depends on the value of U, but it also depends on U over previous times from the current time key back as far as you want to go. And then what you do is you You do is you weight this integral against some probability distribution. So g is non-negative, the integral of it is 1, and this basically says that the average delay is taught. And so the dynamics of u are determined by distribution of previous values. You can imagine that this might be a kind of good setup for DA. Now, there are several problems associated with this. We're going to have to choose our probability. We're going to have to choose our probability distribution. And also, the numerical packages for simulational bifurcation detection that are available off the shelf don't tend to solve this kind of problem. And one of the reasons is, is there are kind of infinitely many variations on it. So nobody's actually written down a kind of a specification of a general form that people will be happy with to write software. So currently, it's kind of done problem by problem. So let's choose a So let's choose a distribution, and many people choose what they call the gamma distribution, although nearly all of them are actually using an Erlang distribution. So it's given by this complicated formula over here, which you can ignore. What I've done here is I've given some examples where I've set the average delay to be 3, just arbitrarily, and then I've chosen different values of the power p here. And as I vary, because of the And as I vary, because of the mean delays given by P over A and the standard deviation by this, so when I change P, I also change A, so I keep Tor the same. And then as P gets larger, the distribution gets more and more concentrated at its average value until in the limit as P goes to infinity, you get a delta function. So, what that means, the same thing again here, is this distribution goes to a delta function. If you put that in. A delta function, if you put that in this differential equation, then this integral caps is just the u of t minus 2. So the limit of having an infinite power in this distribution gets you back to the discrete delay equations we were considering before. So in some sense, this gamma distributed delay differential equation is an approximation of the discrete equation. Okay, that's all I want to say about the discrete delay. Now I'm going to show you that this thing here. This thing here, which looks horrid, is actually an OD. So, the way this works is this probability density function has this nice property. If you look here, t appears twice, once in the exponential, once in this monomial term. And so you can differentiate this with respect to t using the product rule. And when you do that, really nice things pop out. So when p is 1, this t to the p minus 1 term is not there. So you get the. Terms not there, so you get that the derivative is this. And when you look at higher values of p, you get this. And this system closes if p is an integer. If p is not an integer, then they don't join up, but if p is an integer, they. What do you mean closes? Well, I mean that you terminate. So if I start, say, yeah, so if I start with this distribution. Distribution here with some p, I have this formula for how it's going to evolve, but it depends on p minus 1. So then I can write down the formula for p minus 1 and all the way down until I get to p equal to 1, and that doesn't depend on anything else. Whereas if p is not an integer, then you could have p is 3 halves and you go to p as a half and you keep on going. So this distribution is a little bit different depending on whether p is an integer or not. Different anywhere is an integer or not an integer. So now let me show you the famous linear chain trick. So here is my horrible-looking distributed DDE and then I'm going to define t sub j to be this quantity here and then immediately the thing here is just t sub n and already this differential equation looks nicer, right? It's u dot is f of t even t sub n. But the tj here, because of Here, because of that property, when you differentiate this probability density function, you can do the same thing with the integrals as well. It works out exactly the same way, and you get this nice formula. So, this ODE system is exactly equivalent to this distributed layer differential system, provided that the power in here is an integer. The integer. Okay, but you get some extra things here. If I just write down the ODE, the delay isn't there. You don't see it. Unless you know, well, you kind of do see it because if you know anything about linear differential equations, you see that this A is a rate. One over the rate is the delay. So since there are N compartments, you get that the average delay is N over A. But you don't get to see what the standard deviation is. To see what this standard deviation is, unless you think of it in terms of the problem, it's a density function. This is a very old technique, it goes back to the 60s. Vogel was probably the first person using it, and MacDonald in his book in 78 gave it its name. And it's usually used to turn the horrible-looking equation into the nice one. You can use it to go the other way, though. Now, the compartment models have a really long history, go back to McKendrick 25, and in 25. And in a lot of applications, so the biologists don't like to write down the differential equations, so they just write down the compartments. Okay, and we saw one of these this morning, Jana showed us a compartment model. She had gaps between the compartments, I think, that were running across the bottom of her model on the first slide. So anytime you see that kind of thing, you're looking at one of these models. And so the fact that you're looking at delay uh distributed delay differential coefficients is completely obscured here, but it's what's going on in the background. But it's what's going on in the background. So the linear chain trick allows us to formulate the compartment model as either a distributed delay equation or an ODE. These models are finite-dimensional, but they become discrete delays in the limit of infinitely many compartments. So somehow it's kind of some finite dimensional approximation of your constant delay dd. Then there's this interesting thing, right? If you write it down as a compartment model, you require n to be an integer, but the distributed dd doesn't require n to be an arc. Doesn't require N to be an ostrogen. And then also, because we have both formulations, I'm not saying you should abandon your OVEs, but because you have both formulations, it's very easy to get very easy to get standard deviation and delay out. And then there's also this extra thing. There's no reason to suppose that the ratio of tor squared over sigma squared should be an integer. So if your data says it shouldn't be, then you would really have. Shouldn't be, then you would really have to use the distributed value function. What is sigma squared? And it's sort of the original formulation? Over A squared, right? I called it the standard deviation. I hope that's right. I get those stats terms confused sometimes. Okay, so it's a property of G? It's a property of G, yes. There are other distributions. There are other distributions that can be used, but they don't have such nice properties as gamma. Okay, this is Will's model, although Will told me it's not, because I asked him some questions about it, and he said it was written down that way, because that was how he was given it. So let's say this is the model that Will presented. There are some extra equations which I didn't write down. I just wrote down the ones relevant to the linear chain trick. So he had about three equations, and then this one, and then these, except he didn't have this, but N, he had N equal to. didn't have this, but n he had n equal to 3, and a was 1 over t d. But you can see straight away that this is the form for the linear chain trick. The delay in his model is n over a, so it's 3 times td. So the td they were using was the delay for each compartment, not the overall delay. And the standard deviation in their probability density function is 3 td squared. And I'm not sure why 3. I can answer that by telling you. I can answer that by telling you what Dave told me, and that is that n equals 2 was tried but didn't produce an oscillation, but n equals 3 did. Yeah. So you could do, you could, so the thing, what happens with these equations is you go to more and more dimensions as n gets larger and the probability density function gets narrower and it's been shown that that makes the system more unstable. So you're just, if you say n is 2 doesn't give you a slow. If you say n is 2 doesn't give me oscillations, n is 3 does, you're very close just beyond the onset. So you're looking at something that's kind of weakly unstable because that's what you wanted. You could go to a larger n, and it wouldn't change, you know, if you do it this the way I suggest, you won't change your torque, but you'll change the width of that formula density function. And some point I messed around with it and when I'm tagging the spy then yeah, I generally go to infinity. Yeah, I generally go to infinity, but. Yeah, once you go beyond, it probably won't. So, anyway, here's your equation as the distributed DDE. So, you can get rid of all of this gunk. You're basically using this equation with your A chain that you had before, but your A chain is this from the linear chain trick. And of course, really, all you're doing here, in this formulation, these are linear ODEs, you can solve them. So, essentially, this is a variation of parameters. This is the variation of parameters and solving is only ease to get make them go away. But this is another reason why this is a nicer formulation than this one, because you've actually removed some of the equations by solving them out. Okay, Will's not the only one with these problems. Here's a model that's actually quite famous in pharmacy. It's, I forget exactly what this is measuring now, but it's Exactly what this is measuring now, but it's a drug for some kind of chemotherapy, and there is a cytokine involved. We published a paper on this because we didn't like their model. But it was an interesting model because the rate constants in the compartments are not constant. So if G is a constant here, then everything goes through as before, but when G is not constant, then you get state-dependent rates. Then you get state-dependent rates, you get a state-dependent delay. Now, in the original paper, they wrote everything down with these compartments, and then they declared what their delay was, and they got it wrong. So, that's one reason why it's good to actually be able to write the equation down in both formulations, because you're getting the right delay. Yeah, so as I just said, for general GFT, the compartment transit rate is this, which is state-dependent. This, which is state-dependent, linear chain trick doesn't apply. We showed how to do it, and then my PhD student didn't like my solution, and he found an even better one. Here are some references relevant to the stuff I've been talking about. Here are my conclusions. Delays allow to simplify physiological modelling because you can take out some complicated process and just model it as the input and then the output sometime later with a suitable function. Time later with a suitable function modifying the input to the output. Delayed differential equations define infinite dimensional dynamical systems. These are tractable numerically and theoretically. Okay, just talk to the right person. That might be me. Happy if it is. Even scalar DDEs can display very interesting dynamics. And equations which depend on a distribution of past state values or where the value of the delay is discrete, but depends on the state of the system. The state of the system, they're also interesting and tractable. Thank you. So, actually, we'll listen to that. Second question. Where? So, there's Jack Hale's book from a million years ago. Yeah. That's kind of it. No, it depends what you're looking for. Okay, so I would not give a grad student Jack Hale. So, I would not give a grad student Jack Howell's book. Okay, the way to read Jack Howell's book is: there isn't a Jack Howell's book, there are about four or five of them. Starting off with an article in a journal, and the way I got through Jack's book was I read them each edition in order, because they build up in complexity. But that's not what's title, not exactly, and even a different number in the Springer system. I can give you the I can give you the details if you want. Springer now has everything online so you can get a hold of it all. But for a grad student, I get them to read Housemith's book, Introduction to Delayed Differential Equations for the Biological Sciences or something like that. I forget exactly what the title is. I can send it to you. Yeah, that'd be great. Because Howell's book's really good because Howell is like an analyst, but he talks to applied people. To apply people, and so he's written this kind of using the notation of analysis, but he doesn't go into the gory details of the analysis. So you can get an overview of what's going on and get to understand things without getting overwhelmed by bannock spaces. Also, he doesn't ever go into the numerics, which I think is a sticky point for a lot. That that's an issue with Howe, because How does Virginia Morex? He has. Doesn't do numerics. He has Don Jones in the office next door who does numerics, but Don refuses to use MATLAB. I've been to visit them. And so that's an issue. So when you teach people how to do this stuff numerically, you just do it. Yeah, first of all, I get them to download dgbif tool and then work through the demos. I mean, I learned to. Did you say that last part again? You get them to download. I've downloaded some software. DD VivTool. It's a package for doing bifurcation analysis of delay differential equations. So it's a bit like Auto or XPP if you know those, but for delay equations. DE what? DDE? Just brush your head down. Alright, so the things I use, I use, this is all in MATLAB. I use DDE23 for simulation. And for state-dependent delays, there is one called DESD, but this one is not very well written. I've got my own version of it. It has a problem. It uses the find command to find where the delay lies in the past. And the find command in MATLAB is defined for unordered data. And your time points on your intervals are ordered. So it basically searches every single possible interval to find the one. Every single possible interval to find the one you're in, where it doesn't need to do that. Yeah. So this one, if you increase your runtime, the runtime of the code goes as the square of the interval you're trying to integrate over, which is really bad. And then the one I use for biification analysis is called DDBivTool. This one is maintained by Jens Exeter, and he has it on Exeter, and he has it on the source storage. It's being constantly added to and updated. I originally learnt it by getting an undergraduate summer student and getting them to download it and figure out how to use it. And since then, most of my students use it. Can I ask another question, Tony? Yeah, the first thing that you started with, was this DDE with some kind of With some kind of PDF kernel in this integral. And then it switched to being a gamma. And so I guess my question is, how general are those? In other words, like what space of dynamics can you cover with the convolution and then the specifically choice of gamma? Well, okay, so it's ODEs, right? So it's finite dimensional. But be aware, you know, all of your numerical Know all of your numerical models basically when you once you disk tries and put them on a computer, finite dimensional. And nearly all of the dynamics you're looking for are as well, right? There's very few people actually working very high-dimensional chaos. Well, but somehow the discrete delay would be a delta function for the... Yeah, so the discrete delay puts the problem into infinite dimensions, but the invariant objects you look for in the dynamics are always finite. Dynamics are always finite-dimensional. And the physics is probably closer to that distribution as well. I guess it depends. I think it depends a lot, right? The conveyor belt example is the direct, right? Yeah, but for example, synaptic transmission is diffusion across a gap with a brownie motion. And it really just comes out. It's that first-order diffusion. Just comes out as that first-order gamma flu meter, yeah, right after that. And maturation is also not.