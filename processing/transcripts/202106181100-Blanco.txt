John Selberger, my supervisor. And so this has been presented last year to MFPS, and the paper is available. So you can find it, for example, on my website. And so, yes, it's about introducing bi-fi notion of polycategories and the relation to classical ML. And more generally, we will look at different ways of modeling classical multiplicative data logic. So, before going there, I will start with a quick introduction and talk about finite-dimensional banner space, which were a motivation for me to look at and introduce all these tools. So, I will explain to you why I was interested in it and what this perspective brings in the picture. Then I will get to some historical backgrounds. Some historical backgrounds and explain how this fits in with other works. And I will then quickly mention what we did before going into the details. And so yeah, finite dimensional Banas spaces. So the idea was to consider the category of finite dimensional Banas spaces and where the morphism are contractive linear maps or non-expansive linear maps. So there are the maps. So there are the maps that have norm lesser than one. If you prefer, that takes subunits to subunits. So if you fit this map with a vector of norm lesser than one, then you would get a vector of norm lesser than one. So they respect unit bounds. And the point of this map and this category is that it is a style to loose category and it is a proper style to loose category in the sense that it is not compact close. While for example, While, for example, if you think of finite dimensional vector space, it is a Startunus category that is compact closed, so where the tension and the power are actually interpreted by the same notion. And so to put this Startunus structure, you need to define basically norm on the compact cross-structure of vector space. So you need to define a norm on the dual, which is the usual dual norm, a norm on the internal om, which is defined by the operating. Internal UM, which is defined by the operator norm or functional norm. And then you need to define two different norms on the tensor projector vector space, one which will be the norm for the tensor and the other the norm for the part. And these are the projective and injective cross norm. And so the fact that this form a statinous category is well known and it's already documented in the seminal paper by Barr on statinous category. So it was one of the Start and muscle category. So it was one of the main examples. But when looking at this example, it is proven that it is a start and muscle category without mentioning what is the power and what is the norm on the power. And it is just kind of deduced from a demographic duality. And I haven't seen that much people talking about the fact that the norm on the pi is the injective cross norm. And I find that it is a shame. And I find that it is a shame because projective and injective cross-norm has this nice property that they are the external norm that you can put on the tensor project. So if you look at all the norms that you can put on a tensor and that are well-behaved in some sense, then this norm always fits between the projective and injective cross-norm. And so a question that I asked myself was, is this property related in some way with the fact that these properties With the fact that this provides the norm for the tensor and the power. And there is a positive answer to that. And this is by saying the projective norm is given by a certain push forward by pushing the norm of A and the norm of B along the map. So the bilinear map that is saying that A tensor B is actually a tensor product. So this is a map that takes two objects in A and B and sends them to that tensor. That answer. And similarly, you can define the power as being some pullback of the norm on A and B. But in order to be able to describe this pullback, we need to be able to talk about what are billenar maps and what are these kind of weird maps that have two outputs, so like pro-bilena maps, if you want. And this cannot be done in category theory, because in category theory, you just have Category theory, you just have objects, so you just have map between objects, and you need to go to what are called polycategories, where now the domain and codomain of a morphism are described by a finite list of objects. And so, this is what kind of motivated our work and defining this notion of push-forward and pullback in the case of polycategories. And from that, from the fact that the projective and injective norms are driven by push-forward and pullback. Norms are given by pushforward and pullback, we can get back this property. So, the idea of using polycategories to model classical multiplicative linear logic is not new. And more generally, to use multi-categories or polycategories to model logic, it goes back to Lambeck first for multi-categories and entrusionistic separate calculus, then Chabot introduced the notion of polycategories in order to look at models of classical. Look at models of classical sequent calculus, and then in the 1900s Robin Coquette and Robert Selly use polycategories to model multiplicative linear logic. And what is interesting when looking at this model from this perspective is that you get all the connective of multiplicative linear logic using universal properties instead of as some structure that you will put on top of your category. So I would get to. So, I will get a little bit more in the details of these things. Another line of work that kind of inspired us is this notion of up vibration of multi-categories that were designed by Claudio Ernida, and where he proved, amongst other things, that a multi-category has tensor projects, so it's equivalent to a model category, if and only if it's outside. If and only if it's outfibered over the terminal multi-category. And this can be generalized by looking at a notion of bifibration of multi-categories and where a multicategory is bifibered over the terminal multi-category if and only if it's a model close, it's equivalent to a model close category. So if it's a model of intuitionistic multiplicative in our logic. And so this work, the idea of this work was to extend that to polycategories. That to polycategories. So, what we did is first define a notion of universal polymap, which will be a notion that will encompass all the universal property of the connective of multiplicative linear logic. And a kind of unbiased way of thinking about these things and a unified way of describing the connective of multiplicative dinner logic in a polycategory. Then we define bifibration of polycategory. Defined by fibrillation of pre-categories where these are generalization, Cartesian pre-map, or generalization of universal polymap, and from that we can get quite easily that a polycategory is bifibered over the terminal polycategory if and only if it's equivalent to a start and news category. So that models of classical MLL correspond to polycategories by fibre. And then a third thing that I And then a third thing that I won't have time to really discuss in this talk is we define the notion of polycategorical Graphene deconstruction. And the point is that it gives us a way to connect to another view on models of classical MLN, which is by saying that they correspond to fobulous pseudomonoids in some tuple categories. So this is analog to the fact that monoidal categories are pseudomonoid in cat. So you can think of this as Cat. So you can think of this as a generalization. So it may be a good time to just stop for a few moments and ask if there is any question. Okay, so let me go into the details of this thing and explain how this works. So first, the notion of polycategory. So like I said, the idea is to allow for polymaps where the domain and co-domain. Maps where the domain and codomains are both given by a finite list of objects and not just objects. And the main point is that we have a notion of composition that is really done on one object. So you can compose just around one object and not multiple objects at the same time. So it makes it different from proper ads or props or things like that. And if you're a logician, then you might recognize the catch rule in logic. And this is quite connected. Quite connected to this notion. And so we will open up this graphically in this way, where you need to read this diagram from left to right. And so this is saying that the composition of F and G happens along this A object. And just for people that are a little bit familiar about this, there are different notions of polycategories, planar polycategories or symmetric polycategories. So you can Categories. So you can do all of what we will be doing in either settings, and this will work. So you don't have really to kind of think about this. And some examples of polycategories that will be of interest first is first the notion of terminal polycategory. So terminal polycategory, it has just one object that we'll call star and it will have a unique polymap for any array. Unique polymath for any average. So given n copy of the object and n copy of the object, I will have a unique polymath existing there. So in particular, for m and l equal one, I will have the identity. And then if I'm composing things, since I'm in a pre-category and I can compose, then this map should be closed by composition. Then if you start with a linearly distributive category, our start with news category, you can define a polycategory where the objects are the same and a Where the objects are the same, and the polymap from A1AM into B1BM will be represented by a map in C that goes from the tensor project of the input into the power of the output. In particular, if you take monodal categories, then you get a polycategory where the polymap goes from the tensor project of the input into the tensor project of the output. And so, for example, you get a notion of polycategory of vectors. Category of vector space, where a polylinear map will be just a map from the transerproduct of the input into the transit subject of the output. You could also play this game with Banach spaces and say finite-dimensional Banach spaces and contractive linear maps is a statonous category, so I can get a polycategory from that. But the main point is that you don't have to assume the status structure. We don't want to assume it, we want to deduce it from this political categorical. From this political categorical thing, so we want to define a polycategory without making any mention about what should be the right notion of norm on the tensor, on the power, or things like that. And to do that, we define this polycategory where the objects are finite-dimensional Banner space and the polymap or contractive polylina map, which is an extension of the notion of contractive linear map given in this way. So, a polylina map, so a map that goes from the TAM sub-project of That goes from the transerproject of A1AM into B1BM, where there is a transprojection of vector space. So, this is said to be contractive if it preserves subunitality, like in the linear case. So, what I mean by that is that if I'm giving fielding f with inputs that are all subunitals, and I'm trying to prohibit all the outputs using functional that are subunits. Using functional that are subjunital with regard to the dual norm, then this will give us a scalar, and this scalar should be subjunital. So this scalar should be of norm lesser than one. And so we can define all of this just knowing the norm on A and B and having a notion of dual norm. But we don't need a notion of projective cross-norm on the tensor project or anything like that. So now, when we have a polycategory, we can define what is a tensor, a par or a dual in a polycategory. And the idea will be for tensor projects will be to take a definition that is similar to the definition in vector space. So we'll say that a polycategory has tensor. If given two objects A and B, I can find a bilinear map from AB into A tensor B. And it should have a unique factorization property. Factorization property, but it's saying that pre-composing by this map is invertible. Similarly, we can define the power by a polymap that goes out of it into AMB such that post-composing by it is invertible. And finally, we can define duals in the usual way where we have a cup and a cup that should satisfy the snake identities. And so, Coquette and Sili prove that a polycategory that has all of this. Category that has all of these notions, so a two-time third polycategory individuals, is the same thing as a start and loose category. So if a polycategory has all of these notions, then it is the underlying public category of a starter news category. And so it will be the case for our examples of finite-dimensional banner space. And you could prove that projective, injective, and dual norms give you tens alpa and duals in this sense. But instead of proving it But instead of proving it directly, what we'll be doing is use some vibrational property, which is something that at least I find more intuitive. And to do that, first let me introduce a notion of universal polymer, where a polymer will be universal in one of its objects, so either an input or an output. And the idea is to generalize the notion for tensor and par. For tensor and par. And so we say that a map, a polymap, is universal in one of its objects if composing for this object is invertible. So this gives us some unique factorization property. And in particular, if you take, let's say, u there to go from gamma into A, and you don't have any delta one, delta two, then this will say that A is a term subproject of the object of. Of the object in gamma. And similarly, you can get the power like that. And so we call a polycategory star representable if it has all universal objects possible. And so we can prove that the tensor and the power are universal objects, but also the dual can be defined as a universal object. And this gives all the universal objects in the sense that if you want a universal object, you will be able to construct it from the tensor, the Construct it from the tensor, the pounds, the dual. And so, this notion of star-representable polycategory gives us a way to model MLL. So, maybe I will just pause there for a minute and see if there is any question. Okay, so let me now go to this notion of bifiber. Now, go to this notion of bi-fiversion of polycategories. So, first, a functor of polymic category will represent it graphically vertically, like that, which where the polymap on the top lies in the domain, what I will call the top polycategory, and when on the bottom will lie in the codomain, that we call the base polycategory. And when things are drawn. When things are drawn on top or another, it's saying that it's sent by the functor into it. So the R is sent to A and phi into F. And so this picture is really saying that composition is preserved by the functor. But it's saying if I take the image of a composition, it will be the composition of the image of my field. And so using this graphical notation, can This graphical notation, I can get an idea of what is a Cartesian polymap. And so, like for universal polymap, Cartesian polymap are really Cartesian in one specific object. So, it's a notion parametrized by a choice of object. And a polymap in if, so in the top category, will be called Cartesian in one object. If composition for this object is invertible, if it's already existing. If it already exists in the base category. So for example, phi would be invertible, would be a Cartesian in this input if any map that lies over composition through the image of F can be factored for FUPSI. And so, yeah, in particular, And so, yeah, in particular, if I take everything to be unary, to have just one input and one output, I will get back on the left the notion of Cartesian map and on the right the notion of up Cartesian map. And so we can also define the notion of pullback, push forward, and Cartesian lifting by saying, for example, that the pullback. So if I have F that is in the base, the pulling up in the base, I give I give an object that lies over all the objects of the codomain of f and object that lies over all the object of the domain apart from one. I will call a pullback of sigma in context pi one, pi two along f, an object that lies over f and that comes with a Cartesian map in the pullback. And so P will be a bifiber chain if it has all Cartesian misty. If it has all cartridge and missing, so all pullback and push forward exist. And so, if we just go back here for a minute, and if we look closely at this definition and just forget and we just forget about the base part, then this is exactly the same thing as asking for universal map. So, Cartesian pre-map extends the notion of universal polymap by asking that the factorization property is dependent, this parameter. Is deepened, is parametrized by this factorization in the base. But if the base doesn't have any information, so if factorization always exists and is unique in the base polycategory, then this will amount to asking for universality of the polymer. And this is the case for the terminal polycategory. So the terminal polycategory has exactly one polymap of each route. So this factorization will always exist and be unique. And so Can be unique. And so a map that is Cartesian with respect to the functor and to the terminal polycategory is the same as asking for a map to be universal. And so in particular, a polycategory will be star representable. It will have all universal objects if and only if it's bifibered over the terminal polycategory. So this gives us another way to think about modeling. To think about models of ML, which is by saying that there are polycategories that are bifibered over this terminal polycategory. And the point is that we can use that to lift structure. So the idea is that if you have two functors of polycategory like that, and if you consider, sorry, sorry, if you consider a map in B that is Cartesian, and you take its Cartesian lifting with It's Cartesian lifting with regard to P, then we get a map in E that is Cartesian with respect to this composition of functors. And so in particular, if you take C to be the terminal polycategory, this is saying that if I take a universal map in B and I take its Cartesian lift chain, then I will get a universal map in E. And so if B is a model of familiarity, if it has all universal map, If it has all universal maps, and I can take Cartesian lifting of each universal polymap, then I will get also a star presentable polycategory for E. So I can lift the structure, so all of my connective, from B into E if I have enough cartogen lifting. And this is true in particular if P is the bifibration, but we don't need bifibration, we need just certain cartogen lifting. Just certain Cartagen lifting. And so we can ask: if I'm looking at the forgetful functor from banner spaces to vector space, as polycategories, is this thing a bifier or what does it mean to have pullbacks and push forward there? So I won't have time to explain how we define this pullback, but it's yeah, it's more or less intuitive. I find it intuitive having to work with. Intuitive or having worked with it for more than one year. But yeah, the point is that you can define a norm, a pullback norm, but in general, it won't be a norm, it will just be a pseudonym. And it will be a norm if and only if f is injective in the variable that you are pulling into. And so for some notion of injectivity for polymaths. And in particular, if f is linear, it will ask for f to be uh to be injective. Ask for F to be injective. And so in this case, this pullback defines a norm, and it is actually a pullback in our pull category. Similarly, we can define a push forward norm. And we have that in general, it's not a norm, but just an extended norm. And it will be a norm if f is surjective in the output we are pushing into for some notion of surjectivity. And in this case, it will define a push forward. In this case, it will define a push forward. And the point is that all the norms that, so all the universal map that we are interested in, so all of the universal map will be subjective or injective. And so we will be able to take push forward and pull back along these. Which means that we can start with the compact cluster structure of vector space, finite dimensional vector space. So the existence of the model of MLL there, then use this lifting, so this pullback. This lifting, so this pullback and push forward norms to define the statomous structure on PANA spaces. And so we will get, so if we take this push-forward norms and we specify it to, and we take the specific case where F is this universal map, then we get the projective cross-norm, and this will give us the injective cross-norm. Objective cross-norm. So it will motivate the definition of projective and adjective cross-norm from this perspective. And so, yeah, to briefly conclude, so we get a few different ways of modeling classical MLL. One which uses star tulmus category, where everything is modeled by some structure. Another that use star representable polycategories or polycategy two terms of polycategories with jewels. Two types of polycategories with jewels where now all the collectives are given by universal properties. One that is using this bifires of polycategories, where now they are given by push-forward and pullbacks. And so there is this part that I did not really explain, we did not have time to explain, where everything is seen as some object antenna to polycatable. And so, some future work that I would be interested in is first look at, so, as I say, this norms. So, as I say, these norms, push back and push forward norm in the case of Pana space, in general, they are just pseudonorm or extended norms. So, a natural question will be: if I'm allowing for all extended pseudonorm, then do I get a bifibration? Then a second question will be to find other interesting examples of polycategorical bifibration. So, yeah, I'm open to any suggestion then. Then, how to lift this example. Then, how to lift this example to the notion of fibration of non-linear polycategories, which is something that is being developed, a framework that is being developed by Ben Schulman. And the point is that it models full linear logic instead of just classical multiplicative linear logic. Then I'm also looking at building polarized models, so things like fibered dialogue polycategory. Fibered dialogue polycategory or fibered polycularities, or things like that. And also, I'm trying to define a weak notion of two polycategories in order to really get a sound definition of generalized polycategical government construction. So, yep, thank you for listening to me. And if you have any questions, feel free. Thanks very much. Let's thank the speaker. Okay, we have just a few minutes before the next talk. Does anyone have a very brief question?