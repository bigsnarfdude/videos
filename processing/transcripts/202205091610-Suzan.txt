No. Yes. And he's working for his PhD on the recovering of direct uh digraphs from a morphism. So that's my work, my PhD with many many helps from noise. So first we should make the link between uh graph colorings and graph homomorphisms. So we can see graph colorings as See graph color lines as graph homomorphisms. I recall that for any edge in the base graph G, we want to have the data image detail between the image data set in the image graph. So for instance, those two those two vertices and our neighbors and that image are also neighbors in the West. And so we can even So we can even forget the colors and just see graph colorings as graph homomorphisms. And in fact, what we are going to do is find reconfiguration for graph homomorphisms. But first, we must have some definition for digress. And this is the same definition. If I have an arc between two vertices, then uh the there is the corresponding arc between the image and the image graph. So the image graph is the graph in grey. image graph is the graph gray and this is easily readable in the drawings but we must have the arcs the arrows in the same direction so the recoloring problem for driver is the following we have two different edge coloring so diff and we want to change the color of the vertex one by one and keep And keep things to be monomotized all along. So, for instance, here we could choose to move the colour to move from this colour to that colour first. So, we obtain that colouring. And then we just have to do a second change, which is the vertex to that colour. And everything everything works. Everything works. This is an example. And we call the solutions HVACLORING sequence, which is very nice. Another example is here. And here you can see that by checking that for any vertex, we cannot change the colour at all. All the vertices are for. If we want, for instance, to change the colour of V1, here it's not possible. Here it is. Here it's really not possible because of V2, and here it's not possible because there is not the edge in the edge. So no one can move and there is no edge regarding the sequence. Okay, bit visually. Dake here said before that for user recolouring, 3D recolouring is polynomial and for for every n it is P space complete. And it is P-space complete. The most important result is the one of Wolkner, who showed that if H is a narrative blue place and square-free, then we can recover H in polymer time. And in fact, it is very, very important for that. We will use many tools of what now is there is even the detect in the delegate part for for for what he did. Uh but there's there are some uh other reasons. Other reasons from BedenMo and discovers for circular speeds. There are some reasons for reflexive graphs. And the only way that I know for time graphs is from Moser, Lee, and Sigurd. And in fact, we will prove something better than that. So what we show basically is that we can the H mechanical equation. The H equaling problem is polynomial when H does not contain a first cycle of algebraic graph of zero. The algebraic graph for being fast is that you can take the cycle, you count the in any direction for the cycle, you can you count the arcs forward and you you count the arcs backward and you do the the subdirection. So here, so if you So here, so if you have one here, one, plus one, minus one, plus one, total is zero. And so that means that those two words are fobiland summaries of H. If they are not contained in H, then H recoloring will be polynomial. And there is not other results for reflexive graph. If H does not, is polynomial, does not contain one of the two previous. Then one of the two previous graphs and this graph also, then HP coding is also important. Okay, so how will we distort structure? First, we will deal with what workload is when H is undirected and loopless. And we will not make the assumption that H is square free. It will follow. And then we will extend it when H is free. We will extend it when H is still loopless but is a diagram. Then we will consider the case when H is reflexive but undirected and then we will have the right case H is reflexive and diverted. I will dot reflexive means that there is a loop on each vector but is vector. There are loops everywhere. Okay, so the important thing in Moxa about thing in works that I've written last paper is that it's a monochromatic neighborhood process. And the monochromatic neighborhood process means that when we change the color of one database, then all the neighbors have the same colour. So when we change the view from that colour to that color in that context, we have two neighbors with different colors. So CC move is not allowed, right? The monocultural matic neighborhood property. But here this move is a lot of. Here, this move is allowed because the two neighbors of you have the same colour. Very simple. And this is very useful because when so we can do many things. And in particular, we can associate works, which is if you move the form from that colour to that colour while while its neighbor has that colour, then we can associate the the work from here to here. The walk from A to C, and that we can associate that work to any vertex move. And we can, so if we have a H recall array sequence, we can associate the work, complete work, for each vertex, which records all the moves. If you want to have some topological intuition between things, you can see that when I have a move that does not satisfy the monocholatic neighborhood property, then some way we should. Then, in some way, we shrink a cycle. Here we have a fourth cycle, and here we have a line in the marriage. So, in topological language, this does not preserve the homotopy class of the mapping. It is important. And the homotopic negotiator property forbids things like that. So, the idea of Wolfner is that in terms of considering Instead of considering the H recoding sequence, we will consider only the vertex blocks. And if H is square free, then any H recoding sequence satisfies a neighborhood, chromatic property, non-chromatic neighborhood property. And he introduced something called the topological validity. And you don't have to understand completely the formula, the probably. But he said somehow that But it says somehow that alpha and beta do arrange the cycle in similar ways. In particular, if an H recalling signal satisfies a monocomplete neighborhood separately, then it is topological value. The works that it generates are topologically colour valid. And in fact, one And in fact, one one mark is enough. That if we have the all the the moves of one vertex and that that sequence of moves is topologically valid, then we have the moves of all other vertex vertexes because of the topological. That's why it's very very useful. So if you want to have some more enforcement. More intuition about weight. So here we have two homomorphisms of six cycles into that one. You have here three walks, Q, Q1, Q2, Q3, and Q1 and Q2 are topically verified, while Q3 is not. And if you ask why, you can see that it implies that uh that vertex, which is cube. That vertex, which is Q, should move o around that cycle, and th th th the cycle itself, see, should should follow some core. And this would tie the cycle around that source cycle. And this is not possible. We won't get to beta like that. Okay, so Wolfman showed that if we walk some LSIQ, so we fix some vertex queue, we Some Î”tex queue, it will just need the work of that data text, because it's supposed to be necessarily that it is topologically valid. If this is what we need to have even next, since no six needs to be topologically valid, then we need some additional conditions that is easy to check, the cycles. There are some cycles that where we cannot use the vertices. And then if those three conditions, And then if those three conditions are satisfied, then we the the work induces uh one uh H3 colouring sequence and we c you can even constrict it if the password in the number of supercarbons. So it could actually could show that we can find in very good very nice time uh all parts of whatever influenc works, in particular in Pod. And so it it And so i it it ended up with a classification theorem saying that uh the set of uh all uh works that induce HP collaborative sequence is one of the following. Either no one, either only one work, either we go around the cycle and maybe some we do some work and either all everyone is already. So what we are going to do now is What they are going to do now is almost the same thing, but we will have to deal somehow with the direct destruction because it will be extended to diagrams. So first, the monomeratic neighborhood is very useful and we don't want to lose it. And in fact, we can show that if H does not contain one of these two maths, then any H-bigurming sequence must satisfy the monochromatic table. must satisfy the mono acrobatic neighborhood property. So the idea is that we can at first forget completely or all the orientation of G and H, search for works that are associated for undirected recolouring satisfying the neighborhood property, and we know that if there are solutions, there are among those. Because they must satisfy the non-informatic neighborhood. So, and then we must deal some way with the direct expression. And in fact, that is not too hard. We can observe that if there is a NAC, UV like this, then we need some orientation for the work. We need to think that like that. Because here are the successive colours. Here are the successive colours of U, here are the successive colour of H uh of V, and we need at each spot, at each step the things to be homomorphism, so we need all that part. So we will define something that is orientation compatibility and that asks that for each arc we have those all those uh arcs in H. So R in H. So those zigzag, we have all the zigzags for each R in Z. And in fact, it is sufficient. If all the works generated satisfy the exact condition, then we are done. And plus, of course, that condition, then you induce the nice feature of the sequence. Induced by edge feature learning sequence. And there is some observation that says that here, if u satisfies the exact condition for this R, then V satisfies the exact condition. So this will make things far easier that there will be far more, very, very few conditions to take on the works. And it turns out that we can find all That we can find all orientation compatible works in polymer type. And in fact, it just cannot be anything, it can be either normal, only one, or everything, everything. And so we can have some directed theorem like Work has saying that the works associated to HPAN sequence are one of the framework. Are one of the four links. And almost the same, we just have to have to add the zigzag condition here. And the zigzag condition obviously here R and B satisfy the Z condition and satisfy the Z condition. And that's all. So now we are going to the web flexes undirected case. So we have loops everywhere. But we will everywhere. But we will don't I I I won't uh I don't draw the loops on the nor loops on the line that di are on the on the graph. Okay, and if the graphs are reflexive, it's even easier to define the works. We just have to say okay here if we remove first uh v1 if we do V1, if you do this HP coding sequence, that we move V V two, then V one V two, V three, then V two and then V one, and we do the same thing from here to here. Then the work associated to any of the vertices is this one. After successive colours of vertical vertices. And then we have to do something like which we we we do the same job of the monoclonal neighbourhood property and the monochromatic neighbourhood property and this is the we name it the push or pearl property. And the pub push or pearl property says that when we change the colour of one divertex, then from the perspective of any neighbor it must be either a push or pull. That means that you that here must either leave the colour of uh any neighbour or come to that colour. Enabler or come to that colour. I give you some example. Here you come leave that colour for that colour, but it is not the colour, it doesn't leave the colour of V1, neither comes of it. So this move does not satisfy the push or pull property. This is not a push or property of the text value of V1. But these moves. But this move is perfectly fine because you leave the colour of V1 and come to the colour of V2. And guess what? If there is no triangle in H, then any H recoloring sequence satisfies the pressure point of view. That's where we are going. If you want to have some intuition about it, so the associated work is just that. And again, that. And again, not satisfying the brush property state means that we can shrink cycle, we can shrink triangle. And from a topological point of view, this is not good. Okay, so what we can we do? Ah yes, we can observe that if the uh if a an age economic sequence satisfies the pulse of pressure or property. Polish operate property, then it induces topologically valid works. So we can exploit all the things that WorkNAP did on topologically valid works and just use it as a very powerful powerful tool. So we have very similar theorem that being topologically valid and the easy additional condition is enough to induce HP correct. Enough to induce HPQ sequence. We don't have publicity condition because publicity is not needed. And things in that case are even easier because we have the classification CRM again in the undirected setting saying that the set of works associated to HP code learning sequence is one of the following. So, now again, we will need to deal with the direct spectrum of G and H when G and H are direct. And the ID is the same. If H does not contain the triangle, which is the triangle of algebra plus 1, then any H economic sequence must satisfy the Persian-World proportion. And we will forget. We will forget at first the orientation, apply the new Broken Eye like CRM classification to have a set of works that are associated with good recoloring. And we will try to find the solution among those problems, those those works. But things that the the exact property that works in the That works in the monographatic property, don't work anymore here because of parameting. Parity was in fact very useful. But there is a naive way to check if the work is real or not, but if it induces an age recurring sequence. And the nice way is just trying to. The nice way is just trying to move every vertex when possible. So uh say that a vertex can move forward if we can change its color to the name color in its work and things are even homomorphism and every still has homomorphism. And in that way we can just In that way, we can just try for each vertex if they can move from one in their walks. And if at some point no vertex can move, then we are done that this is not possible. Because moving one vertex forward can only help the other moving. That's the point we use for one. So we can test in polynomial time if a work is uh induces uh H returning sequence or not. Or not. And so with that, it is quite enough to deal with direct setting. How are we doing it? If there is no work satisfying the associated property, then we are done. Is there only one work? You only have to test it. Is there a set of work? We can take all possible ways. We can take all possible reditions and say, okay, there is a polynomial size subset of all those modes that we must test. And so there is a polynomial size subset. We have to use a polynomial algorithm, a polynomial algorithm at that time. It is still polynomial. And in the last case, it's more tricky because we have to use some details hidden in what has paper to to see that we just have to ensure that uh just have to ensure that uh the work the works of some datax must be symmetric and if it is the case then uh uh everything is fine but it is not trivial at all you you must have do some proper stuff and I think it is it I'm almost done uh to conclude uh we just showed that uh the topological approach of Fortnite is The political approach of Fortnite is far more powerful than what you first did. Very clever, it is even more clever than the first could do the thing. To my knowledge, every positive result of edge colouring, including the result on circulation recurring, can be proved that by a workman like a branch associating works. Like a punch associating works to HB curving sequences. And I wonder if there is something that cannot be proven by topological methods. But we can could maybe hope some improvement on that topological method. But maybe I'm thinking on it by changing the topological space. Here we are considering works on the topological space. Considering works on the political space that is just image graphs, that we could construct those works on more complicated space and more appropriate spaces, which are simplistic and complexes or whatever. Maybe we could have b better properties and more for more general settings than than just square free or no first cycle of like a recur algebraic. I'm done. Thank you for your attention. Okay, thank you, Thomas. Are there any questions for Thomas? So uh, I was just trying to think there's this uh I'm just trying to think, there's this idea of mixed graphs, which are some of the edges are directed and some of the edges are not directed. Not here. No, that's not what you were talking about. But I was just trying to think of the stuff that you're doing would that work equally well. I think next graph would be directed graph with symmetric edges. Just symmetric edges. And so all this stuff would just work. Yeah, it would work. Yeah, it's because they could be symmetric edges in so there's no point for that. Do you have any ideas about problems, about positive results that might not be able to be proved with this technique? In fact, the monomeric neighborhood was effective at the very beginning. It's very convenient. That's not uh not shrinking the cycle. It's very nice from a topological point of view, but okay, this is completely valid in the sense of the usual sense of recognition. And forbidding things like that can be very constraining in a um And we would like to have some methods that keep sure that those moves and allow those moves because I think many recurrent problems would need to forbid two neighbors to have different colours is very very complicated. Artron used his recoloring type results and then later generalized similar ideas in his multiplicative proof. That's the perfect graphs for multiplicative. The ideas can do something with enemies conjectures for diagrams. Oh, uh surely uh you have no clue. But uh But uh probably. I think there is still plen plenty of things to do with topic other parsh in uh configuration. Other questions? What uh what can you say something about when the we can figure out the The reconfiguration graph is c connected? I can thanks to you. Uh uh the the connect uh the the connect talents of the reconfiguration graph of uh works actually I didn't study at all the the reconfiguration of that at all. But uh so free recolouring you get you can use the the theorem to get You get you can use the the theorem to get some nice concrete thing and it just comes down to the topology and you get rid of these tight cycles and it's kind of kinda nice. So maybe running here? Maybe in the in the monochromatic neighbor's context you can have something like that on diagrams. Uh I have to think about it. What are possibilities for? Possibility is one and the speaker again.