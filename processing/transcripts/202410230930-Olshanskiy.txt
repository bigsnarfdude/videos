Today, I choose to speak about one particular problem, one particular method, and one particular open problem related to this setup. So, I'm going to speak about Illirian fine-tuned method for fluid problem in the deformant volume. Okay, and this is my collaborator, Mike New. My collaborator, Mike Nealon from the University of Pittsburgh. All right, so this is my setup. So let me explain this picture. I have a physical volume which is passively advected by a divergence-free external field, which is W and it passes through a structured mesh. So Mesh. So it's evolving interface, structured mesh. So perfectly fits this workshop, I guess. So this is some of my notation. So omega t is time-dependent volume. V gamma is the velocity of its interface. And I want to solve a fluid equation in this volume, so Naviestov's equations. All right. All right, and I want to use time-independent quasi-uniform triangulation to solve it. Okay, this is my setup. So this is the problem we address. Classical Navier-Stokes problem. And I linearize it. So I will talk today about more about analysis. So for this analysis, I linearize this problem. So this is linearized Navier Stocks system. Stocks system. So this goes here, Dirichlet boundary condition, and yeah, semi. So this is my setup. Right, this is a prototypical problem for many practical situations. And I want to look closer into analysis and the method development for it. All right, so let me explain my method and approach. method and approach we use taking first a look into even a simple problem even a simple problem so for in this setup I assume I have an explicit mapping from from a reference domain to my physical domain which is a Lagrangian mapping and which is defined And which is defined the evolution of this fluid volume, and a conservation of a scalar quantity with a diffusive flux in my volume solves this system. So, this is my model problem, which I start from. And so, I want to solve it, but I have to be careful because in the Illyrian setting, Because, in the Illyrian setting I am interested in, this mapping from the reference domain to the physical one may not be practically available. So, in practice, what I do know may be just the snapshots of my domain in some time. So, I may assume this mapping that it exists. I may use it in analysis, the existence of this mapping, but I may not have. Mapping, but I may not have any access to this mapping for practical implementation. So, what I only have are just snapshots of my domain at every time. So, and say I want to do some classical method of lines for this problem, like here. So, and I immediately run into problem when I try to. Problem when I try to define my time derivative because this guy, my quantity at time n minus one is defined on a different domain, on omega n minus one, not omega n. So this is not well defined, right? So I need to do something, and an idea was that Was that I associate with my solution its extension, its smooth extension to a neighborhood of my physical domain. So I assume that this is my E, it will be an extension to a neighborhood of my domain such that my current physical domain is embedded in this neighborhood. Is embedded in this neighborhood, so delta neighborhood, and then this is well defined. And for example, I can use a textbook stein extension operator which preserve all necessary smooth properties. So this is a formal definition, so where I use the knowledge of my map into the reference domain and back to define this extension operator. Well then, this is. Well, then this is well defined, but and we can show stability of this semi-discrete scheme. And this is a technical results, which says that the extension in a neighborhood is controlled by the solution in the physical domain up to this width of our extension layer, and this width goes to. Layer and this width goes to here. So, this is the key technical results. But, okay, now going to find element discretization. So, the quick question is: how do we realize this extension in find element methods? Because, okay, this is extension as given me by Stein's textbook, right? But I don't know it's explicitly. So, all right, and this is the idea how. And this is the idea how we do it in the find element setting. So, this is the picture. So, my current physical domain is from this side of the boundary gamma n. So, my triangles which are inside and cut by this gamma are this green. But I need my solution for the next time step. My solution for the next time step. I need my solution to be defined here on my next interface and all the way here. So the idea is to add all these triangles, all these tetrahedra in this trip to my active mesh and to have this idea of ghost penalty stabilization. stabilization uh to to to to to to to have uh the problem well defined on the discrete problem to to to have to be well defined on this extra uh mesh so this is yeah in another colors uh this is the idea so i add all all these triangles all these new triangles to my active mesh and in this strip so just for for for Strip. So just for the symmetry, I take also the strip on this side. I add gross penalty, like in cut fair. We add ghost penalty, just penalizing the jumps of the derivatives in this way, or we actually prefer such direct penalty by penalizing a difference over the patches of the difference between our finite element solution and its natural. And its natural polynomial extension to the neighboring triangles. All right. And then we need to choose this strip to be sufficiently large such that our next physical domain is embedded in our active mesh on the current time step. So the width of this strip should be proportional to delta t. Proportional to delta t to our time step and to the speed of the interface. Right, then our find element space is just a standard piecewise polynomial continuous on this active mesh. And this is how the variational formulations look like for the Elira for this method. So this is standard, standard variational formulation. Standard variation formulation, and this is additional this penalty term. That's what we add here. And this stabilizes over these small cuts. So stabilizes the problem over position of the interface in the background mesh and also implicitly provides an extension of the solution to the neighborhood. Well, this is the key technical result that. Key technical result that we can control this L2 norm of the extension in this particular way and having this consistency result and putting everything together and applying Granville argument. This is the convergence result, which is for the here it's for the first order method and time, so it's optimal. That in time, so it's optimal order in time, optimal order in space up to this ratio anisotropy. And we also quantify the geometric approximation, so how well we integrate over the cut tetrahedral triangles. So, this is the method for this model problem of advection diffusion in the Advaxion diffusion in the deformant volume, and now we go to the fluid equations. But first, I quickly summarize. So this method is simple. It only requires spatial integrals. So it's not a space-time method. So higher ordering times is straightforward. BDF2, BDF3 is. BDF3 is straightforward. Yeah, this is just a table demonstrating optimal order convergence. So in practical, we confirm optimal order convergence. So it's a sharp interface method. It's easy to combine with implicit definition of the evolution of phi, say, by the level set method. And this is an example that we can. An example that we can handle easily topological changes with these approaches. This is on a very rough mesh, but that's just the illustration. So we do nothing special to solve advection diffusion equations for this merging circles. So, yeah, just straightforward. Forward and complete error analysis is available, including geometric error bounds. All right, now we go to fluid equations, stocks problem. And before I go to moving domains, let me say a few words very quickly about the fixed domain case when we use unfeeded find elements. So the crucial can be Crucial condition for the stability of the fine element stocks is the discrete analog of this famous Nature's Bogovsky results, which says that the range of the gradient as an operator from L2 to H minus 1 is close. So we have to ensure that. And in the unfitted setting, The crucial condition for proving this appears to be such a result, which is analog of this Neches-Bogovsky theorem, but in a domain which is not which we cannot map smoothly. Smoothly to a smooth fixed domain. So let me explain this a little bit more. So this is a key technical result. So what we have here, we take all tetrahedrals which are cut by the physical smooth domain, and we take only internal. Take only internal tetrahedrals in the smooth domain. So we have a smooth domain, and we take only tetrahedrals which are completely internal to the smooth domain. So we have very irregular boundaries. So this domain is not a finite union of Lipschitz domain if we take our mesh to zero. Take our mesh to zero. So, standard tools to show in-sub stability for this domain doesn't work. So, yeah, and we have to be a little bit more creative and we need to have in-sub condition in such domains. So, we have it with Johnny Buzzman for many fine element pairs, more or less all standard fine element pairs. So, this is the crucial condition. Condition. The corollary of this condition is the stability of the finite element pressure. So where we add this Gauss penalty term. So this is how this stability look like. And then we put, and this is the unfitted formulation for the Stokes equation. So it's a Nietzsche method. So these are Nietzsche terms, Nietzsche terms. Nietzsche terms, Nietzsche terms, penalty enforcement of the Dirichlet boundary condition. So, this is the gradient of the pressure, this is Gauss penalty for the velocity, Gauss penalty for the pressure. So, when we put everything together using this in-substability results, we have optimal order error estimates. So, everything goes through. All right, so this is a quick story. This is a quick story for the. Okay, let me go back. This is a quick story for the fixed domain, unfeated find elements, unfeed find elements for the stocks equation in the fixed domain. And now we go to moving domain. So now our domain evolves. All right. Okay. Okay, so this is now the fine element formulation of this linearized problem in the evolving domain. So now the domain evolves. So what do we have here? We have here standard fine element spaces like Taylor Hood, unfitted spaces. Now these spaces depend on time. So On time, so my active mesh depends on time, so my spaces depends on time. So we have standard time derivative. To have this time derivative well defined, have this well defined, we add here ghost penalty stabilization for the velocity in some neighborhood of the physical domain. We also add. We also add Gauss penalty stabilization for the pressure just to have the pressure stable against these small cuts of the elements. Everything else is standard. This term collects diffusion, advection, niche terms, penalty, and B is our gradient. All right, when we put everything together, we have a well-defined problem on each time step, just standard saddle point problem. Okay, we solve it and now we are interested in showing stability, error analysis. And at this point, I want to point i want to uh to to show what kind of issues people are and we are running in when trying to have a full and clean error analysis for this problem to explain this um uh let me first uh re recall standard uh arguments uh to show the stability of the scheme just in the steady domain. The scheme just in the steady domain. Just steady domain, linearized Navier stocks, and time-dependent. We want to show the stability of the lost in pressure. Well, the standard argument is we first test this by the velocity and take this Q to be a pressure. So, this pressure terms cancels, and we have energy balance. Have energy balance, and from the energy balance, we very quickly have this energy estimate for the velocity. Right now, we want to use this stability of the velocity to show the stability of the pressure. But before doing that, we need to estimate, to have an estimate for the time derivative of the velocity. And we also can do this by testing this. At testing this equation with the discrete time derivative for the velocity. All right. And yeah, just taking q equal to zero. So this term is gone. And this term is also gone because both velocities are divergent, weakly divergence-free with respect to our discrete pressure field. So this is gone. And so we sum up. We sum up, do some telescoping argument, and we have this kind of estimate for the time derivative. When we have it, we are done. We use in subcondition for the pressure to show the stability of the pressure. So this is just textbook analysis on the stability. Once we have stability, we combine it. We combine it with the find element interpolation properties and we will have error analysis. All right, so what goes wrong or what doesn't work if our domain is a walls? All right, so here the essential argument was that this test function on step Test function on step two is divergence-free to have this term go away. All right, but if our spaces are time dependent, then this velocity in red is divergence-free with respect to the pressure field of the previous time, but not with respect to the. With respect to the pressure field on the current time, so this is not weakly divergence-free velocity anymore, and so this property is violated. And we cannot, we don't know how to obtain this estimate, and so we have a problem with estimating the pressure. Pressure. So, because of these reasons, the best error estimate up to some point was this error analysis from the paper of von Fall, Richter, and Lederfeldt in 2002. So, they analyze this method in the moving domain, and this is the error estimate. Is the error estimate so and you immediately see that it's uh suboptimal here? So we have this delta t in the negative power, so this is suboptimal. And on top of that, we have additional delta t factor here, so it's kind of double suboptimal estimate. Surprisingly, in practice, Surprisingly, in practice, and I just copy two plots from that paper, in practice we see that in the energy norm, the method is actually optimal. So this estimates for the L2L2 velocity, L2H1 for the velocity, L2. For the velocity, for the pressure, for Tellerhoot, and everything is optimal for Tellerhoot elements of degree 2, Tellerhoot element of degree 3. So there is definitely somewhere a gap between practice and analysis, which we try to address with Maya Nealon. So the argument we The argument we came up with was to reconsider this standard in sub-stability condition, which is this condition, to the alternative condition where the role of the norms for the velocity and pressure is switched. So we are controlling the are controlling the h1 type norm for for the pressure by the uh dual norm for the l2 norm of of the velocity so yeah going back so here we have l2 h1 oops the wrong way and here we have h1 l2 so this is alternative uh in subcondition so our In subcondition, so our H1 norm is defined in general element-wise because we may have discontinuous pressures. Then we also add these jumps over the faces. And there are examples where we were able to prove that this alternative in subcondition also holds together with. Together with standard in subcondition, and this includes tailorhood elements, this element, also mini-element. We can show that this alternative condition holds. All right, once we have this alternative condition, then it helps us with the analysis. us with the analysis. So once again we revisit stability analysis. Let's see how this alternative condition helps with the stability analysis. Okay we start with the same argument. We test this by the current velocity and q equal to p n so this is our bound and here we have And here we have some weak control of the derivative, weak because we have delta t squared here instead of delta t. So we have some weak control of the time derivative. All right. And now, with the help of this alternative boundary condition, we may show the following estimate. Estimate where this kind of L2H1 scaled by H to the power 2 norm of the pressure is controlled by the date of the problem, the data of the problem and this time derivative term. But here we have this additional scaling by h square. By h square, so which we want to benefit. And if we assume that we have such a raw bound on delta t time step by h square, then this term is controlled by this. This by this data from here. This term is controlled by data, and we have such an estimate for this term on the left-hand side with a beta epsilon. And so we can take it small enough and have the control of such norm of the pressure. And this appears to be sufficient for having. For having the error analysis for this problem to go through. So, and when we put this together, we have the results. So, let's compare with the error estimate what we have before. So, we assume this, and we have this not optimal error estimate, and this is the pressure. And this is the pressure control. So this is L2L2 additionally scaled by delta T. Okay, now with the alternative boundary condition, so we have optimal error estimate here. So this is optimal order in terms of polynomial degree of fine elements, delta t and time, and control of the geometric arrow. So optimal control. So, optimal control for the velocity in the energy norm. But the pressure is controlled in such L2H1 scaled by H square naught. So the control of the pressure is still kind of weaker than the standard L2L2. So how to How to control the stroner of the pressure is an open and still an open problem. And I believe it's an important open problem. But this is the best which we can prove so far. So the better control of the pressure is important, showing it is important for Imponent for several reasons. In particular, let me go back to the equations. Oh my gosh, where do I have these equations? Here, okay. So, because in some applications, we have a source term in this. Source term in this divergence condition. So our velocity is not divergence free, but we have some source term here. And then this source term should be bounded in the dual norm to our pressure norm to have a smooth stability estimate. So, but the So, but the dual norm for this H square, let me go now forward, all the way forward. Okay, here we go. The dual norm to this scaled H1 norm is not uniformly bounded even for a smooth function if h goes to zero. So it's H goes to zero, so it's still not sub-optimal. So there is still a way to improvement. We were also interested in controlling of the pressure in higher order norms with respect to the time and space, because this is how we were getting control on, say, drag and lift forces on the object. That's also of interest. That's also of interest. So, this is still an open problem. How can we do this in the framework of this unfitted find element methods with propagating interface? So, both things are important here, unfitted and propagating interface. All right, so which brings me to the end of my talk. So, these are some key observations. We have fully Eulerian unfeated finite element methods for PDEs in time-dependent domain. And we have optimal convergence rates for scalar problem, for the vector problem, up to these reservations about the pressure. So handling divergence-free boundary condition. Sorry. Uh, sorry, handling the divergence-free condition is challenging because of time-dependent finite element spaces. So, sometimes the alternative in-sum condition helps. There are some immediate open questions. These are some key papers on recent key papers on this subject. So, thank you very much. 