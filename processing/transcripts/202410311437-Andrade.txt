So thank you very much to the organizers for giving me this nice opportunity to win this wonderful workshop. And what I want to show you, to talk about, is actually well this is our student, a master's student in Brazil, and it's basically going to be his master thesis. To be his master's thesis. So, the project that he's working on is basically the following. So, we're studying wave generation. So, the idea is here is the sivet, and let's imagine that the civet deformed as it would happen during an earthquake, an underwater landslide, volcano, whatever. And we want to study the waves that we get at the surface as a consequence of the sudden motion of the seabed. Of the sea base. So, of course, in order to study the fluid, we're going to study the full Euler equations in two dimensions, of course. So, this is the equations that we have seen so far. But here, because now the sievet is going to be moving, the probability condition changes a bit, so it's not really the Neumann boundary condition. It's got this extra H D uh here at the bottom. Here at the bottom. And for our model, we're going to be assuming that we know precisely how the sibet looks and how it deforms. This is going to be like our model hypothesis. So we're going to take it for granted and study from this how the waves that we get here on the surface. Now, so I'm going to use basically the same trick that everyone has talked about in almost all of the lectures: the conformal mark. Lectures, the conformal map. But this conformal map, we're going to be. I mean, we want to, of course, flatten the fluid domain. But then the thing that we need to compute is, okay, how do we set the conformal mapping so that the upper boundary goes to the free surface and the lower boundary goes to the moving bathymetry simultaneously? And this is going to be like the main difference of our approach compared to Compared to previous ones. So I think it's important to keep this in mind because if we were able to construct the mapping, we want this that when we restrict the functions here at the top, we get a parametrization of the free surface and simultaneously for the bottom. This will become very important where we're actually computing the map. The map. So, just to set the notation, well, x is going to be the first component of the mapping, and y is going to be the second component of the mapping. Both are going to be harmonic functions here defined on this strip. And what we're going to do is find the corresponding equations for both of them and solve them numerically. So, the trick here is we're going to start with the second component because somehow Component, because somehow we know what the boundary values have to be. So it has to be like this parametrization of the free surface and this parametrization of the bottom boundary. But of course, there's going to be a coupling between the vertical component and the horizontal component here at both boundaries. But I'm going to show you how we deal with it. So, we want to look at the vertical component of the mapping, so it has to be a harmonic function. And because we're going to, well, And because we're going to eventually discretize everything to compute everything, we're going to impose right away that we have periodic boundary conditions. So we can use a standard FFT approach for the numerics. So, well, we have this Dirichlet problem for y. So, here at the top, let's say it maps to a given function capital Y. I'll explain later why we can assume that this function here is given. This capital Y would be like the vertical. Capital Y would be like the vertical component here of the parametrization of the free surface. And for the moment, let's assume that we know this thing, it is given, so it's not part of what we want to solve for the mapping. And for the second one, well, we have this capital H, which is the second one, which, I mean, we know what the little H is because this is the, it would represent the sievert in the physical domain. This would be like its corresponding parameters. Corresponding parametrization from the canonical point of view. So we really don't care about it, but we need it for the computation. But the only thing that we assume is that the data is given in physical space, so to say. And because we're applying periodic boundary conditions, we can kind of get an explicit formula for y, which can be written in Fourier space just like this. So it's a bunch of Fourier modes. So it's a bunch of Fourier modes, superposition of Fourier modes, and we get the Fourier. It also depends on the Fourier transform of the capital function h and the capital function y. Once we computed y, we get 2x, which has to be the harmonic conjugate to it. So we simply take the Kochi-Riemann equations, and because we already kind of have an expression for y, well, we get simply an expression for x. It's a similar looking It's a similar looking expression with few differences because it comes from taking the derivative of y and integrating and so on. The other thing that happens when you're like computing conformal maps, but you're specifying you're specify the boundary, is that you cannot really compute the map to any strip that you want. Strip that you want. You get a very specific relation between the edges of the strip. So, in our case, because we want to keep everything periodic and we want the period here in the canonical domain to match with that of the physical domain, it turns out that we have to adapt the width. So how do we do so? Well, it's part of the computation, so it's part of the things that we need to compute. The things that we need to compute when you're computing the conformal map. So, if we want the length to be the same in both domains, turns out that you need to adjust the depth. And you have to adjust it. It has to be adjusted depending on what you got on the free surface and on the bottom. So, we're able, again, assume that the y is given, so we know the surface, we can get an explicit expression. Get an explicit expression for the map, which is given in terms of this unknown function h, which is important because it's the one that interacts with the, I mean, it's the one that codes the bottom effects, the motion of the bottom and so on. So, this is really the new stuff that we wanted to present because this approach was already studied in 2005 by Ruben. He did what He did this part was basically the same. It's just that when he got to this point, instead of computing this capital H, he said, okay, let's assume that the capital H, it is given, but then instead of the computation that I'm going to show you, let's assume that it is a Gaussian. I don't think it is wrong if you want to study how motions of the seabed generate waves, but for the things that we want to do, I mean. To do, I mean, this is a bit of a cheat because we want things in the physical domain. So, once you have things in the physical domain, you don't really have like a good way of knowing what this capital H should be. So, this is the main difference between this paper and the thing that we're working with with our students. We want to be able to compute this age from the physical data. And so, we have this coupling between. We have this coupling between the real and imaginary parts, or rather their values, at the lower end of the domain. So we have this coupling here. So the way that we're going to deal with this is imagine that this is like a fixed point iteration. So the thing that we need is the little h, which is the sievet motion in the physical domain, evaluated at the solution at The solution at eta equals minus d. But if you look here at the formula and you just simply change eta by minus d, you get well this chunk expression here, which depends on h itself. So this is how we're approaching this. This is, we regard this as a fixed point iteration, and as with any fixed point iteration, we can easily solve it simply by, you know, just take an initial guess and you just let it iterate. And we were even able to. Iterate, and we were even able to speed a bit the convergence using well, this numerical trick. It seems like a hassle to add this section to the conformal map. But well, first of all, we can't really avoid it if you really want to represent the input in the physical data. But it's also not that bad. So I will say I'm able to run this like on my computer. Yes, certainly this takes like a hundred of people. Certainly, this takes like a hundred iterations, but it's not really a complication. Also, bear in mind that because the sievet is going to be moving, so I'm going to need to do this iteration at each individual time step. Because at each time step will get a different shape of the sievet. So, yeah, it is a hassle, but numerically it can be done. It's not that complicated, it doesn't really take that much. Doesn't really take that much longer. I mean, you can five minutes to get a simulation, it's not that bad. But this is the main difference of our approach compared to the previous one of Ruben, where he just gives an explicit formula for it. We're not doing it, we're computing it through this fixed-point iteration. Now, once the map is fixed, the idea is that we're going to use it to change variables. We're going to use it to change variables. So, we're going to write the surface equations, which are these ones, the kinematic and parallel conditions, in those variables. And of course, restrict everything to the free surface and so on. So, we do the standard procedure, namely we now take the, instead of the velocity potential, we take the complex velocity potential, which is well, the velocity potential plus a string function. This bar here simply means that. This bar here simply means that they are the same physical quantities, but now in the new variables. And the first thing that we have to do is, because we don't really want to solve this through the inside the computational domain, but since this function is harmonic, so we can actually find a relation between phi and psi, which is basically what the Dirichlet-Nolman operator does. So in this new operator, So, in these new variables, in this specific configuration, the digital tonnage, it looks very much like the one that you get for surface water waves of depth D. But we got this extra contribution that really comes from the fact that now in our configuration, the button is changing with time. So, this is the digital normal operator that we get. HCUs is very soothe. H uses very so that we can replace this phiy by the string function. By doing so, we only get derivatives along the horizontal direction, of course, horizontal in this plane. And it really allows to reduce all the Euler equations to just these two sort of equations here at this end of the domain. So what do we do? What do we do next is simply we write everything in terms of the values of the potential of the string function here at the free surface. And, well, I skip some of the details, but this is basically the end of the result. So this is the full order equation reduces to these two evolution equations. We have all of these variables, the capital X and the capital Y. They would be the mapping, I mean, the ones that parametrize you. The ones that parametrize you the free surface. We actually only need the y because we can write the x in terms of the y. So this is really why x is here, it's more like a chunk expression. And the reason why we could start this whole procedure by assuming the value of y is because we're going to be, at each time step, we're going to get its updated value. And that is the one that comes back to the computation of the conformal mapping, goes back through the iteration. Mapping goes back through the iteration to get the capital H, that is what we need to actually compute the rest of the stuff. And once we do so, we are able to compute the ranking side and evolve the system in time. Now, well, there is a bunch of here of auxiliary functions and operators that are needed to reduce the whole system to basically these two, let's say, surface-like evolution equations. Okay, so now that we have the Okay, so now that we have the equations, what we did was: okay, let's compare our results with whatever we find in the literature. And in this context of wave generated by sieve displacements, perhaps the fundamental paper or the first one or the most important one is this one from Hamack of 73, where he considered exactly the same problem, but he took, well, he linearized the equations, so he got a linear. Equations. So he got a linear system of equations for this problem. All of this is, of course, in the physical domain. And the nice thing about these equations is that they are relatively simple and you can actually also write an explicit solution for the free surface. And most importantly, he compared also with actual measurements. So we decided to take his approach and compare the nonlinear, our non-linear version, with his. non-linear version with his well with his model. In his experiments he considers like a fixed step that initially it is like submerged and then it rises. The time that it takes to lift this part of the sibet is this capital T and well uses a bit of a strange dimensionless variables which are this I mean one would represent the width which I mean, one would represent the width, which is this big, this, the time that it takes. And based basically on these two parameters, he defines three different regimes where basically we could use it to characterize the different dynamics, so to say, that you could get for the free surface. So this is a bit of a weird non-dimensional number because the p kind of refers to. Number because the B kind of refers to some sort of length and the T to time. So, what this actually means is the time, this V should be read like the time that it takes for a wave propagating, well, with the speed of shallow water waves. So, the time that it takes for a wave to travel a distance, a horizontal distance of T divided by the time that it takes for this thing to get to its uh final configuration. To its final configuration. So when this quotient is big, he called the motion impulsive, impulsive in the sense that this thing leaves very fast, transitional, both the wave and the sivet, the former, roughly speaking, the same and both take the same time to move, and creeping, well, where the motion of the sievet is like way smaller compared to the speed of the wave. Of the web. Okay, here we have some videos. So the blue one is our numerical resolve, solving all the full linear equations with the conformal map being computed at each specific time and so on. And the red is Hamack's linear formula, which is very simple, something that you simply evaluate. And in the three And in the three different regimes. All the values that we took were taken from Hamack's experimental setup. We simply adapt them to our simulations. Probably a figure that we forgot here to put in the presentation, but that we also compared, was an agreement between our nonlinear results and the actual measurements, and the agreement is already. Measurements and the algorithm is already quite good. But that's not surprising because also the linear prediction was also pretty good. I think there are many things that one sees at once. So, for instance, in the gripping regime, the well. The linear model and the non-linear one are in excellent agreement. And of course, if you're in the pulsar regime, the non-linear effects become very important and there is a visible discrepancy between the non-linear wave and the linear one. Of course, mm we measured a relative error between both solutions, but I don't think that's uh that interesting. That's interesting. And what we saw in, well, it's not only that we see, but what people have reported in different studies about this is that initially if you look at the initial data or let's say at the solution at an early for a small team, it really looks like as if it was like the bottom disturbance, and you see. Disturbance, and you simply lift it up to the surface. And it kind of happens in all cases, roughly speaking. I mean, here, because we just took the snapshot at t equals one, it's kind of hard to see, but if we let t to be a little bit larger, you'll see that eventually it's like, I mean, this business of like wave generated by sift disturbances is like solving like a wave pro. Solving like a wave model is just the initial data that you take. It's like a translation of the Sibet profile to the surface. That actually has a name, and it is called passive generation. A passive generation means when you just solve your equations using that, I mean, using the Civet as initial data, so to say. And again, well, we compare, I mean, And again, well, we compare, I mean, since we can do both, because we have a non-linear solver and we can also generate the wave, so we compare both. And indeed, it is in the impulsive regime that we get more differences between the two approaches. So just to say that Silvet moves fast, well, the non-linear effects are important, not only in the propagation stage, but also in the initial stage. And you really, you'll get a different. Really, you'll get a different result if you take this approach. In all the other regimes, when the motion of the sivet is kind of slow, the linear approach and this faster generation do a very good work in predicting how the wave is going to behave. So, yeah, that's basically. So, we developed this method to solve the conformal mapping. We have been benchmarking hours. Well, benchmarking our simulations with what is established already in the literature. And the thing that we want to study next is this one. What happens now when the motion of the civet is not vertically, but horizontally. Again, the beauty of the conformal map is that it doesn't really care about if the sieve goes up or down, left or right, because in principle you're able to capture it. In principle, you're able to capture them all. So you can do basically whatever you want. In this case, it would be waves generated by horizontal moving displacement. With a constant speed, or this one? This one with a constant speed. No, I think no, this one was accelerating first and then it also. And then, well, then it also stops at some point. Because I think if this thing was moving with a constant speed, we could then change to our reference frame and ignore this whole thing. So the nice thing would be to see it accelerating and then stopping and change directions and so on. And the other thing that I would be very interested to study with this methodology is: what happens if your, let's say, your reference depth is no longer flat, but you actually have, let's say, But you actually have, like, let's say, like, some sort of underwater platform or something like that. And you got this moving part along the platform. So, let's say, a toy model of an underwater landslide. It is thinking in those sort of questions that I think it makes a lot of sense to actually have an accurate and fast way of computing the conformal map and not using Rubin's approach because. Ruban's approach because my guess, but this is something that well, I haven't tried it yet, but when the bottom is flat, you specify your moving disturbance in the canonical domain, you'll probably get something kind of similar. I mean, maybe it's not the Gaussian that you want, maybe something similar. But when you're including this into a more sophisticated geometry, it becomes hard to tell how the conformal map deforms the shapes, because it preserves angles, but doesn't preserve shapes. That doesn't deserve shapes. And it is thinking on those sorts of problems that I think it's worth looking into how to not only compute the map accurately and relatively fast, because again, we have to iterate this at every single time step, but also get a certain certainty that you're actually modeling what you say you're interested in, which is always given in the physical domain. And so with that, thank you very much, and let's take it. Okay, any um any questions?