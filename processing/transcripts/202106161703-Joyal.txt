I have to ask you to repeat many times. Maybe I should put this on, or maybe I wait until you ask a question. Okay, now I start. Okay, so this is joint work with Mathieu Enel, Georg Biermann and Eric Finster. And Eric Finster. And maybe I will just go straight to some convention. I'm going to use infinity categories and infinity topoid, but I will drop the infinity, the prefix infinity everywhere because everything will be infinity. So, for simplicity, it's good to drop it. And if I need to speak about order category, we could say one category or one topoi. I think it will be only one time in the talk where I will have to say one topoi. Okay. And also by the word space, I mean we mean infinity group of it. Uh, we mean the infinity group of it, uh, and this is uh could be, for example, a can complex or a CW complex. And so I'm a bit vague about this, but it doesn't matter. And an isomorphism or an invariable map will be an emotopy equivalence. I mean, it's a I will call isomorphism what we usually call an emotop. What we usually call anomotopy equivalence. So everything is homotopy invariant in some sense. So maybe one day we could use something called omutipita theory to do this kind of mathematics. Omutipita theory has been is quite successful into sort of showing that we can use Showing that we can use this kind of language. This is not just an abuse of language. This can be made very precise. Anyway, also, we are taking the view that topos theory is better understood by studying the opposite category of logoi, as Eric said in his talk. And therefore, a tropos, I will call it a logos. Will call it in logos. The reason for this terminology is really that if you want to work on the opposite category of the category of topoi, I think it's better to have a name for these objects so that you know where you are. Otherwise, you are always have to in a kind of ambiguous way of so that's a matter of being clear, okay. Of being clear, okay, and amorphisms of logoi is a functor which preserves co-limits and finite limits, and the category of topoi is the opposite of the category of logo. And it turns out that Logos is a ring-like object. This is an observation also that can be done for one topoi. I mean the this is uh an observation which is kind of pretty old uh which is in some way known to many people uh so you have this analogy that the co-limit in the logos is like a sum finite limit is like a product and etc Eric described it this analogy today Today, very well. And amorphisms of Lagoy is a functor that preserves co-limits and finite limits, and that is sum and product, like a ring homomorphism. And so, there is, you can draw a tableau with two columns that can go very far. The initial ring. The initial ring is the ring of integer, and the initial logos is the category of spaces. The terminal ring is the zero ring, and the terminal logos is zero. You call it zero, but it's a category with one object and only one unit arrow. I mean, just and you have polynomial rings, you have three logos. Rings you have three logos, so I'm going to write u for the variable of a variable object. If you have a three logos which is freely generated by an object u, you could call it x if you like. I'm calling it writing it u because I like to use x for objects. So it's a matter of having enough left. Having enough letter in writing mathematics. But anyway, now a quotient ring, quotients of a ring are by an ideal J. It will be a lex localization. So if you have logos E and you take a set of maps in E, you could describe the sheaves with respect to this set of maps. This set of maps. And there is a functor, a sheafification functor from E to the category, the subcategory of sheaves of E with respect to sigma. And this functor is left exact, is preserved finite limits in addition to preserving co limits. And also you have extension. Given the ring for like Z, you could add Like the z, you could add new elements. For example, a Gaussian, the number i, i square is minus one. Now, this is something you get the Gaussian integers. This is very useful to be able to do that. I mean, there are things in arithmetic that can be proved about numbers using Gaussian integers. Gauss was the first to do that. And the proof of that works very well if you have the The imaginary number, if you have these numbers, so the same thing in the theory of logo. You can introduce new objects having spatial properties, new objects that do not exist in the category of spaces. Like the number I, the complex number I does not make sense as a real number, but there are objects in a logos that do not make sense in the category of space, but they do. Make sense in the category of space, but they do exist in general logos, and you can use them possibly to prove something about even the category of spaces, about spaces. Okay, so let me recall something about the polynomial ring. The polynomial ring is, of course, free on one generator, which means that each time you have a commutative ring R and an element of this of it, you have an evaluation. You have an evaluation map ring homomorphism from Zx to R that evaluate X at A. And the evaluation is really a substitution of the variable X by A. Okay, so the polynomial logos SU, as Eric was saying in his talk, In his talk, has a concrete description. It's the category of functors from finite space to S. So I write fin for the category of finite spaces. A finite space is like a finite CW complex or a finite or simply set generated by with a number of finite number of non-degenerate simplicies. And so you have the forgetful functor from finite space to space, or the inclusion functor, if you like. And if you exponentiate the forgetful functor by k, then you get actually the representable functor. And by UNIDA, every functor is a cool limit of representable. Is a coulimit of representable. So you can use co-n for that, which is a nice notation. So this is just a unit of formulas for expressing functions appreciative as a collimit of representable. But the funny things about these formulas is that it looks a little bit like a polynomial expansion. You have u to the k for k finite. To the k for k finite, okay. So it's not just u to the n for an integer n, but you have exponents which are finite spaces. You have the right to do exponent with finite space because you have finite limits. And the product fk times u to the k is because you have co-limits. So f of k is a general space, and then you take this product is actually a co-limit of u to the k. Of the u to the k and x by a space f of k. Okay, now this is the theorem that this category of functors, covariant functor functors, is freely generated by the inclusion functor from finite space to S. Okay, so we have a concrete model of this logos. Of the slogos. And the proof is very simple. It's an exercise using unitilemma, really. So I guess I will go very, I will, there is no point actually of reading that. I will leave the epoch so you can, if you have time, read this thing. Now, some remark. If you, in algebra, if you... If you, in algebra, if you have a polynomial, you can use it to define a polynomial function on any commutative ring R. I mean, the polynomial is really something that is waiting to be evaluated in some sense, anywhere. You have PX, and this X is just waiting. X wants to eat something. And so if you... If you, but it's the same thing for this polynomial. If you have a polynomial f in s of u, it's a polynomial in u, if you like, the variable is u. Then this polynomial defines a nando functor in Logos E. And okay, let me give you the formulas for computing it. Okay, f of a is just the same formula as Unila, right? So you take a to the power k, which exists. A to the power k, which exists because the logos have finite limits, and you have also f of k crosses n. So the same formula. That's the evaluation of the polynomial f on an object for logos. You get an undo function of the logos. This undo function does not in general preserve finite limits or preserve equals. It's a general function. It's a polynomial functions on E. Functions on E. So, for example, if you take the polynomial u itself, well, what you get is the identity functor of any logos. So, this speech of polynomial U, which is the variable, becomes the identity of any. Oh, I just wrote tuples rather than logos. Okay, sometimes I make that mistake. Okay, so So now, a warning. If you look at this unit of formulas that I wrote before, it looks a little bit like a Taylor series, kind of expansion of the polynomial f in terms of powers of u, of the variable u. But that's okay, but be careful. This is not Taylor expansion, right? Taylor expansion, right? At all. Because the coefficients of u to the k is the value of f at k. It's very different from the Taylor expansion. Because in the Taylor expansions, the coefficients of u to the k is, as you know, you have to take derivative and you have factorial and etc. etc. So although this resembles some kind of Taylor expansion, this is not. So this formula. So, this formula is useful for extrapolating or extending a functor. In other words, you start with a functor on the category of finite set with value in spaces, and then you can extend it using these formulas, if you like. In particular, if you extend it to spaces, you get the so-called finite array functor from space to spaces. And this is in goodwilly calculus. We often use finetary functors, multi-P functors from space to space, but these finetary functors are completely determined by their value on finite space. And you can use the formula 2 to extend them if you want. Okay, now let's play a little bit of a game with this. If you have a polynomial px, we could A polynomial px with coefficients and integers, and you have an element a in the ring, you can use these formulas to compute the derivative of the polynomial. What you do is that you extend the ring by adding an element of square zero, r of epsilon. And now, since the polynomial, you can evaluate the polynomial. You can evaluate the polynomial on a plus epsilon because you can evaluate the polynomial everywhere. So you can do it on A plus epsilon. Now you evaluate and use the fact that epsilon squared is zero and pop, you get P prime of A. I think that this idea was first understood by Ferma. So this is a very old idea. But it's an algebraic idea. But it's an algebraic idea in some sense, right? Because in some way it has nothing to do with differential calculus. You don't take any limit, you just use the fact that epsilon squared is zero and you get p prime. So let's see if we could do that with functors. Now, there are good reasons to believe that S of epsilon is the category of parametrized spectra. So I will not So I will not try to at the moment to justify this, but there are from many points of view everything is converging to say, well, Michael Ching, for example, said things in his talk that was confirming this. So I'm writing for the category of fermenterized spectra PSP. And by definition, this is actually the result of a Grotto-Sec construction. PSP is Is the Grotto construction, which is written as an integral here, of sp to the b, where b is in the category of spaces. So sp to the b is the category of spectra in s over b and a spectrum in s over b is a family of spectra index by b so it is s to the It is s to the, yeah, and so you get all these nice formulas. They work very nicely. Okay, so we are going to use this idea that S of epsilon is the category of parametric spectra. And this category of parametric spectra is a logos. Okay, this is well known now, but this is an observation which is due to Biderman and Rexin. I learned it in 2007. I learned it in 2007 from Biedermann, and it's a fantastic thing. I mean, people have studied parametric spectra long before it was recognized to be a topos or a logos, if you like, but it turned out to be an infinity logos. It's fantastic. This is fantastic. I was so excited when I first learned that from Biedermann in 2007. It's a fantastic thing. Okay. Fantastic thing. Okay. Now, the base functor. If you have a parametrized spectrum parametrized by a space B, then this spectrum has a base and the base functor from parametrize spectra to S is amorphisms of logarithm. Okay, now you can use that to define the Klein-Rogness derivative because if you have a polynomial, you can evaluate it on parametrized spectra. On parametrized spectra. So this is what I do. Here, right, the horizontal lines are just the evaluation functors of f on any logo. So in parametraized spectra, and you have a commutative square there because the base functor is a morphisms of logo. So the square commutes. And this means that the evaluation respects the fibers. In other words, the functor here, evaluation. The functor here, evaluation functor, actually will define a functor from the spectrum over B to the spectrum over F of B. It has to be. And now it's not difficult to show that this is a stable functor. It is actually a stable co-continuous functor. It has to be, okay? And therefore, it's actually defined by a matrix, a matrix of spectra. The matrical spectra indexed by B cross F of B, and this is the line Rugners derivative of F. All this follows straightforward from, I would say, simple Logos theory. And now you can get the chain rule from that because the composite of two polynomials can be defined by substitution. How do you compose two polynomials? Well, you substitute, let's say. Let's say F into G. Composition is actually a substitution. And since the category of polynomial is a logos, you can do that. Okay, you can do that. And what you get is actually an associative operation. Okay, that's associative. And therefore, if you use this associativity, you get the client Rugness chain rule. So that's straightforward. So that's straightforward. Okay. Now, it's so simple that, of course, one would like to have the higher chain rule for the same, but I don't know how to do that. The chain rule for higher derivative is still out of reach for me at least in this setting. But hopefully. Hopefully, maybe in some future we will be able to get it too, but it's a problem. Okay, now let's go to the Goodwilly Tower of Africa. It's going to a different subject a little bit. We know that the category of n excisive functors from finite space to space is reflective. Is reflective and the reflector is left exact. And it follows observation by Biedermann and Retz that this is logos for any n. In the case n equal one, this is of course the category of parameterized spectra. And now the sequence of localizations defined by Goodwilly is decreasing and And for any functor, you get a tower of a functor by applying the functor Pn, which is called the Goodwillie. I like to call it the Goodwilly Tower or Goodwilly Taylor Tower. I should not, I have a, yeah, sorry for the misprint. Okay, and you have this situation. And you have this situation where you have the category of functors from finite space to all spaces, and you have all these projections, which are the associated N excisive PN functor. And it's very tempting to extend the sequence by taking the projective limit. By taking the projective limit of all these categories of the category of n excisive functors, and you can take the projective limit of that. The projective limit is easy to sort of identify. I like to call an object of this category as a formal goodwilly tower. Formal, a little bit like a formal. A little bit like a formal power series, right? What is a formal power series? Well, it's like a sequence of truncated polynomials. They don't need to converge, but they fit together and they define what we call a formal power series. And the same thing for these formal Goodwill towers. So a formal Goodwilly tower is a decreasing sequence of functors such that Pn applies to Pn applied to the xn plus one is xn. Okay, so they do exist. I mean, there are many examples, of course, because an ordinary Godwilly tower is an example of a formal Godwilli tower. And if I write fin s omega for the category of formal Godwilli tower, just this diagram gives you a functor which I write p index omega. I write p and dex omega from the category of functor from finite space to s into the category of formal goodwilly tower. This functor is just taking p omega, just taking a functor itself. Sorry, there is a misspring for f. I mean f from finite space to s. It takes a functor to its good willy tower, p omega. Okay, okay. And once you see that, you may wonder. Once you see that, you may wonder: is P omega an equivalence of categories? Yeah, I'm naively, okay? And no, no, it's not. So let's see at least one reason why it is not. Okay, so what happened is that there are maps inverted by P omega. There are many maps which are not invertible. So P omega. Invertible. So P omega is there and it inverts maps that are natural transformations between functors that are not invertible as such, but after applying P omega, they become invertible. And these maps that are inverted by P omega are exactly the maps inverted by P0. I mean, sorry, the monomorphisms inverted by P omega are the same as the monomes. omega are the same as the monomorphism inverted by p0 so that's the lemma there the monomorphism between functors from finite space to space is inverted by p0 if and only if it is inverted by p omega. This is a very general phenomena which is true for any important star in a sense. Importance tower, in a sense, explained by Eric Finster this morning. So I will not try to explain that, but it's rather elementary, but it would be a little bit technical. So let's not worry about it. And so if you look at the set of monomorphism inverted by P0, and there are plenty of them. It's a monomorphism inverted by P0, it's an atron from a. Inverted by P0, it's a nasal transformation between two functors that becomes an isomorphism once you evaluate at the terminal object. P0 is the evaluations of the terminal object. So I can produce many examples. So you could invert formally, I mean, you could take the localization with respect to lambda. Localization with respect to lambda in the category of logo, right? So and you get the localization functor from R, write it R infinity, and you manage to factor P omega into R infinity, followed by something I call again P omega. But let's look at the bigger diagram, okay? Before having these localizations are in the Having these localizations are infinity, we had all the Pn that were starting from the top, from the category of finite space to S. But now we can push them down and you have this little step, which is R infinity, which is a localization. And then you have a new pay omega, which is in some sense closer to the category downstairs with. downstairs with with omega and then you may wonder if this new p omega this new p omega if it is a an equivalence of category okay so this p this p omega that i uh wrote there it has a right age one which is taking a formal goodwilly uh formal goodwill tower to its limit if you take the limit of If you take the limit of a formal goodwill tower, it always lands into the category F in S infinity. Okay, so that's the big questions. I don't know. Maybe this is something known. I have no idea. We have no idea. We don't know. Maybe someone knows a counter examples. I don't know. It does not seem to be in the literature. It does not seem to be in the literature. It would be fantastic if it is an equivalence of category because it will be a miracle. I mean, this is because, so I don't expect it to be an equivalence of categories, actually. But since we don't have a counterexample, the question is open. Maybe tomorrow someone will come with a conterexample. But maybe it is an equivalence for a category, but this would be a miracle, really. Okay, so but then the question is: what is this intermediate logos, fin S infinity? What is it? I mean, if you want to answer these questions, we should identify these logos concretely. So I will do that for the rest of my talk. So I will try to describe this localization and what are And what are the functors from finite set to s that belong to this localization in the middle thing? Okay. Okay, so here I recall I need to use the notions of subjective map in the logo. So there is a notion of subjective maps. It's sometimes called by Lurie, it's called an effective epimorphism. This is a very bad name for some reason. Uh, for some reason. So, I like to call it, we like to call it a subjective map. It could be called a cover too, also. So, a map is subjective if the base change functor is conservative. We should not call it an effective epimorphism because a subjective map is not an epimorphism. Well, whatever. Okay, now every map. Every map has admits a unique factorization as a subjective map followed by a monomorphism. In a logos, that's true. So you have notions of image for any map. I'm going to use this notion. This is why I'm talking about subjective maps. Okay, we are going to use the notions of subjective map to define the notions of connected objects. So suppose that you have an object in a logos. I will say In the logos, I will say that the object is minus one connected if the map from A to one is rejected. An object, I will say that is zero connected if it is minus one connected and the diagonal map is rejected. Okay, in general, an object A is n connected if the diagonal map where you have the exponent. Where you have the exponent to the sphere s to the i of dimension i is surjective for i between minus one and n. So that's the notions of connected, of n-connected object. It is standard. It is the same as Lurie notion of n-connected. It's completely standard. There is no ambiguity about what it is. It's one possible definition of what this is. And now we can say an object is infinitely connected if it is. Infinitely connected it if it is n connected for all integer n. Okay, now in the category of space, every infinitely connected object or space is contractible. This is Watted theorem. So now there is a logos which is freely generated by an infinitely connected object. This logos can be described It can be described in many ways. So you can describe it by localization, by left localization, because for an object to be infinitely connected means that you have a certain sequence of map which is surjective. So you can manage to impose the subjectivity sequence of map by using localization. You simply factor each map as a subjection followed by a mono. A surjection followed by a mono, and then you invert the monomorphism. Okay, if you invert the monomorphism in the vectorizations of a map as a subjective map followed by a mono, you impose surjectivity to this map. So that's a way of actually constructing this SU infinity by localization. But this construction does not tell you much about what it is because Because it's a quotient. Maybe everything collapses. Maybe the only local object is the terminal object. So you don't really know what you get. It's a bit like taking the quotient of a ring by an ideal, which is given by generator. You have the generator of the ideals, and you may not know that the unit element is actually in. Element is actually in the ideal of the generator. And then, if this happens, the ring, the quotient ring, will collapse completely because the ideal will be the whole ring. So, localizations are very good to construct this quotient, but you like to have a control of the quotient. I mean, you like to know what you get. Okay, well, what you get is this. I mean, this mysterious log. Mysterious logos that was in between is actually the classifying logos for an infinitely connected map. Okay, so that's an interesting thing. It's not very difficult to prove. You have to play around. Okay, so you should probably have a paper on that eventually. But it's not very deep. But it's not very deep, very difficult, but it just works. Okay, okay. It happens that this logos, this intermediate logos, is freely generated by a kind of generic infinitely connected object. Okay, now I'm going to use and introduce another notion. I call them crystallic functors. Crystallic functors. I just found that name this afternoon because I tried all kinds of name. I called them germ functors or it was terrible. So that's my latest attempt to find a name. Maybe there's a better name. So what is a crystalic functor? If you take If you take in the category of space, you take the subcategory of finite n-connected spaces, okay, let's call it CN, you get a decreasing sequence of subcategories. And this decreasing sequence, the intersection is empty. And you have C0, which is the subcategory of connected space, and C1, the subcategory of one connected space. Of one connected space, and you have as n increased, you have less and less, and the intersections of this is empty. Okay, now I'm going to say that a functor is crystallic if it is the right kind extension of its restriction to Cn for every n. Now, why crystallic? It's because Why crystallic? It's because if you have one of these functors, you restrict it to, let's say, C100, which is a kind of very small category in some sense, and you don't lose any information. Why? Because the functor is actually the right kind of extensions of restrictions to say one or good. And this for any n. This is for any n as large as you want. So you can restrict it and then you can grow it back. And this is why I maybe crystallic is not a bad name. Okay. Now, Turin, a preceieve, it belongs to this mysterious thing if and only if it is crystalic. It's kind of interesting. It's not again very difficult to prove, but. Prove, but it's kind of interesting because if I ask you, give me an example of a crystalic functor. Well, maybe a constant functor, a crystal, but otherwise it can be a bit difficult to find an example of a crystal functor. But there are plenty of them. We'll see that there are plenty of them. Okay, first, acousteric functions. First, a cystatic functor is determined by its value on the subcategory Cn for any n, but there is a little bit more than that. You can say that a functor which is defined on Cn ecstatic if it has this property that it has the right kind of extensions of its restriction to any smaller category Cn. Okay, so that's it. And now let me denote by Cn infinity the category of crystallic functor from Cn to S. Functor from Cn to S. Well, then I just want to make the observation that the restriction functor from the category of crystallic functor defined on fin to the small is an equivalence of categories. Okay, of course. Okay, and then we shall see that every n-analytic function, maybe I should say row analytic, okay, on C rho, okay, any n. Any n analytic functor on Cn is actually k static. Okay, that's the okay. Before saying that, I recall what is the check group weight of a map. Let's say in topos or logos, it's the usual construction of a sempicella object from a map. map and this sample object is augmented by the map itself and I recall that if you take the regalization of a simple object it's the co-limit of this sempject then if you use this augmented sample object the augmentation goes to be Augmentation goals to be, and you take the realizations of this map. I mean, you get a factorization of the map U itself. And this factorization is just the usual factorization of the map by the surjection followed by a monomorphism. In some way, the check group weight of a map is like the homotopy version of the equivalence. Of the equivalence relation defined by a map. So if you have a map from U from A to B, the map defines an equivalence relations on A. And you know that the image of the map is actually the same as the quotients of A by R. So all this works very well in higher tuples theory, except that you have to replace equivalence relation by Siegel group with an etc. Things of the sort. Of the soul. Okay. Now, these things can be dualized. You have the check co-group order of a map, which is obtained by taking push-out, iterated push-out. And you get a co-augmented cool SMPCL object. And now we know that there is notions of totalizations of a cool sample object, which is Object, which is the multi-p limit of this cosmic object, the totalization. Okay, and now I'm going to revisit the notions of n-excessive functors. As defined by Goodwilly, a functor is an n-excessive if it takes a very strong legal category n plus one cube to a category n cube. Now I'm going to use as cost. To use as sort of cool SMP cell versions of the notions of n excessive functors. The bounded n totalizations of a cool SMP cell object is defined to be its limit over the subcategory spanned by the poset K bracket K with K smaller than N. So you truncate delta with the just the simplicity from delta 0 to delta. simplicies from delta zero to delta n and if you take the omotop limit of a co-simplicial object over distruncation i call it the bonded end totalization i just i don't know in the literature maybe they have another name i will be happy to use a standard name if if i'm sure yeah okay now uh it is not difficult to check uh and Check, and again, it must be in the literature, but I was not able to find a reference of that. Is that you can use these, maybe it must be in Lurie. I mean, Luri must have done that. A functor actually is n-excisive if and only if the canonical map from F of A to the truncated n-totalization the bonded n-to totalization is an isomorphism from for any map A from B. Or any map A from B. So that's the you have to use the fact that you can take the compute the bounded n-totalization using a cubical diagram. And there is a lemma in dev synhab, but I Yeah, right. Eric told me that there is something in Luri, but I could not find it. Sorry to interrupt, Andrei. You've only got a couple minutes left. Couple of minutes, right. Yeah, right. Thank you. Okay. Now, okay. If you replace n there by infinity, then you can introduce the notions of infinity excessive functions. Infinitely excessive functor. So you drop the n and you say that functor is infinitely excessive if the canonical map to the totalization of the cosine piston object is an isomorphism for every map in B. And now you have this theorem that a functor is crystallic if and only if it is infinitely excessive. Okay. Okay. And now you have a series of things. First, something from Of things. First, something from Goodwilly: that if you have an n excessive functor, it's also n plus k is extensive for every k. And it followed that an n excessive functor is actually kystalic. That's you can do that. And it followed that the limit of a good-willy power of any functor is cystic. And also, if a functor is analytic, well, that's a result of good willy. Result of Goodwilly that an N analytic functor has a converging, the Goodwilly tower converge on CN for n analytic functor. So that's a theorem of Goodwilly. And you deduce from that that every n-analytic functor is hysteric. In particular, the functor U1 is hysteric. Is crystallic. I wrote crystalli, crystallic, right? Okay, okay, so u1 actually is the generator of this thing. U is not crystallic. U0 is not crystallic. U1 is crystallic. So what you do is that you take u1 and you take its right-kind extension to u and you get the u infinity, you get the generic. Generic infinitely connected object. Okay, thank you. It's like Andre. Any questions? George, go ahead. André, maybe it would be helpful if you give an example of an object in a logos that is infinitely connected but not contractible. Ah, well, thank you. Of course, in the tops of parametrized spectra, if you take the base to be a point, Base to be a point, then the parametrized spectrum over a point is just a spectrum because there's only one point in your base space. So all these spectra over a point, they give you an object, a parameterized spectra, and they are all infinitely connected. So, So actually the well, Pn of the identity in the tuples of the logos of n excessive functor is also infinitely connected. So infinitely connected objects are all over. Objects are all over in Goodwill Calculus. They are everywhere. And the reason, I guess, the show up in this construction that I gave is because essentially they are all over in PN of in the topos of NX. In the top also of inexcessive functors, they are so yeah. So, okay, colleague, you had a question. Yes, your category fin, Andre, that that's unpointed spaces. Is that correct? That's correct. So what do you know what happens? Is there a similar story if you replace that with pointed finite spaces? Finite spaces? Well, actually, what we did was to develop this theory for pointed space first and then check that we could use the result for pointed space to transfer it to unpointed spaces. So somehow the pointed space case is simpler for the reason that the category of n-connected space does not have coproduct. Does not have co-product. The category of n-connected spaces does not have co-product, but the category of pointed n-connected spaces has co-product. And it followed that the category of pointed n-connected space has collinets. But this is not true for unpointed spaces. So, if you want to prove something, sometimes it's better to suppose that there is a base point and And then find a way to remove the base mark. Any other questions? All right, thank you Andre again. Yeah, it sounds like some people are going to go to Gather Town afterwards, possibly some discussion, some of the stuff after the talks. Links or emails, of course. And if not, we'll see everyone tomorrow morning, 9 a.m. Calgary time for the next session of talks. Thanks, everyone. Okay, so thank you for everyone. Thank you, everyone. See you tomorrow.