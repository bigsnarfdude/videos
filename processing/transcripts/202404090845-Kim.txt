And tell us about the generalized brainware. Thank you, Thomas, for the introduction. And thank you, the organizers, for having me and putting everything together for this great workshop. I'm very excited, and I'm grateful. Today, I'm going to talk about various aspects about the benefit of invariant, and my talk will be based on a few different projects with my wonderful collaborators, namely Tamar, Pekkundo, and Saman. Summon. Alright, so yesterday we introduced multi-parameter persistence and persistence in a very nice way. So now we have a simplicial filtration that can increase in multiple directions. So examples mentioned yesterday was the density-sensitive precision homology. The multi-parameter precisions can also arise when we do some type of uninity analysis and also when we have time-varying data on multi-parameter questions. Data, multiply persistence is a source that generates multipolymetric persistence. Okay, so in the one-poly matter setting, we have this nice sparcode. So when you have increasing family temperature complexes, the burst and depth of the homological features are encoded in this barcode. And we want something like that for multi-parameter persistence as well. So for instance, for two-parameters. For instance, for two-part persistence, when we have this type of simplicity of filtration, we may dream of a picture like this. For each homologous degree, we want to have a collection of regions in the parameter space that encodes the birth and depths of homological features in the parameters. And my talk is going to be about defining such an invariant using combinatorial ideas. So, let me give you a basic setup. So, P will be a postet. So, P will be a postet, and F will be a field. And when we have a finite posset, the directed Hasse diagram may look like this. And by assigning vector spaces and linear maps to these vertices and arrows, we obtain precision modules over the given set P. Whenever we have closed diagram in this picture, that must be commutative. That's the only requirement we have. So it's a few-wheel relation, it's a representation of that. Relation, it's a representation of that. So, in short, we can say that just a person module is a functor from the process key to the category of vector spaces and linear maps. But in my talk, I'm going to restrict myself to just finite-dimensional vector spaces everywhere. Okay, now when you have two points in the postet P, the set of all the points between them will be called the segment. And the segment may look like these rectangular regions. May look like these rectangular regions in your given process. A little bit less notion than that is interver. Sometimes people call segments interval, but in my talk I'm going to use interver for this notion. So interval is a connected and convex region in the given poset key. So interval may look like these shapes as well, not only rectangular shapes. And by integer key, we are going to become a positive whole intervert key. And then you have And then we have an interval. We can define the interval module supported on the given interval. We just assign one-dimensional vector spaces everywhere in the interval and the identity map to every arrow in the interval. And any interpret module is indecomposable. And if a given module happens to be decomposed into a direct sum of interpret modules, then we call that interpret decomposable. And the set of integers that appear on the right-hand side will be called. That appears on the right-hand side will be called the barcode, the even movement. And we know that unless P is one of the exceptional foot sets, then N is not guaranteed to be integrated composable. So in the precision homology setting, one parameter precision homology will measure to integrate composable modules. Sometimes we have a filtration that sometimes increase and sometimes decrease along the real line. Then we have a ziggujac persistence that is still interverable decomposable. Integral decomposable. And when you have a multiply persistence, we may not have interval decomposable module. And what's worse is that individual intercomposable summons can be quite complicated. So even if we know the decomposition, we may not know how to interpret such a summary. And in this regard, the paper by Carson and John Morian also showed that there is no complete discrete invariant for multi-parameter persistence. Parameter persistence, and they say we still desire a discuring invariant that enables detection of persistent features in a multi-filtration. And to this end, they propose the ranking variant. Okay, so the ranking variant can be viewed as a map that sends each segment to the integer values. So when we have segment PR, we will have this type of rectangular regions starting from P. Starting from P and we need R. And remember that every diagram is commutative, so we have a unique map from P to R, and we assign the rank of that map to this vector. And we are somehow measuring persistence through the Langevin segment. That's what we do with ranking variant. There are some remarks. The ranking variant of two primary precision modules are quite extensively studied. It's efficiently computed. It's efficiently computable and visualizable. But the description power of the ranking variance is limited. For instance, I can give you a pair of interval decomposable two-parameter precision module that are very different in terms of interlinking distance, but they can have the same ranking variant. So somehow we would like to intense the notion of ranking variant to a stronger one. And a natural idea is to. And a natural idea is to try to extend the domain of the ranked invariant to a larger one using some natural ideas. And for that, we are going to make the following observation. When you have a one-parameter persistence, the right from P to Q, so we have vector space at P and vector space at Q, and the vector space sitting at P can be viewed as a limit of M, from limit of M restricted to a segment P. And the m at q can be viewed as a full limit of m restricted to the segment p cubed. So, based on that observation, we can extend the notion of rank so that we have now arbitrary cluster module over p and we have an integer. And then the rank over the interval can be defined as the rank of the canonical linear map from the limit of m over i to the collimitum m over i. So, here is a Over. So here is a part channel. So suppose that we have this type of integer, then everything here is commutative. So linear is nothing but a vector space together with this linear maps, and everything is commutative. And the polymit is there, and everything is commutative. Because everything is commutative, whatever path you take from the limit to the polymit, that will give us the unique linear map. And we assign the rank of that unique linear map to this interval. Okay, now we have the definition of the generalized ranking variant, which is a map that sends each interval to the rank over that interval. So now we are measuring the persistence through the Lengel intervals, and the meaning of this will become clear soon. And a few remarks: the domain of the generalized ranking variant actually can be further extended. So the collection of all control. So, the collection of all connected subconcepts, okay. And it's a strictly stronger invariant than J invariant defined on the collection of intervals. But in this talk, I'm not going to talk about that large domain. And another remark is the monotonicity. As your interval increases, the rank value decreases. The rank corresponding to smaller interval is actually a factor of the map corresponding. Of the map corresponding to the larger integral, so the rank value should be smaller. So we have this smaller t. All right, I would like to give a short remark that we can view this ranking variant as a framework of multi-big invariants. So we have a bag of full sets in the ranking variant setting. We have a collection of intervals that in P, and we have a natural embedding, the inclusion. The inclusion and the rank is the invariant we take care of. And then when we have this choice of integral and the rank, not choice of the rank, but we have the pullback of the inclusion map, the pullback of the diagram via inclusion, and we measure the rank. That's what this ranking variant does. And we can extend this framework border so that now instead of considering rank, we can consider considering the rank Instead of considering rank, we can consider any other inventory. And that was the idea related to what Emerson discussed yesterday. So, one example, such example is gigzek passing that barcode. So, we consider collection of gigzek puset and all the order preserving maps from gigazag pull set to the key, and then we can just investigate the barcode over such gigazeg input or gigazag. And this type of motiv idea actually appears in many different studies, including graph theory and metric geometry and category theory. And also, a recent work in persistence by Emil Prosto and Hansen used the order embedding to study persistent modules. That's also related work. And maybe other work is actually persistence delayed. Okay, now let's see. Okay, now let's see what the rank invariant and generality invariant measures. So here is the first perspective. So in this one parameter question setting, the rank from P to Q in this picture would be 1. So the red bars are the barcode. And why the rank is 1? We can figure that out by looking at the barcode. So only one of the bars spans the entire G-tube, right? And another way to view And another way to do that is we restricted the module to the segment feature and then count the fully supported integral module in that restriction. We can extend this observation to a general setting. So we have arbitrary pressure module and arbitrary interval. And then we restrict our module to the given interval. And then we consider independent decomposition and we count how many of them are ICE. How many of them are isomorphic to fully supported integral? And then the number of copies is the same as the rank over the integral R. Another viewpoint is the following. So the rank here can be viewed as the kind of measure of non-degenerateness from Q to Q. So such perspective also extends. So when you have interverse So, when you have an interval in the postet, there is a well-defined notion of lower events. It's a well-chosen lower area of the interval. I'm not going to define it precisely. But one thing we can observe, for two-parameter persistence, you can exactly see this point as a lower fence. And then a limit of m over i is isomorphic to the limit of m over the lower fence. And so. And so P here is discrete or finite? P doesn't need to be finite. For arbitrary P, we have a notion of rural fence, but raw fence might not be finite as well in that case. And then we have a notion of upper fence, and then we have a two-dimensional. So the per limit of m over i is isomorphic to prelimin of m over upper fence. So I for the question, but what is an e to i? It can be round. Yeah, it can be round, yes. Yeah. And the lower fence is not uniquely defined. I chose the minimum one in this picture. But the precise definition is here, if you're curious. But you you is the definition of interver clear in the mean filio set? Not clear yet? Okay, so it should be connected and convex. Okay, so it should be connected and convex. But connected, so it's a connected means really whenever you pick an arbitrary two points in the interval, you can find the finite sequence between them where considered points are compatible. That's what I mean by connected in the continuous positions and in the arbitrary possibility. Okay. Yeah, the definition of lower face of perfect stairs, but it may not be unique. But anyhow, But anyhow, because of this isomorphism, we can say that the rank over I also measures the non-degeneratedness from lower fence of I to the upper fence of R. All right, third viewpoint. So this is more specific to just two-parameter persistent module. So when we have two parameter persistence and when we have this rectangular region, the rank over that rectangular region Rank over that rectangle is the same as the following. So we restrict the module to this diagonal line from the minimum to the maximum, and we compute the barcode over that one-parameter persistence, and we count the number of full bars over that. And the same interpretation can carry on to the arbitrary integral. So we have now this integral, and then maybe consider its lower fence and upper fence. It's lower fence and upper fence, and we connect their leftmost point, and then we have the ziggujac persistence, and we count the number of full bars in that zigzag persistence. That's the same as the ranked full bar algorithm. The very nice thing about this result is that the generalized ranked invariant for two polymer question modules can be computed using zigzag question homology algorithms and software computing zigzag question homology algorithm homology is available out there, so we can use those software. We can use those software for computers. Alright. Okay, so ranking variant is easier to compute, but the generalized rank invariant is stronger invariant, but difficult to compute. And the main difficulty is that the size of the set of all intervals is huge. On the previous slide, so so if you fix an interval, you can evaluate it, you don't need to do like this. If I wanted to find a maximal interval, If I wanted to find a maximal interval that that has adapted this argument, but so if you fix an interval, you can probe what it's what it's generated as grain piece using the zigzag algorithm, right? Just move around. Yeah. But suppose, but of course if I took a subset of that interval, it would also be, I mean, usually set the rank is one of them. Yeah. Suppose that, so you take this interval and you find out its rank is pi. Yeah. Now I want to find the largest interval that contains this interval, whose rank is. I haven't thought about that. So you mean the arrow is infected, right? Yeah. I mean, you can of course keep rolling, but I'm just a little bit confused about the orientation of the arrows in the lower most diagonal. Oh, right. So this is the maybe confusion comes from this arrow. Check the fluid. Yeah, because some of them seem consistent with the order. Oh, right, right. So it's a lot of. Oh, right, right. So it's our local mistake. So this one should be flip, and this one should be flipped. So it's just how the underlying relationship. Okay, that's the reason why many people are not confused. There could be many such intervals, right? Of course, yes. All right. You could ask for it. Yeah, so the size of the set of intervals is huge. The set of integers is huge, so we may want to restrict the generalized ranking variant in a nice way. So, here are some natural questions: how to restrict, if possible, the domain of the generalized ranking variant without loss of information. If it's possible, that's one valid question. And when can we encode the generalized ranked invariant as a persistent diagram? When you have one parameter persistence, ranked invariant can be encoded as a persistent diagram or barcode, but can you do that? Or barcode, but can you do that for a generalized ranking variant in a multi-target setting? And third question is: how does the displaying power of the generalized ranking variant change as the amount of the resolution varies? Okay. And other extra questions of interest are the following. So what's the relationship between the generalized rank invariant and other invariants of multi-parameter facilities? Are there invariants of multi-parameter persistence? And is there any type of stability for generalized ranking data? So, I would like to address these questions. All right, let's talk about the first two questions. So, can we restrict the generalized ranking ring in a nice way? And can we include it as a person dialogue? So, when we have a two-parameter person module, we often have only finitely many critical points in the filtration, right? In the filtration, right? So we have a filtration of finite simplicity complex and burst of single simplicity happens only in finite n points. And in that case, we can observe that the precision module obtained by applying the homology to that filteration will be locally constant like this right-hand side picture. We draw the segmentation that contains this point, and then the question. And then M will the question module obtained by this applying the homology to the filtration will be constant on the these blocks, right? And there are many terms that explain this type of partition module. One is M is finitely presentable. And these are not equivalent notions, but this example is intersection of all of these. M is finitely presentable, and M automates a finite constant subdivision. Automates a finite constant subdivision in terms of Israel Miller's work, and M is constructable in terms of Patel and Maclear's work. So in that case, maybe the most important intervals are the intervals that the ordinate to this segmentation, right? And that really should be the case. And let's make the following observation. If we compute the rank over this curvy integral, that does not, that is not subordinate to. That is not subordinate to this segmentation. There will be actually the same as the rank of the interval that contains this interval and the smallest one among those that is subordinate to this segmentation. You can find such and the rank will not differ. Okay, the similar situation, the analogous picture is that we have the forward function over the real line, then the set of integers. Then the set of integers is a set of critical points, right? So maybe these intervals are critical intervals for the generalized rank invariant. So we replace this x-axis by the set of intervals in R2 who possess this chemical picture. And the order is an opposite of the inclusion. And the rank value corresponding to this curving interval is sitting here. And the rank value doesn't change until it hits this uh segmentation button. Segmentation ordinate subordinate interval. And then we can say that the intervals, the critical interval is a set of critical points for the generalized ranking variant. Okay, then our expectation is that generalized ranking variant can be compressed into its restriction to these critical interverse without loss of information. That's our expectation. And because there are And because there are finitely many critical points in the plane, these intervals, critical intervals will be also finite. So we can perform the Mobius inversion over the collection of critical intervals. That's the idea. So in a sense, when we have his forward function, we are identifying where the changes happen by identifying their critical sets and use the Movius inversion formula. Now I mentioned Movius. Now, I mentioned Mobius inversion, so I'm going to briefly give you what the Mobius inversion is. Actually, Amit was giving the nice overview yesterday. So, let me begin with the incidence algebra. So, I'm going to restrict myself to finite coset for a while to simplify everything. So, incidence algebra of a finite coset q will be the set of all functions from segment. Of all functions from segment Q to F. And when you have an element from the incidence algebra, I power will be used for I power segment S t. And because Q is finite, we can name the elements from T1 through the T2 such that Ti less than Tj implies I less than J. Once we finish such labeling, then each RPA can be viewed as an upper triangular matrix. can be viewed as an upper triangular matrix where i ij component is i power ti tj and zero below the diagram and once we have this matrix interpretation the multiplication between two elements from the incidence algebra will be matrix multiplication because upper triangular matrices are invertible if and only if the diagonal entries are not If and only if the diagonal entries are non-zero, instance algebra element will be invertible when that happens. And now let f to the q be the collection of all functions from q to f. Then the incidence item element nicely acts on the d subset. So we have a function from q to field f, and we can view that function as a row vector, where i's element is f of t i and then we can multiply that by instance i to the element. Can multiply that by incidence algebra element, then we again have a function from build F. And there are some special elements in the incidence algebra. One would be, of course, the multiplicative identity, which is the direct delta function. And another is the jet function. So ij entry is 1 if the entry corresponding to i0 is less than or equal to entry corresponding to j0 and 0 else. And zero else. And you can see that the diagonal entries are here one, therefore it should be invertible. So the inverse matrix will be corresponding to the function in the incidence algebra, and there will be the Mobius function. And now let's see how these elements act on the function from to f. So delta was the identity matrix, so we will do nothing to f, so we have this equation. And f delta is the interesting. And f jetta is interesting. So it's at Ti, the function value is the set, same as the sum of all the f values up to that point ti. It's a combination of the values up to ti. And for me, I do not have any specific to say. I'm just applying the multiplication formula here. Okay, then the Mobius inversion formula follows. So we have two functions from g to f, and suppose that f and g. And suppose that f and g satisfy this equation. So g of t is equal to the sum of all the f values up to t. And then we can solve it for f. So f of t is the same as the sum of all the g values up to t, but the coefficient of g of s will be mu s, t. And the proof should be quite direct from our setting. So you can notice that the left-hand side is saying that g is equal to f times. Is saying that g is equal to f times zeta, and zeta was invertible, so we are multiplying both sides by zeta inverse, then that's the right-hand side, so that's the end of the truth. And in that case, we call f the mobius inversion of g. f is similar, f is analogous to the pdf in the probability, and the g is analogous to the CDF. And f is the derivative as the commit mentioned yesterday, and g is the antiderivative of f. Alright, now the general expression diagram is nothing but the Mobius inversion of the generalized rank invariant over the put set of integers. By the way, I would like to first mention that Imparta first utilized Mobius inversion to define the generalized diagram for functors from the real line to a category that may be different from the vector space category. And this is a generalization of. And this is a generalization of that. Alright, so by definition, we have the relationship, this relationship between the generalized rank invariant and generalized position diagram. The generalized rank over I is the same as the sum of the older DGM with J's, where J is larger than I, and J is containing I, and J is in the integral. That is something we are familiar with when we have a standard persistence, when you have a question diagram. Persistence when you have a Persian diagram, and we compute the rank over a certain interval. That interval records point to a certain point above the diagonal line, and that rank is the same as the number of points sitting in this quadrant from the person diagonal. So, that's exactly generalizing that fact. And we can also safely replace the domain of the generalized ranked invariant by a subset. Ranking variant by a subset split I of the zero in. Now, the movie's invertible ranking variant. Now, the putset P will not necessarily finite. We have a partial module over P, and then its generalized ranking variant will be called Mobius invertible. If there exists a locally finite process script I, which is a subset of integers, satisfying this equation. The left-hand side, the The left hand side, the input here can be arbitrarily interverted. But on the right-hand side, this DGM is the Moviest version of the generalized ranking variant defined on script I. So the choice script I matters here. So this script I has the role of the set of integers in the fluored function. That's another thing here. Alright, and if the generalized rank invariant has such a script I, then we call the generalized ranking variant smogger s inverter. And there are some theorems we can say. First of all, if your personal module is finitely presentable, then each module is invertible, as we already expected at the beginning. So we can just show that the relative So we can just show that the rate invariance is mobile invertible over this set of critical intervals. And that looks very natural and maybe it may look trivial, but writing down all the details was kind of worried. All right, and the second item is that for any introverted composable pressure module, the generalized length invariant is modius invertible. And the proof is that we define functions. That we define function on the set of all intervals that send each interval to the multiplicity of that interval in the composition of that. And then you restrict this function to the support, and then your generalized ranking variance will get invertible over the support. And that will be the DGL speed file. And a consequence of item. And a consequence of item E is that any one parameter pressure modules, each ranking variant is mobile invertible. And because we know that any one parameter pressure module point wise finite dimensional is introverted composable by Chloe Boig. And the interesting thing is that we do not require that M is finitely presentable or constructable, even without such assumption. Even without such assumption, it would be simpler is very different. Okay. So, in this previous definition, we have this twist of script I satisfying this relation. Sorry, could you go back? Yeah. Ah, I has to be locally finite, not finite. I see. Okay, okay. Locally finite, locally finite means. Vercoi finite means that this is a set of intervals. Then, when I pick a pair of intervals where one contains the other, there should be only finitely many intervals between them in the script art. In general, locally finite puts that means that whenever we pick two comparable pairs, there should be finitely many points between segments contains finitely many points. Whether the introverts by inclusion? Yeah, inclusion. The reverse of the inclusion context. inclusion the reverse of the inclusion but assume do you also need to assume that the summation the sum uh so the summation it should be finite i mean uh the summons in the summons there should be only finitely many non-zero summons. Okay. Right. So just saying that script I is a local finite actually is actually not enough to claim that your generalized ranking there is Mogas the Ranking there is more convertible, but yeah, it should be convertible and we should have DGF script up. That's what's required. Let me ask, I really like the definition in terms of things. Is there a way to make uh this definition in that? Like maybe you would mean oh I okay, so this Oh, I okay, so this is there a way to make this definition work in that framework? Is that the question? There will be something we can discuss after the talk. I haven't thought about that. Alright, then, okay, so we have this choice of script I, so I would like to introduce equivalent definition, which does not involve any choice of script I. So your generalized rank invariance will be just invertible. If there is just a map, If there exists a map from the set of all the integers, so negative integers satisfy this equation. The proof is relatively simple. So when you have this above definition, you trivially extend this design script i to the function defined on the entire interverse, where the function value is zero outside script i. And when you have this function d, you restrict function D, you restrict your D to each support and then it should remove the symbol over that support. That's the way we go to. Okay, and the uniqueness of D, when we have this D, we expect that it should be unique. And if that's really the case, then we can write D for DGM. I can I have 10 minutes, right? Yeah, D is unique. The proof is a little too simple, so I would like to go over that. Suppose that you have D and D prime satisfying the equation, and let's say script I and script I prime support two of them, and then we have these equations, and we're going to subtract the both sides, then zero equals this summation, and zero, the i can be arbitrary intervert. Can be an arbitrary intervert. And here I'm going to see this function d as a function defined on script i union, script i prime, where d vanishes outside script i. I do that for d prime as well. It is defined on the union, but it vanishes outside script i prime. Now, if this is true, then this is also specifically true that for all intervals in this union also satisfy this equation. And if that's true, then we can observe that this equality is saying that d minus d prime is the Mobius inversion of the zero function. Now, Mobius inversion is unique, and we know that zero functions in Mobius inversion is a zero function. Therefore, zero should be d minus d prime over this union. And then, if you remember, d and d prime are supported by script i and script i prime, you can also say that d minus d prime. So, say that t minus t prime vanishes from the whole set of integers. So, the moral of this movie's invertibility is that to define the generalized question diagram, we do not need the assumption that the several integrals is locally finite. What's needed is more like locally constant enough ranked invariants or generalized ranking variants. Okay. Okay. So I would like to compare the DGM with the rank decomposition that was proposed by Odnano Parmanudo. So the idea of the rank decomposition is that, well, the pressure model might not be interpreted decomposable, but we may be able to decompose its ranking variant as the subjection of the ranking variant of the interpreted composable models. Then we will have this positive part and negative part. And then we have And when we ha have that the intervals from the positive part do not have an intersection with the negative part, then this requires the position called minima. And these positive intervals correspond to the DGM are larger than zero, and the negative part corresponds to the negative part of the DGM. And the rank invariant is mobile invertible if and only if the generalized rank admits the rank decomposition. Sorry, decomposition. And I would like to note that this equivalence was noted by Bhutano-Permanudo under the assumption that the collection of intervals is locally finite. But now we do not need the assumption that the collection of intervals is locally finite. Okay. And now I would like to compare three different notions about structural simplicity of question modules. So construction of the simple Constructability and movies invertible, the generalized ranking variant, and the finite constant subdivision. Where I might not introduce all these definitions, but let me just say the conclusion. So constructability implies also that it's a very strong assumption. But if you compare these two, one does not imply the other. So let me first show that this implication doesn't hold. So suppose that we have. So, suppose that we have an interpol decomposed of a module with infinitely many subnets. That can be possible when your process is infinite. And then, rank invariance is more just invertible by the theorem we saw. But it may not be the admit the finite constructs of data. This is an example. So, we assign, we have a G module over integers. We assign one-dimensional vector spaces everywhere, and the structure maps are zero maps. Structure maps are zero maps. So we have infinitely many regions, constant regions. It does not have any finite constant subdivision, but it's more symbolical because it's integrative. And the other way around also doesn't hold. So here is an example, which looks a little bit complicated. Now I have a two-parameter pressure module indexed by T2. And how to see this picture? So this So this consider postet map from G2 to this right hand side postet and the map is defined using this color point. So the blue region points go to this blue and the yellows go to yellow and red goes to yellow and the zero, the gray regions go to gray. And now you pull back your question modules defined on this finite cost to G2. So then this module is well defined. Then this module is well defined. And then you can show that this module, the generalized ranked invariant of this module, is not module symbol. I may not go into the proof details, but the thing is that if you assume that there exists DGM satisfying this equation, you will get some contradiction. But I will get back when I get some questions in the discussion time, but I'm going to move on. I'm going to move on in the interest of time. Okay, so far, we discussed these two questions, and the third one is: how does the discrete power of the generalizer invariant vary as the amount of the restriction varies? Okay. For simplicity, I'm going to, for now, assume that this script i is finite. And then what's known from Boden-Opermanudo is that the generalized ramp invariant, the finite known script I. invariant defined on script I is a complete invariant on the collection of all I decomposable module. This I decomposable means that your module is interval decomposable and those intervals are coming from this script I. And the question, the short question is whether this theorem is optimal. Okay, so for that I need to introduce a few more definitions. Let L be a set of Let L be a setup in the composable T module. It's not the setup in the composable T module. Then your personal module will be called L decomposable if every indecomposable sum end of M is isomorphic to an element in script L. And we fix a script I and we have a generalization invariant over that and that was the complete invariant over all I decomposable modules. Over all ID composable modules by Otnamanudo. An interesting part is this part. So suppose that you have script L, which is strictly larger than the integral modules coming from script R. And this L may not consist only of integral module. It can contain other modules as well, non non integral module. Then your ranking variance defined on script R is not anymore completely invariant on the collection of all L D components of the module. Of all L decomposable modules. So the proof idea is to just construct a non-isomorphic pair of p-modules that have the same generalized ranking variant over speed I. And for this construction, you are going to utilize the Mobius inversion formula. Okay, and I'm going to skip this. So this is this optimal? Yeah, in a sense, it's yes, that's what I want to say. That's what I wanted to say. And another sub-question is about the discrete power of the generalized ranking variant for two-parameter pressure model. The motivation is that for two-parameter pressure module, we are able to utilize persistence for the different generalized ranking variants. And when you apply that theorem to this interverse, this is the interval in R2, and it has this pinched point, it is still connected. And when you apply that, you will. And when you apply that, you will consider this GBJ task with replicated vertices. And we would like to somehow compute the generalized ranking variant using G-Bejek persistence in an efficient way. So one valid question is, how much can we restrict the class of GEXAC paths in the one parameter persistence to compute the generalized ranking variant? So more concretely, can he by any chance compute the generalized ranking variant? By any chance, compute the generalized ranking variant using the zigzag barcode over only simple paths that does not have any repeated vertices. If that's true, that would be nice. If that's false, then what about the other way around? Can we recover the GPJ quite control for all simple paths? And if yeah. What is the significance of the EP version? Why is this a problem? Why is it? Oh, there is no problem. What why is it? Oh, there there is no problem. But we want to compute generalized ranking variant in an efficient way. So we want to somehow minimize the class of tests we have to consider for computing the generalized ranking variance. So try to minimize such and also for clarifying the discrete power as well. So the conclusion is that the generalized rank invariant does not determine Invariant does not determine the exact variety of a simple test, and the other way around also works. But the more interesting thing is that one estimates the other quite nicely. So that's the bottom line. So the moral is that via this theorem, we get a sense of how much of the GRI generalized invariant is recovered from the simple zigzag part. So it's a it has a computational implication. Computational implication. And also, we now see the limitation of the discrete power of the generalized maintenance. It cannot determine even the GPZ variables in your question module. Okay, that was about question three. And I'm going to move on to question four and question five. And I do not have much time. For this comparison, I would like to mention the bi-grade. Comparison: I would like to mention the vibrated data numbers and multi-grade numbers. The generalized question diagram or generalized ranking variant can be utilized for computing the bibliothed detection numbers, where the generators appear in the free resolutions. Once you know the generalized position diagram, you can utilize this corner point to rid of the migrated weight numbers. That's what I would like to say, without too much details. Without too much details. But when you try to extend it to three primary person modules or higher primary person module, that is not anymore true. So you can find a pair of three parameter percent modules that have the same bi-graded vector, trigraded vector numbers, but their generalized ranking variant. They are generalized ranking variants the same, but their multi-graded numbers are different. So it also shows us. So it also shows us the limitations of the disciplinary power of the generalized ranking variant. And stability, very briefly, is the generalized ranking variant stable. It's stable in the erosion distance sense. So let me introduce the erosion distance. So it's defined as suppose that you have a virtual partner Cauchy module, and the erosion distance between their generalized ranking variant is the incremental. rank invariant is the integral of epsilon for his for all int over i your rank of m over epsilon decant integer should be less than equal to the rank of n over int over i and you should also have the inequality that is obtained by flipping the role of m and n that's the erosion distance and it's known that the erosion distance between geologic ranked invariant is upper bounded by the interleaving distance Is upper bounded by the interleaving distance between precision model. The proof idea is to just inducing this map R5 and beta. So this is the limit to pooling map from the top to bottom for M over I thicken the interval. And in the middle, you have the canonical limit to pooling map for N over I. And once you can induce R prime beta and make this diagram commute, then you can show that you. Then you can show that you were showing the inequality that you want to show. And you can induce such maps using the interleaving between n and n. The third limit you call. Yeah, yeah, yeah. Thanks. And you can also further actually restrict the domain of the generalized ranking variant to script i as long as it's closed on the original beginning. And this distance will be easier to compute. And also, you can replace this R D by any other put set key as long as your key has some notion of each longevity. So you can look at the theater burning and collaborators paper about polylinear family and so on. Okay, and also the stability of the ranking variant has been studied by Lendi, the matching distance stability, and the Udna Uprana. Udo and Skokola also use the Rankine character. Use the ranking jack structure on stability. And let me summarize. So, we introduced the generalized ranking variant as a measure of persistence, and we addressed these questions. Can we restrict the domain without loss of information, and how can we input it as a diagram? And describing power, the general statement, and specific parameter persistence, and the relationship between the general invariant and the Between the generalized invariant and the multiplicated numbers and the stability. And I would like to emphasize that when we address these three questions, mobile C inversion formula plays a central role. And yeah, and maybe one interesting progress would be strengthening this stability reader to a stronger one. And another thing I would like to mention is that this example was not more. Example was not mobile symbol. And that implies that there is no finite sequence of integrated composable modules that look like this with the property that the rank invariant over mi is equal to the sum of the corner of fi plus that. And if that happens, then rank decomposition is possible, and ranked decomposition possible means ranked invariance more just invertible. It shouldn't happen. I think it should have some information. I think it should have some interesting implications. I would like to leave this as a question to you. Thank you for paying attention to this question. Thank you very much. Are there any questions, comments? Yeah, you explain that again. Yeah, so let me go back to that slide. Yeah, so suppose that this DGM exists, and here's a landmark that we use. Suppose that you have an integer that has That you have an interval that has rank value larger than zero, and once you enlarge this interval a little bit, then the rank value becomes zero. Suppose that that happens for this interval I. If that's true, then your rank value over i is the same as DGM over I. That's a lemma. It requires some proof. But once you have that lemma, what I can do is that I do, can I I do. Can I enlarge this? Yeah, so you can find this tiny picture. So like you can find a maximum interval, like non-zero rank maximum interval, and there are infinitely many. And it contains a specific point. Like all of them contain some specific point, which is negative 1, negative 1. So that's, because that's the case. So that's because that's the case. If you plug in this single-tone interval to the OBO formula, so your I is now the single-tone interval. And because you have this maximum intervals containing this negative 1,1, you have infinitely many ones on the right-hand side. So this equality cannot happen. You're in the setting of a negative coset. Sorry? This requires the coset to be infinite. Yeah. Yeah. If you have finite coset, you can. Yeah. Yeah, if you have finite postal, it's always important. I mean, in a sense, this the the core idea of this construction already suggests a way to work around this issue because this arises from a positive that is very well mobile synvertible and then you apply a reparameterization in a sense turn it into a positive that has no but but in a sense like if you make your setup flexible that that this You set it flexible, that you can factor something that is inaccessible to your methods. It's rules that something that becomes accessible, then that could be a way to turn this into something you could call it essentially remotely. After suitable representatives of the index composer. I think in many cases it's reasonable to not take the index imposer for granted. To not take the indexing positive for granted, but to try to find factories to something more reasonable. That's the very idea of Kestra's definition, I think. The finite question remarks: I saw in the fine print the name Brian Keats appearing. You were kind of the first one, considering that it is going to be red, but yeah, yeah, the rank code diagram. Yeah, yeah, Tinsworth was the mystery. 