 Hi, I'm happy to be here. I'm presenting the work that is done in collaboration by these people. Interesting. These people. Interestingly, I mean, not all of them are physicists. Although the work is mainly about developing data-driven methods for dynamical systems. And for now, I don't show any real application. Although, one more time, three of us have that background in astrophysics, including myself, some work in distillation in the past. So, we hope these methods can be obvious. Mainly our applications that are. Or the applications that are about dynamics and evolution of complex dynamical systems and data analytics for spatial temporal data sets, so predictions and pattern extraction. And given the fact that this is for astro statisticians, I just decided I would show some recent work that is drawing on some analogues in between statistical approaches. Between statistical approaches, namely quantum mechanics and dynamical systems. Also, the work is in development for over 10-15 years. So, in particular, this all is about looking at data-driven approximation of compound operator that is governing the evolution of observables, meaning functions of the dynamical system. Of the dynamical system. So we don't work on the dynamical system and state space itself, which may be very non-linear and complex, but we work on the spaces of observables. And this is a typical... This is a Hopan operator has been introduced over like around 100 years ago and recently it got a lot of attention in data like machine. In a data machine learning community, because of the fact that it can be nicely approximated by different machine learning methods, given the fact that it's a linear operator. And because that you work with linear operator instead of non-linear dynamics, is that you work with infinite dimensional space, so when it comes, this may be an issue. But we can use a lot of tools. But we can use a lot of tools from here algebra to look at the dynamics through valences of observables. So we have been looking in the past at data-driven approximations mainly using kernel methods and we have been extracting patterns or spatial temporal patterns for complex systems that deal with different multi-scale problems. And we have been looking at some predict we have been developing. We have been developing some schemes to predict different phenomena in the systems. And what's nice about that is that the way these methods are constructed by this particular group allows it to provide a lot of interpretability, so maybe answer some physics question. However, so given the fact that here I'm for statistics. Here I'm for statistics group. I'm just mentioning last few years we have been looking at trying to use this framework and develop data-driven schemes that draw an along tree between classical dynamics and quantum mechanics. So here these are the analogies that I'm just showing. So for quantum mechanics you have some Hilbert space, you have also a space of quantum space, but as But includes operators, bounded tracer operators that are positive and they have trace plus one. And then you have also observed that act on the same filter phase, and also you have unitary motion operators, but takes you from the Hilbert space to the same Hilbert space. And in terms of classical dynamics, you have some complex systems with invariant measure mu. Invariant measure Î¼, and associated with that, you have some probability density. So, that is a function that takes you from the given state space to real numbers, and it's more than zero, and it's integrated to one. And also, you have observables that are bounded functions, taking you to the real numbers. So, what would be our measurements, observations, and then you have coupled operators, but And then you have coupon operators that act by composition of some dynamics with the states with the function. So which are, as you can build the system frameworks that are compatible, especially where there is a good mapping between quantum states and classical probability densities and also observables and dynamics. And just wanted so just to make one. So just wanted to point out that from the external point of view, here simply all the different methods but different groups developed and including us in us, there's just one operator. Here we work with much, here we have a framework that we'll be using, but actually look at and phrases and look at the dynamical system in a much more abstract way, having three different Trackway having three different operators, but we are actually associated with given dynamics, observations, and also the state itself. So and the different frameworks we develop, this is just one, the most recent one that is very much in the infancy. Usually try to follow some very, very structured way or a strategy since the the main developer The main developer, but he's from the same department of mathematics in Antarmov, is very much into very solid and mathematical frameworks for many reasons I will mention. So usually the way it works, we start with a very classical dynamical system. Therefore, I want to go first embed it into a much more abstract mathematical space so we can afterwards project it into a data relevant. Projected into a data data basis. And this is for many reasons, but gives you a lot of power in terms of building a very robust framework, but have a lot of guarantees when it comes to convergence and also interpreted ability, and also some preservations properties, such as preservation of positivity for your probability. Positivity for your probability distribution. So, here, specifically, the last framework we tried to develop was the one you could implement on quantum computers. So, that would be the last level. So, the goal is to build this structure, but first of all, we'll be able to we will be able to implement on a co classical computer c Classical computer, quantum computer, with a shallow quantum throughput, and also that we will be able to do some predictions. And in the case of quantum computer, our interest will be mainly point-wise predictions. That's what you want for quantum computer. And for now, the only systems we managed to tackle we work on are very simple ones, like for classical dynamics, but with pure point spectrum, so not a continuous chaotic systems. Not a continuous chaotic system. And for that system, we manage to build some, use the structure of the spectrum to build the specific circuits. And also, so given that, what we want to do, we want to take the state space and embed it into the states of probability measures. So here it will be borrowed probability measures, but are direct measures in the case for this specific Case for this specific diagram here, and that these probability measures evolve in time through this map. And afterwards, what we want to do, we want to embed these probability measures into this quantum mechanical space, infinite-dimensional space, where the state of the system is represented by density of atoms. Of objects. And after embedding that into infinite dimensional space, you want to project it down back to the space Bn, which is associated with a tensor product space of a size 2 to the power n, but one can implement on the quantum computer. And one more time, all this means, but here we have embedding and then projecting, and also we want to do it. Projecting, and also you want to do it in the way that these diagrams ideally commute, at least for the system, but some systems, and meaning that it doesn't matter which way you go. And but it gives you a lot of warranties, but these are robust algorithms, but when you increase your number of samples or qubits, the predictions converge to evolution. And here, for example, this is the For example, this is the simple system that we work so far for this very last algorithm we developed, is a total of the dimension 2d, and it is parametrized by frequency, the number of frequencies that are rational invariant, meaning that you cover the whole course with observations, so it means that the system is ergodic, so that means that you really sample the whole system. means that you really sample the whole system. And for that system you can actually use a Fourier basis to work with. And just here I'm just showing that since we want to do for quantum computer predictions that are point-wise, so we really want to say for we want to predict the specific value, not just the expectation value. Usually, in the community, spaces that are being used for that, but allow you to do so because they have that property are ERCAHAs, reproducing kind of Hilbert spaces. So that's what we will be doing. So we'll be working with vector ners, but we'll be actually span by Fourier functions for our torus, as what we managed for now to do in a consistent way. An additional for it appears that additional properties. It appears that the additional property that we want to have in our case is this one algebra property that just simply means that point of multiplication of function is closed for the consistency. And here I'm just showing, so this is our system, on that space, that means we have a Kupman operator, UT, and we have generators, so you can think about generators, which are very very often much more easy to work with when it comes to discretizations. With when it comes to discretizations, which is more like a time gradient here. And then you have some eigenfunctions and eigen frequencies, which are actually having additive group structure, which also is very important in terms of spanning the system on qu on the on the quantum computer on the given number of qubits. On the given number of qubits. So, here one more time, we are going so far up here. So, we went from the state space to the probability distribution and then we embed that probability distribution to the infinite dimensional quantum mechanical space with that and in that space we actually embed probability distribution into quantum feature maps. So, these are operators. Feature maps, so these are operators here at the moment. And in that space, you have also temporary evolution given by these operators. And what's most important at the moment is how to find the map projection map with WN that will allow you to project into this space. into this space Bn, which is consists of is spanned by a tensor product of n Hilbert spaces, which one is out dimension two, so what can be associated with the one qubit, what we will be actually making measurements and evolving the system up. So here at the moment, this is the whole factorization here. So we actually Here, so we actually work first with the generator of operator and we are able to span it on n number of qubits and then we can evolve in time by phase rotation on each qubit in the way that it will be also consistent. So the the important consistency that we can prove is that when the number of qubits would would go to n. Of qubits would go to n, then the point-wise, the Kubman evolution, both at the quantum mechanical level but also at the quantum computational level, would equal to the expectation of the evolution at the given level. And here this is how it will work. So in short, we we have two important uh properties. Properties. So we can actually simulate that type of space of that dimension using circles of that given size and we can also have pointwise conversions. So these are very, very stable ones. And these are our first experiment. So this is just a Qiski, not really a real quantum computer yet. And we work with just one-dimensional torso and we track its evolution. And we track its evolution with the ensemble of measurements. And then, also, we can see that increasing the number of qubits improves our algorithm. And the same we can say that increasing the complexity of the system makes it more challenging, yet it works still for two-dimensional torus, for quasi-periodic systems. And that's it, what we have done for now, besides. That's it, what we have done for now, besides one small experiment on real IBM quantum computer, where we just managed to work with one-dimensional torus and three qubits, because beyond that everything is too noisy. Qubits are just too noisy. And nowadays we are just working on theoretical aspects. Theoretical aspects, so making it compatible with specific machines, and maybe in applications it's a far stretch, but for this specific algorithm, however, for other algorithms, but I also just one minute. So the one that is here is actually not w having similar type of uh strategy. It it this is the predictive system that is also used. System that is also using quantum mechanical ideas for data simulation and predictions. So, here we also embed it into in different ways for different reasons. Here we want to have probability distributions. So, we want to project it down here to n-dimensional space, and we want to have actually probability distribution here, and here I will just show, but yeah, it is also. Show, but yeah, it is also a data-driven approximation. So we use scanner algorithms to approximate our operators and we look at more complex systems. So this is very nice are going for ancertic quantification and the one that one can use and predict probability distribution if one doesn't have actually an underlying model or the model is just too difficult to work with due to lack of data sets. So for example, temporal Temporal, how do you call it? Like a spectrography that is time-resolving would be one that could be good to look at the dynamics of far stars, but you don't really look at spatial resolved observation, but you can resolve spectrography, time resolved spectrography, or dynamics of the galaxies. Here, this is our application where we look at actual predictions of El Nino and we forget the And we forgot. We really just looking at just very small subset, like a part of the system, just as SSST, sea surface temperature, we manage to do predictions, but really merge the scale of a full-time model. I don't know if we have time for one question. So the idea of using quantum computing to solve these statistical problems are really important. I'm wondering if