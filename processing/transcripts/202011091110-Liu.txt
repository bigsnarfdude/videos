I'm a scratch student at the University of British Columbia. And so for the talk today, I'm just going to be going over how we can use existing methods to characterize global seminal subpopulations at a high resolution. So I want to start off by motivating why we might be interested in doing so. So here's a list of different subtyping methods that currently exist for. Subtyping methods that currently exist for salmonella. The first one being clinical presentation, so simply based on patient clinical symptoms, we can differentiate between typhoidal and non-typhoto salmonella. Second method is serotyping, just based on characterizing the genetic variation of cell surface antigens. And for example, serotyping, we're specifically characterizing the O and H antigens. And lastly, we have multilocal sequence typing or MLST, which is a genotypic-based approach, which involves the sequencing of seven house. Which involves the sequencing of seven housekeeping genes and then characterizing the alleles that are carried by these genes and then assigning to a particular sequence type depending on the combination of the alleles. This is certainly not an exhaustive list. There are also other popular methods such as phage typing or possible gene electrophoresis. But nonetheless, all of these methods have something in common, which is the fact that none of them take into account the genetic variation that exists at the whole genome level. And so as a result, many of these subtyping methods Many of these subtyping methods have limiting subtyping resolution as they only take into account of a selected number of loci in the SAMLA genome. And so, as we're moving towards whole genome-based characterization of infectious diseases, we want to start developing a systematic subtyping nomenclature that accounts for whole genome-level variations. And so, which is why we're interested in using whole genome sequencing data to characterize global seminal subpopulations. To characterize global seminal subpopulations. And so, because we're interested in characterizing the global seminar population structure, we need a data set that is representative of that. And so, conveniently, there are ongoing efforts to collect whole genome sequencing data for foodborne pathogens and making them available in the form of sequence repositories. And some of the notable ones include Genome Tracker, Nterobase, and PubMlst. And together, they have collected over 200,000 semi-local genome sequences that represent over 400. Sequences that represent over 400 different cerevars with highly diverse geographical distribution, isolation source, and collection dates. And so, this represents a very rich data set that we can use to characterize our some subpopulations. So, here is a very schematic, a very simple schematic of our data analysis workflow. So, because we want to characterize these subpopulations, we must first estimate the pairwise genetic distances between these. Between each of these genomes. And so, one efficient way to do this is to use core genome MLST, which involves the characterization of over 3,000 loci in the similar genome, and then generating these core genome-allied profiles that can be compared in clusters. Now, the problem here, though, is how do we know which threshold to use to define our single linkage cluster that would represent our stable subpopulations? And so this process, one method, is to first cluster across all possible thresholds. First, cluster across all possible threshold values, and then evaluate which threshold gives us evolutionary stable clusters. And we can use a measure called neighbor-adjusted Wallace coefficient to evaluate the cluster stability defined at a given threshold. And I'll elaborate more on that in the next slide. And so once we have determined the clustering threshold that would define evolutionary stable clusters, we would basically get our set of high-resolution subpopulations. Solutions of populations. So, to give a bit of background on neighborhoods as well as coefficients, we can take a look at this cluster count curve of our data set where on the x-axis we have the distance threshold, on the y-axis we have the number of single linkage clusters. And what we can see here is that at very low thresholds, we see this exponential decline in the number of clusters, and that's because at very low threshold, the intercluster distances are very small, and so you observe this rapid. Very small, and so you observe this rapid rate of cluster consolidation. Now, conversely, if you look at regions of higher threshold cut-offs, you see significantly less cluster consolidation, and that is because the intercluster distances have become much larger. And this slower rate of cluster consolidation is effectively signatures for cluster stability. And so, this is exactly what the neighborhoods as well as coefficient tries to measure. It allows us to compare. It allows us to compare the cluster similarity. It allows us to quantify the cluster membership similarity between two sets of cluster classification defined at two given thresholds. But here we want to compare two neighboring thresholds that differ by only one threshold unit, such that we can identify a range of successive thresholds in which the cluster memberships remain highly stable. Highly stable. And so, in order to calculate NAWC, we can construct this contingency table that compares the cluster classification defined by threshold A and threshold B. Now, I should also mention that the Wallace coefficient itself does have a directionality component to it, in which the cluster classification defined by threshold A is used as a reference point to describe differences in the cluster membership defined at threshold B. So, here on the top. So, here on the top right, we have the NAWC curve evaluated across all possible threshold values. And here we can see that the NAWC curve is consisted of a mix of dips and plateaus. So these dips represent significant changes in the cluster membership from one threshold to the next, while the plateaus represent no significant changes in the cluster membership, which is effectively regions of cluster stability. Regions of cluster stability. And if we compare the NAWC curve to the Shannon index curve, which is often used as a measure of entropy and cluster diversity, we can see that instances where there are significant changes in the cluster membership also correspond to significant declines in the cluster diversity as well. And so if we define the cluster stable region as any region with at least five successive NAWC values maintaining above 99%, we actually identify a total of 40. Identify a total of 43 different stable regions across this entire NAWC curve. But here I just want to highlight two particular regions of interest. The first one being the region of highest stability, which yields a very large threshold cutoff of over a thousand ELIT differences. And secondly, the earliest signature of stability, which yields a very small threshold cutoff of about 70 illicit differences. And the reason why I want to highlight these two particular regions of interest is because these give us very Is because these give us very contrasting subtyping resolutions. And we can visualize these differences in the form of a phylogenic tree. So here's the phylogenic tree of our entire data set of over 200,000 semi-local genome sequences. And here I'm labeling the sequences by their servar. And what we can see here is that sequences of the same servar are clustering together on the phylogenic tree. So for instance, here we have the enteridis cluster, nuclear cluster, and typhomirin cluster. Now, what we should also notice. Now, what we should also notice is that there are clearly two major lineages to the serovar newports, so one here and one here. And that's actually quite consistent with the idea that there exists polyphyletic serovars in the Samwell population, and that it might be epidemiology meaningful to report these newport isolates as two separate serovars or sorry, two separate subtypes rather than as a single subtype. And so coming back to visualizing the Coming back to visualizing the clusters at the two regions of interest, so instead of labeling these sequences by their servar, we can also label these sequences by the cluster codes that are assigned to these sequences at a particular threshold. So here I'm labeling these sequences by their cluster code assigned to them at the threshold of over 1,500 elite differences, representing the most stable region. And what we can see here is that the clustering pattern is actually very similar to what we saw. Is actually very similar to what we saw in the last slide when we labeled the sequences by their servar. So here we see that sequences of the same serovar are all being clustered into a single cluster given by the fact that they're all being assigned to the same cluster code. And so again, here we have our interdisci cluster, new port, and type remedial cluster. And what this essentially tells us is that at this very large threshold, we're achieving the same subtyping resolution as zero typing. And so that's not very useful for us. And so that's not very useful for us because we want to achieve a better subtyping resolution than serotyping. And so, which is why we also explored another stable region at the much smaller threshold of 70li differences. And here we can clearly see that sequences of the same servar are now being partitioned into multiple different clusters. And so, not surprisingly, at this significantly smaller threshold, we're achieving a better subtyping resolution than serotyping. But we still don't know whether this But we still don't know whether this particular threshold is indeed the most optimal threshold to define our stable clusters. We just know that it is a cluster-stable region. And so, which is why we came up with additional measures to compare the cluster statistics across each stable region. So, in total, we identify these 43 different stable regions. We want to find the most optimal points using these sets of parameters. So, the first one here is subtype and resolution. One here is subtyping resolution. And the idea is quite simple here. Basically, we want to try and avoid clustering all the sequences of the same serial R into a single cluster. And so, therefore, we want to minimize the number of clusters in which majority of its isolates are grouped into a single cluster. And the second measure here is the proportion of singletons representing clusters that only have a single sequence. So it's not clear to us whether these clusters, these singleton clusters, are arising due to Clusters are arising due to sampling bias or due to errors in the assembly. And so, overall, these singleton clusters are not very informative to us. And so, therefore, we want to try and minimize the number of singleton clusters that are defined at a given threshold as well. And lastly, we have a cluster heterogeneity, which is the proportion of clusters that have heterogeneous zero var composition, or in other words, zero vars that have, or sorry, clusters that have multiple. That have multiple zero bars mixed together in a single cluster. And that's also something that we want to try and minimize. And so, given that we want to minimize all three measures at a given threshold, we can define an additive function that takes into account of all these three parameters. And then we can identify our most optimal threshold by identifying the global minimum of this additive function, which is the purple curve here. The purple curve here. And what we found at the end is that the most optimal point seems to occur around 195 elite differences. So at one point, we also did a more in-depth cluster analysis at the earliest signature of stability of 70 olique differences. And what we found was that over 99% of these clusters defined at this threshold consisted of a single zero bar. However, there were several exceptions. There were a few clusters that contained multiple zero bars. And so Bars. And so this raises several interesting questions. First of all, what are these serial bars that are mixing together at such a small threshold? And secondly, is it surprising to see these sero bars mixing together at the such a small distance threshold? And so in total, we identified 23 different serovar pairs that were mixing together in the same cluster, representing serovar pairs that are highly similar at the genomic level. Genomic level. And we found that several servoir pairs were indeed expected to share highly similar core genomes, given by the fact that many of these serovar pairs are just minor antigenic variants of each other. So for instance, here we have the monophasic and the diphasic variant of Typhromirium. Another example is a pair Typhi B as well, and it's variant Java. And these silver bar pairs are found to be highly similar. Pairs are found to be highly genomically similar. However, we wanted to do a more systematic evaluation of this. And so we thought of comparing the antigenic formulas of these genomically similar COVID pairs. So our rationale here is that given that these COVID pairs are highly similar in their cogenome profile, you would expect them to have highly similar antigenic formulas as well. And so this is exactly what the heat map is trying to convey, where each column here represents a where each column here represents a different antigenic type, so the H antigen or the O antigen, and as well as whether they share the same serial group or not. So the green represents that there is a perfect match in that particular antigen, and red represent that there is a mismatch. And what we can clearly see is the majority of the serial var pairs that we have identified tend to share the same serial group and they tend to share at least one or two other antigens as well. Now the surprising cases would be the ones The surprising cases will be the ones that have mismatches everywhere. So, we can take the example of September and West Hampton cereal bar pairs, an example where they don't share the same sero group, and neither do they share the H1 or the O antigen, and yet they have highly similar core genome profiles. And so this starts to illustrate the idea that perhaps in certain situations there are inconsistencies between antigenic differences and cord genome differences. And this type of inconsistency has been reported. Inconsistency has been reported in the literature as well. So, for instance, in a recent study that was done on samoa serotyping, they mentioned that phenotype serotypes that are divergent by antigenic formula are actually closely related when you analyze their phylogenic clusters. And another report that was published long ago, they raised a very specific example about the September servar, in which they state that some September share the same MLST type with The same MLST type with West Hampton, indicating that they are highly genetically similar. But that does not seem to be the case when you compare their antigenic formulas. And so this led to their conclusion that the O antigenic variation assessed by serotyping does not really reflect the reality of the bacterial populations. So in summary, using NAWC as well additional measures, we identified the threshold of 195 milliliter differences as a suitable cutoff to define As a suitable cutoff to define stable semi-subpopulations. And we found that at the threshold of 70 bullet differences, many of these stable clusters demonstrated highly homogenous cerebral composition. And of course, there were a few exceptions that we found. And so throughout our data analysis, we found several inconsistencies between antigenic and coordinate differences. And one of the examples includes the polyphalic cereal of our new port, in which we found. Valeric Serovar newport, in which we found that many of these newport isolates show no differences at the antigenic level, but demonstrate significant differences at the core genome level. And secondly, we found that highly divergent antigens don't necessarily translate to highly divergent core genomes either. And so we saw that with the September Brig and West Hampton-Sero-Bar-Pierce example. And so hopefully these provide additional evidences to highlight the importance of using whole genome sequences. Of using whole genome sequences to define pathogen subtypes. And with that, I'll end my presentation. Thank you. Okay, thanks a lot, Jimmy. And do we have any questions for Jimmy? So again, feel free to either unmute yourself and ask your question directly or type it into the chat window. Okay. I've actually got a question just to get started. So, what exactly was the comparison that you performed between the strains, between the strain pairs? How did you, like on what basis were you comparing them? Were you looking at fully assembled genomes and just looking at Hamming distance or was it something else? Okay, right. Yeah, so these were whole genome sequences and we were using the core genome MOST. We were using the coordinal MOST scheme, so that's coordinal MLST scheme, got it. Yeah, so Henry distance between to calculate the MOST distances. Okay, and did you find any that were either providing evidence of missing alleles or some new alleles that were not part of the scheme during that time? Because I guess you had over 200,000 samples. Right, we actually found. Right, we actually found several instances where many of the alleles couldn't be called because the scheme actually included paralogous genes. And so therefore, the tool was having difficulties in calling sequences where it was mapping to multiple loci. And so we ended up Yeah, and so we ended up actually filtering out those particular loci from the MOSD scheme. Right. And so I guess that highlights the sampling bias that was present when that CGL-1ST scheme was constructed. Of course. Any other questions for Jimmy? Okay, then I'll just ask another very quick one. So, were you able to detect any errors in the assemblies or anything that looked like it was perhaps inconsistent or just not quite congruous with what you were expecting? I guess we did do a preliminary field. Do a preliminary filtering to remove any incomplete assemblies, but in terms of assemblies that likely contain sequencing errors, that wasn't something that we actually investigated. But as I mentioned about the single, a lot of the clusters we identified were in fact singletons, and we suspect that a lot of those might be due to errors in the assembly. Great. But we haven't actually. Great, but we haven't actually did a systematic evaluation tab. Okay, all right, thanks very much. Okay, there's one last question that I'm just going to ask you to answer very quickly in the interest of time. How does the calculation of T scale for a database of this size, i.e., how long do these distance calculations take? And this is from John Lees. Right. Okay. So once, I guess, assuming that you already have these Assuming that you already have these core genome LST profiles, I'd imagine to calculate a one against all comparison, it takes about, I believe it was 30 minutes. And so you can easily parallelize this process to get this distance calculation done in two to three days. Okay, thanks. All right, so that's the end of our first session.