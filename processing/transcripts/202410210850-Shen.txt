This talk is some joint work with my former PhD student, who is now a postdoc of Weizhubao at the National University of Singapore, and my current postdoc, Shui Li, on some fully decoupled schemes for incompressible enemy stocks equations. Okay, so I will go directly. Okay, so I will go directly to the, since this is an expert audience, so I'll go directly to the equation, maybe a stock equation, incompressible, and with different type of boundary conditions. So and so we know that when you try to discretize the Navy stocks equation, there are usually two different two kinds of approaches. One is a coupled approach. One is a coupled approach. Coupled approach means if you look at the equation, the pressure and the velocity are coupled by this divergence recognition. So when you discretize it directly, if you use a finite difference here, and suppose you treat the nonlinear term in some explicit or semi-explicit way. Or semi-explicit way. And then at each time step, you will need to solve a generalized stocks equation like this, where Pm plus one and Um plus one are again coupled. So you need to solve this. And when you discretize this in space, you cannot choose arbitrary spaces for velocity and the pressure. They have to satisfy a use. have to satisfy a young supercondition condition and uh and also the linear system resulting from uh from this discretization is uh it's not positive definite so you have to develop uh special preconditioners for solving this type of equations so another class of uh method is decoupled method so since uh when you couple So since when you couple them together, you have several difficulties. And then the decoupled method is the so-called, well, originally it starts from the so-called projection. So you can understand the method in different ways. This is first proposed by Chur and Timam in the later 60s. So what they say is, I don't want to solve the coupled system because it's too expensive. system because it's too expensive and difficult. So in the first step, they solve an intermediate velocity u tilde by dropping out the pressure term and divergence free condition. So you simply solve a Poisson type equation here, which is very easy. And then the second step, you project this solution u tilde onto the divergence free space. You see? Divergence-free space. You see, this is actually a Hermot's decomposition, right? U tilde equals to a divergence-free part plus a curve-free part. And so this is that's why it's called a projection message. But you can also understand it from a different point of view, from an operator splitting point of view. So from operator splitting point of view, you consider this as one operator. This is one operator and this as another operator, then you use the operator splitting approach. So, in the first step, you do the you do the this operator. In the second step, you deal with the gradient divergence form. And the problem with this operator splitting interpretation is even though the operator splitting method is well developed and has a Is well developed and has a very nice theory, but it all depends on the two operators being commutative. Here, the operator are not commutative. So the theory doesn't work, which means you cannot easily use the strand splitting to get the second order and so forth, right? So the accuracy of the scheme is very efficient. It's very efficient, but the accuracy is not expected. You only get half order in this law. So, another way, so there are many work in the last 60 or 70 years to develop better and better, more accurate schemes, decoupled schemes. So, another kind of way to understand the scheme is you And the scheme is you can do it from a predictor collector approach. So, which means in the first step, you solve a prediction, u tilde, and here you put in the whole momentum equation. So, you try to approximate the whole momentum equation. And in the second step, you do a correction. Here, you do a correction on the pressure. Reflection on the pressure. So, numerically, it's very simple. You solve a Poisson-type equation here. And for the second step, if you take the divergence of this equation, and so this is gone, and you also get a Poisson-type equation for the pressure. So, you only need to solve a sequence of Poisson equations. And this scheme has much better accuracy. So it has a first order accuracy. And if you want to go further, if you want to go further, the problem is you will need if you want a full second order accuracy, you will need to extrapolate this to second order. And here, you do a second order discretization. But unfortunately, when you do that, this Similarly, when you do that, the scheme becomes unstable. Even for the stock sequence, it becomes unstable. So you somehow are limited to a weakly second-order accuracy for this type of a scheme. And another minor issue is you still need infestable spaces if you want to get good pressure approximation. Okay. Okay, so among the decoupled approach, there's another class. So the previous is sort of a projection type or pressure correction type. The second class is what we term it as a consistent splitting. So this is first appeared in the early 2000s. 2000. And so this Liu is a Jingo Liu. He received somewhere. And so the idea is to replace the divergence free condition, to replace the divergence free condition by an equivalent equation. And how do you get an equivalent equation? You take the momentum equation, you take the inner product of this. You take the inner product of this momentum equation with gradient q, and you use the condition divergence free equals to zero so that this term will be gone, right? Your integration by parts, because that you this term will be gone. And then you get this, you get this equation here. You get this equation here for the pressure pass. So this is pressure pass once. But if you do this, But if you do this directly, if you do this directly, your scheme will be unconditionally unstable because this thing is not exactly equivalent to the original equation because this term Laplacian here has an identity which is curl curl minus the gradient divergence and you have to drop that gradient divergence. If you drop this gradient divergence, then this equation. Then this equation is equivalent, can be shown to be equivalent to the original Navy stocks equation. And now you can do a sort of direct discretization, right? Here, for example, I can use a higher order. I can use case order discretization, whatever the scheme you want to use. Here, K means order K in time. In time, and assume that you want to decouple the and explicit for the nonlinear term and the pressure. You do a case order, you do case order extrapolation. So still in the first step, you solve a Poisson type equation for Un plus 1. Once UN plus 1 is obtained, and you solve this pressure Poisson equation. The special Poisson equation in the weak form, solve the special Poisson equation in the weak form for Pm plus one. And you can, of course, for this term, if you use finite elements, you can translate it to a boundary integral so that you can still regular finite elements still can be used. Okay, so this is at least formally. Least formally case order, right? So there's no splitting error, whatever. It's formally case order. And one amazing property is you don't really need a new supercondition anymore. So there is no need for a new supercondition. And it's very efficient because you only need to solve this type of equation. You only need to solve this type of equation. And so if you have fast dollars, Have fast solvers for this type of equation, it can be extremely efficient. And I will show you an example if you use a spectral element to discretize this on a regular geometry. And then this problem can be reduced to just a sequence of matrix diagonalizations, to matrix multiplications. And if you implement this. And if you implement this on a GPU with a very simple code, simple MATLAB code, and the efficiency is just astonishing. For example, if you use a thousand degree of freedom in each direction, you have more than one billion unknowns. You can solve this equation in less than one second or one GPU. And if you do that, And if you do this for Kahili equation, you disclose the Kilier equation, it's a non-linear problem. Then at each time step, you only need 1.3 seconds. So usually you have a three-dimensional problem with one pinear unknown. So you need to solve a couple of hours or a couple of days or a couple of weeks. Now you can do this very quickly in a few minutes. So, of course, this is for very special regular grid. And so, it makes sense to use a scheme which can decouple the computation to just a sequence of this type of equation. Okay, but unfortunately, up to now, this only first-order scheme. First order scheme, even though you can write higher order, only first order scheme can be proven stable, can be proven unconditional stable. And so if you try to, just like the projection type scheme, if you extrapolate the pressure to second order, then the scheme becomes unconditionally, it's unstable. And the difficulty is actually in saying. Is actually essential. It's not that you do not use good techniques and so here we show you some numerical result, which shows, so this is for linear stocks problem. Okay, for linear stocks problem, if you use a second order, and you can compute up to this point, and then it goes up. And if you use a third order, And if you use a third order, you it blows up earlier and the fourth order it blows up even earlier. So so which means this is pretty small time step. If you use even smaller time step, it blows up quick. So there are some instabilities in the numerical scheme that is in the numerical scheme. So you have to construct a new scheme. Construct a new scheme. So, this scheme I just presented does not work. Okay, so this leads us to look for new schemes. And so we'll start with parabolic type schemes. So for parabolic type equations like this, and so here's a linear positive operator, and here's a nonlinear operator of a semilinear or quasi-linear. or parti linear. So if a popular way to do it is to do this part implicit and this part, if you don't want to solve a nonlinear equation, you can do the explicit or semi-explicit. So the problem with this type of scheme is you have a dilemma with accurate. You have a dilemma with accuracy and stability. So, for example, if you look at the linear problem, okay, if you look at the linear problem, and for the linear ODE backward, for the PDF type of scheme, the stability region, from an ODE point of view, the stability region shrinks as you increase the order. The stability region is the region. Region is the region outside of those curves. Where is a first order? It's very large stability region, and the second order, smaller, smaller. And up to sixth order, you get very nano stability region. So for stiff problems, you often face the dilemma. You want to use a higher order, but your time step is restricted by. Is restricted by the scheme. So at the end of the day, you still use first order signal because you already use your time step to be 10 to the minus 4, 10 to the minus 8 or sometimes, right? So the question is, is it possible to increase the order of accuracy without shrinking the stability rate so that we can increase the time? Increase the time step as well as the accuracy. And it turns out this can be achieved with a very simple observation. When you construct the ODE scheme, you often do tele expansion at the Tm plus beta. People usually Tm plus theta. So beta, usually you take the beta usually you take it from zero to one for beta equals to zero you get totally explicit scheme for beta equals to one you get totally implicit scheme and you can also take beta between zero and one but you can consider beta as a parameter and write down those 10 expansions for the time derivative for the linear term and for the non-linear term so for the time Non-linear time. So for the time derivative, you do the Taylor expansion at the Tm plus beta, beta as anything. Okay, for the moment, you bet as a parameter. So all those things can be uniquely determined. But the key point is you still use the same time level. You don't compute the solution at Tm plus beta. You still compute the solution at Tm plus one. And so this. And so this is implicit for time derivative. And for this linear part, you also need an implicit formula. So you also start Tn plus one. And for nonlinear terms, you do the explicit. So you start with Tn, right? And then once you have those three schemes by tele expansion, all those coefficients can be uniquely determined. Then to approximate this linear. approximate this linear this parabolic type equation you you have this simple scheme right the the time derivative you use the first tail expansion uh the linear term uses the second expansion the nonlinear term uses the third expansion so so that's the scheme not the scheme very simple so at each time step you only solve a lead only solve a linear a linear elliptic equation you can't even use parallel linear equation so it's very efficient but uh if you look at the step from the stability region of view stability region point of view you what you do is you take a simple equation like this and you write down your scheme so here i take the second order Here, I take the second order new scheme as an example. Beta is a parameter. So, if you take a beta equals to one, you see that this is a usual second-order PDF, beta equals one, right? Now, beta is a parameter. And you write down the characteristic polynomial and you can compute the stability region. So, here is the computation of the stability region. Beta equals one. This is Beta equals one, this is the usual PDF. And then you see for beta equals three, your stability region increase. And if you take a beta bigger, the stability region also increase further, but not as significantly as in the beginning. And still keeps a stability. So for all the beta, because one, the stability region in Stability region increases, as beta increases, while the stability is still preserved. So that's a second order. And if you look at the higher order, so this is the usual BDF. You see, as you increase the order, the stability region shrinks very fast. But if you take beta equals to three as an example, then you see. Example, then you see the stability region also decreases, but not very significantly. Not very significant. And in particular, at the fourth order, the stability region here is even larger than the stability region of the usual PBF. So this means it is possible to increase the order of the accuracy without decreasing the Feeding the stability region compared to the usual PDF. Of course, this is just the point of view of a stability region to carry out a rigorous analysis, you need to do some energy estimate, whether the energy stability of the usual. Stability of the usual BDF scheme relies on a lemma moved many years ago, those two gentlemen, which says, well, for the first order and the second order, we know that when you do the energy stability, you simply multiply the scheme by 5 plus 1, and you try to get some estimate. Try to get some estimates, right? That's a usual way to do, but for higher than second order, if you multiply by five plus one, you won't be able to get any stability estimate. So those two gentlemen proved the result that for order three to five, what you need to do is the test function needs to have another term, tau k by n here. Pi n here, k is the order, case order. And they show that there exists a tau k in zero to one such that you have this identity. You have this identity. This identity. So let me explain. Where this G here is a positive definite operator, and this is a telescoping term. So that So, that when you sum up all the time steps, all the negative terms are gone, and here's a dissipation term. So, this is called the G-stability. So, if you have this result, then you can prove the stability for the linear term, for the linear parabolic equation. For linear parabolic equation, you can derive stability like this. But this for the usual BDF, for the For our generalized BDF, can we extend this result? Can we extend exactly this result? We don't know. We don't know whether we can find this kind of multiplier. But since you already add one term, there's no need to restrict to this form, right? We show that we can find explicit. That we can find explicit multiplier coefficient, total k1, total k minus 1, such that if I take this then as a multiplier, and then we can show that if I replace this term by the new multiplier, by the new multiplier here, we get the same result. the same result we have the same result which means which means for the new pdf for the for the new generalized bdf scheme uh not for every not for all the case for the third order for the third order we have showed for all the beta uh bigger equal than one and for fourth order case we showed for all the beta bigger equal than two for the second or second For the second or second order, of course, is also valid for all the beta bigger equals one. And for the fifth order case, it becomes so complicated when we were not able to show rigorously, but with some numerical assistance, we showed that the stability can be established for beta between this range. But anyway, for second, the third, and the fourth order, you get X, you get. get x you you get uh uh you get the stability at least for the for the linear parabolic equations so for the non-linear parabolic equations then you need to make some you need to make some uh you need to make some assumptions on a non-linear term so of course you you can't deal with all the non-linear terms but you The nonlinear terms, but you have to assume this type of local Lipschitz conditions for the nonlinear term. And this condition is satisfied by most nonlinear equations that we encounter, such as in the Navier-Stocks equations, in the Cahile equations, in the Burgess equations, and so forth. So we assume this condition for the nonlinear term. Condition for the nominal term, then we can show so here this gamma can be chosen as small as you like. So, in chooser, your gamma can be chosen as small as you like. And so, we show that for those type of functions with respect to beta, so this is a second order, third order, and the fourth order. They are all Fourth order, they are all increasing functions with beta. And so, what we show is under the condition that this those functions bigger than this square root of gamma and then the solution, the numerical solution. BDF scheme, of course, the existence of the uniqueness is obvious because the operator L. And we showed that even when we treat this nonlinear term explicitly, we showed that the numerical solution is uniformly bound. The numerical solution can be uniformly bounded. So, for a large class of nonlinear problems. So, that's the result we just proved very recently. And so, those are the numerical, some numerical tests for second order, third order, and fourth order. So, you might be wondering what's the price to pay for increase in beta, right? So, you get something, you must. You get something, you must pay for something. The price you pay is when you increase beta, the truncation error, the local truncation error also increases with beta. So here's beta. The lowest one is beta equals to one. And the second one is beta equals square root of two. And the third is beta equals two. And here's the last one is beta equals to pi. You see, as beta increases, the accuracy is slightly. So, the accuracy slightly decreases, but this is more than overcome by the increase in accuracy. So, here's a fourth order, here's second order. You see, for time step 10 to the minus 3, you get 10 to the minus 6 with beta equals to 1, but you get same time step, you get the beta equals 10 to the minus 11, which beta equals to pi. To pi. So, by increasing beta, you increase and increase order, you still get much better accuracy. So, that's why this method is interesting. And here's another result showing the same effect that I'm not going to explain anymore. And now, okay, so that is that can be used for general stiff ODE, right? But our purpose is not. Purpose is not, so at least our original purpose is not for a new scheme for ODEs. We want to overcome the difficulty in the Navy stocks equation. And now let's look at what if we apply the new beta scheme to the Navy stocks equation, to the momentum equation. So here we only change the discretization of the usual BDF to the new BDF. BDF to the new BDF with beta as a parameter. And I take the second order as an example, right? So the scheme, you only have to change two lines in your existing code. You can use the same scheme. And then we can show that the numerical solution is uniformly bound for any time that it's unconditional state. Its unconditional state. So that's the first time that such a stability result has been established whenever you choose, you extrapolate the pressure to the second. And so the proof are quite complicated. So the need two results. One result is the Is the lemma by Chiang Gu Liu and his collaborators on the Stokes pressure? And the second key result is the telescoping stability, the G-stability. So you combine those two stability results and with some complicated analysis, then you can prove. So as I said, this is the first such results available. And I forgot to say. I forgot to say for what beta for beta for all the beta bigger that's three you so and this is not not necessarily the best bet right now you can probably can prove for a smaller beta but that's not important beta equals three it's enough and uh so recently we extended this result for the third order This result for the third order scheme with beta equal bigger, less or equal to bigger or equal than six, and all the fourth of the scheme with beta bigger or equal than nine. So with those beta, we showed the same result, unconditional stability for the third and the fourth order. So that's for the linear stocks plot. Stocks plot. And for nonlinear equations, then we can combine this new scheme. Well, there are different ways to treat the nonlinear terms. So here we use a generalized SAV approach that we developed a few years ago to deal with the nonlinear terms. It's much easier to get stability this way. The scheme goes like this: so you start with the energy identity. Start with the energy identity of the Navy stocks equation. And then in the so the first two steps is just the usual, it's just a previous new scheme, right? Previous new scheme, except you only solve it for previous step as an intermediate approximation. So you solve u bar here, and then you solve pn plus one here. And then you solve Pm plus one here. And then in the meantime, you also make an approximation. So the energy equation, you introduce a SAV variable R to approximate this energy equation to the first order, to the first order. You cannot approximate to the high order. The high order will not give you enough stability. And then you make a correction. And then you make a correction to u bar. You know that this R is approximation to the energy. And then the last step, you do a correction. So you still just need to solve two aside type equations. So with this, you can show that for the nonlinear, for the nonlinear Navier-Stokes equation, you can have. stocks equation you you can have optimal error estimates for the second order scheme with beta equals three and uh and also you can we have recently extended this results for third order and uh and uh fourth part okay so so the proof uh depends on the depends on the strong stability for the stocks equation and uh and also on the uniform bond. And also on the uniform bond provided by the generalized SAVF. Okay, so those numerical results, I'm not going to get into detail. The thing is, if you don't use this type of scheme, you will see that it blows up if you take beta equals one, you know, with very small time step. But if you take the new scheme, then you get stable, even very large. Stable, even very large time step, you get stable numerical results. And okay. So I wanted to talk about something about the spatial discretization. For the spatial discretization is actually not as simple because when you do the proof, you have to test the momentum equation by Laplacian V. So, which means when you do the spatial discretization, you discretization you you have to you you you usually need a c1 element need a c1 element so so that's the uh lemma uh by jiangu and his collaborators which dictate us we have to test the equation by function u and uh so so that uh the the the problem is uh now you you you have to do this in the fully discrete case and discrete case and uh we did we did it with two versions one is with the spectral method then see with spectral method you you you take the this test function and uh and since go of course uh this uh the proof can carry over and you can still you you have to solve a different type of so so this is actually So, this is actually a fourth-order equation, but with one boundary condition. That's a little bit more difficult to solve, but we still develop the faster solver for it. And the more interesting case is for the finite elements. When you want to finite elements, you don't really want to see one element. It's complicated. But also, we did it with the DG formulas, with the DG formulas. I don't have time to go to detail. Go to detail. So, with the DG formulation, we can the key is to prove a discrete lemma on the stocks flush, on the stock flush. So, with some penalty terms, jump terms over there. And then you can get optimal estimates. So, my time is up, and we will finish with some remarks. We talk about the three things. Why is this new? Three things. Why is it this new ODE scheme which has better stability as you increase beta? The second thing is you can apply the scheme to the Navier Stocks equation, which can be just to solve a long-standing problem that you cannot get higher than second or higher than second order stable schemes for the decoupled schemes, the living stock squares. And finally, the third point is we construct. Is we constructed the stable fully discrete schemes with a special collecting method and the DG finite elements. So, those are the few papers related to this talk. So we like all the time. Thank you.