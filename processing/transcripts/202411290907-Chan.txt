Organizing a wonderful and successful workshop. I have a lot of fun. I hate a lot. Okay, so I want to talk about quantum isomorphism. Now, you see that in this talk, I keep saying that there are lots of things that I don't know. So there are tons and tons of things that I don't know at this point. But I really like this problem and this result, because this is a good example of why we should get together and meet in person once in a while. So the result actually kind of happened in this workshop. Kind of happened in this workshop in 2022. Now, and this workshop is a four-week workshop, so we have a bunch of mini courses and lots and lots of talks. In particular, so Bill, Akihiro, and Dave Robertson, they gave three mini courses. And it is the stuff in these three mini courses that we put together to get our results. So I'm only responsible in snapping the Lego pieces together. They talk about the different Lego pieces. So David talked about quantum isomorphism of graphs. He talked about this. Isomorphism of graphs. He talked about this really amazing result: how they phrase or they characterize quantum isomorphism using homomorphism counts. Bill talked about scaffolds, which is a pictorial representation of certain tensors that you want to compute in an association scheme. He also talked about choometric schemes in his course. And then Akihiro talked about split models and color paths. Okay, so you have these three courses. The three courses. I have this kind of little piece here with Spider-Man. So, what happened is Bill and I started working on this question in the workshop. And actually, we're just snapping Lego pieces together, so it was very quick. So, we actually got everything done in two months. So, right before we're about to put the paper on archive, I think it's either David or Laurel McGinnis Gust, both postdocs. Laura Maczinska's postdoc, Simon Smith. He wrote to us and said, Hey, there's another postdoc at the time, Daniel Gravada. He had a basically equivalent result. So our result is about how to write graphs. His result is about how to add matrices. So I took a look at, so his paper is not ready yet at that time. But then later on, I look at his paper. I don't understand the word in the paper. He uses diagrammatic calculus, category theory stuff. But then I saw these stuff. Stuff. But then I saw these diagrams. And the first one is: how on earth can someone type these diagrams on Maytap? You need some sources of power. They cost quite a diamonds. I don't know how they do it, but it's on my list of things I need to understand is to work through, which is an equivalent result. So when are two graphs quantum isomorphic? So before I talk about the definition of quantum isomorphism for graphs, I need to tell you what a quantum permutation matrix is. Quantum permutation matrix is. So if your graph has size n, we're talking about an n by n quantum permutation matrix. Now then in the n trees, what you have, it's not necessarily numbers, so you have elements from a C side algebra with initial. Now I didn't know what a C side algebra is before, but I don't feel like I know what it is. I think of them, I just kind of think of it, the finite dimension. So you can think of them as. So, you can think of them as, say, some D by D matrix. And the condition is that each entry has to satisfy condition one, meaning that they're a projection. So if you think of them as matrices, then you think of them as projection matrices. And then when you sum them up in each row and in each column, you will get the unity of your C-star algebra. So if you think matrix, then you get the identical matrix. And then two graphs are quantum isomorphic if they satisfy. You can, if they satisfy this equation, so the A are the adjacency matrices. Now, then, if you take your C algebra to be just the complex, then your projections are either just 0 or 1. Then the Q matrix is just a regular permutation matrix. Then we're back to the classical case. So, in that case, we're just talking about graph isomorphism that we're used to. So, this is a generalization. So here is a simple example of a quantum permutation matrix. So P1 and P2, D by D orthogonal projection matrix. I don't care how they're related. They don't have to be related at all because I do get the projections. And if you sum up each row in each column, I do get the identity matrix. Now D doesn't have anything to do with N. So so here D depending on size, but I'm having a four by four block matrix. Having a 4x4 block matrix. Now, in general, we would want a quantum permutation matrix where you have at least two blocks that do not commute with each other. Now, what happens if all the blocks commute? If all the blocks commute, then you can simultaneously diagonalize them. And after the simultaneous eigenalization, then I can think of each block as just a diagonal matrix. Well, they're projections, so their eigenvalues are either 0 or 1. So I have these 0 and 1 diagonal matrices in each block. These zero and one diagonal matrices in each block. So then what I do is I can just take out, say, take out all the one, one entry from each block. Then I have a permutation matrix. So if they commute, if all blocks commute with each other, then if I do this trick, diagonalization, pick out the 1, 1 entry, 2, 2 entry, and 3 entry, then I have a classical permutation matrix. So I'm talking about just classical isomorphism. So I don't have anything new. So in general, we want at least two broad. At least two blocks to be non-cummetative. And this is a condition that confuses me a lot, and I don't know how to deal with it. Now, I'm just a low-leggerist, so I'm more comfortable when we're dealing with finite-dimensional C-star algebra. And as I said before, I can think of finite-dimensional C-star algebra like the block elements, like the elements are just D by D projection matrices. So in that case, then we have actually had. That we can actually have an equation. So, I can write the equation using this cancel plot. Something to make us feel a bit better, I guess. Okay, so examples. So, the idea of quantum isomorphism arose from these non-local graph isomorphism games. So, the idea is it's a two-player game versus a referee. The players know the graph, so there's a paragraph. The players know the graph. There's a pair of graphs involved, X and Y. So they know the graphs, they can strategize before the game, and they only play the game one time. So if the two players don't have any quantum resources, then they will only have 100% chance of winning the game only if the two graphs are isomorphic, consequently. But if they have some quantum resource, don't ask whether it is, they have an entangled state and they use some sort of measurement, then what happens is it's possible to have a 100%. To have a 100% winning strategy, even though the two graphs are not isomorphic. So, Dave and friends would say that if you have two graphs with the quantum resources and you have a hundred percent chance, like a hundred percent winning strategy, then those two graphs are called quantum isomorphism. So, it came from these non non non-local games. So, this is I guess the the kind of the first pair of examples of non-isomorphic uh graphs that are quantum isomorphism. Graphs that are quantum isomorphic. Now, so they kind of prove that they're quantum isomorphic via something called the linear binary constraint system games. So they show that these two graphs and these games are quantum satisfiable. And don't ask me what they mean. I don't know what they mean. It's another power sub that I need to learn. But the thing is, it turns out, so Maria Sochok, Chris's student who just most recently graduated, told me that these two graphs are actually. These two graphs are actually normal K-D graphs of S4. And they are related by Gautsing-McKay switching. That's interesting for me. So these are some examples. Another pair of examples, so this is a Samish example. So he constructed, he noticed that, so you take two isomorphic strongly regular graphs. They are there, thanks to Maria. And so he actually analyzed. And so he actually analyzed a subgroup of the automorphism of this graph, and then he built the quantum permutation matrix and showed that these two graphs are quantum intermorphic. And so back in the binary linear games, David and Frank said that, well, so you can use this kind of technique, so this reduction of a different game, to construct pairs of examples. Of example folks, although they, I don't know what the example folks are, but they said there's a way to do it. So I guess like in principle, you have an infinite kind of a family of pairs of non-classically isomorphic, but quantum isomorphic examples. And these two graphs are also related by switching. So it seems like switching plays a role here. All right, so I don't know what other stuff that I mentioned. I mentioned all the terms, I don't know what they are. What they are. And this is actually the result that David talked about in that meeting. It's a really amazing result. So basically, they just tie in quantum isomorphism to homomorphism count. So Laura Maczinska and David Robinson, they proved that two graphs are quantum isomorphic if and only if the homomorphism count from a planar graph G to X and then they count from G to Y, they are equal for all planar graphs G. That's a remarkable result. And you can think of it as a quantum analog of Lovar's results, saying that two graphs are classically isomorphic if and only if the homomorphism count from any graph G to X and to Y are equal. So now we're back to graph theory land, so we're more comfortable. But it is undecidable to determine if any two graphs are quantum isomorphic. Okay, so we talked about content by some of this one count. And when David was talking about this result, we were in Ontario, and this is a good lesson for me, I was sitting right behind Bill. This is the perfect spot to just sit. So go look at the result. And then he turned around and then he says, I think we're talking about scaffold. So graphical momorphism is just a map from the vertex set of one graph to the other graph. vertex set of one graph to the other graph, where if the two vertices from G, so our planar graph, are adjacent, then it would imply that the images are adjacent to next. If you have if and only if, then you have isomorphism. But we're just talking about homomorphism. So now we're going to turn this definition into this big product here. So if pi is a graph homomorphism, then in this product I am Then in this product, I am looking at all basically edges in my graph G. So A and B are adjacent in G. And if it was indeed a graph homomorphism, that means that the images are adjacent in X. So that means that this number should have been a 1. And this is true for every single edge. So that means when I compute this product, I would get a 1 if pi was indeed a graph of a model z. And if pi wasn't a graph of a model, And if pi wasn't a graph homomorphism, that means that I would have some pair here that wasn't an edge, so I would get a 0. So this product is 0. So the homomorphism count, I can express it as this basically big sum here. I go over all possible functions from the vertex set of g to the vertex set of x, and then I just compute this. Whenever I have a morphism, I'll get a 1. Whenever pi is not morphism, I get a 0. So this is just a complicated way of So, this is just a complicated way of saying I'm counting homomorphism from g to x. So, Bill knows instead, okay, we can write this way, and this is what he calls a zero-order scaffold. I won't go through the actual definition. So I was sitting right behind him, and he said that. And then I said, but I also recognize the sum. I worked on splinter models for a PhD, and the partition function of splin models actually looks a bit like that. Of splinter models actually looks a bit like that, a bit more complicated. But you still have this product and then this sum overall possible function format. So I said, well, I recognize this too, but from a different area. So we're talking about different legal pieces now. So we start seeing that, oh, maybe they fit. So there are three pieces of legal. We realized that we can put them together. And then so what we have shown is that given any two Hadamite graphs of the same order, same size. Graphs of the same order, same size, then the homomorphism count from any theta graph have to increase. So now we're saying that if I give you any two Holomark graphs of the same size, they have to be quantum isomorphic. And that's nice because you have many, many Holy Mark graphs of the same size. When you have n equals 16, so size 4 times 16, 64, you would have 5. But then if you go to 4 times 32, To 4 times 32, we have over 13 million polymer matrices. So we have millions of polymark graphs, and they have pairwise quantum ones in the multiple. Okay, so let's talk about polymark graphs a bit. So usually the definition of Holy Mach graphs would talk about rows and columns and how they were adjacent. I can't remember that. This is how I remember the definition of the Hademoth graphs. Give the Hutterbach graphs, this is the adjacent matrix. This is how much information I can be. Is how much information I can think of. So, so, so, but given that Hadabard graphs, you will have a graph, so of size n, you will have a graph on four inverts. A Hadamard graph is a business regular graph. Now, two Hadamard matrices, if I have H1 and H2, if they are not equivalent, Hadamard equivalent, or they are not equivalent to the transpose of each other, then the graphs are non-isomorphic plus. Okay, so we have that. That. So, one of the nice things we know about how to web browser. So, it turns out that, well, hold on, 30 years ago, that's scary. 30 years ago, Numera proved that in the Boston algebra of the Haddamach graphs, so the Hademach graph is a JC verbal graph. So it's adjacency algebra as the Bosnian algebra of the association scheme. In the Boston Messenger algebra of Hademach graphs, we can always find a spin model. A spin model is a The split model comes from Von Jong's work. So he used split model to construct great representation and linked variance. So there's a lot of theory to this stuff. And the bad news is we don't have a lot of examples of spin model. The simplest spin model comes from the association scheme of a complete graph, and that one gives you evaluation of Jones form. So even the simplest thing gives you something very, very interesting. But we don't know that there are very But we don't know that there are very few examples of families of examples we can see. The most interesting one comes from the Hadema-Simensis graph. I feel like I still don't understand it, but so, so, so very interesting stuff. And also our results, like the other little pieces, really come from this paper. So this is a paper that I walked through in detail when I was a grad student. But I can't tell you what was in it because there's so much stuff in it. It's packed with stuff in it. But then we were using stuff that we found in this paper to That we found in this paper to help us kind of put the moving blocks together. So it turns out what happens is the Boltzmann algebra of the Halmar graph satisfy, so it's a self-dual association scheme. It satisfies what we call triple. And that would allow us to compute the homomorphism. Okay, so let's talk about the Hamach graph a bit more. So it's a distance regular graph. So it's adjacency algebra equals to the space spent by the distance. Equals to the space meant by the distance matrix of the graph. The important thing is that this is an algebra, so it's closed under matrix multiplication. So if I multiply Ai and Aj together, then you can write it as a limit combination of AK. So these are the intersection numbers for the association scheme. That's all. I'll just say it very quickly. And I can show you the numbers. You don't have to memorize these numbers. The most important thing that you have to remember, or that you have to kind of observe, is that these numbers. Is that these numbers depend only on n. So it doesn't matter which out of the graph I use, as long as the n is the same, these numbers are the same. So scaffold. So this is, I'm going to just go show you an example. I won't give you a definition. So scaffold is a pictorial kind of representation of these tensor computations that people do on association scheme. And Bill has a pretty long paper on scaffold. But then we're just But then we just want to have a number here. We just want to compute this number. So we want to have a cancer product, which is have basically what Bill calls the zero-order scale. So how do we compute the scattering? So here I want to compute, I want to count the number of homomorphisms from a planar graph, this planar graph G, onto some Hadamap graph X. So this is the quantity that I want to compute that I've shown you before. So in general, a zero-order scaffold is, this is what you do. So this is behind your payroll. This is what you do. So, this is you have your player graph. You associate each edge with some matrix from your Boltzmann algebra. And then, what we do is, well, we still go over this sum, we look at all possible mapping of the vertex set of our planar graph to our Hadamoid graph, to the vertex set of the Hadermoid graphs. And so, this map tells us which entry I'm going to read from these matrices. So, for example, from this edge here, I'm going to read the entry pi pi A from the latrices. Pi A pi A from the matrix B. For this edge here, I'm going to read the entry pi A pi C from the matrix C. Now all these matrices are post-mission. So this is just a very convenient way of representing this horrible looking sum here. That's all. So then when we want to compute the homomorphism count, say from this graph to our Hadamard graph, this is the scaffold that we want to compute. Again, it is just a pictorial kind of very A pictorial, kind of very compact way of expressing a sum in this form. We still have to kind of figure out what this sum is. So I haven't done much, but just give you a colorful and pretty picture so far. All right, so then you say, okay, so now what? You have this picture, and you still have to do this computation that looks massive. Okay, so what we're going to do now is we're going to say, well, if I can change this picture, do reduction. So for example, I have a loop, I have a leaf, maybe I can somehow delete it. Maybe I can somehow delete it and get a smaller planar graph. So I want to do reduction on the planar graph. So the tool we're going to use is Epiphanoff theorem, which says that if you have a connected plane graph, if you planar graph, you can just run a plane graph, and we can always reduce it to just an isolated vertex by a finite sequence of these local operations. And you see the deletion of a loop, deletion of a leaf, appendant edge. Here is the series reduction. So, if you have a path like this, then you can reduce it to just one edge. If you have parallel edges, you reduce more than one edge. And then you have these delta y transformations. So, this is the possible result. And that's the tool we're going to use to help us going from this planar graph and then to just one vertex. Of course, every time we do this reduction, we have to do some booking. We have to do some keypick. So, here are some keypings that we have to do. So, deletion of leaf is simple. Basically, all we have to do is to write down the row sum. The PR0 is the row song. So, that's what it translates to. Deletion of the loop, so we will only get a non-zero entry if because we're reading the diagonal entry of AR, so it only happens when r is equal to x zero. And because we're talking about the Boltzmann algebra. We're talking about the Bose-Mester algebra of a distance regular graph. So it's enough to tell you or to figure out what happens to the basis. Series reduction is a bit more complicated, but it can be translated to multiplying the two matrices together. So that's serious reduction. Parallel reduction will translate to the sure product of the two matrices in the scheme. So actually, if I have any association scheme, any Bros-Mester algebra, and if my plane graph can be reduced. If my plane graph can be reduced to a single vertex using just these operations, then I can compute homologous count using just these operations. But then we still have the annoying x and like the delta y transformation that we have to deal with. This is where the triple irregularity comes in. Okay, so in the same paper when Murray showed that the Hamar graph has spin model, he actually worked out how to do this transformation, but he also worked out Do this transformation, but he also worked out all the coefficients that we need. Okay, so again, we're just kind of finding the right ingredient from the right legal block and then put it together. But the important thing is all these parameters, again, depend only on n. It doesn't depend on the structure of the dye. So that's the important piece. So for example, I just wrote down some of these numbers that we already come up. So if I want to compute the number of homomorphism, Compute the number of homomorphism from 313, which is the large G, to my Hadamard graph. Then I just have to kind of figure out what these numbers are, and then I form my linear calculation. There are only five of them, five of these numbers that are non-zero, all the others are zero. So then when I do my reduction, I can replace this with the sum over here. Now then, I have a triangle. This is a series. This is a series. I can do a series reduction here. So, this is just basically saying that I need to multiply these two matrices together. After doing a series reduction, I have a parallel edge, and I can reduce it to an edge. And I have a pendant, I can just believe. So I can just kind of do it step by step, but then I can write down the whole ones of count just in terms of and again, the structure of the hardware graphs that I've used doesn't play a role. Okay, so So, the lemma is that the two automatic graphs of the same order have all the same Pijk's and the delta Y parameters, all those kind of scary looking parameters that we talk about. They only depend on n. So, for example, if this is my g and I want to compute the number of overhaulism from this plain graph to my Halemite graph X, then this will be the expression length. It depends only on. It depends only on. It doesn't matter which halabar takes us that thing. So, as a result, we show that any two halabor graphs of the same order are quantum isomorphic. Second last slide. Okay, so there are lots and other questions. There are lots and lots of things that I don't know. For each thing, I feel like I have to do, like, take three courses in undergrad and graduate. But I think it's scary, but it's fascinating. I think it's scary, but it's fascinating. I think it's really fascinating when you see all these different areas of mathematics come together. I think I won't have to worry about my retirement. There'll be a lot of things to learn. Okay, so my first question is the first question is that, well, the way we prove that two hot rock graphs at the same size are quantum isomorphic is we go around about and use holomorphism graph theory. We haven't found the quantum permutation matrix yet. And I know Bill has worked on that. I know Bill has worked on the first case, Nicole 16, and I haven't heard from him saying that he's found it. He hasn't found it yet. Last year in Canada, I met William Swastra. He is in quantum information theory for Walladoo. The question he asked me is, how do you know, well, do you know if the C-star algebra is finite-dimensional? It's possible to find a quantum permutation matrix where the entries come from a finite dimensional C-side algebra. Is it possible that you have the same size n if you pick your two favorite? If you pick your two favorite Halbat matrix, you would have a quantum permutation matrix that uses a finite dimensional C-star algebra, but then maybe there's another pair where you cannot do it with finite dimension. How do you know? So apparently there's some implication to quantum complexity theory. I feel funny saying that because I feel like I'm just adding quantum in front of things. But there's implications there. So that's one direction. But the other direction is, it seems like a lot of examples that I've talked about, talk about strongly regular graphs. I've talked about strongly regular graphs, I talked about, they all come from post-mass association scheme. Now, I don't know if it's just because this is where people bulk, or there is some reason there. So, that's what we're talking about. And the last question is the one that I'm very interested in. So, the way that we improve the Hallamat graphs result is that we use spin model. So, the last legal piece is the spin model piece. It is a sufficient condition. It's in if I have two association schemes. If I have two association schemes that have these triple regular and duality and delta y numbers are the same, then you will have a quantum automorphic graph. And so at first I thought, well, we're just using a huge hammer to prove this result. But it turns out that there's a notion of quantum automorphism. So you replace your isomorphism equation with just Ax on both sides. So there's a quotient of quantum symmetry. But you want, again, you want at least two blocks to be non-conclusive, to have quantum symmetry. To have quantum symmetry. And then in Simon Schmidt's thesis, he proved that the Hitman-Simps graph has quantum symmetry. And he explicitly said that it's because it has a spin model. Now that I understand his proof, but then the spin model plays a role here too. So then I thought, okay, this is very weird, but it would be really, really interesting if there is a needed connection. But then what really confused me even more is that in his thesis, he said that, so the Hamming graphs, the Hammond scheme, they all have split models. They all have spin models. And then he said that, well, all the Hamming graph except HN3 would have quantum symmetry. So that is really confusing for me because now it's not like Swimmo will always work. It will work for some cases, but not all cases. So again, this is like another direction that I'm really confused about, and I really want to understand. So we've only used three pieces of Lego. There are lots. So please join at the beginning. I haven't met today. Are there questions for Delaware? So, uh Heramar graphs are antipolar. Yes. So can we say from this result that their folded graphs are also quantum of isomorphism? Which graph? Folded graph. For folded graph, if we take the folded graph of the graph. I'm not I'm not sure if the end uh like it being an oh or if the participant of place will know tomorrow other questions I just don't remember what technically what they're for the time is Alright, now I want to hook this up to the perfect thing. That's the only thing we've got to do the next 30 minutes, right?