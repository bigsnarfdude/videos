This talk is related somewhat, well, maybe even directly related to Salvin's talk, who is now making coffee there, and also to mature talk, maybe indirectly, but a similar motivation. And therefore, and some of the definitions will also be used in my talk. And therefore, let's begin with a very brief introduction because a lot of the things. Action because a lot of the things were already pronounced yesterday and the day before. So, what is the basic story, if you like? Effective algebra or computable algebra studies computable, discrete, countable algebraic structures such as groups, win algebras, fields, and so on and so forth. And computable analysis and topology, they investigate computable analysis. And topology, they investigate computably presented topological spaces and metric spaces and the subsets. But the point is, the traditional division between these two subjects is somewhat artificial. Why is that? Well, because the two subjects really share the same motivation, what is the effective content of classical spaces or structures? What is the effective content of the space? Is what is the effective content of proofs? What is a computable mathematical structure? Whether it is space or it is an algebraic structure, it doesn't really matter that much. And in fact, technical challenges are often not that different either. And you will discover it if you start doing this sort of research very quickly, in fact. And here is an example of a technical anacrime. And actually, limit-wise monotonic functions are delta-two functions where the approximations can only go up, increase. And Sully already mentioned this in his talk. It was used as a technical tool, but they were, in fact, introduced by Nazif Isamiyuk in the 80s to characterize computably presented abelian p-groups, discrete objects, and then reintroduced independently by Kusainof, Nisen Schor. By Kusainov, Nissen Schor in the context of computable model theory this time. And then again, reintroduced again independently by Bosakoff and Herting in the computable topology impact. I will not really talk about their results, but they're in fact very closely related to what I'm going to talk about today. And as I mentioned before, we used it with Selwyn and Pach to study star space. So this is this is the So, this is the evident technical relationship between this subject, not just the analogy. And it probably is not a surprise that techniques and ideas from effective algebra can sometimes, with some effort, be extended to separable spaces using dense sequences. So, what is going on there is basically if you have a countable base, whatever that means, it is kind of a countable algebraic in some way. Compatible, algebraic in some sense, structure sitting in your space. So, what you are doing here, you kind of take a completion of something like that. Let's say you put the Polish space, and it kind of adds you a bunch of lemmas that you have to prove. Sometimes you succeed, sometimes you fail, but at least you know how to often approach, at least approach approach. So, in some sense, we're just dealing with a new kind of structures, and this really all took off with this. And this really all took off with these two papers by Zwan Koviliazovich and myself in 2010, where we investigated computably categorical Polyspaces. And in fact, some of the ideas already appear in the book of Porrell and Richards. But there was no systematic investigation into these trends. And we independently initiated this. And then many more recent results appear in the past 10 plus years. And it's not a complete list of people. And it's not a complete list of people who contributed to the entire subject. So, this is an active research area. And today, I want to talk about one aspect of this, which is motivated by the following. Until recently, most results were technical degeneralizations. For instance, a lot of the stuff was. For instance, a lot of the stuff that Selwyn was talking about was basically: okay, so we have this space, we kind of found a way to approach it using the mini-wise monotonic functions. And yes, it could be challenging, but we kind of know what to do maybe if we succeed, right? This is basically the following thing. Try to push some techniques from discrete to separable and hope that it will work as this thing. But this is not what I'm going to talk about today. I'm going to talk about today. What about results that would directly relate the two subjects? Let's say topology and algebra. Computable algebra and computable, not by analogy, not technically, but directly. So I am looking for results of the following form. And this is pretty much the only non-trivial example that I know from the literature. Oh, no, that's just that's uh Oh no, that's just something I'm looking for, right? Next slide is going to be an example. So I'm looking for something like that. For a distinct structure A in a certain class, whatever class you care about, the following are equivalent. A has an algorithmically effective presentation, whatever you mean by that. And the dual, quote unquote, of this topological, the topological dual of this countable structure. The logical dual of this countable structure has an effective presentation so that the computable presentability of the discrete structure and the whatever dual means topological structure are equivalent. So that would directly relate these two subjects, right? And of course, what do we mean by an algorithmically effective presentation? It will depend on the class, on the context, and so on and so forth. But this is something I'm looking for, right? So this sort of result. Pole, right? So, this sort of result. And also notice that many standard classical dualities, which I will discuss in my talk, when it comes to spaces, all right, the duals, they work up to homeomorphism for the most part. So not up to isometry, not up to quasi-isometry, not up to whatever, homeomorphism, right? And this directly relates us to the previous talk. Directly relates us to the previous talk of myself. As I promised, here is the only non-elementary result that I know of this sort. It goes back to the 80s. Smith, Laroche, was a student of Neurode. And what they did, they said a pro-finite group G, which is a kind of a compact group. Okay, if you don't know what it is, don't worry. It's a kind of a compact group. The following equivalent. The following I feel: G has an accessibly profinite presentation, something I will discuss later. So, it's a notion of presentability for a compact group. And it's equivalent to saying that it's topologically isomorphic to the Gao group of a field extension of a computable field inside the field of algebraic numbers. Numbers. All right, so we have this Galois correspondence between profile and recursive profile and groups and computable fields. And it's a one-to-one correspondence. One is computable if and only if the other is computable in a different sense. So this is one of those results I'm looking for. And unfortunately, this is basically the only result of its kind from the Of its kind from the literature which existed, let's say, four years ago. And what's interesting about this particular result is that, in fact, Laroche, as a byproduct of his proof, he discovered something that wasn't even known classically. So there is something that is called the free profinant group. Doesn't matter what it is, but people care about it. And it wasn't known that there was a subfield of the algebraic numbers so that the god. Numbers so that the Ga group is the free profiner loop somehow. So that they didn't know. And in fact, you can make a computable one. So sometimes when you do this sort of investigations, you occasionally have byproducts you are not looking for, right? You're not expecting. And to some extent, this will happen in this talk as well, the other developers, too. So, here is a plan of the rest. I'm going to very quickly remind you the definitions of effective presentability in algebra and topology. And then I will talk about Stone, Pentagon, Banach, Stone, Gelfand, and TDLC dualities. I may have more slides than I have time. That's fine. We can always leave out some of these things. I want to go maybe slower to make sure that what I say actually you guys understand. That's what I say actually you guys understand. And my talk will be somewhat naturally subdivided into a few parts. So even if you didn't understand one part, maybe the next you will. So don't give up too early. Part one. Effective presentations. As classical standard, Milsevan Rebbin, algebraic, discrete, countable, algebraic structures computable if it's domain, operations. If it's domain, operations, relations are computable. That already was defined in previous talks. And there is another weaker notion. Let's say Bach did some nice work recently about C-presented structures. A structure is C-presented, or people say positively presented, if it is of the form A, you know, factored by B, where A is a computable term algebra in the language and B is a C. Language and B is a C subalgebra, right? Congruence. So you can think about it as like the iterations are still computable, but the equality is C. So elements can quite late become equal, and it's unpredictable for the C process. A standard example will be a finitely presented group. So you have finitely many generators, finitely many relations, and that would be like a standard example. A standard example of a C-presented structure, which doesn't actually have to be completely presented. All right, so that is standard. And these notions of presentability are known to be non-equivalent up to isomorphisms. And here are the classics in computable algebra. So I want you to look at these results because I'm going, they will pop up again and again during the talk, sometimes unexpectedly. Finer. Feiner, build an example of a C-presented Boolean algebra with no computable isomorphic copy, classics from the 70s. It's an Eve, this is something you probably don't know unless you are like hardcore computable algebraist. Every C-presented torsion-free abelian group has a computable presentation. So these two notions actually collapse in the broadcast of these groups. And also a well-known result by Daniel Djokos from 1994, every law of will. Every law within algebra is isomorphic to a computable one. And of course, law means that you relativize the definition to a lower. So these two examples are kind of the examples which will be important for us. Yeah. That that also pops up, but I had to to limit myself. I could speak for hours, but I have only so even what I have is like too much in part. So you are it. So they also appear quite nice to me. So what is the fundamental notion of computable space in topology? And if you listened carefully to Saulin, you would know that the answer is not clear, right? We have a zoo. Right, they have a zoo, there's a zoo, so it's not like there are two, no, there are in fact seven, something like that. And which one should I use? I mean, I think the right answer is whatever works, probably, but in fact, it's much better than that. It's much better than that. Some of them are way more natural than some others, and they pop up again and again. And some are just a pitch hold for the sake of the information. So, these three I claim are the most natural. So, these three I claim are the most natural ones, and I'm going to just repeat what Solin did already. A computable qualif presentation is given by a compatible, complete in my talk, metric on the space, a dense sequence, a dense countable sequence, and the metric defined on this sequence computably. So, the distance between two points from the sequence can be uniformly computed to any precision. Now, if you want to Now, if you want to weaken this notion, you can consider right CE polish spaces, where you require that only the right cut of the reels, right cuts of the reels are uniformly CE. The same is to say that you can approximate the distances from above, but not necessarily from below. And the strengthening of this, and of course, it makes sense only in the compact space, but can be extended to locally compact too. The space is computably compact if it is. Is computably compact if it is computable pointish, and also you have access to compactness. So there is a computably enumerable list of all finite covers by basic both. And this notion has 10 equivalent formulations. It's extremely robust. But think of it as like being compact in an effective way. Whatever you mean, will probably be too long to do. All right. All right. And the most natural notions of effective presentability are obviously related by these sorts of applications, as follows from the definition. As we know from Selwyn's talk as well, these implications are in fact strict. In my talk, as a byproduct of what I'm going to say, I will show you how to separate them using dualities. But my basic question is. But my basic question is: how are these notions related to the ones from algebra by the classical derivatives? That is the motivational question for me. And recall the old classical results. How about the can we do something similar in computable topology? And when I say similar, I don't necessarily look for counterexamples, but also something like Hisami's result. What about positive results when a computable topology is? Positive results when a computable polyup space is, let's say, always homeomorphic to a computably compact one, or a right C to a computably compact, something like that. So positive results, not necessarily separating the note, but looking for the positive as well. All right, so that are my definitions. And let's discuss the first, sort of the softest, the easiest duality, the stone duality. Stone is what can be Right, stone is what can be easier. We're all to some extent familiar with it, and what does it do? Stone duality associates countable Boolean algebras with closed subsets of the counter space, but up to homeomorphism. So you have to be a bit careful because even though it can be homeomorphic to a closed subset, you know, I 01 plus, let's say, but the metric could be really strange. So your Really strange. So, your space could be living on the surface of some manipulative or something like that. So, don't be deceived by the presence of the counter-space here. We do not necessarily restrict ourselves to Python. And the result is, therefore, actually not trivial. It's not too difficult, but it's not a triviality. For a stone space, which is the dual space. Space, which is the dual space of the Boolean algebra, the following eye equivalent. It's computable polish. It has a computably compact homeomorphic copy, a positive result, right? And the Boolean algebra, algebra has a computable presentation. So not only can we associate computability of the dual space with the computability of the algebra, but also in the process. But also, in the process, we establish a positive result that computability of the polish of the stone space implies that you can do something with the space and produce a homeomorphic copy, which in fact is computably compact. And here is what Downian Djokovic pops up in the proof in a non-trivial, in an essential way. The most interesting implication is if you are given some. If you are given some weird presentation of the Polish space or the stone space, how do you reconstruct the Boolean algebra? Metric could be just compatible, but not necessarily like ultrametric. So what we do, we use the that every low Boolean algebra has a computable property. And in fact, we're using something equivalent to that. But this is where this proof kind of helps. All right, so you need to do some work. All right, so you need to do some work even for storm door. What can be seen? And in fact, just a remark to connect it to my talk to Sellenstadt. One, two, three is also equivalent that S has a left C polish presentation, which is one of those weak notions which is similar to right C, which I didn't define. So there is a lot of collapse going on for Boolean algebra specifically in the chirology. Okay. Okay. What about IC? For a stone space, right C response to C presentable for Boolean algebras. With the next thing, effectively compact, you see it's a zoo, right? Effectively compact that it's like computably compact, but the metric doesn't have to be computable. So you see, even this strange intermediate notion sometimes becomes natural in some sense. You have to use this. Natural in some sense, you have to use these kind of things. But to be fair, it's like basically the intuition is that right C corresponds to C presumptible. Why? Because in the right C space, things can suddenly become close or equal. This is what is the C algebra, right? Things can become equal. And the proof, the non-trivial implication of the proof, uses another old result that every pi zero two presented within our algebra. Every Pi02 presented within algebra has a C presentation where it's all silicone. So it's somewhere in an essential way used inside. So we get to use some classics when we do topology. So if you use the result of Feiner, or Feiner, I was told it's the characteristic pronouns. The result of Feiner, C presented with an algebra with no computable one, it gives us a separation of. As a separation of computably of right C polyn computable point already. So, this is one way to separate. And we were not necessarily looking for this separation. We were not aiming for this result. It just happened. There is one more pleasant corollary of this duality. Let's talk about it. And it's another standard definition, which already was defined, but I will repeat it. Imputable categoristic. Categoristicity. A discrete, countable, computable algebraic structure is computably categorical if any two computable presentations of this structure are computably isomorphic. And our still on duality, when we restricted to computably compact presentations, respects computable isomorphisms. So what's happening is that you can show the following: any two computably compact copies of this. Computably compact copies of the stone space are computably isomorphic, it is the same as to say that the dual Boolean algebra is computably petty. All right, and because of the result by Genshirok and Rammel, it is the same as to say that your stone space has only finitely many atoms. So, not only we have this connection, but also it connects a certain notion of contexturistic in topology to the standard notion of categoristity, which tells me. Of categoristic, which tells me, by the way, that maybe computable compactness is the more natural notion of presentability. There will be more evidence for that later. All right, so we are done with strong duality. It's a good time to ask the question or two about it. And if not, there's another duality again that I'm going to discuss. Quantagen duality, four pro-finite groups. Duality for profinite groups. Okay, it's a profinite group. One way to define them is like in the Polish case, at least, complete separable case. If it is infinite, its domain is just homeomorphic to the country space. Of course, I mean, the duration can be like whatever, but if you just forget about the duration, a group is profinite if and only if it is basically the country. And as we know, they're Galo groups, as we have seen. But there is another duality going on or correspondence going on here for compact abelian specific groups. And in fact, locally compact topological abelian groups, you can form its dual in a certain canonical way, considering the homomorphisms from the group to the universe. From the group to the unit circle group and give it a certain so-called compact open topology. You don't have to worry about what it is exactly. What I want you to look at is the result. When you do whatever canonical thing and you have a locally compacted BNG, when you apply this procedure twice, you get your group back upon your model. So it is a problem. So it is a property, it's like stone duality, but the more complicated version, sort of, and for groups. And what's cool is that if G was discrete, the dual is compact and backwards as well, if and only. So compact correspond to discrete, just like in stone duality. That's awesome. Instruction discrete, if and only if the dual is pro-finite. This is something we are going to look at in this part of the talk. And the next part, it's torsion free discrete if and only Torsion free discrete if and only if the dual is connected compact. So we are interested in the second line, G torsion discrete if and only if G hat is pro-finite. And here is your duality result. For a torsion abelian group A, the following are equivalent. A has a computable copy. The discrete torsion group has a computable copy. We know what that means. A hat is recursively profinite. We do not know what. We do not know what that means, but this is what Smith and Neraud and Laroche used 40 years ago. And A hat, the dual, the compact dual is computably compact, which means that the domain is computably compact, but also the operations are computable as functional. And because we have three, I'm not actually going to define what recursively profile means, it would take it a bit more. The profile it means it would take a bit more time, so just ignore it. I mean, I can tell you up to the talk what it means, but this is exactly what we were looking for. It's another duality here, and again, this duality turns computable isomorphism into computable isomorphism between the duals in the right sense. So, not only does it preserve computability, but also it's basically a computable functor, if you want. And here is one possible application. A few years back, Selen and I proved this pretty brutal result that the index set of computably categorical parts Nabelian groups is pi 04 complete. So there are plenty of non-trivial examples of psi groups. There is no proper algebraic characterization. In fact, it cannot be, as somehow follows from this result. It's impossible. It's impossible because of reasons. Sorry, that's not the subject of this talk. And this settles an old problem that can be traced back to Maltzev. So what we get from the duality is that you can directly translate this result to profinite abelian groups. The index set of CC computably categorical profinite abelian groups is also Pi zero procomplete. So you have plenty of examples of computably. Of examples of computably, unlike the stone spaces, where they're all kind of stupid, right? Here it's not the case. Many monstrous examples of such computably pitiful profile groups. And of course, the categoristic here is understood with respect to computably compact. I actually don't know what happens if you drop the computable compactness. And it brings us to the question of cellular. But again, you see computable compactness. But again, you see, computable compactness seems to be the way to go, right? In this class, too, because it aligns itself with the computability of the discrete rule. And of course, in all our results, in this part of the talk, computability of the group operation cannot be dropped. Well, because it's as a point of space, it's just a country space. So it's all about the group operation. Somehow it's not the case in the next. How it's not the case in the next part of my talk. And that was actually quite unexpected. All right, so let's see. So, next part is contracting duality two, but this time for connected groups. Okay. So we're still dealing with this sort of duality notion, but this time we changed the class of compact. Change the class of compact groups. And remember, a connected compact corresponds to torsion 3 abelian, right? And here is a result in a series of papers over the years for a torsion-free abelian G and its connected compact dual. We have the following equivalent. G is computably presentable if and only if G hat is computably compact. Again, all right, again, computable compactness seems to be the right notion. And that is a bit unexpected. G is delta 2 presentable or zero jump computable, the discrete one, if and only if the dual is computable Paulish. So, in fact, computable Polish is more related to delta 2 presentation somehow than to computable. Than to computable ones. And if you don't do computable topology, you may be surprised. I'm no longer surprised now when I have seen enough, but that, well, at the time when that was established, I didn't know enough. And that was surprising because for me, computable quality seems to be the basic notion. Apparently not necessary. And there is a mild algebraic condition, probably dropped, but it makes the proof easier. What's amazing. What's amazing as well here is that computability of the group operations in the compact dual is not assumed in this result somehow. So I'm not requiring the G-hat. You can, I mean, you can, if you want to. But if I just give you the domain, computably compact presentation of the domain without the iteration, like forget about it. You don't need to use it. You still can somehow produce the Produce the discrete dual technique. How does that work? It's not, I mean, it's not trivial, right? So you can imagine that stuff has to be done. First of all, the way to get, you know, I'm going the difficult direction. How do we get from the space to the discrete dual without using the period? Well, you need to use checker homology somehow. Or maybe you don't need to, but it's probably the best way to do that. To, but it's probably the best way to do that. And if you look, it's some homology notion, all right? It's in the textbooks, whatever that means. In topology, they do homology stuff. But if you look at the textbook, the way it is described, it's not effective. It's somewhat close to being effective, like zero jump, zero double will do it for you, but it's not. Zero double will do it for you. So we needed to find a new construct. To find a new constructive version of doing this, so it's in fact even having a new definition for cohomology, it's equivalent. So, we needed to do some algebraic topology, actually, right? And our results in therefore extend the classical computability theoretic results about simplicial, you know, usual homologies for finite simplicial complexes, which is like a textbook stuff. But say if you open mantras, algebraic topology. Algebraic topology textbook has an entire chapter for imputability in the finite code simplicity page. And this kind of extends it to compact spaces. So it has independent interest. Also, it uses Hisanius result. Remember the C presented thing with the computable presentation, one of the three main results in the beginning of the talk. Again, it pops up here. But here, in a non-kind of trivial way, somewhere inside the proof, it's crucial. The proof is crucial, in fact, in the proof. And the other direction of the dual uses another classical-ish result or like standard result in computable algebra by Dobritza about the basis. And if you're familiar with reverse mathematics, like Rich Solomon's thesis and stuff, this is what he uses to show that every torsion 3 ability group has a computable order input state. So it's used in effective algebra, but that is an application to topology. But that is an application to topology, right? All right, so, and in the main combinatorial tool, of course, is you know, priority machinery, which can ties everything together, but at least you can separate it into modules, not just do one huge construction. And why, again, I didn't really answer you why I didn't need the group operation was because if Well, it's because if you calculate the first Czech homology group with integer coefficients of the compact group, it will be isomorphic to its discrete dual. So all I need to do is to calculate somehow this cohomology, and that is a challenge in itself, but at least I know what to do. That's an interesting, it's not actually, it's not hard to see, it's popular. Wow, it's not obvious. It's not obvious either, but it's not like something. So that it's a funny coincidence in algebraic topology and homological algebra. As a byproduct of that duality, you can use a very old result of Maile about subgroups of the rational 1958 and show that there is a computable Polish canonical. Computable polish connected space, the group space, not homeomorphic to any computable compact space. So it's an why? Because of this duality result, right? Because, you know, polish, computable polish corresponds to delta two, computably compact corresponds to computable. All we need to do is to find a group which is delta two and non-computable, right? That's all. That's not already difficult, you can imagine. Imagine and finally, we finally arrived at this little separation now. Using dualities as byproducts of these dualities, we get these results. But also, we get more, right? We get more than that. We get plenty of positive results as well. All right. Part four. Before I proceed, and if I have time to proceed, And if I have time to proceed, I want to talk about applications because this workshop is about applications, right? So I should have this sort of frank here. Application. Well, so what's cool about duality is, in my opinion, they sort of open the gates between these two subjects, computable analysis and or topology and computable algebra, and allow you to apply lots of results from computable algebra. From computable algebra, to topology, as you have seen already a few, right? But I want to give you a bit more. Let's say that the homeomorphism problem for connected compact quality spaces is sigma one, one complete. Follows straight away from the duality, right? You just know, you know, what's homeomorphism problem is the pH of indices of homeomorphics connected page. And the upper bound is sigma one one in the contact page. In the contact case. And this follows from the work of Downing and Marpelban from 2010, the Journal of Algebra paper, where they established it for torsion free abelian groups. And we know the torsion free abelian groups are corresponding to connective compact spaces under the spaces under the duality. Great. If you like degree spectra, and I think the people can be subdivided into two non-intersecting classes. It's two non-intersecting classes. You either love it or you don't care. But if you're one of those who loves degree spectra, then here is another corollary: there is a connected topological space whose degree spectrum with respect to Polish presentations is exactly the non-low two degrees. Okay, how would you do that without outsourcing it to algebra? I wouldn't know. I can actually do non-low degrees, like exactly the non-low degrees. Like, exactly, did not know degrees if you restrict yourself to compact presentations, which I argued are more natural, in fact, but you know, you make a choice. And here's a question I wanted to pose. Up to homeomorphism, can we have exactly the non-computable degrees as degrees of presentations? Let's say for a contact space? How would you do that? I would really like to know the answer to that. Because it will, it follows certain technical. Because it poses certain technical challenges. Not necessarily even like the answer, the question itself, but how you do that is more interesting. All right. Something I inserted yesterday night, part 4.5. It's another kind of application, but this time to Banach spaces. It's a huge area of research in computable analysis. There are two books on this subject, so the people here. We all know what the Banach space is. They're Banach space. Of course, I'm going to talk about separable ones. No, a separable Banach space is a Polish space which is also vector space. And basically, can we relate our topology to Banach spaces? Here is a definition, standard definition of computable Banach space. Maybe not the standard form of this definition, but it's equivalent. What a computable, let's say, real. What a computable, let's say real, Banach space is a computable Polyg space under the metric induced by the norm in which the group operation is computable. Usually you say that the vector space iterations are computable, but it's not difficult to show that just the group operation does it. For you, you can reconstruct the rest. And it's easier to state it like this, don't you think? But what's different in this still? What's different in the still separable structure, right? I understand that, but such presentations are usually viewed on the linear isometry. Reason being that they all, unless they have finite dimensional homeomorphic, will be filtered space. So it's more infinite dimensional filtered space. It's not particularly interesting to study the homeomorphics. So people look at linear isometries or non-preserving linear isomorphisms at the same time. At the same time. So it's a different notion of similarity, okay? But they relate directly, in fact. Well-known Banach stone duality, first book by, I don't know, probably Banach in fact, associates the Banach space, Carr, the space of continuous functions on a compact domain, with the compact domain. With a compact domain, K, right? What is the well? So, you know, the domains are homeomorphic if and only if the resulting space are linearly isometric. So it's another kind of duality, if you like. And McNickel asked whether this Bannerstone duality is effective by usable. And at the time, it looked hopeless, to be honest. I mean, we didn't know how to deal. I mean, we didn't know how to deal with spaces of homeomorphism, and it was like, well, who knows, right? And then, once we accumulated enough techniques, this question doesn't look so terrible anymore. So, to be more precise, what he meant is like, is K computably compact up to formulomomorphism if and only if C chi, the space of continuous functions on this domain, is computably presented up to linear isometry. Linear isometry. Okay. So this is the more way to make it more precise. And if you restrict yourself to stone spaces, kind of amazingly enough, you know, your domain is, you know, stone space. Why not? And yes, the answer is yes. For a stone space, the answer is yes, it's effective. So, you know, this thing is linearly symmetric to a computable banana space. Computable banach space, if and only if S is homeomorphic to a computer compact space, as a Carolyn, let's say you can have that for Banach spaces. Every low four Banach space with a totally disconnected compact domain is linearly isometric to a computable Banach space. I mean, yeah, maybe it looks kind of artificial, but think how would you even try to prove that without outsourcing it to Boolean algebras? For Boolean algebras, it's pretty hard to. For Boolean algebra, it's pretty hard to do it. The paper is pretty long and like 17 pages. What would you do for the button experience? But fortunately or unfortunately, it's up to you to decide. In general, effective Banach's tone duality fails. It's not true in general. All right, so how you do that? Well, this is where you use starts. Well, this is where you use stars. Maybe you don't have to use stars, but going back to selling stocks, so what you do, you produce like a one-point compactification of a certain star space, which is actually not too bad. It's a C-closed subset of the unisk. And you kind of simultaneously define the dense sequence of functions, which is not too bad because we know how to deal with unit disk. How to deal with you know unit disc or unit square, you know, a point appears. You just take define a function which is like a tooth function on this point, something like that. But this thing doesn't have a computably compact presentation, so we're done. And another question, no, that one is a star space, so it's fundamentally dimension, you know, fundamentally dimension, whatever that means, right? Can you build a C-class subset of the unit intervals? C-close subset of the unit interval, which is not homeomorphic to any completely complicated. You can do a 501-close subset with installing your own. It's a technical question if you like this sort of thing. And before I proceed to the next part, and I have what five minutes, seven minutes, something. And it's okay. So that period. So, that previous Panex tone duality, which actually fails, contrasts greatly with the following notion of duality. So, what's going on here? It's kind of the same setup. You again have a compact domain, but now you also have more operations in this phase. It's a sister algebra. And in fact, if you don't know what the sister algebra is, think of it's enough to assume that the point-wise multiplication of points is system. So the rest can evolve. So now you don't only have plus, right? But you also throw in fine. And that is enough to reconstruct the domain from the presentation. However unnatural the presentation of the Banach algebra is, you can do something, some definability analysis, relying on plus and times that somehow defines you in a very indirect way. You in a very indirect way the domain. And there's like a million people authors and including people doing psychology. All right. And you can imagine then that this has some implications about intrinsic computability of operations in space. And I don't know that, but it's really related to the foundations of. Foundations of computable functional analysis between the iteration of multiplication and stuff. All right, part five, which I don't think you have time to talk about in much detail, but I will say a few words. That's a joint work with Andre Nids and also Martino. One table with Martino. So, what's happening is there's another. Is there another duality? This time EDLC groups. I'm going to talk briefly what it means. So we have been looking at compact spaces and groups so far. It seems restrictive or restricted. What about is neither discrete nor compact? Can you do something meaningful for spaces that are neither discrete compact? Probably something. And in this And in this case, TDLC group, what's a TDOC group? It's a poly. If it is poly, it's either discrete or it's profinite, so it's temporary space with an operation, or maybe it's accountable disjoint union of parties of the country space up to a remote. But of course, there is some sort of operation law on top of the other, and it depends on how exactly you define it. And such groups are evidently locally compact and have only counted remaining. And have only counted remaining global sets. There is some sort of countable structure. Willis, who is a group theorist specializing in locally conflict groups in Australia, asked what it would mean for such a group to be computable. They really wanted to know. They had questions. And And, you know, we came up with six or seven definitions. We actually didn't know. And each definition had a different motivation. And what's remarkable is that we show that they're all equilibrium. All of them are equilibrium. Some of them are quite different looking, in fact. For my talk, what's important is that there is a Is that there is a duality there as well, as a part of this equal? One of the definitions was talking about the countably many compact open cosets. It's a kind of countable structure sitting there. You can define operations on this coset in a certain natural way. You get a glue for it, other glue point. Okay? And then it becomes in reality, so the countable structure of the process. The structure of the process is computably presented as a countable structure if and only if the DLT DLC group is computable. So it's kind of stone duality, but on steroids, if you like. And computably, locally compact is exactly what you expect. You know, locally, computably compact is something like, well, I don't have time to talk about it. In the remaining time, I want to say that this duality has some. That this duality has some full applications because it also respects computable isomorphisms. For example, just as we have seen a few times already, Poloxon spaces, computable categories is preserved, you can show that the additive group of the pairic numbered properties is computably categorical. So any two computable presentations in the right sense of this word, which is one of the six items. Which work, which is one of the 600 things. Any of them are computed by a remote. And that is a non-trivial fact. I mean, you will think, oh, how hard could it be just to create it? And I'll try to do that. I challenge you. You will see it's not trivial. And the way we manage to produce a factable proof is to outsource it to the duals, the group for it. Accountable structure, you kind of know what to do with them. All right, so there is another drawout. All right, so there is another duality which is contragging duality, which is also effective for TDLCU. I'm going to skip that. And now I don't have time. And there is something you can do with these computable groups, answer a question by algebrais, to go scale functions. Doesn't matter. It's not really related to this stuff. So let's Okay.