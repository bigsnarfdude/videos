And if it's just a four-hour drive from me, I don't get an excuse to come down here often enough. All right, so today what I want to talk about is tracking. Sorry for the abstract in the program. I tried to change it. So I'm going to introduce this problem with a couple of projects that I'm working on. Of projects that I'm working on, but I'm not going to really develop those projects specifically. So don't go expecting a resolution to these problems. I just want to point out some of the issues that we run into when we try to track. So this first project is with Amy Gladfelter, who is a biologist at UNC, and her grad student, Grace McLaughlin, who captured most of the videos that you're going to see in this first part. In this first part. Okay, so this is a weird cell. When you think of a cell, this is probably not what you're going to imagine. So this is like a, this is a fungomycelium, I guess. And so you can think of it as like a giant hairball. This is one cell. So we're only like seeing half of it, so kind of just reflect it, I guess. And what you're seeing are these. And what you're seeing are these hypha, these branches, and one of these bright spots, these are nuclei. Hundreds, thousands of nuclei in the cell, which is not typically what we think of with a cell, right? A cell has one nucleus, it's a eukaryotic cell, right? And that's the rule. But, you know, fungus is weird. You just have to deal with that. So we are interested in how these many, many nuclei. These many, many nuclei divide and self-organize. So that's like the big question, which, as I said before, I'm not going to really answer for you guys today, hopefully soon. But you can see that they move randomly. It's molecular motor microtubule-based transport. We know that. The distribution seems sort of random, but if you've studied randomness in any way, you know that this is too random. Know that this is too evenly spread out. So, one of the design goals the cell has here is to maintain a roughly constant density of nuclei within its cytoplasmic body. But it's got different parts growing, and so how it regulates the cell cycle of these nuclei to divide them and to distribute them probably more. Curious about, so we actually look at three-dimensional. Actually, look at three-dimensional 3D image data, and our cells grow. So, the problem is a little bit harder than the image I showed you before. So, we have to, what we want to do is we want to track these nuclei across lineages through time, over long periods of time, on the time scale of the cell cycle, which is hours. And these nuclei, they do the stochastic motion. They do the stochastic motion. It's not a simple Brownian motion. And they cross each other. When they divide, they don't just stay in that network of nearest homes. They seem to deliberately shuffle themselves around. So when we're tracking these, we have to try to keep the identity of that particular nucleus intact, right? Because we want to track these through multiple lineages, which is tough to do. So that's the main point here is that. Is that maintaining the identity when things cross is hard? Especially when you're in these quasi-one-dimensional domains that are going to cross each other often. Okay, so there's another project where we're tracking diatoms, and this is with Greg Jedd, who's a biologist at the University of Singapore, and my former now postdoc, Yanati Nashinopis, now WPL. And we're interested in these cool little critters called diatoms. They're like literally hundreds of thousands of species, I think, of diatoms. They produce 30 to 50% of Earth's oxygen. They're primarily concentrated at polar coastal environments, so mechanical. And this particular species, which Greg found on the Which Greg found on the beach one day, I guess, that's literally what happened on a rotting piece of wood. These move, there are lots of motile species of diatons, but we don't really understand how they move. That's like the big question. How do these move? And one thing you'll notice is that they have these little goo trails, which is kind of neat, but also they reverse directions spontaneously and in response to touch. Right, so we want to. Right, so we want to be able to track these things as they collide with each other and do these spontaneous reversals. And that stuff to the plot. So here, this is like a persistent random walk, and they have like a very smooth, almost deterministic motion with the velocity, right? So we ought to be able to use their velocity to disentangle which diatom is which after they cross. After they cost. So that's kind of the take-home message. We would like to be able to have a tracking algorithm that can figure out use velocities to figure out what happens when objects cross. We need to be able to account for missing observations. We don't always get a position for a given object every single time. And when we drop that observation, it's totally random, right? Well, it's probably. Well, it's probably much more probable that we're going to drop observations when objects get close. So, when we have the biggest problem is also when we get the largest gaps in our data to tell us what's going on. All right. So, there's different. So, the problem is still pretty difficult if you just have grounding motion. A lot of the motion models that we're going to use are more accurate to just, at least phenomenologically. To just at least phenomenologically describe the motion involved, like switching Gaussian mixtures, if you want to call them that. So they'll have some continuous components, but some switching internal state as well. Like run and tumble motion of bacteria, right? And so there are different methods that we can use to account for that. All right, but what I hope to do by the end of this talk is kind of distill everything. The end of this talk is kind of distill everything down to the hardest part of this problem that is sort of holding us back. Okay, so how do we get the positions at every time from the video data? So we're just going to use neural networks to do that. I developed a neural network, I guess, what, five years ago now, to just localize the position of Gaussian blobs in a microscopy computer. A microscopy unit with the intention to do particle tracking. But it works pretty well for the nuclei in ashroom as well. So that's going to give us, at every time, every time step of the video K, it's going to give us a random set of positions. And these are completely unordered. So the object, if it's got an index of 1, which is totally arbitrary at one time, that doesn't mean that the next time that index 1 is the same. That index one is the same object. That's really the heart of the problem here. And for diatoms, my neural network failed miserably. Luckily, I had a talented student, Anton, who was able to take actual data and annotate it and train, you know, probably some out-of-the-box neural network, but to train it on real data and get quality results. Results at us. So, what you get is a bunch of bounding boxes, right? And you just get this unordered collection of these bounding boxes at every time. That's our data. Okay, I want a Bayesian approach to this. I don't know. I just like the Bayesian approach because I like thinking about distributions that make sense to me. And I want a distribution of tracks. Not just one pristine, perfect, true set of tracks. Perfect, true set of tracks, I want a whole bunch of them ranked by how probable they are in this system. So the way that we're approaching this right now, at least, is to do Markov chain Monte Carlo methods. That means algorithmically we're going to sample. So the idea is that you have some like the Gaussian distribution, you can sample it, and that sample set, which can be arbitrarily large, is a representation. Large is a representation, an approximation of that distribution. So we're going to use this idea over and over. It's the big intractable distribution and try to sample it. Okay, so the idea of a distribution of tracks goes actually back quite ways. Multiple hypothesis tracking is probably the beginnings of this idea, and that's like bigger than Bayesian. But there are Um but there are a a number of really good Bayesian uh models that are formulated, I think, uh theoretically really well. Now the problem is just trying to get the algorithms that are the numerical techniques to actually do something with these models. So I'm going to focus, these are all pretty good in that the difference is I think at this point we don't have, or at least I don't have things working well enough to At least I don't have things working well enough to say which of these models is better, in what circumstances, yet. But I'm just sort of arbitrarily picked this middle one from Vaux and Vo, which is kind of awkward to say. It's the Vovo paper. I guess they're father and son team from Perth, Australia. Okay, so a bit of background, the single track problem. Bit of background, the single track problem, much easier, but this goes way back. So I'm sort of talking about a state-space model, for those of you familiar with this idea. You have some data, Z, and some true positions of your object, just one here, X at time step K. And they don't have to be normal, they can be whatever. I just picked model here because that makes the problem. You can write down the posterior exactly. Exactly. And moreover, you can sample from or whatever. Statistically, we can describe the position, true position of the particle at any time, not just the times of the observations. So I really like that idea. And so I kind of try to make an animation out of it, which you all can tell me if it's horribly confusing or not. So the plus. Confusing or not. So the plus symbols are the measured positions. And then I'm sampling the position of the object at a whole bunch of times in between each of those measurements. So when this little point cloud explodes, that means that it's not being observed, so the in uncertainty increases. And then it starts to contract again as it approaches another observation where where the uncertainty is less. Where the uncertainty is less. So I want to represent the tracking in this or graphically in this one. All right, so the multiple object problem. That is much more complicated. We have this, we have a time sequence of random sets of measurements. We have a random set of objects, right, which have a state through time. Each object Through time. Each object has a state through time. It's random. Some of our measurements are false positives, right? So we need a binary random variable for that, really. And we're going to have missing observations, too. So I mean, for the one object problem, you either have a measurement or you don't. So there's no ambiguity there. But you have to decide which of your objects doesn't have a measurement at any given time. Have a measurement at any given time, so you have to build that into the model. And this is the hardest part right here. You have to have a mapping from your observations to your objects. You have to assign measurements to objects, and that's the data association problem, and that's the hardest part of all of this. Every tracking algorithm has to do this somehow. Okay, so what I want, like I said, is a distribution of tracks. I said is a distribution of tracks. But of course, there's this finite dimensional space maybe of tracks. It's so large that you can't really do anything with it. So I'm from Salt Lake City, a rural part, and we have lots of hay fields. So this is, I guess, how I imagine this. You have like this endless hayfield. Each little piece of hay is like a track. Most of them are irrelevant. They suck, right? So you want to find a nice, manageable haystack of all. Manageable haystack of the best, most probable tracks, right? And then that kind of is an approximation of your distribution. So that's the idea. That's not happening. Okay. Okay, so I want to talk about the data association problem a little bit, but I know it's late, and I'm standing between you and dinner, so I'll just throw some movies up, some examples of what I'm talking about first, and then I'll talk about the data subsheet a little bit. All right, so this is the most probable track set for one of those Achbian data sets that I'm showing you. So, this is what I'm doing. So, this is what I said I don't want to do is come up with the best single perfect set of tracks. But I just want to introduce sort of visually how I'm going to represent it. Every color is a different object, and there's a bunch of points there that kind of merge together. It's hard to see them. But when we lose observations, you can see the little point cloud explode. That's like uncertainty because we haven't measured it there. We haven't measured it there. I tried to make the colors all distinct, but that's like a surprisingly annoying problem. So these two are different objects, but they have the same color. I'm sorry. Okay. Now, what I want to do is I want to look at a particular object, and it's actually kind of interesting to even define what an object is now. Everything's a distribution. But I'm going to say: here's my definition of object here. Given a measurement, the first measurement of a given particle, nucleus here, that's going to define an object. So then I want to look at the estimate, the distribution of where that object goes over time. And what you might see, what you will see is that the color is going to split up between multiple places because the uncertainty grows as the movie. As the movie, so we're seeing the uncertainty in the position over the length of the video. And I just picked out the regions of this video, same one I showed you before, that have a lot of uncertainty. So it's the top left, it's the edges. That might not be a big surprise, right? So this one is the edge of the video, right? The hypha keeps going, of course, but we just see here. Here. And then the other side is the growing tip. No, this is the growing tip, and this is, sorry, I had that backwards. This is the edge of the video here, and this is the growing tip. So we see a lot of uncertainty in those two locations. And look, I mean, even being able to say here is where there's a lot of uncertainty in the tracking is a win, right? I mean, my experimental collaborators will just make me throw away all those, but I'll try and convince them. Look, I've got this. We'll try if it is done. Look, I've got this whole distribution. We'll see what happens. Alright, so this is not playing, which is great. Still not playing. Just this one video is not playing. Okay, so I'm just going to roll with that. I'm just focusing in on a couple of regions of the video again, showing lots of uncertainty. Here is the edge of the video. So, you know, because we have a motion model that we're fitting at the same time, I can kind of extrapolate where the objects go. But this is a place where we get a lot of uncertainty. A lot of uncertainty. And this is one of my favorite examples because you get a three-way collision and a motion reversal all at the same instant. So these diatoms can be a pain sometimes. What does it mean when after the clash you have like the mix of yellow and red? That's because, okay, so let me see if I can. Yes, you can speak. Yes, it's a good question. Why? Oh my gosh. Please control this. Heights being so stubborn. Come on. Oh, my keyboard doesn't work. Oh, I've identified the problem. Probably a stupid pointer. Okay. All right. Okay, sorry about that. Okay, so Okay, so this is where the objects start. So they're all nice and distinct, because that's how I've defined an object. Now, as time goes on, I might not be sure where the yellow guy actually goes. So, and that, of course, happens primarily when these two could collide. There's a little bit of mixing there, but there's a lot of mixing in that big cliche. Now, the yellow guy could be here or here. I'm not really sure. That's the idea. That is going to decrease your confidence that that is a track, I guess. I have a distribution that says that there's uncertainty here, right? That's the main goal. Here your object can define some orientation, right? But the way you sample, you kind of Oh, we're not using orientation in our features to track. So I think yeah. That would probably improve things. That would probably improve things if the control things. Yeah, so actually, that was going to be, I was going to say something in the. Here's the thing about features, though. Whatever method you have for deciding what the orientation is, when they're super close together, that's going to break, probably, right? You're not going to get a very good estimate of the orientation when they're right on top of each other. And that's kind of when you need it. So there's going to be a lot of error in those instances. So that's, I mean, I'm So that's, I mean, I'm not saying that it doesn't work, but just pointing out that it's only the way you sample your ocean, like if you just sample covariance. Yeah, okay, so it's just diagonal, there's nothing interesting that you like the object. Question? I'm sorry, I don't know who was first. Yeah, another idea. So we have this middle guy. So we have this middle guy, and he's not really moving. So I would guess that the yellow one is the one that was moving to begin. Great. Yeah, I think that our model auto-regresses the velocity, so that would be, I mean, you have to allow any given object has to be able to move. But if it hasn't been moving through the whole video, then that should inform. I mean, that's essentially using velocity, right? So that would be possible. Right, right. So that would be part of the information that contributes to the certificate. So you're just not using it? No, we are using it. So, why would I have so much yellow on the guy which is not moving? That's a good question. It's possible I made this video with a simpler model, just for video. Yeah. Yeah, so kind of tying into this with if you're tracking orientation, there's like a trick from algebraic geometry. Like you could think of. Geometry, like you could think of it's this lifting trick. So, as a simple example, you can think of a figure eight at the plane, and it has this crossing point, right? So, if you were to actually draw the figure eight, like how does that do? So, the trick is you turn this thing that just has the point as position, you lift it up higher, so now each point is associated its position and its orientation. And then, when you do the lifting, all the points as they're coming up to that crossing point in this direction. Coming up to that crossing point in this direction are now going to be forming a continuous path in the lifted space. And all the points that are coming in the crossing point in this direction are going to have a continuous path to the lifted space. So even though that crossing point becomes a problem, all the way up to the crossing point, these two paths are like, they're separate from each other when in the lifted space. Sort of think I understand what you're saying, but I'm going to talk to you. Okay. So that does. I was going to ask, because I was going to ask: Is the fact that these guys switch direction once they're touched built into the model too? Okay. Well, maybe not for the model I used for this video, but in principle, yes. Actually, for this video, for sure, I used the more complicated model. Because you can see I'm extrapolating the motion after they leave the field of view. And that requires a more detailed model. Detailed model. But you have switching, so that's a hidden state, and so you have to be able to deal with that. We want to be able to estimate the posterior for the switching rate and so forth. The turning, like there's noise in their angle, right? It's a persistent random lock, so we want to know those parameters. What are the blurs in the background? Oh, good question. So, this is actually a fluid layer, and they switch. Fluid layer and they swim at the air-water interface and the and the this is the auger water interface. So they either swim in one one plane or the other and somehow they swim the same in both planes. I mean qualitatively their motion is the same. We don't know how that works. But the leading model for diatom motion is a gliding mechanism. So tell me how. Mechanism. So tell me, how do you glide on an air-water interface? Okay. Any other questions? We have five minutes. I'm going to sprint through the data association problem. So we have a set of objects, and this, you know, mostly I mean the state, but maybe I also just mean the object itself, so sorry for that. That and a set of measurements. And I want to assign the measurements to the objects. You can only assign a measurement once, and each object can only be assigned one measurement. So this is a, and this is just for one time. If I just have one time, right, then the problem is linear. So this is just an assignment problem. And if I formulate this as an optimization problem, it's like the Optimization problem. It's like the most, I guess it's the most basic form of an optimal transport problem, like a discrete optimal transport problem. But whatever. You can solve this with linear programming because it's integral. And so even though you have a continuous optimization algorithm, you're guaranteed to get an integer answer. And that's really beside the point because there's specialized algorithms for solving this anyway, which are faster than just generic linear. Just generic linear programming problems. Okay, so this is linear assignment. We can do this, and it's super fast. And I don't want to just optimize, I want a distribution, but it's pretty straightforward to use linear programming to get a whole distribution. You just find the best one, and then you find the next best one, and it's like a branch and price kind of algorithm. So, I can find as many solutions as I want. Okay, so the nonlinear problem, this is the problem we actually want to solve. So, now I don't have just one time, I have many times. So, the cost function takes in a single object's assignments, all of them, right? The cost function is a function of all of those assignments, so it's not linear anymore. Not money. I don't know what else to say about it. The cost? The cost would come from the motion model, right? It would come from the generative density. Probability that you coming from an algorithm that you assign, that you match object i to join given the measurements that go to that object, right, you have a Gaussian Gaussian measure, you know, likelihood for the measurement, and then you just have some Markov process for the prior, for the motion prior. And then it's just the log density, that's the cost. Yeah. So it's not linear, and there's no algorithm that I'm aware of that just solves it like linear assignment, but we have the linear assignment. Assignment, but we have the linear assignment algorithm which works really well. So then, you know, maybe we can just use Gibs, right? So I just apply it at each time, right? And I formulate a markup chain. Now not in time, but in some integer variable. And so then I sample each time this chain. And I hope that the chain converges, and it's a discrete space. Discrete space, and so, okay, in principle, it converges exponentially fast, right? But it has to be a reducible chain. But in practice, the chain is not reducible, but it's very close to being reducible. So, this is equivalent to getting stuck in metastable potential wells. And so, basically, every Markov chain method. Basically, every Markov chain method by this. And if any of you have any suggestions on how to attack this problem, I am all yours. Thanks. Um do you work with just the the row later? Do you also apply some much processing to maybe build some nas? To maybe build some masks or to build some what? Masks. Oh. Well, I suppose the bounding boxes are kind of a mask. You don't segment, right? You don't segment. Well, I mean, it is localization and segmentation. I mean, isn't this segmentation? Where's that talking about? Isn't that segmentation? The action against isn't detection. It's detection. It's detection. Yeah, we call it detection. So if I say this is a thing and this is the same kind of thing and they're next to each other, that's detection? Yeah, it's when you can count the lines of things. Oh, so I have an approximation of the second boundary. Right, does that count? I have to paint each pixel. Yeah, you paint out. Well, that's a data association problem too. That's one but I think that could be solved. But but I think that's a lot masks that it's a slow thing, so that's why it all needs to solve the button box. But yeah, I mean, you're probably right. It's probably good. Or maybe, I mean, you could get like the vector of the actual direction. These guys look pretty, you know, linear, I guess. Instead of doing the segmentation, which maybe just results in a bunch of holes. Yeah. Yeah. Okay, so if I get if I get the direction, I think this is what you're saying. If I get the direction and I have the bounding box, I basically have the segmentation. Because they're all essentially the same size. Yeah, I think you're right. That's a good idea. Yeah, from each box, you can segment easily. Yeah. Yeah, so I mean the good thing about this, the setup is that you can build in feature information that's totally trivial to fully. To follow is that, but uh how do you get lineage information without returning? That's a great question. I said I was going to do that, I didn't really do that, did I? That's our plan. So I can do births and the model, and I can do deaths of objects. That's sort of built into that. I didn't talk about it, but we can. And so, kind of a really rudimentary way to build in birds and mini. Way to build in births and lineages is just to connect the parent to the children with births. But that's not like a principled, fully Bayesian model. Some people have sort of designed those. That's kind of on the horizon for us to do. What do you have off tracking, right? So you generate a set of trajectories. How do you Actually, it's how do you then score the yeah that's the Bayesian model that's scoring them so it's like the generative density is sort of scoring them. Yeah, exactly and it will have that for every association yeah yeah so you have to marginalize over the latents to get that uh but I'm guessing uh right yeah you then select the optimal path because you didn't okay okay it's a Yeah. It's a very nice project. I wonder what you want to do with it from having there. Let's say everything worked. Well, I need another 30 minutes to. But I mean, I showed you our big, I told you about the big questions, but there's obviously a gigantic gulf in between. So maybe I don't have like a good concrete question because we haven't solved either problem yet. Is there like a specific biological question that you so let me let me show you one thing that we So, let me show you one thing that we have done. So, we image genetically gems, which are tiny particles, not the nuclei. And so then we track the gems in order to spatially resolve the viscosity of the cytosome. And so we actually used methyl symbols. So that's why I sat up. So that's one concrete question that we had. Just what is the Question that we had. Just what is the diffusivity of gems in spatially resolved? So, like D of X, I guess. That maybe the best would be just to take those that are further apart, that are separated, but there's no confusion, and we just estimate the physicality of that. Yeah, but these gems are super small, they're flying up and down, they're all crossing. That's a good point. So, in microoriology, you have a little bee that does a little random walking. A little bead that does a little random walk. You've got a bead way over here, it does a little random walk. They never talk to each other. So you have a diffusivity here, a diffusivity here. We're in the opposite regime. The particles are flying all over the cell, and so you have to take the displacements and pin those to a position. Nice question. So I guess any of these things that you're estimating from this data, the nice thing is you can get an entire distribution on like dispositives or On disposivities, or in the other case, on some parameters associated with persistent random operating. Exactly, and we can say what our uncertainty is in those parameters that comes from the track. So let's forget about getting the perfect set of tracks. Let's at least say how much we don't know because of our crappy track. Yeah, I guess it'd be curiously. In the other case, I do have a lot of non-overlapping ones and things, and then. Or something, and then you could s exclude all the ambiguous cases with the CSS, but and then compare it to the ambiguous. You mean in terms of like the gems, which I'm not showing here? No, not the gems. Oh, oh, you mean the ones that don't cross? Yeah, there's a lot of them that don't cross. That never cross, right? We're sort of selecting maybe if we do that. I'm almost scared. But you're right, I mean, it seems like. Well, just to compare just. Yeah, that's interesting. Well, Brett, and thanks to you, and all the speakers here. So I see it.