Her research focuses on computational immunology and specifically uh the study of the T cell, the collective behavior of this T cell by using computational simulations. So, Ike, the floor is yours. Yes, thank you. So, thanks again to the organizers. So thanks again to the organizers for organizing this great workshop. I have learned a lot so far and I'm sure that I will learn a lot more before the time is up. So indeed I'm working on modeling collective behavior in the immune system and this is an example of mechanistic modeling which is different from the ML that we've mostly seen in the talks so far. But I also think there are some quite nice parallels between what we do and what typical machine learning approaches do. So I hope that Learning approaches do. So I hope to point these out during this talk. And so I will use an example project of our group as an example, but the talk will be light on the details and the data because I want to focus on the concepts and the concepts of it. So just to make sure we're all on the same page, Maria gave a very nice introduction about T cells already. But T cells are important cells in our immune system. Cells in our immune system. And so I want to start with this beautiful video that was posted on Twitter a while ago. And what you see here is in red, a killer T cell killing a cancer cell. So this is the ultimate goal of our system, that in the end, cells like T cells can recognize cells that have become compromised somehow, either because they're cancerous or because they're infected, and that they can remove these before the disease can spread too far. And this way they protect us. But before this can happen, a lot has to happen first. Has to happen first. So, T cells detect and clean up infected and cancerous cells, but that means they also have to first recognize those cells because those are originally healthy normal cells that have become cancerous or infected. And so they kind of need to look inside. And they do that using their T cell receptor, which is on the surface of the T cell, which recognizes peptides displayed on the MHC complex of normal cells. So all normal cells do this. They have these MHC complexes, they present peptides. actually complexes, they present peptides, and basically they provide kind of a window into the cell which the T cell can use to see what's going on. And because most infected and cancerous cells have different peptides on their surface, that allows the T cells to see when something has gone wrong. So basically T cells are anomaly detectors of our body. And what Maria has also told you is that they are highly specific. So each T cell has a different T cell receptor which can recognize T-cell receptor, which can recognize different things. And that's nice because then together they can recognize a lot of diseases, but it also poses a problem. So because of this high specificity, only about one in a million T cells can detect any new pathogenic signal that arises somewhere in our body. And that means that only one or a few T cells in our body maybe recognize this signal. So for anything to happen, this T cell first needs to find the signal. T cell first needs to find the signal. And so the T cell has to search through our body for these rare targets that can activate it. And this is especially impressive if you consider scales, because the size difference between a T cell and a human body is about the same as a human diver that would be searching an entire sea, like the North Sea. So it's obvious that something needs to happen to make this more efficient, because otherwise an immune response could never happen in any reasonable time. So luckily for this reason, So, luckily for this, we have special organs called lymph nodes, which are kind of meeting hubs where the T cells meet other immune cells. And the other immune cells bring kind of these signals there for the T cells to screen them. So, this is what it looks like. Special microscope techniques can now kind of watch inside these organs and see what's happening. And you see here in green the T cells migrating. So, you see that they kind of actively move inside these organs to search for those signals. Search for those signals. So, movement is pretty critical here. But what we actually do not see in this picture is what's in the black background that you see in this video. So, if you, instead of a video, you make it as a static slice of a bit of tissue, you see that it's actually much more complex. So, you see the structure of the tissue in white and the T cells in red. And you see that this space is completely crammed with cells. But, nevertheless, they are moving, and they're moving quite fast. So, this actually led us to wonder how this works. I don't know why this video is no longer working, but this was supposed to be the video that you saw also on the previous slide. So, if in any other system you put units this close together, they stop moving. So, think of a traffic jam or other situations where it's quite crowded. But T cells are apparently this crowded and still they move. So, that was the question that we started from. How do T cells kind of respond to this? T cells kind of respond to this crowded environment, and what is it that allows them to move anyway? And might there be situations in which this kind of breaks down and doesn't work anymore? So, this is kind of a difficult question to answer because, like I said, you can make these imaging videos of cells in real tissues, but there's always a lot you don't know and you can't control. So, there's a lot of environment that you don't know about, and that makes these videos kind of hard to interpret. So, instead, we use an approach called mechanism. So instead, we use an approach called mechanistic modeling. And it's heavily kind of based on the philosophy captured by this quote by Richard Feynman, which is what I cannot create, I do not understand. So basically, we want to see if we can build the system as a way of seeing if we understand the system. So the idea is that we want to kind of make artificial environments with diesel crowds and see if we can predict what happens. So luckily, there's an entire physical. So, luckily, there's an entire physics field that has studied crowds before. So, not crowds of T cells, but crowds of, for example, pedestrians. Because, of course, there are many cases in which pedestrians get into crowds and you need to kind of control what happens. So, we want to use that as an inspiration and kind of similar environments, but then with D cells. And we do this both in computational models, but also in very controlled environments in the lab. So, not a real organ, but something slightly more simple, but then still using real D cells. But then still using real of these things. So, our data is typically time-lapse imaging of moving cells, and we try to predict using our model what a crowd of T cells will do. And we can then check that in the real system. So, because mechanistic modeling is kind of difficult from the difficult machine learning approaches that we're kind of used to here, I wanted to go over the idea of mechanistic modeling and the cycle that you go through. So, basically, you start from So basically, you start from some kind of current knowledge that you think you have or you have, and you try to encode this into a model with some kind of input goals. So, in our example, that might be that we know something about how cells move and how they respond to other cells and forces. And using that, we make some kind of model, and with that model, we can then extrapolate to new predictions. So, those have to be things that we don't hard code into the model, but something else that follows from that. So, in our case, So, in our case, that would be like putting cells together into crowds into specific environments. So, that's not something that we make rules about, and then we can see what would kind of happen. That then leads to predictions, and that hopefully we can test using our experimental systems. And depending on what we find, we either consolidate our model, so we say, okay, we had the right prediction, which is never proof that the model is correct, but at least it's some kind of, yeah, I guess. Of the idea that we're on the right track, or we find that we cannot actually predict what happens, and then we have to update our model, but then we learn something. So, we learned that our current knowledge was not sufficient, and we have to change that. So, before I continue, I kind of want to go into the role of predictions and interpretability here, because I think there are some parallels, but also some differences. So, in a typical case of interpretable AI, so for example, you want to classify an image or you You want to classify an image, or you want to make a prediction about which treatment you should give a patient. The real goal is just to have good predictions and decisions. That's the goal. That's why you do it. The tools we use are knowledge and models. So they are the ways we arrive at that goal of having a good decision. And that means that black box models, they would be kind of okay if we were somehow magically sure that we could trust them and they would trust worthy and fair. And that means that interpretability is. And that means that interpretability is mainly a side goal that we use to kind of enforce that. So we want to foster trust, fairness, and accuracy in these cases. In mechanistic modeling, our main goal is actually knowledge, or the model encoding that knowledge. And that means predictions are actually the tools. So we are not so much interested in exactly what the model predicts, because we can also test it. But we're using those predictions as tools to see if our current knowledge is sufficient to explain what's going on. Sufficient to explain what's going on. So that means that black box models are absolutely of no use to us because if we don't know how they work, then they can make really great predictions, but it doesn't really tell us anything about the biology. And so interpretability is really critical to this line of work, because it's the only way to really extract knowledge from these models. So now I want to go over the example of one experiment we did in our model and in our experiment. We did in our model and in our experimental system to go through this cycle. So, step one is to gather input knowledge. So, if you think about cell migration, there's a lot we know about it, and it's really complicated, and it's different in different environments. But there are some basics that are more or less the same. So, here you can see a cell migrating on a flat battery, so a really simple environment. And you can see that it forms those molecules at the front. So, those are fibers of cytoskeleton, or of a molecule called actin. Or of a molecule called actin. And with these fibers, they extend the cell and they push against the cell to extend it. And because the cell itself is kind of stuck to the substrate through either active adhesion or friction forces, that results in motion. So it's kind of like the caterpillar track of the tank that you push against the front and then you move. Now biology wouldn't be biology if it weren't actually a lot more complicated than that. So you can look at a picture like this and you can see that many, many molecules are involved. Can see that many, many molecules are involved. But the basics remain the same. You have these fibers pushing against the cell. So the next step is to encode this into a model, and that is also not simple, because we have to decide how far we go. So one option we could have would be to gather all the details we know and to model all the molecules and forces explicitly. And that would be nice because it would be very interpretable. You would know exactly which molecule is doing what. And you can see exactly how the molecules. And you can see exactly how the motion kind of arises from that. But it's also a bit intractable to do this with crowds, so we cannot really use these types of models to answer our question. So instead, we use a different model, which is a bit more coarse-grading, which is called the cellular pulse model. It's been around since the early 90s, so it's not really new. But basically, it models a space, like a collection of pixels, and every cell is a bunch of pixels in that space. So, for example, here, this black cell is just that's a Here, this black cell is just that's a cell. And this becomes dynamic because we let every pixel try to copy its cell identity into another pixel. So, for example, this black cell may try to extend into this white space, and if it succeeds, then it kind of has incorporated that pixel in the cell as well. If we were to allow this randomly, then it would look something like this. So, we wouldn't really have a real useful cell. So, instead, we give the system rules. So instead we give the system rules. So we give it kind of an energy that we can define with different terms that penalize or reward certain properties. So one thing we can do is we can say that there needs to be adhesion. So the pixels of a cell need to stick together. You can see that that has an effect, but also that the cell pattern disappears. So the second thing we do is we say, okay, this cell needs to stay roughly the same size. And that gives us already something that looks a bit more like a cell. A bit more like a cell. And similarly, we can then constrain, for example, the perimeter of the surrounding cell. Now, this is nice in some way because the model is inherently, because it's spatial, it's kind of interpretable. Cells have naturally have shapes. And because only one cell at a time can be in a certain pixel, they also naturally interact. Because if one cell wants to move into that pixel, the other cell has to move away. So there's a lot of things that are. So, there's a lot of things that are going on quite naturally in this model. But you can also see that this cell is not really a migrating cell yet, so we have to add something else. So, for that, we extend this model. And we can say, based on this idea of backten fiber dynamics, we know that when the cell is kind of polarized and it has a front and a back, then at the front is more likely to make these filaments that push against the cell. So, if we incorporate this in the model in a kind of a very coarse-grained rule, we can just say, Coarse-grained rule, we can just say if the model was recently going in this direction, so you see that in the colours, then it's more likely to do it again. And if you add that, you get something like this. So we actually get already quite realistic migration. You see this cell forming dynamic protrusions that kind of draw it forward until it kind of stops and has to repolarize again. And even in terms of shape, this is quite similar to how real cells move, even though we did not put anything in the model that said it had to do it like this. That said, they have to do it like this. So that's already a good start. So now we have our models, and now the next step is to extrapolate it beyond the motion of a single cell and to see something about what happens in a crowd. So for this, we use a cornerstone scenario in crowding physics that they have tried in many systems, and that's one-lane traffic. So it's known for, for example, for humans. If you put them and make them walk in single file, And make them walk in single file, then as they get more close together, more dense, the speed goes down. So this plot is called the fundamental diagram, where you plot the speed of motion versus the density of the units that are moving. Now, this is not always the case, because if you look at allens, for example, they are really good at staying motile even when they are super close together. So it really depends on the system what this diagram looks like. So of course our question was, how does it look for these cells? How does it look for these cells, and can we actually predict that with the model we have now, which is still relatively basic? So, this is our model. We put cells in a channel so that they kind of have to move in single file, and you just put them together and see what happens. So, what we see is that they kind of randomly choose directions, but they can also self-align to other cells. So, they make these trains that allow them to stay in motion, even if they bump into other cells. So, the question is: is this realistic? So, the question is: Is this realistic and what would real cells do? So, our collaborators in Montreal made these movies of real cells in channels, and we can actually see the same thing. So, these cells kind of move in these channels, but they form trains when they meet each other, and they use this as a way to stay motile even when they get close together. You can also quantify this. So, this is again this fundamental diagram, and you see that in both cases in the model and the real data. The model and the real data, this time, is flat. So, here's an example of one cycle of the modeling cycle. So, we started with basic knowledge about positive feedback on producer forces and some idea that cells cannot be in the same place. And that was enough to kind of start predicting the dynamics of a crowd in this specific one-lane traffic scenario. And so far, the model was reasonably well able to predict this. Reasonably well able to predict this behavior. Of course, the fact that our model does the same as the real cells is not proof that our model is correct. We always have to remember that. So we are currently continuing this in different environments as well to get more of an idea of what the model does and to what extent it's sufficient to describe what we see. So one example, I'm not going to go into the details, but for example, if you let people go out and exit together, People go out and exit together, they sometimes get stuck at the exit, especially if they are panicked. And we wanted to know if T cells could do something like that as well. So we made this simulation, which suggests that also T cells might get stuck and exits. This is something I'm still working on, so this is really preliminary work, but that's the idea. And of course, these environments were still quite simple, but in the end, we wanted to kind of build up the complexity and go to The complexity and go to something like this. So, my colleague Shelas made this simulation of a cellular pulse model on a GPU where you can make it much larger. So, and he used that to simulate kind of a lymph node. So, that's the end goal, but of course, we want to do it step by step so we can understand exactly how the cells are interacting with each other. So, just as a final remark, I've said that this interpretability aspect is really important for us, and I've told you a bit about this model. Told you a bit about this model. The question is: now, are these SellerPots models actually interpretable? Because we did have some parameters and they kind of mean some physical things. But of course, again, it's not that simple. So in our model, the behavior we get is kind of emergent. So there's lots of things interacting with each other. For example, you might have this migrating cell, and we have two parameters that can be used to control the motion. But they're also in an environment that's controlled by the other parameters. And the environment controls the shape of the cell, and the shape of the cell that affects. Shape of the cell and the shape of the cell that feeds back on this kind of activity mechanism. And so everything we see is kind of a convolution of everything that's happening. So even CPMs are not really fully interpretable. We have some idea of what the parameters are doing, but it's not super trivial to predict what's going on. So luckily we have some tools for that. So one thing we did was we made a toolbox to make these kind of models interactive in the web browser. So I can make like a browser I can make a browser model where I can actually play with these parameters and see what's happening to the model. So, this is one of the tools we're using to just visualize what's going on and to get a better understanding of what the model is doing. That's of course kind of qualitative. So, we can also track several things over time. So, for example, I said this model is based on these energy rules that we kind of give to the system, like staying intact and keeping your volume. And so, we can try. And so we can track all of these energies over time to get a better idea of what's going on. And of course, there's many other things that you can track, like, for example, how active is this protrusion, does the cell break, cell shape, how fast does it go, etc. So we just try to look at the system in many different ways to understand better what's happening. Yeah, another example is that you can screen parameters. So here is again this movie. This movie of the cells and channels. And so, for example, you might wonder this perimeter of the cell, so how flexible it is, how much it can deform, how does that affect the behavior, and how does the channel size affect the behavior. So, you can change these parameters gradually and measure stuff. So, for example, here I measured the activity of this protrusion, which is very low in this area, which means that here the cell basically cannot move. Cannot move. And then quantified cell breaking, which also sometimes happens when we're out of the reasonable regime of parameters. And then you can do this for many more things. It's not super important, but you can track, for example, speed, but also shape, and actually this fundamental diagram, so whether it's flat or not. So by looking at a lot of different parameter combinations, we still get some kind of idea of what the models do. So to get back to this. So, to get back to this quote, Richard Feynman said, What I cannot create, I do not understand. So, I would argue that creating is a nice beginning, but it's not the end. So, you don't have to only create it, but also really visualize and kind of take apart the results to truly understand your movie. So, with that, I would like to end. I want to acknowledge our collaborators in Canada who made some of these beautiful movies, and my mentor, Johannes, and colleague Scherbas, who made this really nice lipstone, it's really. Really nice technology simulation. And thank you for your attention. So I have a couple of questions. First of all, really, very nice presentation. So I was wondering, so the first question about the cellular box model, so you have to define this Hamiltonian. Area, this is the key to the question. So first of all, how do you define it? And then my second question, maybe let's go step by step. Yeah, so we typically use, kind of, we build on earlier models. Use kind of we build on earlier models. So, this adhesion thing is kind of a surface tension. You kind of always use that when you model cells, as well as the volume term and often the perimeter curve. Then, this migration addition to the Hamiltonian is something that actually Johannes published before I even started my PhD. And there's different ways to model migration, but we kind of like this one because we have characterized it a lot, so we kind of know how it works. And we also know that it does a lot of things that are. That it does a lot of things that are emerging from the model. So, for example, it has these different shapes of cells that kind of emerge from the model without us telling the model what to do. So, yeah, how do you choose a Hamiltonian? I guess it depends on which process you're modeling and you can encode the process that you want to be in there. Yeah, so it is, but it's like it's a very phenomenological description. So, it's not. Phenomenological description. So it's not super detailed, which I also showed, because that's kind of not the point of the model. So we kind of want to abstractify anything we see into a very simple description of it and then see if that's still enough to kind of capture the dynamics. And you can go crazy, you can add like directionality, chemotaxes, and you can add everything. But yeah, we're kind of going from the bottom-up to the question. So on this links to my second question, supposedly you would like to Suppose that you would like to include interaction with other types of immune cells, like these cells or cells as possible. So would you include this type of receptor recognition? I'm not sure I would do that in a Hamiltonian, but what you might do, so the cellular pulse model can be used to model cells with realistic shapes and migration and kind of getting into contact with each other. And then you can couple this to an external model that says, okay, if the cells are in contact with each other, what then happens? Cells are in contact with each other, what then happens? So, there you could add some rules that say, okay, if they're in contact, there is this likelihood that this event is going to happen. We've actually done that in different projects for different questions. But you would kind of decouple that from the Seller Pulse model itself and kind of let that happen in its meetings. The parameter comes from those video recordings, right? Like everything that you use. everything that you use for the simulation comes from those recordings. We have also like experimental measurements that's that's kind of a problem because indeed the CPM parameters, that's a downside of this model, they are not directly interpretable as physical entities that you can actually measure. So what we do is we try to kind of fit the model to some extent to the behavior that we see. But for example, so you would fit the motion of a single cell. The motion of a single cell, and then you would still predict something else. Because, of course, if you fit it, and then if you fit everything, if you use everything to fit it, and then you say it's the same, you don't really learn anything. So, you would fit, for example, the parameters that lead to motion, and that leads to a cell that moves at a reasonable speed. But you wouldn't use the information about the crowding, for example. And then you would still predict that. So, that's how we quickly do that. But even this fitting is kind of difficult, so we're still. But even this fitting is kind of difficult, so we're still working on ways to do this better. And so, in parallel, what I always do is I screen the parameters. So, I'm sure that what I see is either really robust and it really doesn't matter how I set the parameters, or that I have an idea, okay, it happens in this range, but it's reasonable to assume that real cells could be in this range. But that's how I try to kind of deal with that issue. And also, another question is that all the cells that you are simulating have the same parameters. Are simulating have the same parameters, right? But maybe, like in the video, you can see that some go fast, some go slow. So, can you? I guess you can also introduce this, like a certain percentage of the cells that you are separating are slower and then all the rest are faster. Can you see what kind of properties can emerge from this? Yeah, that's a very good question. That's actually something I would like to do. So, we can indeed now we give the cell a single value as a parameter. A single value as a parameter. And of course, the speed itself is still a distribution because it's stochastic. So not every cell will have exactly the same speed. But I can actually also make the parameter a distribution. So that's something I still want to do, kind of explore what happens when you make the cells more heterogeneous. In this case, I don't think it would change anything, because the this one lane traffic situation is kind of simple, so it's really easy for them to form these trains, and I don't think anything you can do to the parameters would change that. Can do to the parameters would change that. But especially when you go to more complex scenarios, I think it really might matter. Maybe they would not like stuck into the exit, as you show. If they have different velocities, maybe they can find a way of soft breaks. Yeah, that's a good one. So that would be a scenario where it might matter. I'm not sure. I think it might also just be that they, unless they're super deformable, which is also a parameter we can vary, that they would just get stuck. But yeah, that's. Get stuck. But yeah, that's work in progress, so I'm still trying a lot of combinations. I just missed, but how do you gauge? I mean, as you have several parameters, but so how do you gauge whether the model is closer or further away from reality? Well, that's kind of the point of the cycle, I guess. So you have your parameters, you predict something, and then if it's false, you know you were not at the reality. It's false, you know you were not at the reality. If it's true, you still don't know if you're exactly at the reality, so you keep going. So, yeah, I guess that's the problem of modeling. You can never prove that your model is true. You can only prove that it's false. So, the answer is to just keep going, I would say. The question was more. It was I can't actually see how close you are to the reality. And also, that is a difficult question. And also, that is a difficult question. So, for example, I've tried to develop methods to fit these kinds of models, but what are you fitting? Because you're basically comparing a movie with a simulation, but there's many aspects you can look at. And indeed, that is the problem. You have to define the things you measure, and that also affects whether or not it's the same. So, it's yeah, it's something that's kind of dynamical. You have to keep going back. Maybe I said something. Maybe I'll just miss it, but so what would you for example? For example, you can measure speed. So you can measure speed of the cells in the model and speed of the cells in reality. Mean or distribution, kind of depending on how close you want to get. And then you can measure turning behavior because speed enough is not alone. And that is kind of where it gets difficult because, yeah, some things can be the same, but that doesn't mean that the model is the same as the reality. So you have to choose which things you measure. But in principle, you can. Which things you measure, but in principle, you can find things you can measure in both the simulated videos and the real videos, and then compare the two. So, that's what you would do. Okay, so if anyone has now I think it's bad, right? So 