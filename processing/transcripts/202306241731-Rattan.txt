I'm thinking a small vegetable uncooked, so limited to that, please. Okay, so I'll be talking about these objects. And what I'm going to be talking about are statistics on these objects. So you're probably very familiar with, well you've seen trees already today, but the other objects you're probably less familiar with. And I'm going to be talking about statistics on these objects that are all equidistributable. That are all equidistributable. So that's going to be the sort of theme of this talk. So here's the overview. So I'm going to talk about the connections between these three objects. And as I said, I'll be talking about the main statistics on these objects and then talk about their connections and maybe some generalizations. Okay, so parking functions are a, they're a very simply defined sequence, but they're not, but they have quite a rich structure to them. They have quite a rich structure to them. So, what they are, they're a sequence of non-negative integers. So, sequence a1 to a n of length n of non-negative integers is a protecting function if there exists a permutation. Now, just think of this permutation as a rearrangement of the sequence. So, if there's a rearrangement of the sequence, that satisfies a omega i is less than i minus 1. Okay? So, for example, Okay, so for example, this sequence here is a parking function because there is some rearrangement of it, namely that one, where the first one is less than or equal to zero, the second one is less than or equal to one, and the third one is less than or equal to two. Same for this one here. So because of this rearrangement, because you're allowed to rearrange the sequence, if something's a parking function, any permutation is it. If something's a parking function, any permutation of it is a parking function as well. And also, because of this idea that when you rearrange it, the ith term after the rearrangement lies in, or is less than the i minus 1. You can think of these as labeled dick paths. So what do I mean by that? I mean, so here's a pricing function of length 9, and so. And so when I rearrange it, because it satisfies this property, I can draw it as a dick path by, I labeled dick path by there are two elements zero, so I have two steps at level zero, and then there's one number at step one, and there's, what is it, one number at step two, and I just label those steps with Steps with their positions in the sequence. Okay, so that's how you can visualize them as labeled DIC pads. So because they're labeled DICPAS, the number of these things is not the number of DIC pads. It turns out that the number of Parkland functions of length n is a different number, but a very interesting number. It's the number of, it's, so the number of Parking functions of length n is n plus 1 to the n minus 1. And many of you may recognize this as the number of labeled trees. This is the number of labeled trees on n plus 1 vertices. Okay, so there's our first connection. So we have the number of parking functions and the number of trees, so we're going to expect some kind of bijection between them. I'm not going to define a label tree because I assume you already know what a label tree is, but anyways, this is one here. What I'm going to do is I'm going to talk about the statistics on trees that are going to match with some statistics on Parking functions, and that is tree inversions. So, what is a tree inversion? A tree inversion is A tree inversion. A tree inversion is, well, you've got some label tree, and the way we draw it is we draw it with the label zero on top. So it's a root, just think of it as a rooted tree. And what is an inversion? An inversion is when I have a good one here. There's a good one here. So when I have a, I have a ancestor. A ancestor of a descendant, but the ancestor has a bigger label. So the pair here, 6, 3, is an inversion because 6 is an ancestor of 3. So you definitely need one to be the ancestor of the other, and they have to have this inversion property. Okay, what is a non-inversion? A non-inversion is just the opposite. Now, we don't count zero here, because then everything would be a non-inversion with zero, so we just disregard the Is zero, so we just disregard the root here. But a non-inversion is when you have an ancestor-descendant pair and the ancestor is smaller. Okay, so in this tree, we have, it looks like we have six inversions. So as I mentioned, six, three is one, eight, three is another. So notice inversions don't have to be a parent-child pale. They can just an ancestor design, right? And one is another one, so on. So we have six inversions, and we have So we have six inversions and we have four non-inversions. Six, nine, etc. Okay, now for those who know things about permutations, this is actually a generalization of the same-name statistic on permutations. If you look at permutations, we talk about inversions on the permutation, and the inversions on permutations also have some nice enumerative properties. Properties. Now, I'm going to talk about another statistic. This statistic is also a generalization of a statistic on permutations, but it's less well known on trees. And here's what it is. It's called V. It's called V. Oops. Nope. Ah, sorry. Before I talk about that, before I talk about the other statistic, let me talk about the connection between tree inversions and breaking functions. Connection between tree inversions and parking functions. So let me go back a slide to parking functions. The statistic on parking functions that's connected to tree inversions is an area statistic. And so what is the area statistic? The area statistic on parking functions is just going to be the number of full squares. When I draw it as a labeled look back, it's the number of full squares between your Between your parking function as drawn as a dip path and the diagonal y equals x. Okay, so you look here, these are the number of full squares. So I don't count these little half squares between the parking function and the diagonal, just the full squares. So the area of this one here is going to be, what does it look like, six? So we have a statistic on parking functions called area. We have a statistic on trees, which is called inversions. And sure enough, And sure enough, here's the first thing: is that if I take this polynomial here, the sum over all parking functions, q to the area of the parking functions, that's equal to the sum of the trees over the set of trees with n plus 1 vertices with q taking the invertions. This is just a fancy way. I mean, I assume everyone here is comfortable with generating series, but Here is comfortable with generating series, but this is just a fancy way of saying that the number of parking functions with area k is the same as the number of trees with invergence k. Okay, so just so we have an example that for n equals 3, this common polynomial is going to be like, I believe it's 6 plus 6q plus 3q squared plus qq. Okay? Okay, and so the parking function with area 3 is this one here. Because the area of the parking function, which was on the first slide, is n is 3 choose 2 minus the summation of Ai. So that's going to be equal to 3 minus 0, which is 3. Okay? And it's the unique parking function with the A3. And the unique tree with 3 inverts. With three inversions is this one. Okay, so you got one inversion, two inversion. Sorry, one pair of inversions, I'll just do that. Three, three inversions. Okay, and so these both these polynomials are equal to that. And so what would you want? So initially, it said that the number You want? So initially, I said that the number of parking functions is the same as the number of trees. Well, now you would probably want, if you now, armed with this knowledge that the area statistic and the inversion statistic are equity distributed, you want a bijection that means you preserve them. I'm not going to give you that. I'm going to just tell you there's lots of proofs of this. So there are direct bijections, there are recursive bijections, they're generating functions that show this, etc. Okay. Sorry, I jumped the gun earlier, but now I'm going to be talking about another statistic on trees that's less well known, but this is also a generalization of a statistic on permutations called the major index. And the major index is just a little bit funny. It's not as clean as the inversion statistic, but it's not so hard to understand. What you do is you look at a vertex. Let's look at 6. And what I do is I look at all the children of 6. At all the children of six. And I say, which child has labeled less than six? So I have two of them. And what I do is I throw in the contribution at six will be the sum of the sub-trees here, the sizes of the sub-trees here. So the contribution at six here will be four. So I don't include this sub-tree because the label of this sub-tree, the child here, is This subtree, the child here, is bigger than six, so I don't include that. So I just include that portion right there. Okay, so that's the contribution to the major index. The non-major index is the opposite. So what do I do? I look at a vertex, I look at all the children that are bigger than label, and then I take the total size of the subtrees, and I add that to the non-native index. Okay, so that's what gives us the contrast. The contribution of V to the non-major index. And what do I do? I just look at, I just do that over the whole tree. Okay, and so the major index of this tree is going to be 6, and the non-major index will be 4. Okay, so as I said, this is a generalization of the same name statistic on permutations. And it's not my generalization. I didn't come up with this generalization. It was known. Come up with this generalization, it was known for at least 30 years. But for permutations and on permutations, the major index and inversions are equidistributed. That's also true for trees. So for trees, the inversion statistic and the major index statistics are equidistributed. And that's a theorem of, I've put several people here with a large gap here. And the reason why I've done that is this is originally due. This is originally due from 1990, and the reason why I put approximately 1990 is there's I think there was a confusion about which paper was in exactly, but so I have approximately 1990 there. But I have another paper here from much later. And the reason why I've included this paper is the proof in the later paper by Grady and Poznanovich is, I think, gets to the heart of the idea. So if you want to know precisely why this is true, I think this has the This is true. I think this has the real good reasoning why it's true. Now, corollary of this: so neither of these papers looked at the non-major index or the non-inversions. Now, you might start thinking that actually those statistics, they're slightly artificial, like that they're that, but it's maybe cleaner to look at inversions. Look at inversions that the inversion statistic and non-inversion statistic are linked. Well, they are linked, but they're only linked by a third statistic, namely depth. So you cannot infer the non-inversions from the inversions unless you also know what's called the depth of the tree, and that's the total distance from the root. So any two of those statistics, the depth, inversion, or non-inversion, are independent, but once you know two of them, you can get to the third. So non-inversion is an independent. So, non-inversions and inversions are truly independent statistics, but the other reason why I highlight the second paper here is that their result definitely shows that the fact that you just throw that second statistic in is still true. Okay, so one question is: if you look, so we've already looked at that the area statistic on parking functions is equidistributed with the inversion statistic on trees. With the conversion statistic on trees. Well, that means that it's also equidistributed with the major index on trees. But the other question that arises is, is there a sort of mate statistic to this area statistic that will sort of match this equation here? So I'll get into that, and that'll get us into our third object. So the third object are the founders. So, the third object are the factorizations that I talked about. So, what are the factorizations? The factorizations are known as factorizations. So, I'm looking at in the symmetric group. So, we're talking about permutations here. And I'm talking about writing the full cycle. Now, which full cycle? I want the canonical full cycle here. Like, this is the full cycle that's in 0 to 1, 1 to 2, etc. I want to write it as a product of transparency. To write it as a product of transpositions. And I want to write it as a product of transpositions in when I have a cycle here of length n plus 1, I want to use n transpositions. So some facts I'm just going to go over is that you couldn't do this with fewer transpositions. If you have an n plus 1 cycle here, you need at least n transpositions to do this. So this is the minimal number of ways. And if you know something about permutations, permutations have a pair. permutations have a parity. If I want to write it as a longer string of, if I want to write a cycle as a longer string of a product of transpositions, I will need at least two more or four more, etc. But I'm going to just be thinking about the minimal case here. So I'm thinking about this set here where I have n transpositions and their product is a full segment. So for example, I've got a few products here. Right here. This is a Right here. This is a permutation of a cycle of like four. And if you look here, I'm going to multiply permutations from right from left to right. So 0 goes to 3, which goes to 2, which goes to 1. So indeed, 0 goes to 1. And what about 1? Well, 1 goes to 2. Good. Seven. So those are two factorizations of 0, 1, 2, 3. And here's Of 0, 1, 2, 3, and here's a factorization of 0, 1. So, what's one of the key connections here? So, before I move on, it transpires that the number of such factorizations, the size of the set, is also between them. So it's also n plus 1 to the n minus 1. So, we're going to see a link between these factorizations, trees, and parking functions. Okay, but before I do that, I just want to see the fact that I'm going to do Before I do that, I just want to motivate some of these ideas a little bit more. Just so you know, I'm not playing with my favorite little objects. We've already seen that some other people have looked at these. But in fact, these are both of these parking functions. So I'm not a motivated trees. Everyone loves trees. We've seen trees today. Parking functions, as I said, they're simple, but they have a wealth of connections to other objects. So you have connections to Other objects. So you have connections to geometry, hyperplane arrangements, algebraic geometry, symmetric functions, and so on. A good resource for looking at the various things are Hagelin's book from 2008. He's got all sorts of connections with things that are non-combinatorial as well as combinatorial things between Parkman functions and various other objects. Factorizations of permutations. This was these are. These objects were extensively studied through something called, they're enumerated by something called Hurwitz number. So, in general, you don't have to have the target permutation be the full cycle. It could be any permutation. These things have connections to geometry, representation theory, matrix integrals, and so on. So, there's lots of connections between other mathematical objects and these maybe less familiar objects here. So, I just want to highlight that. So, I just want to highlight that. Okay, so as I said, these things are also enumerated by trees. Let's see if we can find the connection. The very simple connection is between factorizations and parking functions. Namely, so this is the theorem of Stanley and Beyond, approximately 2000. The reason why I say that is Beyond wrote a paper and more explicitly says this, but he credits Stanley with the actual results. Stanley with the actual result, and the paper is a couple years apart. But basically, if I take a factorization, so I have a sequence of n transpositions, and the product is the canonical n plus 1 cycle. If I just take their least element, that's a bidirection to python functions. So it's an extremely simple map. I just take the least element, and there's my map. Just take the least element, and there's my so remember I said I wanted to find a statistic on parking functions that'll map to the non-inversions. And the way I can do that is actually through these factorizations. So I can think of, so here's what I can do: I can take the factorization, and as I said, the parking functions are Functions are the lower sequence, and you can think of the upper sequence of the factorization as having hidden information about the parking function. So, what I can do with those is it transpires that they're also a kind of big path that I can write on top here, like this. And the area of those are defined as the same as before. They're just the number of full squares between that labeled dip path and the line y equals x. And it turns out that that's my. It turns out that that's my, let's call it my dual statistic that maps to the non-inversion cell. Okay. So that's nice and clean. Now, since this polynomial is equal to this polynomial here, so this link's the inversion statistic to the major index, one may ask, is there a direct link here? And the reason why you might want to ask that is that, so traditionally, when people have Asset is that so traditionally, when people have looked at parking functions and trees, they've really been focusing on this embersion statistic. But it actually turns out that this link is actually much more natural. So I can show you that, and it's just a picture, and then I think we'll probably end there. But before I do that, I'm going to say that one way to look at a factorization, and this is a nice clean way to look at a factorization, is that what I can do is this, is I can take Take the transpositions here, and I can write it as a tree embedded in a plane with certain properties. So, what I do is this: I take, for example, this one here, that's 0, 3. I put an arc between 0 and 3. So think of this, these dots are on the positive real x-axis. And I take a, I just put an arc between 0 and 3, and I label it through. I do that for everything here. Okay, now it turns out that. Now it turns out that you can embed it in the plane in such a way that, well, you will get a tree, that's one non-trivial fact, but also that these arcs satisfy the positive rotator condition. That if you notice, I go around here, the edges labeled increase as I go around counterclockwise. So those are both non-trivial facts that that can happen. Okay, so what would be my bijection linking? What would be my bijection linking the statistics on factorizations to the major index? It turns out that all it is is just taking a dual. So what do I mean by taking a dual? I put a red dot here and I'm just going to take literally the tree dual. And what do I do? I put, if I see an edge 6 here, when I take the dual, I label that edge 6. Whichever edge crosses the edge, I just. Whichever edge crosses the edge, I just give it the same label. And it turns out, because of those properties that I mentioned on the previous slide about the increasing rotators, et cetera, that precisely that the area of the factorization will match up with the major index. So I won't go over that in the interest of time, and I know people are getting hungry. But the major index of this jewel tree will be the same as the Same as the upper and lower areas of the factorization. Okay, and all I'll just say is that the sort of power of looking at it this way, instead of thinking of inversions as the proper statistic, but looking at the major index, is that this easily generalizes to the k case, which has caused trouble for bijection. So, in particular, there are k parking functions, and then there are Functions, and then there are K versions of the inversion statistic, and people have been looking at that. And this has been resistant to bijective techniques. But looking at it through the major index, it turns out this dual just works out nicely. So the inversion statistic on generalized for generalized K case, it turns out you're not looking at trees, you're looking at cacti. You're looking at cacti, and then you just take your dual, and everything just works out naturally. So that's it. All I'm at. All right, thank you. In the interest of time, we will end now. Anyone has put in questions for President O'Tagas. So that's it. Did you say that? That's it, the extension. Skills. Do you want to push a button? Yeah, yeah.