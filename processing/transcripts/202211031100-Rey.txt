There is Dr. Thomas Ree, and he's from. Yeah, I didn't say there. University D Leo. And he's talking about a projective integration of nonlinear kinetic equation. Thanks a lot for the introduction and for the organization of this very nice workshop. I'm very happy to give a talk here. And as Lorenzo, it's a shame. And as Lorenzo, it's a shame that I wasn't able to come directly to Mexico. And okay, maybe next time we'll see. Anyway, so I'm going to present you some recent results we had with some collaborators, in particular Rafael Bailo and Giovanni Samae, about time integrators for kinetic equations. So this I mean, maybe some of you already saw Rafael present that in Cambridge in June. That in Cambridge in June, but I present some slightly different numerical results. So bear with me at least for the numerical section. So my goal is to develop here time integrators which are high order, stable, uniformly stable in some small parameters, and also explicit because the goal, the final goal, is to deal with full Boltzmann equations or Boltzmann-like equations, and you don't want to. And you don't want to use implicit methods because you don't want to invert a big nonlinear system. So, here we want AP schemes which are easy to develop. So, I present you in the first section the idea behind predictive integration, and then I'll apply it to some kinetic equations. I will be very short here so that I can present you some numerical simulations for various models that we That we either already published or are work in progress. So, yes, so I want to design a high-order, explicit, and stable time integrator. So, here we borrowed the idea to a work by Guia and Kirokidis that they called in a seminal paper 20 years ago projective integration. So, why did they call it that way, and what's the point here? What's the point here? So, the idea is you just say that we are at the very, very easy level of ODE. So, we have a big system of ODE U prime equal to G of U, and we want to solve this system numerically. So, say that you discretize a PD or kinetic equation, and you end up, you semi-discretize in space and velocity, and you end up with a system of ODEs depending only on time with a very big N. And say that we. And say that we assume that the Jacobian matrix of G, the G function here, has a gain value which are clustered into two groups. One of the group will be close to the origin in the complex plane, and the other group will be very far in the left-hand side of the complex plane. And so, these two groups of eigenvalues, say, so the slow eigenvalue, which are close to the origin, and the fast eigenvalues, which are far from the origin, we wish. Far from the origin, we shall assume in all these talks that they are well separated. We have really two clusters: the slow and the fast components. Of course, the fact that we have this fast cluster, which is far from the origin, will bring stiffness to our system, because we will have very, very fast components which will be damped exponentially fast by the dynamics. And when then one wants to... When one wants to solve this numerically, then one wants to use something which is able to capture the defined scale. But since we have also a slow component, we still also want to resolve this course dynamics. And this course dynamics is actually where the solution U will be projected. And so the idea for this projective integration time integrator is the following. It's very easy to give with the words and actually. To give with words and actually with mathematical formalism, too. So, we will just perform a number of small time steps of something which we call an inner integrator. So, a very, very accurate and specifically stable integrator with very small time step. And this very small time step will dump you towards this equilibrium manifold defined by the slow eigenvalues. And once we reach this manifold, And once we reach this manifold and that the fast mode has been damped, we will extrapolate with a very large time step. Note that here, extrapolation means that we won't have to evolve the dynamics anymore. It could just be extrapolation. And so this step will be very, very cheap to do. And so, yeah, how to do that? I mean, at least formally, all of you, I'm pretty sure, bear with me that for. Bear with me that for this inner integrator to be explicit, one needs small time steps of the size of the fast cluster. So mathematically, it looks like that. So I have my system u prime equal to g of u with an initial data unit. And I will perform some steps of inner integrator. So say in that talk, because my goal is to do kinetic equation, I'm going to really use the easiest. I really use the easiest time integrator, which is forward Euler. So I have a forward Euler method for this system with a small time step small delta t. And I will do some number of the small time steps. So of course, this will be expensive because G, I mean, U is potentially very large. So G of U can be very expensive to just evaluate. And this delta T is small. So I don't want K to be. I don't want k to be big. So I will do that, say k plus one time. So see the dynamics here. If at time t n minus one I have this solution u n minus one, I will perform k plus one time step with of size delta t of my dynamics. So I will, since the delta t is small and I use forward boiler, I will go back to my true solution u. And then when I read And then, when I reach this true solution, I will extrapolate. So, say I have these two points here and here, and I will just draw the line between these two points to extrapolate to the next big time step Tn. So if I call capital delta T a big regular time step, I will, what I will do is that I will compute k plus one inner step of size small delta t, and then I will extrapolate, and this is why we call. And this is why we call that projective forward Euler. It was the first projective integrator that was introduced by Guillaume Kevakidis in 2003. Because just if you do the interpolation of these two points up to time tn, what you end up with is a formula that looks like a forward Euler method with time step delta t minus k plus one small delta t. And with, of course, here you don't evolve the dynamics anymore, you just extrapolate it. So it's some kind of You just extrapolate it so it's some kind of linearize for what I learn. But you, the linearization has been made with very, very accurate previous internal steps. And that's and that's it. And you iterate that with respect to n, to small n. So it looks like for Waddell method with some extra fluorescent step. So you're gonna tell me, is this working? So maybe. is this working so i mean it it looks pretty coarse and and not ap at all well actually it works and it's super it's a super smart idea and it's super easy to analyze so say that we just want to look at the linear stability so i consider u prime equal to lambda u so that if i just apply this formula u n plus one equal to something to that particular g I have u n plus one equal have u n plus one equal to sigma of tau times u n where toe oh sorry there's something missing here toe is just the ratio of small delta t and big delta t and so sigma of tau is the amplification factor of my mesode and we can just write it like that and we will have linear stability if this quantity sigma is less than one and actually you can uh you you can have a look at the original paper by guillan kevakilis they proved this very simple theorem This very simple theorem stating that this sigma is small, smaller than one, if the parameter two, which is a ratio between small delta t and big delta t, lies in this union of two disks in a complex plane. So, see, the parameters of the scheme, namely the small delta t, the big delta t, and the k are really defining the stability area of my stability diagram of my method. Stability diagram of my method. And so, if we just replace the sigma of tau by its formula in the case of a forward Euler, what we have is that we will have linear stability if and only if the lambda here, my linear eigenvalue, say, lies in one of these two sets. So, either a ball which is centered very close to the origin and which touches actually the origin here, and this other one which is very far. And this other one, which is very far, because recall that delta t is the big delta t is big and the small delta t is small, so that this ball here is very far from the origin, and this one is close to the origin. So, well, see, this gives us a way to calibrate our method if we know its eigenvalue. So, say that I go back to my non-linear equation, and I know that the eigenvalues of this equation are clusters like that. Clusters like that. So I can tailor my k small delta t and big delta t such that all these two clusters contain all my eigenvalue. And actually it's doable. So you can read the paper by Guernsey Rakis. It's very readable. It's very nice to read. There's a lot of examples of systems and functions which are very well approximated by this equation. Okay, but here we are very far. Here we are very far. Yeah, sorry. So, yeah. So, now, okay, so let's do that for kinetic equations. So, of course, we need to discretize in space and velocity to be in such a static. So, just a few words on kinetic equations. So, in this talk, what I want to deal with is really the prototype of kinetic equation, say, of the Boltzmann-like kinetic equation. So, I'm looking for an F solution to this free transport plus collision. Transport plus collision equation with a hyperbolic time scale epsilon. So, of course, all of you know that since I have time, space, and velocity, the phase space can be very, very big, up to seven dimensional. And so, evaluating even one point in space, time and velocity will be very costly. So, doing the deterministic meshed method will be very expensive. So, we want the method to be of So, we want the method to be of the highest order possible. And on top of that, because of this epsilon, it's stiff, multi-scale, and this Q can be nonlinear. So, you don't want to implicit such a problem. So, that's why projective integration is a good candidate to this type of problem. I know that there are a very, very, very huge body of method, of AP method for this type of equation, but here I want to do this projective integration. This projective integration business. So, what do I want mathematically for this type of method to work? I mean, again, here it's meta CRM, but so far, if we have that, this creative integration works. So, we want conservations, of course. So, conservation of mass, momentum, and so on, and so on. So, say if it were Boltzmann, it would be mass, momentum, and kinetic energy. But, okay, mass and momentum are actually in us. Are actually in us. So maybe more. So we want an entropy-like structure, say the Boltzmann entropy. We want this collision operator Q to dissipate something. And so it goes with the dissipation of this entropy. We want equilibria. So same X-ray distribution, which minimizes some entropy functionality. So of course, if you have that, you will have at least formally At least formally, free dwelling limit when epsilon goes to zero some types of Euler-like dynamics on the moments. So, rho here is the mass, so integral of the local density, so the integral of f of f dv, rho u is the momentum, so the integral of f v dv and e, for example, is the kinetic energy, so the integral of f times v squared. So, and of course, all these quantities will be dictated by either the shape. Dictated by either the shape of the equiboire or the cohesion operator you choose. So, of course, if Q is a Boltzmann operator, A and B are zero here. But they can be much more complicated. So, yes, the Boltzmann equation, just because I will present you a simulation of this particular equation. So, here is my setting. So, when I consider Boltzmann equation, I will want to study the behavior of a dilute perfect molecular gas. Dilute perfect molecular gas, which where molecules interact via elastic collisions. And so the e-collion operator, its strong form, looks like that. So it's a difference between a gain term and a loss term. So particle can collide, particle of velocity V and V star will collide and will give rise of particles of velocity V prime and V prime star. So this describes a gain of particles and it describes the loss of particles. And the probability of collision is given. And the probability of collision is given by this cross-section, capital B, which depends on the angle of collisions, theta, and the relative velocity of the particle. And so, in the simulation I will show you, I will just consider this variable art sphere setting with a grad angular cutoff, namely this capital B is just the product of two integrable functions. So, of course, we all know that it's exactly the same. All know that it's exactly the setting I described here. It preserves mass, momentum, kinetic energy, it dissipates the Boltzmann entropy, and the acrobia are Gaussian functions. So that's the most well-known non-linear kinetic equation, maybe one of the hardest to study because it's so rich. So here we want to do just numerics. So of course, one could easily replace this Boltzmann equation with the BDK equation by mimicking this squared rotimer. Equation by mimicking this quadratic Boltzmann operator by just nonlinear relaxation toward the Maxwellian. So, capital M of rho ut is a Maxwellian of mass rho, momentum u and temperature t here. So, here I already wrote the full non-linear VGK so that you have a cross-section u which depends on rho here. And so, yes, it's very easy to write and it has. It's very easy to write, and it has nice because it preserves mass, momentum, kinetic energy as the Boltzmann equation. It dissipates the Boltzmann entropy as the Boltzmann equation. And we embedded Gaussianic rubia directly into this relaxation form. So this one is usually the first function you try your numerical method with when you want to do Boltzmann. You first do BGK and then Boltzmann. So okay for BGK. But of course, if you want to. Course, if you want to do more advanced and more realistic simulation, what you want to consider is not just Boltzmann or BGK because these models are single species, but a true setting is multiple species. So one wants to deal with a mixture of P species with different particle mass and study not just a particle distribution function, but a vector of particle distribution. But a vector of particle distribution function which models the distribution of all types of components of a given gas. So one model here that I present you, which was introduced in that paper, there are many, many, many models, is the following. So it's really a system of Boltzmann equation, which are coupled by this multi-species Boltzmann operator. And so here we just consider. And so here we just consider a B. So the multi-species Boltzmann operator for the P species is just the sum of all the inter- and intra-molecular collision operator. And here in this paper, we just take this interspecies collision operator as a BGK-like operator. So you have a mixture Maxwellian of the two species P and Q, and you want to relax toward this mixture Maxwellian. Toward this mixture Maxwellian, and you define this mixture Maxwellian with joint mixture moments. So, I won't give you the formula, it's no point today, but just bear with me, believe me, it works. I mean, it models very nicely a mixture of gas and it preserves the mass of each species through collision, meaning that here we won't assume any chemical reactions. Momentum and energy, of course, transfer between species, but total momentum. Between species, but total momentum and total energy, the sum of all local momentum and energy, are conserved. This dissipates almost Boltzmann-like entropy, but it's multi-species. So, here I wrote it depend on the choice of QP because this is where usually things are complicated. There are many models, and each model dissipates a different entropy. So, I like this one because at the end, you recover the Boltzmann entropy if you just consider one. Consider one distribution, and every quantity remains positive, and everything is explicit here. You can define an explicit Maxwellian equilibrium, which has a common average velocity and temperature, but of course individual density. So, that's another model that we want to consider. And finally, I will show you something which is still very, very much work in progress, but we also want to do that for space deep. For space-dependent cryogen operators, say, for example, this kinetic run and tumble model. I should have had that now. I'm in the diffusive setting, sorry for that. So it's not the same type of scaling, but still, okay, bear with me. And I forgot. It's the first time I did this talk, so don't read that. So it's not a plasma of charged particles, but of course, it's just bacterium which moves and Which moves and change orientation by tumbling, namely, so they have flagellum, which are usually randomly surrounding the bacterium. And sometimes they will just align and the bacterium will fly in the given direction, the direction where there are new nutrients. So you have a given operator Q, which depends on space, because space, the nutrient, the density, which is relation to a process. The density, which is solution to a Poisson equation, are not even dispersed in space. And so, T here is this tumbling kernel which describes the rate of orientation of the bacterium. So, this preserves mass, so be careful it's space-dependent, and it has some pretty complicated equilibria, but still we can do stuff with that. And it has a singular limit when epsilon goes to zero. And so, finally, the last model, but here. Finally, the last model, but here, spoiler alert, it's still not working. But one would like to do that also for granular gases. Namely, now we have inelastic collision between particles and so we have many, many different settings. So especially the fact that the equilibrium and non-Gaussian, and we have no clear entropic structure. But still, okay, we would like to do that. So why am I telling you all of that? Well, it's You all of that? Well, it's because actually projective integration has been used to solve this very, very easy 1D relaxation kinetic equation. So you want to approximate a solution to a scalar conservation law by a kinetic equation. So basically, you kill the nonlinearity on the partial derivative by adding a dimension and also relaxing toward this nonlinearity. And so it was. And so it was proven in a series of papers by Pauline Lafitte and Joannisame, and then their student Annalise Lejen and Ward Millis, that actually this projective forward-based scheme with k equal to, meaning that you just do three small time steps of size epsilon, the stiffness, and the extrapolation step, this big delta t, is just the CFL, the hyperbolic CFL coming from the limiting system. This is a Limiting system, this is an epsilon uniformly stable time integrator for your kinetic equation. And at the limit, you have a stable approximation to three. And they proved also it was consistent in the linear case. So when you have that, so you can have a look at the proof. And the proof is based on the fact that actually, when you discretize this kinetic equation, what you have is a system whose eigenvalues are exactly located as we want. We have a cluster of Located as we want. We have a cluster of slow eigenvalue branches, which are very close to the origin with respect in the complex plane, because it's here we have the small epsilon. And we have this fast mode, which are very far from the origin, because we have here this one over epsilon minus one over epsilon. So we have these two clusters as before, and we can use this Guerr and Kirakidi theorem to have the linear stability. And this will give us the parameter. And actually, if you take k equals to small delta t epsilon. equal to small delta t epsilon and big delta t is a hyperbolic CFL you exactly fit all your eigenvalue inside these tubes and you have stability so my point is let's do that for non-linear equation now so I will just spend one word on that so most of you I'm pretty sure know that actually this type of eigenvalue expansion actually exists also for the Boltzmann equation the BGK equation the Boltzmann equation the the Lambda Equation, the Lando equation, and even the granular gases equation. And well, it exactly tells you that you have eigenvalues very far on the left, which are at distance one over epsilon and which are very, very clustered, and you have a small number of eigenvalue branches very close to the origin. Okay, and also an essential spectrum for Boltzmann, but we can deal with that with another method, which is called telescopic projective integration. But let me keep this. But let me keep this quick. So, it was the original article which did that. But okay, so this is what we use actually to calibrate our numerical method. So, first the sanity check here are numerical simulation because time fronts. So, 1D, 1D, BGK, the linear case, linear because I choose the new in front of the relaxation operator to be just one. So, it's of course a non-linear equation because the BGK equation depends on the moments. Depends on the moments, so it's exponentially non-linear, but it's linear in new. So, here just a comparison between the Runge could okay. So, here, of course, I presented you projective for our boiler, but we can adapt that to a very, very high-order time integrator. So, say Runge Kuta type integrator. And so, here this is what I did: projective Runge Kuta of order four, and here I come. Of order four, and here I compare with the classical Runge Akuta in time and Winot 3 in space. So the red dots are this old, good old AK4 and these blue lines are the clear K4, so the projective 4. And so here are the parameters, I have two small time steps of size epsilon, sorry, three small time steps, and then extrapolation with a hyperbolic CFL. And see, we have a very, very nice. And see, we have a very, very nice agreement between the classical Runge Kuta and the new projective Runge Kuta, with and, but with a new set of parameters here for small epsilon, the new method is more than 100 times more efficient. And it's really nicely behaved with respect to epsilon. Now, if I consider the same equation and I start from a kinetic scale, epsilon equals 10 to the minus 1, up to the compressible Euler. One up to the compressible Euler case, so 10 minus 1, 10 to the minus 2, 10 to the minus 5, and then Euler. Well, we see that we have convergence in the moment. So, here it's still projective long-uputa either in the linear case, nu equal 1 here, and the non-linear case, nu equal rho here. See, we have very, very good agreements. And so, on the moment, even in the heat flux, we have this nice behavior and convergence with respect to epsilon. Okay, so it was the first work we did on this. Work we did on this type of method in this smile journal of computational mathematics three years ago, and then we extended that to the Boltzmann because I want to do Boltzmann. So, Boltzmann is the same. I can still use the same type of parameter and I still have this convergence. So, here blue is BGK, linear BGK, green is non-linear BGK, red is Boltzmann. So, here epsilon. man for here epsilon 10 to the minus 2 here epsilon 10 to the minus 5 i take the same exact numerical parameter and i still have very good agreement so of course the bgk and boltzmann are different when epsilon is big but when epsilon goes to zero we will actually have ello okay so that was boltsman so i know that time is flying so let me just show you the new simulation so we did that with rafael bilo recently uh with a multi-species bgk model and i just GKI model. And I just wanted to emphasize for this simulation because when we deal with multi-species kinetic equation, you have to deal with the mass ratio of the species. So here, two species, you have, yeah, and you can have very, very, very large mass ratio. Say you have a gas of a very large isotope, a very heavy isotopes. And so the mass ratio can go up to 100. And here we use this projective for our data. So with this telescope. Relective forward, so it's a telescopic twist, but it's mostly the same. And we still have a nice convergence as a function of the mass ratio, the species, all together with keeping all the same numerical parameter for all values of the mass ratio. And I believe it was a new found a very, very nice feature of the method. Okay, so maybe we also did some. We also did some hello, Dr. Ree, sorry to interrupt. I mean, we are really running out of time. Yes, multi-species works, and even kinetic random tumble works, and we can observe, as Jose Cario did, and this very nice blow-up solution with this new project for our builder. Okay, and I stop here. Thanks a lot for your attention. Sorry for being late. Yeah, yeah. So, since we are running out of time for this talk. Since we are running out of time for this talk, so if you have any questions, and you can also message Dr. Ray afterwards. So now, it's the turn for the next speaker. So let's set up the talk. Yeah, thank you.