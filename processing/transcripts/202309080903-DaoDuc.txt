We have Amil who will talk about cell geometry, a web application for cell shape and office, followed by the little hackathon for all of you. Thanks, Amiel. Okay. Came a far away from yesterday. Okay. So today, I'll be talking about Cell Geometry, the app I've been hyping up for the last week. And I'm going to talk about the goals of this talk just very quickly. So I want to introduce Cell Geometry and then I'm going Cell geometry, and then I will discuss the three cell segmentation work that we've done before. And then I'll talk about some of the work I've done at Allen Institute, which is, yeah, Mateus's talk. And all of this will be done at scale. So that's kind of like my main theme. So everything that we've done here, or we've talked about here, I want to do it at scale. So all the math and stuff, I want to make sure that it's not just on your local lab. not just on your local laptop. So um so yeah, I want to introduce cell geometry, which is our web application. Oh yeah, well that's that's even better. Yeah. Yeah, so today we introduced cell geometry. The goal of this project is to again make geom stats and projects like geom stats for cell shape analysis accessible to For cell-shaped analysis, accessible to non-technical and people who don't have 10 A100s. So that's the goal. And I just don't think that people really want to spend a lot of time coding all of these things and running these things on their machine and installing because that's kind of what takes a lot of the time. I just want to go to a web page and I just want to use the app. So I'll talk about page. So, I'll talk about page one, because that's probably what you guys are going to be spending a lot of your time on, which is getting the data in the right format. So, the format is a text file or a CSV file, and you have x, y coordinates in the file. And then, right here, you'll see that we have a line space. So, you just need to separate each cell by a space. That's all I ask. And it's just gonna be like super easy to, or for us to parse the data. To parse the data and actually, you know, yeah. So that's one thing. We do accept ROIs from Fiji. So it's just going to be.roi files. And it doesn't have the full functionality with selecting treatments and cell lines, but if you have that in TXT format, then you can definitely upload it. So we'll go over that during the hackathon. Oh, the video quality is kind of shitty. I want the video quality is kind of shitty, but it's okay. So yeah, so this is just introducing the app, so the first page. We'll move on to page two. So page two is computing the mean shape. So again, similar to what we've talked about in other talks, we want to compute the mean shape of cells. So this pre-processing takes a lot of time. So you'll see that when you're using the app, it's going to be kind of taking a while. Kind of taking a while, like right here, and so I just want to go over it very quickly what we're doing. We're doing interpolation because we want to have all the same sampling points. So, for this one, we're using 200 sampling points for the curves. That will be a parameter that you can tune. We remove duplicates because during this process, you will have some overlap. All of these plots are actually interactive, so you can totally look at them. But next, we do the projection to the pre-shaped space. Do the projection to the pre-shaped space. So, this is where we center them, rescale, and align. And then I think we have one more pre-processing step, which is an exhaustive alignment. So, yeah, so this does take, again, a little bit of time, but it is parallelized so far. And then, yeah, so the elastic metric is something I showed just before this, where you could Before this, where you could get the geodesic trajectory between cells. So, yeah. I hope I didn't. Okay, yeah. So this is me plotting, this is again what your input data would look like. So it'd plot all the cells, and then you'd get the mean shape. So in the black line. And then this is just density. Density. Page three. So we've adopted PacMap, which is just again a dimension reduction technique because PCA is old news. So it does do PCA first, and then it will do an optimization between the local and global structures. So it's a better representation, at least for biological image data. I look at Alex because she's kind of the expert, and she got me into it. So, yeah. It so yeah, talk to her. And so, yeah, I have a bit of a Pac-Map again dimension reduction that you guys will be able to download the embeddings and use it for further analysis. I did just, again, create like a mesh just for the output representation. So I just plotted the first three dimensions, and then that's what we see here. And you'll be able to change all these parameters for PacMap on the fly and actually do. Fly and actually tune the model to your liking. So it should be pretty cool. Okay. Next thing. So we have another tool. So this is a project that is with my lab. So yeah, so we built a web application for this paper that we wrote. Actually, I think this past year just got published. And so it's for 3D cell segmentation and tracking. For 3D cell segmentation and tracking for plant cells, I won't go over too much of the methods if you want to talk to me about, like, again, some of the details. I just want to talk mainly about, again, we're bringing in, or you would give me curves into the web app. Same thing here, so now we're doing it for surfaces. So you'd be able to compute the mean surface or mean shape for surface. And so, yeah, so we do just a 3D unit to get the segmentation and then a segment. And then a CRF refinement, and then again, we'll do, and then we'll get our nice smooth curve after that. So, from this, we'll get a nice collection of metadata from your feature extraction. So, here, this is the raw data. This is our BISC. So, BISC is an NSF-funded project that we've been working on for the last A project that we've been working on for the last, I think it's been funded for 19 years. I've been on the project for five years, and so I kind of rebuilt the platform. And so this one, it's a production instance as well. It's a host of that UCSB. And this one, you guys can go and actually upload your TIFF files. If you have plant cells, you could try it for any other cells you have. And you'll get this nice representation of like, okay, I have each cell, and then Cell, and then labeled, as well as the cell centers, surface coordinates, segments, and then three-rate injection points. So again, lots of further analysis that you can do when you just input two images to this model. And yeah, this one is also, again, fully available. Okay, so then I have one more thing. I worked at Allen Institute for this summer. At Allen Institute for this summer, so you guys already heard Matthias's talk. And so I'm working on CVA Pipe, which is the code base for the paper that he discussed. And so I'm going to be building the cloud application. So again, another web application where you can actually run the entire pipeline online. You don't need to do this, again, with any software installed on your computer. I don't anticipate everyone being able to do. I don't anticipate everyone being able to do seven terabytes of processing of data. Just I don't even know on school machines. So if we get this actually to a production instance, hopefully within, I don't know, maybe the next year, it would be really nice for you guys to try on your data as well. And so the entire pipeline will be implemented. So, again, from step one all the way through, again, I guess the concordance. Concordance. But I think the most important one is like computing the shape modes and actually getting the pillars that Matthias has talked about. So, yeah. And then, yes, please come to the hackathon. Okay, you guys are all here. Okay, that's fine. Yeah, and so this is, yeah, that's the end of my talk. And so I just want to give some acknowledgments to everyone. I hope that this talk was good enough for. Talk was good enough for, I guess, a last okay. Good, there we go. Yeah, so I hope this is good enough for the last talk of the birds, fortunately. Some other form questions before we move to the hackathon. So, one of the biggest problems I have is visualizing 3D volumes with labels from them. And we're talking like millions of individual sentimented cells. How does your envisage scaling that? I guess just like that. We do have Pyramidal structure. So, what we do is like we'll take the input data, the TIP image, so if it's like 5k by 5k, we'll downsample that, and we'll only load parts of it unless you start asking for more. So, we'll give you the downsampled image just on the website, but if you want the raw image, you can download it. If you want to look into more of it, the visualizer will actually load larger patches. Yes. So, do volume and 2D. Yeah, 2D. So, yeah, we have, I think a group from Smithsonian, they have like 10K by 10K images. Some of them are 100K by 100K images. And so, and it's just, again, like flights. So, they just have huge data. And yeah, and the platform uses that data. Yes, JTIF isn't the friendliest format for direct access on the street. On a streaming cloud storage and a streaming cloud storage situation, I guess. Yeah. Are you guys kind of lying?