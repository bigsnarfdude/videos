My former advisor, Richard Murray, at CalTAD, and is now an assistant professor, just started, I guess in the last few months, at Texas A ‚Åá M and is in Caltech in our meetings. Love to hear your talk with me. Hello, everybody. I'm Chelsea. Thank you so much for inviting me here. This is amazing. I'd love to meet all of you guys. So I am a synthetic biologist and I focus on both I focus on both simulation theory and experiments. And today, I'd like to share about model-guided engineering of robust dynamical biosystems with layer controls. So many of you haven't met me, although there are a lot of melee places. I'm a chemical engineer. I was trained as a synthetic biologist from day one. So ever since undergrad, and I was in the James Dell lab. I was in the James Dell lab studying metabolic engineering and then went to Cornell, co-devised by Julius Lux and Jeffrey Barner, to study systems biology of synthetic circuits made of respiratory RNAs. And for my postdoc, I went to Caltech to join the Murray group and I worked on symbiote feedback control and later the silicone cell communications. Alright, so like I said. Alright, so like I said, I'm a chemical engineer, and we were trained to think of everything as a process that's composed of components that are always functioned of time and subject to further case. So that's why I think the discipline is actually a really great fit for synthetic biology. Because essentially, what we're doing is to convert cells into minifactories. Factories and we have an input and it will have output. And in order for us to put these synthetic bugs into application, into the real world, it is very important, like all of the chemical plants, we need to have control and memory and bio containments. So it's just like what Ling Chong said, we are control phoenix. We need to control every component of it. So we have to keep it It. So we have the peace of mind. Okay, and what we all know since we were here that controlling biology is a beautiful mess. This is because if we just simplify it so much, one gene being expressed from DNA, you know, we have transcription, translation, and then we have the RNA degrading and protein degrading, right? And this is as simplified as it can possibly be. Composite weak and then gives us four control points here. And so, if you use our RNA, you express a regulatory RNA like Julius does, then you can control, if you have four different controllers, you can go. Or you can use a protein controller, and then this gives you eight different types of control to control one gene. And then now let's zoom out a little bit, and that's just happening in. Zoom out a little bit, and that's just happening in one cell. And when you're in a population, even in a monopopulation, you can still have populational control, and that's in a different scale. And also to my interest, we also know how to control things with chips, computers, and that can also offer another way of control. So that comes to So that comes to the first part of my work when I was at Caltech, is the layer control work. So essentially, we found out that if we want to achieve the optimal performance, and if you just have this component, so for instance a transcription vector, that's extremely good. That's really tight, really reliable, it has really high dynamic range. Really high dynamic range, then great. But very often it will take decades to improve one molecule, one molecule from RNA to a protein. And often nature doesn't really improve these things. It's good enough. It functions. But the problem is it doesn't use one layer of control, it uses multiple layers. And then we're trying to figure out. And then we're trying to figure out why is that, what is the benefit of that. So, John Doyle, you all know him, believes that there is a universal trade-off for controller performance. And so basically what it means is that when you have an input and output and this is your s system, some disturbance can happen to your system that would impact your output. Impact your output. So, in biology, most of the impulse disturbances are actually just two-step disturbances because they're usually extremely low in frequency. So, let's say we have a disturbance that comes along that last fairly long period of time and then it goes away. And when you have an open loop system, and then the system gets whacked out of its equilibrium, and then eventually it will recover. And eventually it will recover back. And then, in the dimension of speed and the robustness, it is probably going to be here. So, it's not very robust nor very fast when it comes to. And then you can have one layer of control that does that. And so in this case, it's more robust. So the peak is relatively lower. And that is the effect of the feedback. That is the effect of the feedback control. But this controller could, as I must, have a really low, slow recovery rate so that it comes back to, it will live a lot slower. Or you can have another type of control alert that would have a really high peak, but it comes back to equilibrium a lot faster. So essentially, this is your trade-off. You can either You can either be fast and fragile or be robust and slow. And the idea is that we want our performance to be ideal, which is both fast and robust. That means that it doesn't get locked out of a public brand all that much. And once the disturbance goes away, it will recover back really fast. So the idea is that the layering would push this performance further into this ideal region. Into this ideal region. Alright, so the first thing we did was we proposed a very simple model. So just imagine in a system where you have A that promotes B. And the B has a byproduct that is regulator R. And this R could come back and regulate B through this cis feedback, and or it could regulate A through the trans feedback and sequentially. Feedback and sequentially regulates B. The B is your final output. And so we have this extremely simple three equations that just butchers all the biology in it. And we ask the question of what kind of R do we need and what is the benefit of using layer control. So essentially this HMAC on the y-axis we're interrogating. On the y-axis, we're interrogating this parameter KR, essentially, that tells us how tight this R bind. So, how good is it as a breakup grader? And also, this on the x-axis, it is how fast R gets degraded. So, if it's RNA, that obviously degrades faster than protein. And we asked on the first panel, The first panel, how robust it is at a bottom, and so how fast it will be covered. And in the end, we found out that for sysfeedback, if you look at those two figures, it's bluer means it's more robust. And then so sysfeedback is more robust, but it's slower. And the trans feedback looks like it's less robust, but it is faster. But it is faster. And you layer them together, and you get this feature that kind of inherits both layer of feedback so that it improves the performance. Alright, so we want to know that if we can make it, actually build it in the lab, and then the first question is: do I use RNA for trans or protein for trans? Like, what do we do? For trans, like, what do we do? So, in the end, it becomes like four different possible designs. And we essentially, in this case, expanded the model to like an eight equations so that it kind of captures the transcription and translations of your RNA and your protein being matured and folded. So, in this case, we'll basically run it to equilibrium and give it a whack whack. And we give it a whack and remove it and watch it recover and just analyze it through different parameters for perturbation. Yes, the whack perturbation is a universal transcription slowdown. It's essentially like a removal of inducers. Did you repeat Halidi for robustness? What's going on? What's going on? It's a good question. It's a robust. Oh, hi. Well, Rickland. What's the question? I'm sorry. Here. What is the definition of robustness mathematically in those pictures? The definition of robustness. Oh, that means the peak is the lowest when it's subject to the same perturbation. So overshoot? Yes, it's basically... Okay, it's like an overshoot measure. Okay, it's like an overshoot measure. Okay, okay, thank you. Thanks. So I have a related question. In a previous slide, for different architectures, some are robust, but they're slow. Some are slow, but they're some are bad, but they're not robust. Let's say for the one that's robust and slow, if you simply increase the 10 overrate of your controller or your target logic, would that improve the response? Yes. Improve the response. Yes. So that goes back to engineering a molecule. If you engineer a molecule that is really tight, but it turns over really fast, which is not something I can think of, because usually RNA turns over really fast, but they're really, like, really cappy when it comes to regulation. But the proteins, when they're made, they just stay there forever, and then there's no turnover. And sometimes you can probably engineer something to degrade a protein, but it's another story. But introduce a different profile, I haven't been able to explain it in quite a while yet. Alright, so essentially we model these four different designs and ask with a wide range of parameters, what does the profile look like? As you can see here, if you basically just increase You basically just increase, so change the molecule in one design. You can definitely improve it somehow, but it will never consider the performance of a layer control. So in the end, we chose parameters and kind of just randomized it to account for the uncertainty and the still specificity when you run experiments, and it still seems. Experiments and still see that all of them have the purple designs closer to this ideal region. And so, in the end, we chose our candidate is to use the RME to perform the cyst feedback and the protein to do the transmitter. So, this is when you had on the previous slide. Are those like different inducer concentrations? No, they're the same inducer concentration. No, they're the same inducer concentration. It's just the R. So R is a regulator. We just scan the parameter space for those regulator. So there are regulators. So there are two parameters. One is degradation rate. One is how fast it binds. So the cave, the cave. And so we just scan through like, I think it was 10 by 10 space. So you experimentally created all of those different. Created all of those different no, those sort of computational work. So, experiment are coming. Yeah, so this is what I essentially built. To facilitate displayer control, there is the combinatorial promoter, and you can it uses an AHL inducer to induce it, and it can also be repressed by macro. Can also be repressed by MACI, so it has two transcription regulatory steps. And then SYNR is also a transcription factor that is required to be induced with HL, and then that would induce the sequential cusset. This here is the anti-sense and sense regulator. So this is basically what Julius created in his early career. Early career. Part of my PhD is to use these small RNA regulators to build. This is called auto negative feedback. Okay, so in order for us to compare if it is truly an improvement from the single layer, so I also had to create this lab I that does not bind to lab O and also use a new can also use a mutated version of integers so that all the genetic context is the same. It's just the functions get mutated so that we can fairly compare all four of them. Okay, so this is the experimental profile and if you so this is also scaled. So scaling actually makes my case a lot worse because you basically scale by You basically scale by the equilibrium point before the production, and then usually when you have more feedback control, the equilibrium is a lot lower. But after scale, you can still see that the purple line is much more stable or more robust. And then this is, if that's not very clear, you can look at the schematic. This feat maps. So every single column is one biologically independent replicant. And you can see that when you have open loop and when this perturbation is introduced and you have a huge disturbance. And then when you have trans feedback, it's better. And cis feedback, eh. So this disappointing part of it is that at this point, there's more. This point, there's more of it, but at this point, I was disappointed why RNA isn't really helping by itself. And then later, if you layer all of them, the layer feedback does improve. So even though if you see the red dots, they're really not much of an improvement from the blue dots when it comes to getting closer to this whole corner. This purple dots actually. That actually shows that there's an improvement. And this is like a very controlled and a clean type of perturbation, which is exactly what I modeled. Just I grow it two, I think this is about five hours, and I wash the cells off with, so that it grows for another two hours without the induced. So the transcriptional rate of all of the genes in Of the genes in my design slows down for about two hours and then it got put back. So, but this is a very meticulously engineered peripheration, which is not what really biology experiences when it's in its natural environments. So, we looked at what happens when there's complex perturbations. The first one is temperature. The first one is temperature. So we just brought it at 37. We know that 37 is a great temperature. And then we increased it. In this case, we decreased to 30. And in this case, we increased to, I think it was 42. And to me, it was like, at first, it was, oh, great, the purple lines are the best. But what I couldn't explain and was extremely baffled was that how come the How come the cis control and the trans control respond in different directions? So, it did not invalidate what we're trying to prove here, but then it raised more questions. So, for me, it is important to at least propose some explanation with the Mach model. So, the one way we can explain it is that first, so when the temperature goes down, we can probably We can probably agree that it will introduce a universal transcription slowdown. So, like transcription gets a little slowed, but the small RNA have a higher rate of misfolding. This is because the mispairing now is more tolerated because the temperature is lower. And because of that, the small RNAs are folded in the correct, incorrect structure, and so that it actually doesn't. And it's so that it actually doesn't do enough repressing. So it will first go down and then go up. And you can see that in this, there is a simple model that explains it, where in this case the small RNA would relieve the repression a little bit so that the curve will go up. And in the lower panel, we see that we're Lower panel, and we see that when the temperature goes up, the RNA-mediated trend goes down, but the protein-mediated layer will go up. And that could also be explained that the protein regulator will have a higher rate of misfolding and a weaker binding to the NA, which is what we understand is true for proteins. Alright, and then there's another set of complex perturbation, which is glucose. So in the first case, I'll grow it in 1% glucose and I'll wash it off for two hours and it goes back. And the second case is to have a 0.1% glucose and then let it go up for two hours. For two hours. And now we can see that it doesn't recover anymore after you remove the perturbation, which is expected somewhat because we're regulating at the transcriptional level and when translation is the major source of disturbance, it actually doesn't really help much. But here, I know I'll be short in time. I know, probably short in time. We show that if we show that if there's a boost in translational capacity, which does not recover. So basically, it means that either you have a small boost of glucose or you have a small intermittent fasting of glucose, that will actually tr trigger the cells to make more ribosomes. And then that would cause And then that would cause this translational step or last to the end of the measurement. The growth rate of the population. In fact, complete. Is that something that is in your capture in your model? We're about to talk about it now. Okay. Yeah, so all of the experiments are run in bash culture. So that means Um, basically, this would be the simulation we have that means that we expect everything to reach people in the room at about seven hours, which is, you know, in grass school, I was told that that's when you run like a batch experiment on a plate reader, that's how long you run it. And when I run this experiment, it was all of them built with four With four different constructs with various feedbacks, it does look like, okay, then that checks out. But if I run it for long enough, it's like 16 hours, which is how long I want to run the final experiments. And then you see that there is no such thing as equal equipment. And that is actually because we are in the space of modeling something that's no longer in the single. Something that's no longer in the single scale because when cells are in a batch, it will eventually grow to capacity and it grow to stationary phase. So when we build this kind of model with four parameters, we're all first orders, and it usually assumes that it is a constant transcription, constant degradation, constant translation, which is probably true for roughly about four to five hours. About four to five hours from when you start experimenting a batch. So, in this paper, that started, that gave me the hint of what it would look like if a model is a function of a growth and resource limited tutorial. So, this is actually the project of my first PhD student, and he's using Using CRN, so like chemical reaction networks to recapture what I have shown here with a surrogate model. All right. So to answer your question. Yes. To answer your question, yes, it will definitely impact how your reaction is, depending on where you are at the growth stage. Stage. Okay, so this is the second part from my talk, but I guess I'm running out of time. So in the second half of my PhD, sorry, second half of my postdoc, I started to work with Dr. Ibaimami from electrical engineering at Caltech to work on silicon cell communication. So essentially the idea is that cells can sense a variety of biochemical Of biochemical signals, but it has a hard time telling us unless you have a $150,000 microscope or at least a plate reader. But CMOS chip does actually the size of it. And it has a limited sensing capacity on biomolecular signals, but it can read it instantaneously from the cells and it transmits. Transmitted through boot chips. So the idea is that can we engineer the chip to read what synthetic microbes can report and can we use the chip to control the gene expression through light or electricity. So we're at the final stage of wrapping up this project and there are four publications in the pipeline. So this is the first one that's already published in IEEE. In IEEE solid state circuit. So essentially, this is to show that we're able to sense two different proteins in the same cell and be able to read which one is being activated. And also be able to do a dynamic. And so one component we're using is the light sensor from Jeff Teeper Lab, which is something I thought it would be really exciting if we can facilitate feedback and control. If we can facilitate feedback control using like from the CMOT chips. But the problem is all these experiments that have been previously published, it has been like one point static report. So I had to do this manually. So I sit in the lab and I go to the light box and I take some sample out for um you know, six hours, which is the longest I can possibly do, but people said should be twelve. But people said triple 12. So I desperately needed a prototyping device because even though the chip can measure it, but I can't operate it. And so I needed something to automate the measurement of gene expression dynamics. And also allows the parallel testing of biological replicates. Because when you test with the chip, the maximum sample size is three. And also, it's easy for biologists to It's easy for biologists to operate. So we designed a plate that is basically compatible with the plate reader. And we have the battery tag under and there's Arduino Nano. And the battery only has like 3.7 volts, so we convert it to 5 volts to support Arduino. And then there are 16 wells of PDM as well, so you can just swap it out. As well, so you can just swap it out. And then the external case is something I just found in the lab, and we can order it, it's pretty cheap. And then the internal 3D printed polystyrene frame is something you can just swap it out, lift it out and swap it. So this is the actual device. So we went through an enormous amount of testing, and in the end, we're able to close the loop. We're able to close the loop. So, what happens is that we will have the plate reader read it and we'll have like a Python code that automates it. It will do image recognition and click the button for us. And every 10 minutes, it will collect the sample, the readout, and then do computation. So, to see do I need to switch to red light or green light, or how much red or green light we need to. Red or green light, but we need to use in the next 10 minutes, and then use our to tell the plate. And the plate has LED lights, so every single well is individually controlled based on its own reading. And here is the result. So we're able to show that this is all red light, this is all green light, and this is the controlled light with just one layer of peak control tracks once on. And this is the growth profile. And this is the growth profile of the OB, so you can see there's nothing funny going on there. All right, so what's a culture model? Invest that part? What is it? In your home design plan reader. Yeah. You can do 200 micrometers. So this is the exact size of a 96 watt flight. So yeah. So, yeah, and these are exactly the same. So, we just built it to fit that. So, the idea here is to introduce alternative map control. Yeah. Yeah. And then, so all of this is like a stripped of LED or RGBs. All right, so I started my lab and I'm still doing half computational work and half experimental work. So, for the computational side, I will For the computational side, I would still like to develop models to predict what a control theory has to say and then do experiments to help system identification and then also to validate whatever the model predicts with experiments. And then these experiment platforms are the ones I have trainings with. So I can do, I would like to. I would like to investigate silicon cell communication or living cell population control on itself. And lastly, this is the amazing Marie Files Circuit Group. It's a really great group that to the point I wanted to stay as a postdoc forever. But I left. And then my amazing collaborator, Flatimas, who still was a PhD student. Was a Pihi student at the chip design, and Krishna was at a Kaltai Ampigan actually built the plate. I think we're out of time and not sure if we can extend the coffee break or bedtime. Yeah, so we have a 10-minute, if you guys look at the schedule at 11.45 after that, then it's top to lunchtime, which starts at 11.55. Which starts at 11:55, so 14:30. There's a 10-minute gap of butter. So we can bleed a little bit over to that. But if folks need to go out and grab a coffee, you see. We'll skip the coffee first round right now. Well, I think, yeah, people can do what you guys need to do. And John, if you'd like to record the comments. Sounds good. 