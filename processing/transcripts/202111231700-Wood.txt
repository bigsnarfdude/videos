Today, I'm going to talk about the graph product structure theory for minor closed classes. You've already seen Torsen's talk on graph product structure for planar graphs. So, today I'm talking about generalizations of this to other minor closed classes. Let me start with, and I should say this is all joint work with Vida, Louis, Tony, Gwen, Piotr, Pat. Tony, Gwen, Piota, Pat, Torsten, and Bartosz, all of whom are present. Let me start with a very general picture. Here's a sequence of minor closed classes. At the bottom, we've got forests, which are a subset of the planar graphs, which are a subset of the, which are examples of graphs of bounded genus, which are examples of minor closed classes. One of the most useful theorems in graph structure theory is the graph minor structure theorem of Robertson and Seymour. And it says that every graph in any minor closed class can be described by simpler graphs or graphs from simpler classes. So we think of it as that the graphs in a minor closed class can be built up from more Those classes can be built up from more basic building blocks. And the building blocks are graphs of bounded genus, and planar graphs plus vortices and click sum operation. But a question that's bothered me for some time is, well, what is the structure of planar graphs? Because the Robertson-Seymour graph minus structure theorem says nothing about the structure of planar graphs, because planar graphs are really the simplest building block in their structure theorem. So what is the structure of planar graphs? So, what is the structure of planar graphs? Well, as you've learned this week already, we can describe planar graphs in terms of graphs of bounded tree width via product structure. Graphs of bounded tree width definitely are easier and simpler than planar graphs. There's a very real dichotomy here between easy and hard. Many MP-complete problems stay MP-complete on planar graphs, but become polynomial time-solvable on graphs. Polynomial time solvable on graphs of bounded tree width. So it makes sense to describe planar graphs in terms of bounded tree width. They really are a simpler class. It should be no surprise that graphs of bounded tree width arise here because indeed they're a very important aspect of the Robertson-Seymour graph minor theory. And indeed, you can think of graphs of bounded tree width as being implicit inside the graph minor structure theorem via the clique sum operation. Operation. So, what I'm going to talk today is about the product structure that's of graphs of bounded genus and of general minor closed classes, which we get also, not just a description of planar graphs. So, this is the picture you should keep in the back of your mind for today's talk. All right, here's the planar graph product structure theorem, which hopefully you're all familiar with now. Torsten will. Hopefully, you're all familiar with now. Torsten would have talked about this yesterday. Every planar graph G is a subgraph of H times a path P, where H is a planar graph with three at most eight, which has now been improved to six. And the other version is that every planar graph is a subgraph of H times a path times K3, where H is a planar graph with tree width at most three. And the tree width three bound here. And the tree of three bound here is best possible. And you've seen a lot of applications of this result. I should say that it's good to compare this with a result of Robertson and Seymour, who showed that every planar graph is a minor of a grid. It's a path, Cartesian product of the path. But the big difference here is that we've got subgraphs. That's a much stronger property. Of course, we have to. Property, of course, we have to counter that stronger property by not having this h-graph as a path, but now it's instead it's a tree with a bounded tree with graph. So I want to generalize, talk about generalizations of this result in today's talk. And the first natural generalization is to, oh, before I get to the generalization, sorry, I want to talk a little bit about the language of layers. About the language of layered partitions, which is a different way of thinking about products. And really, when you start looking into the proofs of all these product structure theorems, the language that we use is very much about partitions and layerings. And it helps to see this and to think about it this way. So let me quickly explain what all these words mean. So I say a graph G is a subgraph of H times a path times a small complete graph, Kl. Complete graph Kl, if and only if G has a vertex partition P where the H graph is isomorphic to the quotient. So this notation G contract P means it's the graph where the vertices of this graph are the parts of the partition, where two parts are adjacent if there is an edge in the original graph between the parts. And then we have a layering. What's a layering? Let's draw the layering first of all. A layering is an First of all, a layering is another partition of the vertex set of our graph. I won't draw the last one, where the edges, so the vertices are sitting in these layers, and the edges either go between consecutive layers or within a layer. So that's a layering. So here's our layering L, script L. But then sitting on top of this picture is a particular Is a petition, the petition P, and you should think of petition P as like a vertical petition. So this is script P. And now if you project the graph to the left, then what do you get? We just get a path. But if you project the graph down, what do you get? Well, you get the graph H. H. Are there any other edges in here? Better draw some more edges. So maybe there was an edge there, right? And that would have created this extra edge in the path. And now the graph at the bottom here is exactly the graph H, and the graph on the left here is the path. And now, hopefully, you can see that this partition looks like a product. Looks like a product. Where does the L fit in? The L is the number of vertices that sit in here. You have at most L vertices in the intersection of a part of P and a layer of L. And that's hopefully that just looks like a product. And you can see that these two things are equivalent. So I will use this language of petitions when talking a little bit about. When talking a little bit about ideas that come up in the proofs of the theorems. So, for example, planar graphs have a vertex partition P where H is isomorphic to the quotient graph. And I should say that the tree width of H here is at most 3. And the layering has the property that the intersection of a part X and a layer L has got size at most 3, which is the same as saying. 3, which is the same as saying g is a subgraph of h times a path times k3. Hopefully that is the right picture you should have in your head when you think about products. Okay, now I'm going to talk about generalization. So in the original paper, we proved that every graph of Euler genus G is a subgraph of H times the path times a small complete graph, where the size of the complete graph is based. size of the complete graph is basically 2g except if g is very small. Now you notice where h is an apex graph. So an apex graph is a graph where you can delete a vertex and be left with a planar graph. So this is similar to the theorem for planar graphs, which is the case g equals zero, except that we have apex and we have a tree width of h is 4 and the And the G disappears when G is zero. So Euler genus incorporates both orientable genus and non-orientable genus. You can think of the Euler genus as twice the number of handles plus the number of cross caps on the surface. There's an update to this theorem as of yesterday. We proved a slight strengthening of this, which was open problem two. Was open problem two on co-author. It says every graph of Euler genus G is a subgraph of H times P times the same complete graph as before, but now the improvement is that we've gone from apex to planar and we've gone from 4 to 3. It's not a big, big improvement, but it's a good improvement to make because the 3 is best possible, even when g is zero. So let me say a few words about the proof of this, and it builds heavily. And it builds heavily on the original theorem. So, what do we do? Well, we can take our graph G, which is we can assume as a triangulation of our surface. We take a BFS spanning tree T and a BFS layering. And here's the key idea. This is a beautiful idea, which is at least 150 years old. You take the dual graph G star. G star. And now you can think of the subgraph of the dual G star consisting of the edges that do not cross the edges of this BFS spanning tree T. Now, if you started with a planar triangulation, then this subgraph of the dual would in fact be a spanning tree of the dual. But in the case of Euler genus G, then you can say that this subgraph has G edges whose removal Edges whose removal leaves a spanning tree of G star. So this is a beautiful description of graphs embedded on surfaces, and I like to think of it as saying that a graph of oiled genus G is only G edges being away from planar. That's a very informal statement, but that's a good way of thinking about it. So what can we do? Well, let's let V1W1 up to VgWg be the corresponding edges. So by corresponding, I mean the ones that correspond to those. I mean, the ones that correspond to those G edges, but now back in the primal graph G. And now we let Z be the union. This is a very brief way of saying something. R T V I is the path within T from R to V i plus the edge Vi, Vi Wi, plus the path from Wi back to the root. So this is the root, here's Vi, this is the path. Here's Vi, this is the path. Here's Wi, that's an edge. And then I take the path back to the root, and then I take the union over all these from I as one to G. And here's an idea as you cut along all the edges of Z. So what do we mean by this particular cutting operation? Well, if a vertex is good, the blue edges are in Z here. So the vertex. Z here. So if a vertex has got degree one in Z, then I double the edge, like in this picture here. But if a vertex has got degree 2 in Z, then I double the vertex and double the edges. If a vertex has got degree more than 3, or 3 or more, then I replace V by copies of V where the number of copies is equal to the degree in Z. And I do this. Degree in z, and I do this local replacement. And this picture describes an actual embedding of the graph, because I've got a cyclic ordering of the edges incident to each vertex. And here's the lovely property of this cutting, is that the graph that you obtain from this cutting, let's call it G prime, is planar. You can prove that just by calculating and applying Euler's formula. Euler's formula. And you actually get more is that you can actually show that this sort of strip down here becomes the outer face of the planar embedding of G prime. So all these split vertices are sitting on the outer face of G prime. You should think that basically, very roughly, that for Basically, very roughly, that for each one of these V1, W1s up to Vg, WG, they're all sitting on, let's think in the orientable case, each of these VIWI edges belongs to a different handle. So when you split along the path from the root down to VI, across to WI, and back to the root, then you sort of break that handle. And so that's why you're now left with a planar graph after you do the splitting. That's some vague intuition. The splitting. That's some vague intuition for you. Okay, so what do we do now? Well, we've got this planar graph G prime, so we apply the planar graph product structure theorem to G prime. But we now do it with, this is the new idea from yesterday, is that we apply it to a variant of the planar graph product structure theorem where we force all of Z prime, Z prime are the vertices that got split from Z, and you force them to be all in one part of your vertical partition. Of your vertical partition, and because you do that, it doesn't matter that there's duplicate vertices because you now just replace the part Z prime by the set Z and you're safe. Because Z has only got two G vertices in each layer, because it's just the union of G paths or two G paths back to the root. And so from that, you can prove that. And so, from that, you can prove the theorem that I mentioned on the previous slide. All right, so there's a rough sketch. Hopefully, you can see some of the ideas that are used here. Feel free to interrupt if you've got any questions, of course. And I can see the chat as well. Okay, so we know that graphs embeddable on a fixed surface have this nice product structure. So, a good question to ask. So, a good question to ask is: well, for which minor closed class is script G, does every graph in the class, are they a subgraph of H times a path where now the true root of H depends on the class. It's just a constant depending on the class. And we know this is true for planar graphs. We know it's true for graphs of bounded genus. So, what is the answer here? So, to answer this question, you should first of all think, well, what graph does Of all, think: well, what graph does not have this property of being a subgraph of H times P? And you come up with the following example. Gwen and I call this the pyramid. You take an n by n grid plus a vertex, a dominant vertex here that's adjacent to everybody. So hopefully that looks like a pyramid to you. Now this graph, it's an apex graph because you can delete one vertex and be left with a plane. And be left with a planar graph. So that says it has no case x minor. But I claim it is not a subgraph of h times the path. Because if it was, then because there's a dominant vertex, this path would have only three vertices in it, which would then imply that the tree width of the entire graph is at most roughly like three times this constant or some other constant times c. But that's impossible because there's an n by n grid in there. So the tree width of the big graph is. There. So the tree width of the big graph is definitely unbounded. So this graph can't be described by this product. Now, this is an apex graph, and it turns out that apex graphs are precisely the obstruction to getting a positive answer to this question, because we proved that a minor closed class, script G has this product structure. Today we'd call it bounded row tree width. We'd call it bounded row tree width if and only if some apex graph is not in the class. Okay, now it's enough to actually exclude some fixed pyramid because every apex graph is a subgraph of a minor of a pyramid. Okay, so let's say a couple of words about the proof. Now we can actually list a whole host of properties that are equivalent here. We've got a minor close We've got a minor closed class script G, and here's the question we care about: When does every graph in script G is a subgraph of H times P with H having bounded tree width? And I say this is if and only if some apex graph is not in the class. And it turns out this is equivalent to a whole bunch of properties. Here they are: bounded layer tree width, that's getting discussed in the open problems, linear local tree width. Problems, linear local tree width, which is a topic Domain and Hajigai studied some time ago, and bounded local tree width, which was really studied first by Epstein under the name of the tree width diameter property. And that's where this class really was first studied. Epstein showed that a minor closed class has bounded local tree width. Has bounded local tree width if and only if you exclude some apex graph in the class. But now we can prove that all of these things are equivalent in minor closed classes. And this here really is the strongest description of this class. This graph, this property in blue implies all of these guys. So this is the stronger property. Now, how do we prove it? Well, we use a beautiful structure theorem of Devorjac. A beautiful structure theorem of Dvorak and Thomas, which does the heavy lifting for us. And they showed that you can actually strengthen the graph minus structure theorem of Robertson and Seymour when you're excluding an apex graph. You get a stronger statement with the word strongly in here. So let me explain all these words. And we need a little bit of a detour into the Robertson and Seymour graph minor structures. Robertson and Seymour graph minor structure theorem to do this. All right, here's a key definition from Robertson Seymour. We say a graph is k almost embeddable if there is some subset A of the vertices with size at most k, so k is a constant here. And if you take the graph G minus A, so you delete A, then what's left over is, in a sense, almost embeddable in a sense. In a sense, almost embeddable in a surface. By that, we mean that you can write this graph as a union of graphs where G0 really can be truly embedded in a surface of all the genus at most k. And each of these other graphs, G1 to GK, it's called then the GIs, is a vortex of width k and a face of g0. And I'm not going to describe what this means formally. Basically, Gi is a graph of Is a graph of bounded of path width at most k and gi can be described as having a decomposition, like a cycle decomposition of bounded width that's indexed by the vertices on the face that it's sort of sitting inside of G0. So there's a very loose description of this, but this is a very important definition because of the graph minus structure theorem of Roberts and Seymour that says for That says for every graph x, there exists some k, and every x minor free graph can be obtained from clique sums of these k-almost embeddable graphs. So you can think of the clique sums as a having a tree decomposition where each torso of the decomposition is one of these k-almost embeddable guys. And you should think of A as your apex set, meaning these are a small set of vertices that you delete so that the remainder of it can be almost embeddable in a surface. Be almost embeddable in a surface. Okay, there's graph minus structure theorem. So, what is strongly k almost embeddable means? Well, it's the same as before, but now we add this extra property that says that there is no edge between the apex set and g0 minus g1 to gk. So, what does that mean? It means that the apex vertices are sort of weak, meaning they can't just. Weak, meaning they can't just be adjacent to everybody in the whole graph. In particular, the vertices in the apex set are only adjacent to each other and into the vortices. You can't have an edge between an apex vertex and the surface part of your graph. That's strongly K-almost embeddable. And then the apex minus structure theorem of Dvorak and Thomas, although they say in their paper that They say in their paper that this was implicitly known for years and years before this, but nobody bothered writing all this down. But I'm very pleased that they did write down a proof of this fact, is that for every apex graph x, there exists a k such that x minor free graphs is obtained from clique sums of strongly k-most debitable graphs. So this theorem is identical to the one above, except that the excluded graph is apex, and we've added the word strongly in here. So this. Here. So, this is enough that this is exactly the structure theorem we need to be able to prove these product structure theorems for an excluded apex graph. In particular, we can now put this together and we show the following result in terms of products now. We get that for every apex graph, there exists a k such that every x-minor free graph is a subgraph of h times p. So we've got bounded row charts. times p. So we've got bounded row tree width where h is bounded tree width and p is a path. Let me just say a couple of words about this proof. This is really at the heart of what we did in this paper. What we do. Well we know already how to do the G0 graph. We're assuming let's take we've got a K almost embedded we've got a strongly K almost embeddable graph. So the G naught well that's bounded genus. So we know how to do that. We already have that that's a To do that, we already have that that's a subgraph of a product. Equivalently, we've got a partition and a layering with bounded layered width. So the intersection of a part and a layer has got bounded size. And here's the only original ideas is that we put all the apex vertices and all the vertices that are in the vortices into the first layer. That's a bit vague. What we really do is force these in the first layer and then recompute the layering of the bounded genus graph after you force the apex vertices and the vortices to be in the first layer. And you also, in the vertical partition, you put all the each of the apex vertices and each of the vertices from the vortices in their own part, just a singleton part. Part, just a singleton part, and surprisingly that works because this is a part I'm going to wave my hands about. You can combine the treaty compositions of G1 to GK, because they're bounded tree width. In fact, they're bound to path width. You can combine these treaty compositions with the treaty composition of the quotient of G0, which you know is already bounded tree width. And you can put this together and you get a tree decomposition of Decomposition of the quotient of this new partition of the whole graph. And on top of that, there's another layer where we can do clique sums. Very basically, we have a lemma that says if you have a class where that is obtained from click sums of graphs of bounded row tree width, then the entire graph also has bounded row tree width. And we're not going to. I'm not going to go into any details there. That's pretty elementary. All right, that's a sketch of how we prove this apex minor product structure theorem. All right, now we're on to now the general minor closed classes. We've got an excluded graph X, which is just an arbitrary fixed graph that we exclude. And we show that there exists constants K and A such that every X minor free graph. That every x minor free graph is obtained from clique sums of graphs, each of which have got the product structure. But now our product structure is a little bit richer because we have to do bounded tree width times a path, and now we have to add in a complete join with a small complete graph, Ka. So these are the apex vertices, the Ka. So each part So each part, you can think of it as a tree decomposition where each torso has a bounded tree with times a path completely joined to a bounded size apex set. Now the K comes from the graph minus structure theorem, so that can be pretty large, but the A, you can really bound this number A very explicitly if you use the paper of Dvorak and Thomas. Because if this excluded minor is T apex, Is T apex. So this means that you can delete T vertices from X to get a planar graph. Then in fact, this number A is very precise. You know exactly what it is. It actually equals T minus 1. So in particular, if T equals 1, then X is an apex graph, and you're back exactly where we were a minute ago with no apex vertices. So basically, in this theorem, you've got in the De Voiger-Thomas structure. In the Devorjac-Thomas structure theorem, you've got two types of apex vertices. You've got the true apex vertices which can be adjacent to everybody, but the number of them is only t minus one. And the other apex vertices are restricted in that they are adjacent into the vortices only. And those guys you can push into the product. So they don't appear in the apex set. All right, there's some other vague ideas. Vague ideas. I should also say that this theorem of Dvorak and Thomas, I still haven't stated it in its full strength. There's a stronger version than just saying T apex. T apex is just a corollary of their even stronger version. And then they have another version which is stronger again, where you do everything relative to a vortex. That's not a vortex, a tangle. Sorry. So that's how they actually prove it all. It's a really It's a really lovely result. Very useful when you get these very precise bounds on your apex set. Okay, so that's enough about general minor closed classes. Let me say a little bit more about what you can say about graphs in minor closed classes. Well, suppose we have an arbitrary minor closed class, but now we add the extra property that the graphs have bounded degree. And this is a separate paper. Is a separate paper which was on clustered coloring, and we needed this result which is of independent interest. And it says if you have an excluded minor x and you take a class of x minor 3 graphs and you also assume that your graphs have a bounded degree, then in fact you can remove all the apex vertices and you can remove the click sums. All of that can be sort of folded into this product. And really, because the apex And really, because the apex vertices are bounded degree, they're not very powerful. And basically, you can fold the product to push the apex vertices down into the product, h times p. And the tree of h only blows up by a linear factor in the degree of the graph that you're considering. So, this was very useful when we were doing cluster colouring of graphs in a minor closed class with bounded degree. I consider this theorem to be sort of a parallel with an old theorem, one of my favourite theorems and one of the most useful theorems that I know of. This is due to the referee of the paper by Digano Poriowski. And the referee proved that every graph with tree with k and with maximum degree delta is a subgraph of a product of just a tree with a small complete. With a small complete graph. A small complete graph means a constant times k times delta. And the tree itself even has bounded degree. So of course this paper didn't mention products. It was all presented in terms of partitions, but it's equivalent to the statement in terms of the strong products. This is a very useful theorem. And it's quite similar in spirit, I think, to the previous theorem, where instead of having a tree times a small complete graph, well, we have a bounded tree with graph H times a path. And really, if we wanted to talk about the history of graph product structure theorem, I consider this the starting point of graph product structure theory. They didn't know that they were talking about graph products at the time. Talking about graph products at the time, but it really is equivalent when you just written in terms of the language of petitions. Okay, that's enough of this long list of theorems. Let me, oh no, there's one more theorem I want to talk about. Sorry. This is an application of all these results. So let's start with a result of DeVos, Dean, Oporowski, Sanders, Reed, Seymour, of Vertica. Sanders Reed Seymour of Vertican. This was a conjecture of Thomas. I was about to say Thomas. This is a conjecture of Robin Thomas. And it's a lovely description of graphs in minor closed classes. And the theorem says that for every integer c at least 2, and for the time being, just think of that c equals 2, and every graph x, there exists some number k such that x minor free graphs have a vertex partition into c Of a vertex partition into C parts such that the union of any c minus one parts has bounded tree width. So if you've got c equals two, it's just saying you can partition your graph into two parts, and each of the parts has got bounded tree width. That was the conjecture of Thomas. And the proof of this was used, some pretty hardcore graph minor theory, but it really is a straightforward. Is a straightforward corollary of the product structure theorem. Once you see the product structure, this low tree with coloring result is really immediate. So what do you do? Well, here's the one-line idea. If you're looking at a graph H times P, where H has a bounded tree width, then you colour the vertices in the ith layer by I mod C. So that gives a C colouring of your graph. That gives a C colouring of your graph. But now, if you take any C minus one colours, that means you've deleted every Cth layer. And so now the union of C minus one colors is just the union of is a component. Each connected component is the union of C minus one consecutive layers, but that's got bounded tree width. And then you've got to add the apex vertices, but they really don't change much because you actually can colour. Change much because you actually can colour the apex vertices any color you like, and then you can do click sums on top of that, and that doesn't really increase the tree width at all. Here's this is the key idea is that once you've got this layering with bounded tree width parts, then it works. So really the product structure implies these non-trivial results. Now, I should say. Now, I should say in this theorem, you can replace vertex partition by edge partition as well, and you get exactly the same theorem. And you can do, you can prove the edge partition result also using this approach. It's a little bit more tricky because you have to consider the edges between the parts, but you can still do it. The edge partition result is actually a little bit harder, but basically, it's still a very similar idea to this one. The layer. The layering really helps to see what's going on in this low tree with colouring results. Okay, now let me take a pause and say what I consider is a very important open problem. And the question is, are there simple proofs of all the theorems that I've just talked about, or most of them, the apex minor product structure theorem, the graph minor product structure theorem, the load tree with colouring theorem, and that do not use Robertson. And they do not use Robertson-Seymour's graph minus structure theorem. All of the proofs that I've just talked about of these results rely on the graph minus structure theorem. And I think it'd be wonderful if we were able to prove these product structure theorems without the full power of the graph minus structure theorem. And I think it should be feasible because the graph minus structure theorem, we say, is a rough characterization, meaning it describes. It describes all the graphs with no kt minor. But if you take any graph that is described using the ingredients of the graph minor structure theorem, then those graphs have no kt prime minor for some t prime that only depends on t. So that's actually much stronger than all of these results, which are not at all rough structure theorems. They're very useful to have the product structure, but they're not, they don't have this weak if and only if structure. So I mean they're qualitatively weaker results. Weaker results. So I feel like we should be able to prove all these product structure theorems without using the Robinson-Seymour graph minus structure theorems. I've got nothing against graph minus structure theorem, of course. It's incredibly useful, but it'd be very good for our understanding and also to get better bounds to prove this independently. So I'd like to finish the talk by saying some vague ideas about how you might go about proving. How you might go about proving these sorts of theorems without using Kraftmin structure theorem of Robertson and Seymour. And the key idea is something called caudal partitions. This is all in the open problems on co-author. So let me tell you about this. So let's say a partition of a graph is a set of connected induced subgraphs that partition V of G. Now it's important here that I have connected. Previously, I didn't really care about whether the parts were connected. didn't really care about whether the parts were connected, but here I will. And now we say the quotient of a partition is the graph obtained by contracting each part into a vertex, which is what I talked about previously. So here is a partition of a graph, and when I contract each part, I get the graph on the right, which is the quotient. Now, I particularly care about graphs and partitions where the quotient is caudal. In that case, we say that we have a That case, we say that we have a caudal partition. Our graph is caudal if it has no induced cycle of length at least four. Now, that definition isn't very helpful, but what's helpful for us is the following observation, is that suppose we have a graph with no kt minor and you have a caudal partition of it, then the quotient must contain no kt. mean no kt because if I have a complete graph in my quotient then I can go back into the original graph and the corresponding parts because they're all connected define a KT model but if the original graph has no KT minor then that's impossible so the quotient contains no KT but because of the graph is caudal the quotient is caudal Is caudal, the quotient is caudal, that implies that the quotient has got tree width at most t minus two. So that basically can take as a definition of tree width. So now, when we've got a caudal partition in a graph that has no kt minor, then automatically, for free, you know that the quotient is bounded tree width, which is incredibly useful. Now, bounded tree width graphs, you think of them as well understood. Well understood. We know completely the structure of graphs of bounded tree with. So now what we want to show is that curves of snow KT minor have caudal partitions where not only is the quotient well behaved, which is automatic, but each part is well behaved. I want each of these parts, the subgraph inside a part, to be also well behaved in a certain sense. And this is something that many This is something that many papers have looked at. Torture petitions are incredibly useful. The first paper is by Andre, who has looked at the cops and robbers games on KT minor free graphs. And then this idea of quadral partitions has been used and rediscovered by several authors. I believe Reid and Seymour wrote their paper on fractional colouring without aware of the. Without aware of the previous result of Andre. And quarter partitions are completely implicit in the work on fractional colouring. And then Vanden Huvaler, Asona Damendes, Kieros, Rudovich, and Sieberts wrote a beautiful paper on colouring numbers using this idea. And that led to a lot of other corollaries. So you can use colouring numbers. So, you can use colouring numbers to get bounds on acyclic colouring, exact distance colouring, boxicity, and many other problems. And often this method gives the best known bounds for KT minor free graphs. I got into this topic in a paper with Jan van den Hovel, where we studied effective and clustered colouring using caudal partitions. Okay, so they're very useful. So, what can we prove? Useful. So, what can we prove about the subgraph induced by each part in a caudal partition of a KT minor free graph? Well, here's one of the things we can do. Van der Neuble et al. showed that a K T minor free graph has a caudal partition such that each part is induced by T minus three geodesics in the subgraph under each part. I'll explain what under means in a minute. And geodesic, it just means it's the shortest path between its ends. Just means it's the shortest path between its endpoints. Well, the other property that we got in my paper with Jan Vanden Heufel is that each part is very well behaved. And in our paper, we stated it as saying that each part has bounded bandwidth, but you can actually say that in terms of a product. So each part is a subgraph of a path times a complete graph on T minus three vertices. Complete graph on T minus three vertices. So, this is what we mean by saying that the parts are well behaved. The parts have got nice, very strong structure. I mean, this is stronger than bounded tree width. It's even stronger than bounded path width. It's just bounded bandwidth. Okay, let me explain how you prove this. It's a lovely idea that's implicit in all these previous works. All these previous works. So here's the idea. So you construct this caudal partition iteratively. So you just build up a caudal partition of the graph. And so you imagine that at any one time, this is the part that you've already found. This is the caudal partition that is already processed. And down here, this is the unprocessed part. So, the quotient of the partition up the top is caudal, because that's already processed. That has all the part, that has the behavior that you want. And each of these parts in here are well behaved. We say that's a tick. But these unprocessed parts, well, you don't really know what's the structure of these components. So, these big yellow blobs are the components when you delete the processed parts. But the key to the proof is that you maintain the process. The proof is that you maintain the property that the quotient of the global partition, including the unprocessed parts, still is caudal. And in particular, you add an extra property is that each of these unprocessed components C down here, they are simplicial vertices in the caudal graph. So, what that means is you look at the neighbors in The neighbors that are processed here, here, here, and here. And then in the quotient of the process parts, let's have another colour. These guys form a clique. So I have that edge, I have that edge, I have that edge, I have that edge. Oops, I'm going to run out of space. Anyway, there's a clique there of size four in that quotient. So that's what it means that the vertex and the quotient corresponding to components. Vertex in the quotient corresponding to component C is a simplicial vertex. So you always maintain that invariant, and you can start the process with that invariant simply with the entire graph as one unprocessed component. So how do we find the next part of our partition? And it's very simple. So let's zoom into this component C, and we'll find our next process part. So let's zoom into component C. So let's zoom into component C. Here's C. And here's the these are the predecessors of C, I call them. So these are the predecessors of C. These are the connected blobs in our partition that are adjacent to C. So I can pick for each of these predecessors Hi a vertex Vi in C that is adjacent to Hi as shown. As shown there. And I pick one of these vertices, call it V1. And I do a BFS layering within component C, starting at V1. That's the layers that are shown there. And now I take shortest paths from V1 to each of the other vertices Vi. So I only have K shortest paths here. And you know that the number of predecessors has to be at most t minus 2 because in the quotient, Because in the quotient, all of the components that I've drawn on the picture at the moment form a clique in the quotient. So now what I do is I take as my next part of the petition, the subgraph induced by the union of all these K blue paths. That's going to be the next part in my petition. And I claim that that blue graph. That blue graph truly is a subgraph of a path times a complete graph on T minus three vertices. And if you can just look at the picture and you see that this is true, because each vertex in the blue subgraph can only be adjacent to vertices on the previous layer within its own layer or the next layer. But that's exactly the same as saying that you've got a complete graph here, here, here, and here, and then you take the strong. Here and here, and then you take the strong product and you add all the edges between parts. That's exactly what a path times a complete graph looks like. So the new part does satisfy the property that we're after. And so we move the blue thing into the new into a process part. And now you can check that so you now the new component C prime of C to. Of C, take away the blue thing, becomes a new unprocessed part. There might be many components there. But this maintains the property that the quotient is caudal, because this unprocessed part C prime, whereas its neighbours, its neighbours are the blue thing plus some subset of the previous yellow blobs, but in the quotient, they are a clique. So C prime is still simplicial. After you make Simplicial after you make blue, the blue subgraph, a processed part. And that's basically the whole proof. All the invariants are maintained, so I can repeat this step again and again until all the parts are processed and then I'm finished. It's a lovely proof and it gives very good bounds. Now, what did I mean by under here? What did the word under? Here, what did the word under? Well, it meant that when I chose those blue paths, they are shortest paths in the entire component that I was sitting in. So they're shortest paths in the blue graph, but they're also, if I take the blue graph union C prime, they're still shortest paths in there as well. In this entire thing, they're shortest paths. Now, one of the great features of Of the product structure theorems is again, we're finding shortest paths in all the proofs. And this is the idea of Philiptic and Siebits: is that you can find paths, you can partition your graph into paths that are shortest in the entire graph. And that really is a key idea, is that you're not just finding paths that are short, the shortest paths in a subgraph. You really do get past at a shortest in your whole. Passed at a shortest in your whole graph. And that really is in the key idea of the previous paper of Philip Truck and Siebitz, which is a predecessor to the paper on the planar graph product structure theorem. And really, most of the ideas on the proof of the planar graph product structure theorem come from the Filip Trick and Sieberts paper. All right, so what do I want to say about caudal partition? So, what do I want to say about caudal partitions? So, let's compare caudal partitions with the planar graph, with the product structure theorems very broadly, very loosely. Now, first of all, we should say quarter partitions give great bounds. The dependence on the excluded minor here are tiny. These numbers are linear in t. But if you take anything from the Roberts and the Seymour graph minor structure theorem, then you get big bounds that depend. Structure theorem, then you get big bounds that depend on t. But these methods are very similar in some ways. So both the product structure theorems and the caudal partitions have partitions of the vertex set, and each part has bounded bandwidth, and the quotient of the partition has got bounded tree width. They're very similar in those respects. What makes product structure effective? Product structure effective is that it controls the edges between the parts. And there's nothing in the core of partitions that controls the edges between the parts. And that, I think, is a key challenge, is to adapt the proof of the caudal partitions for KT minor free graphs so that not only do we get that the quotient is bound to true, not only do we get that each part. Only do we get that each part is well behaved, like such as bounded bandwidth, but we also want to say something about the edges between the parts. I think that's a key challenge. And if we could do that, then you'd think that you'd be able to get some very useful global structural descriptions of KT minor free graphs. And maybe using, well, it depends on what you discover, you may be able to prove. You may be able to prove something like those product structure theorems that I talked earlier without the use of the Robinson-Seymour graph minor structure theorem. And then hopefully with very good dependence on T. And you'd hopefully you'd be able to conclude things like that KT minor free graphs maybe have bounded Q number with a small bound on the T, or bounded non-repetitive chromatic number with a small bound on T, and so on. I think there's And so on. I think there's a lot more to be discovered about caudal partitions of KT minor free graphs. So, with that, I'll stop talking. Thank you all very much for your attention.