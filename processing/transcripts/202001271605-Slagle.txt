I'm going to tell you about a kind of sort of TQ of T description of fracton levels. This won't be quite a TQ of T. We'll have to add one ingredient to get fractons from a TQ of T. So right, so before there were fractons, there was topological order. And so, you know, topological order are things like torque code, fractional quantum Hall, and fractons we've got things like X cube and Haas code. And these things are quite similar, but also quite different. Similar, but also quite different. For example, topological order, you have these topological excitations, fractal orders have them too, but now they have mobility constraints. Topological orders have topological degeneracies, fractal orders do as well, except now these degeneracies depend on your system size. And so for topological orders, we have these TQ of T descriptions for to kind of, you know, generically classify many different kinds of topological orders and how to understand them and kind of. Understand them in kind of like a minimal universal way. For fractone orders, we're kind of not there yet. We're working, but we're not there yet. But what I want to do in this talk is kind of ask, how are these two different things related? How closely can we relate them? In fact, what I want to show is that maybe we can actually make fractons from TQFTs. I like to contrast this from something similar that Sager did, and also Hahn, Michael Harmonile, and Shia. Michael Harmony and Shia, where they took layers of 2D Toric codes and strongly coupled them together to get an execute model. But in order to do this, they had to drive these Toric codes through a phase transition. That means these things are different. They drive these topological orders through a phase transition to get a fractal model. I don't want any phase transitions. I want to start with some topological orders and have them be in a fracton order as a TQFT. I don't want to go through any phase transition to get a fractal model. So I want to make Grafton model. So I want to make that distinction pretty clear. Good. So to kind of go in a little bit more detail, these topological orders, we like to describe them using TQFTs. So for example, toric code you can describe using Chern-Simons theory or some sort of anion model. So this is the toric code Hamiltonian. And we can kind of distill it down to its two kinds of anions, this electric charge excitation and this pi flux magnetic excitation. Pi flux magnetic excitation. And the question is: for fracton orders, can we also distill something like the X cube model down to a sort of TQ of T? So we have some complicated Lattice Hamiltonian. Can we also think about this in terms of just some sort of anions? But in like a TQ of T description. Another way to think about this is I want to take this lattice model and kind of come up with a UV completion for it. This is how a high energy theorist would think about it. How high-energy theorists would think about this. I want to fill in this kind of discrete lattice model with qubits everywhere within this cube to have like a UV complete theory. So I could zoom in as much as I want. And I hope this will become more clear what I'm doing later in the talk. So the answers, what I'm going to do is I'm going to start with a three-dimensional TQ of T, and then I'm going to embed within this TQ of T some stacks of layers of kind of Of layers of kind of maybe two-dimensional TQFTs, but these two-dimensional layers are going to interact with the three-dimensional TQFT in such a way to get the fracton physics. And you can kind of think about that in terms of little diagrams like this, which I'll explain soon. Good. So this is what I'll be talking about for the most of my talk. It's based on some forthcoming work with Dave, Daniel, Abinov, and Dominic, all of whom are here except for Abinov. And if there is some time. And if there is some time left over, I'll also talk about a more field theoretical description of basically something very similar. There we go. Good. Okay. So just to kind of get on the same page, so one of the kinds of defects I'll need is this 2D torque code, where we have this polyoperator as the links to the square lattice. We have this baquette term, which is a product of 4Z's along with baquette. Product of four z's along with a ket, and this cross term is a product of four x's. And this Hamiltonian gives us these anions, which we can create ends of these string operators. So a string of poly z's creates these electric excitations at the end. And if you braid the electric excitation around a magnetic excitation, you get a minus one phase in the wave function, which occurs because these strings that you use to move these particles anticommute to where they intersect. And so, what is this definition? And so, what is this defect? So, I said that I was going to embed these two-dimensional layers within my 3D TQFT. And kind of more formally, we can think about these layers as like defects in a TQFT. And so what's a simple example? So, imagine I have some toric code. I can consider this so-called duality defect, which kind of swaps these electric and magnetic particles. So, if one of these particles goes through the defect, it gets swapped. And this can be a realized And this can be realized very simply in the so-called Wenz-Pliquette model. It's kind of another formulation of torque code. If you just put a little disclination in this, I'm sorry, dislocation in this model, you can realize this duality defect. And an important property of this duality defect is it's invertible. If I take two of these duality defects, put them together, they kind of cancel each other out. The E swaps twice and just goes back to itself. To make fractal models, To make fractal models, we're going to need non-invertible defects. So, the simplest kind of example of a non-invertible defect is just to take some three-dimensional anything and embed a layer of two-dimensional torque code in it. This 2D torque code is, of course, non-invertible, because if we take two of them, they don't really cancel each other out. You just get more topological degeneracy. This already tells us how to get kind of the simplest fractotic model one can imagine. You just take a stack of these two. You just take a stack of these 2D torque coats, and that's basically a planal model. You have anions moving along in planes. And this is kind of the most trivial example of a kind of TQFT description of a fractal model you can get. Because I've constructed this fractal model just using TQFTs, which are these toric code layers, and I get a fractal model. This is not too exciting because it's kind of the most trivial example. I hope that the real example will be much more interesting to you. So in what sense is a fractal model? In what sense is a fracton model? Just a planon model. Planon model. So it's kind of fractonic because you have mobility restrictions. You don't have particles that move in all directions. But there are no dislocations here. That's correct. It's just layers of torque code. Good. So one kind of motivation for trying to think about this kind of line of research is these researchers here realized that if you want to study crystalline SPTs, so these are SPTs. So these are SPTs which are protected by lattice translations or rotation symmetries. You kind of classify them and understand them in terms of defect networks, these invertible defects, so things like those duality defects, except different if you're just using symmetry protection. So you kind of put these, you know, line defects and point defects throughout some space and some crystal pattern, and that lets you understand and classify. That lets you understand and classify these crystalline SPTs. And what we'd like to, well, we can show that we can get fractal orders from using these non-invertible defects in some sort of crystal pattern. And kind of the hope is that maybe we can also use this approach to help classify fractal orders, or at least understand them better. So that was part of our motivation. Cool. So the example that I'm going to focus on in this talk is Example that I'm going to focus on in this talk is how to get the X cube model from this kind of defect construction. So the X cube model, we've got this cube operator, it's a product of 12 C's around the lengths of a cube. So we're in a cubic lattice with polys on lengths. And then we have these three cross operators. And we get this large degeneracy, which often happens in fracton models. And then fractons are the excitations of these cube operators. They're created at corners of these membranes. They're created at corners of these membranes. So, if you act in the ground state with an X operator on each of these red links, you create fractons on these four cubes. And these are hard to move because if you act with like an X operator near one of these fractons, you delete it, but you also create three more fractons. There's no way to kind of move one of these excitations without creating additional excitations. And excitations of these cross operators are linons. They're created at ends of these string operators, which are products of Z's. Operators, which are products of Z's, but if the string operator has this kink, it bends, it leaves behind an excitation because you can see that this string operator anti-commutes with these two cross operators, since this string only intersects with one of these X's. Good. The only other ingredients I'll need is 3D torque code. This is similar to 2D torque code, except we're on a cubic lattice. It's basically Z2 gauge theory in three dimensions. So we still have these kettle. So we still have these baquette operators in each baquette, but now we have this kind of star operator in each vertex. Again, if you act with the string of z's, you create these point-like charge excitations. What's kind of more complicated is the pi-flux excitation. So we like to think about it as a loop excitation, and it's made by acting on the ground state with the product of X's in some membrane, and that excites these flux, these placettes around this membrane, and so we think of. Membrane. And so we think of all these paquettes as forming some loop of excitations. And we call it a pi-flux loop, because if a charge winds around this loop, it gets a minus one phase in the wave function. So to kind of summarize all of that, all we really need to worry about for this talk is how to create particles, or what we can create locally, because that's going to tell us how particles can move and understand the fracton behavior. So in 3D torrent code, we can create pairs of charge. We can create pairs of charge excitations. And for the rest of this talk, I'll put a little prime on the charge excitations of the 3D torque code to distinguish it from the 2D torque code. And we can create small loops of pi flux in the 3D torque code. For 2D torque code, and I'll draw this little line to show that it's on some 2D slab that comes out of the board, we can create locally create these pairs of electric excitations or locally create pairs of these magnetic excitations. Magnetic excitations. And now we're ready to start building a fracton model. So, this is really the key slide of this talk. So, let's say we take a 3D torque code in the bulk, and let's add this two-dimensional defect layer to it. So, we've got 3D torque code below and 3D torque code above. But we have this two-dimensional defect layer that acts like a 2D torque code, so it has the same anions. But we're going to change what we can create. But we're going to change what we can create locally on this 2D layer. So, what if instead of creating two electrons, two E particles, we can instead create this triple? We can create an E here if we also create an E prime on each side of it for the 3D toric code. And for the flux sector, what if you can only make, when you make these two fluxes, what if you have to attach them to ends of a flux string in the 3D torque code? So whenever you have a flux of the 2D torque code, it's always We have a flux of the 2D torque code. It's always going to have to be attached to the end of one of these 3D torque code fluxes, just to be clear about that. And yeah, are there any questions about what local charges we can make? So you have two, three toric codes on top and the bottom. Yes. And they've got this defect between them. This defect can support these E and M excitations, but Citations, but you know, in 2D torque code usually allowed to make pairs of E's. Here, you can also make a pair of E's technically, but you can also make a single E if you also make an E prime on each side of it, where the E prime is in charge of the 3D torque code. So, is the 2D layer also transparent to the E prime particles? Like the E pass through? That's a very good question. So, if an E prime passes through, you'll have to leave behind an E. Through, you'll have to leave behind an E. So, in order to make an E prime pass through, you basically have to create this local excitation, and then you can cancel out a pair of E primes in the bottom. This will basically be the next slide. What about the loops? The loops? The loops can pass through. These 3D loops can pass through. It looks like the the 3D code wasn't meant to be zero. But only when you pass the Deeper layer, it will be multiple zero. The total Z2 electric charge is now multiple zero. Oh, that's correct. But once you pass through the layer, you will be multiple zero because you left another additional E through the on the layer. This E on the layer, it kind of acts like a dipole, so it kind of carries no charge, if you want. And then this E is going to be the fracton charge eventually, and that'll be conserved mod 2. You can create a disk. But totally things not mod20. So yes, that's right. So you can. 2E prime and 1e. Right, there's no mod 2 rule for this plus this plus this. That's correct. The E primes have a mod2 rule or mod 2 conservation. And when you pass an E prime that goes to the EFAD area, you leave behind an E, so it's like you. Behind an E, so it's like you. And there will be two E on the defect layer. There'd be one E on the defect layer and one E prime below. This will be the next slide. Can I just ask also, can you go back? So is this these rules for the 2D layers separated into 3D Tory codes, is that completely det is that extra structure you're adding or to the one to the one 3D toy code that you split up into two halves? Or is that kind of inowed from the property 3D torrent code? Yeah, it's new extra structure we're adding. So we're kind of taking the 3D torque code Hamiltonian and modifying it along a plane. It'll still be exactly solvable commuting projector model, but we've modified it along the plane. And that's what we mean by a defect. A defect is where we've modified the Hamiltonian somewhere. And the gap hasn't filed. That's correct. That's correct. It's not even a 2D closing. No closing of gap at all. We're not driving through a phase transition. I've just written down a new Hamiltonian with some defect. I'm not doing some adiabatic thing. One more of the flux that comes out of the M? Can it go either up or down? And it could zigzag, look, go up, then down, then up. That's allowed. No, no, I mean the M has a flux pointing out, but it could go up. A flux pointing out, but it could go up. Oh, it could have gone down instead of going up. That's also allowed. No, the flux string, it has to, if it ends, it has to end on an M particle, on a 2D defect. You're saying you are able to modify the Hamiltonian such that that happens? Such that this happens, I can modify the Hamiltonian. Did you could you could you also say that so you have these three excitations, E prime, E and E prime and M M and loop. So is that can those disappear? So if I have this triple, they can disappear. And the same with the loop and the two M's? Yeah, if I have this pattern, that can also disappear. If I can create something locally, that means I can also annihilate it locally. If I bring these M's together, yeah, they can annihilate with the loop. The loop. The ground state degeneracy of this 3D torque code plus this 2D torque code layer. I forget. It modifies the ground state degeneracy in general. Yeah. So we're going to add a bunch of these 2D torque code layers, or these 2D defects, and we're going to reproduce and execute degeneracy, which would be different from just taking a 3D torque code and just adding a bunch of 2D torque codes. We'll have less degeneracy due to You'll have less degeneracy due to this strange rule. So you're lifting some sort of mantle of the mature state, or you're correct. You can't close the transition. Right, I'm not thinking about this as a transition, but I guess if you were to do a phase transition where you go from normal torque code to this fancy torque code, you would be changing the degeneracy. Well, but you have a Hammond done, right? So you have two, so you have two torque three torque codes, and actually having it done, this torso gives you this. So there's a manifold that degenerates. That that you could think about it that way, yeah. Good, okay. Um so now let's see where we get the fracton physics, and I think we've already almost answered that. So let's say we have one of these E prime particles, and we're gonna so we're gonna fill space with a grid of these two-dimensional defects. And just for reference, I've shown you, or I'm gonna keep what you can create locally right here. And you can also imagine there's a grid. And you can also imagine there's a grid coming out of the plate, but it's not too important. And so, what if we want to move this E' across a few layers? Well, the only way we can move it across a layer, we have to look at what we can do locally at a layer. And locally, we can create this triple of charges. So let's do that. We can create this triple of charges to annihilate this E prime with one that we make. So this E prime gets annihilated. And we give another one over here. It will leave behind an E over here. And we can keep doing that, make another triple. And we can keep doing that, make another triple and make another triple. And this lets us move an E' across a bunch of layers. What we've had to do is leave behind an E on all these layers that we passed through. And each of these E particles costs some energy. And so this basically is telling us that this E prime is linearly confined to its initial location. This is exactly the same as a fracton in the execute model. If you try and move a fracton in the execute model, you'll leave behind a bunch of other excitations. A bunch of other excitations, which behave exactly like these E particles. And so we can actually show, we can do an exact unitary transformation from this model, which I haven't really written down for you formally yet, to the X cubed model. And indeed, this E prime is the X cube fracton. Question? So if I take like planes in all directions, is this like the same thing as taking a 3D torrent code and adding some like line tension for the electric flux? A 3D torre code. The line tensions for electric flux that would usually just bind two fluxes together, right? Here we're kind of binding a flux to a location. But did I misunderstand? Well, like if I have a heat particle and I take it and I move it over here, it's like you're getting a constant energy per unit length of the distance you've separated, the distance, right? Because it's pitting all these plates, right? So can I think of that as just like adding some electric light? Electric l the line tension for the electric flux lines? That's how it kind of behaves if you just have a single isolated E prime. If you have multiple E primes, maybe it's harder to think that way. But yeah, it's a good way to think if you just have one of them. Any other questions about this? Good, cool. Sorry, we're going to start with maybe a Hamiltonian. Can we just get one single local E prime excitation? E prime excitation? You would need a non-local operator to create a single E prime excitation. So you should have another E prime somewhere else, is that? That's right, unless you have open boundaries or something. Cool. And so what if you have a pair of these E primes? So in the X cube model, we know a pair of fractons, this is a planon. It can move along a 2D plane. And we'll see the same thing here. So now we can move this pair of E primes across the layer. But now these two E's, they're on the same defect. They're on the same defect, and they can come together, and then they can annihilate each other. This lets us move this pair of E primes across these layers without leaving anything behind. Tell us what is that Google record is, right? Yes, exactly. So Dominic makes a very good point. So I've specified kind of what happens along the defect layer, but really I should be more formal than we are in our paper about what happens at the intersection. What happens at the intersection of multiple layers? And in this kind of construction, kind of the most simple thing happens. An E can go along the layer, and it kind of doesn't care if it passes through a layer. Does that answer your question? So yeah, an E can go across the layer. The layers kind of don't really see each other that much. They just see the 3D torque code. Can it hop from a vertical node to a horizontal network? No. No. That's a good question. Cool. So an E prime pair is the same as an x cubed planon. And what about the flux sector? So let's consider two of these pi fluxes along a layer. And I told you that they had to be connected by this 3D torque code flux string. And that basically means that these two M's, they can't really move far apart because that would cost a lot of energy because this entire string costs energy. But we can consider a different Energy. But we can consider a different excitation where we have a flux on two different layers. These two fluxes are connected by a flux string. And so this excitation, it ends up being the line on. Because you can imagine, you know, let's go to the 3D view now. This composite excitation, it can move along the intersection of these two layers, but it can't move up or down, because one of these EMs will be attached to one of these layers. Players. And so this basically lets us reproduce all the physics of this execute model just in terms of this 3D torque code with stacks of these defect layers. And then if you want to see a lattice model, what you can do, so before I wrote the 3D torque code on links of a cubic lattice, you could also, it's simpler to do the lattice model if you put the 3D torque code To do the lattice model, if you put the 3D torque code operators on the dual plaquettes of these links, so this star operator becomes this cube operator, and the plaquette operator of the 3D torque code looks like these plaqueller operators, and the 2D torque codes have cross and plaquette operators. And only really change is on these 2D torque code layers, we have some plaquette operator. You also add another X at the center of this square for a 3D torque code plaque. Okay. And for these propeller operators of the 3D torque code, whenever they intersect one of these layers, you add like one or two extra poly Z's for the 2D torque code. So we also have a nice commuting projector stabilizer model for this kind of defect construction. So it's very easy to understand theoretically. And so Dominic was getting at this. Kind of more generally, I was just talking about. Kind of more generally, I was just talking about these layers of defects, but really they kind of stratify space. So, just like we have zero cells, one cell, two cells, to kind of talk about how you can make some lattice, some tessellation of space. We then kind of split up, so these are like the little cells, these little black lines. We split up space using these layers, but I would call these layers two strata. And then where these two strata intersect, you get one strata, and where You get one strata, and where these one strata intersect, you get zero strata. And in order to do this defect construction more formally, which we do, which we're working on in our forthcoming paper, is you have to specify all these different local rules on all these different stratas. And I think, yeah, on Friday, Daniel Bomash will talk about how you can do something similar to get HaasB code. So my talk focused on how you can get the XQ. So my talk focused on how you can get the X cube using this defect construction, but it appears to be much more general. We can also get Haas B code using this construction. And we're also working on a non-abelian example of something we can get using this defect construction. So this kind of leads us to this conjecture. It seems like there's no obstruction to getting any kind of gapped fracton model from this TQFT with defects construction. So we're kind of proposing this conjecture that you can make. We're kind of proposing this conjecture that you can make any gap fractal model from TQFTs with defects. There are some, right now we don't know how to make cause A code, but it seems like maybe with just some more effort we could do this. But I think Daniel will talk more about this. So it's an interesting conjecture that we haven't proven yet. So future work will have to figure out whether or not this is true. So I think this is the first part of my talk. Are there any questions before I maybe? Are there any questions before I maybe move on to extra stuff? Do you know how much time I have left? Perfect. Cool. So in the remaining 10 minutes, I'd like to tell you about this older paper I did with Dave and Dominic. It's kind of more of a field theory version of basically the same construction. So we're going to try and go into the continuum limit where these defect layers are infinitesimally close to each other. Infinitesimally close to each other and get more of a continuum model. So, to kind of review, if you want to describe torque code in the continuum, you can use this so-called VF theory, which is basically Chern-Simon's theory with this K matrix here. And I'm going to generalize Z2 torque code to Zn. Doesn't really matter, it just means you get this N out in front. We call this Lagrangian BF theory because it's got this B field times F. B field times F, which is just, you know, curl of A. And I need to emphasize that B is not a magnetic field, it's just another gauge field. So in Troy and Simon's theory, you might just call this A1 and this A2. But kind of historically in the high energy literature, they call this B and this A. And to see that this is torque code, you can kind of expand this Lagrangian and the space-time components. And this first term tells you that A and B are conjugate, because you kind of have this B times del A. times del A, kind of like getting this Lagrangian harmonic oscillator. And then this term here is like a curl of A, and it's multiplied by a B naught, which is like a Lagrange multiplier, saying that the curl of A is zero, which is like saying you have no flux excitations in your ground state Hilbert space, which is how this Lagrangian works. It basically projects out all excitations using these Lagrange multipliers. And this last term is similar, it just says there's no flux. Is similar, just says there's no flux, no charge excitations. Good. And for 3D torque code, you also have some BF theory, which is pretty similar, except now that B has two indices. And so we'd like to come up with some sort of a foliated field theory description of this X cube defect construction. And by foliation, I mean we have some kind of stacking of layers. And we want to generalize now. We don't want to say these layers just have to be flat. Layers just have to be flat. We want to say, maybe what if these layers are curved? Can we really generalize to this case? And the trick is to use what we're calling this foliation field, E. So it's a one form. And the idea is if you integrate this one form along some line, it's kind of, we can think about this as like counting the number of layers you pass through. And so therefore, if you go along some closed loop, you get zero. And that basically just means that E has to be closed, or it just has to have. Be closed, or it just has to have no curl. So that's a constraint that you have to impose upon this one form, unless you want to have some dislocations or torsion in your model. But we're going to not do that for now. Question? So is E prescribed or is it a dynamical field? It's static, it's prescribed. It's prescribed. It'd be interesting to make it dynamical, but I don't know how to do that. It defines your model. That's right. It's kind of like a metric, like a static metric. It's like that. Like the G mu nu. We keep it static. We keep it static. You also have no canonical choice, right? No canonical choice? There are so many wall forms. You cannot say which one's better, which one's not. You just pick one. I don't think we have the gauge redundancy you usually have for like a tetrad. You want to choose a wall full. There are many choices. So you just pick one. Oh, yeah. I guess it depends on your foliation structure. The foliation structure defines what E is. What E is. I don't have even that uniquely determined. Oh, and we should discuss. I don't know what you mean. Well, you have no metrics, so you want to find some kernel. The kernel, you can add also. Oh, yes, you're right. The whole theory will be diffeomorphism invariant. So yeah, there is some coordinate invariance. You're right. Okay, good. And so to describe the X cube model, we'll need three stacks of layers. So we'll need three different sets of this one form. So we'll index it with this index K, which will be 1, 2, or 2. This index k, which will be 1, 2, or 3. Sorry about the dot, dot, dot. More generally, k can go up to anything, but three will be the example for x cube. And if you want flat space, you can just take e to be the delta function. Okay, good. So the Lagrangian, it'll be very simple to this defect construction. So remember it had this 3D torque code with these layers, which look like 2D torrent code. Which look like 2D torque code. And so now I'll have this 3D BF theory, which is here. I'll have stacks of 2 plus 1D BF theories, which is this first term. So just this B del A is like a 2D BF theory. And I put it next to this 1-form E, which kind of says that the 2D BF theory has to be perpendicular to the 1-form E, and this 1-form E points perpendicular to this layer. So this first term gives you this kind of stack of 2D torque codes. 2D torque codes. But remember, I had this kind of strange what I could create locally. It was kind of very strange. And what does that is this third term, which kind of couples the 2D and 3D torque codes together. So this is the Lagrangian that I claim gives you this kind of defect construction of the execute model. And I gotta admit, one open problem is how to kind of quantize this end. It turns out, actually, I just learned this Friday that Natty Seiberg and his postdoc And his postdoc, Shuhang, figured out how to quantize an older version of field theory for the X-cube model. So, several years ago with Youngbeck, we wrote down this Lagrange for the X-cube model. I don't find it as pretty as this one, but it turns out that it's easier to quantize, and these physicists figured out how to do that. But I'm hoping we can also figure out how to quantize this. And by quantize, I mean kind of using formal, kind of high-energy-style field theory arguments to argue. Field theory arguments to argue why this n has to be quantized. Good. And then we can also, so if you want to understand the mobility constraints in this gauge field, what you can do is couple the Lagrangian to some currents. So you couple the A to a big J and so on. And then you ask that these couplings are gauge invariant. So you have some gauge transformations and you want these things to be gauge invariant. What typically happens for gauge theories is you just have some Theories is just have some conservation like this, del mu, jμ is zero, claiming that some fractal number is conserved. But then we also get other constraints here. So this constraint says that this J has no current along this foliation field, which is telling you that this E particle is a plan. It can only move along the 2D layer. And then you also have a constraint like this, telling you that the divergence of big J, which is describing these E particles, these platons, this divergence has. This divergence has to be equal to little j, the fracton current, which is to say fractons can only move if you create or destroy planons, which is exactly the same in the X cube model. You can only move this E prime across the layer if you create or destroy one of these E's. And we could talk about the magnetic sector too, but I'll skip that. Any questions about this? So E is like a weird singular thing that we're going to do. Weird, like, singular thing that, like, jumps and steps in other steps as you maneuver after. Oh, this thing. Yeah. You could do that, or you could take it more of a continuum of perspective and just make it, like think of the layers being infinitesimally close. And then, so it's just like a, you just make it constant. And then it's like you have an infinitesimally close number of layers. But actually, this gets close to the quantization issue. Kind of figuring out how to quantize. Kind of figuring out how to quantize E is very different from quantizing field theories we've looked at before, and that's kind of what makes quantizing this theory hard. So, this is really kind of an open problem. Not sure what the best way to treat it. I think maybe Jubin has done some work kind of or thought about this a little bit too. I want to talk to him some more about this. Can I? I don't understand, like I'd say, look at the second condition. In flat space, VK mu is a conic of delta. Yeah. Yeah. So that's saying J can't have any components in a certain direction. Exactly. Good. And then we've also generalized this a little bit with Wilbur and Shea. We had a paper about twisted fractal models. And we could also do all these kind of constructions in this twisted fractal models too. So here you get multiple 3. you get multiple 3D torque codes and the 2D torque code ended up being some Z4 torque code. And you also get these local rules that you can describe some twisted fractal models with. And then the field theory is similar. You get 4D or a BF theory with n equals 4 and a couple 3D torque codes and a different kind of coupling between them. Good. So I'd just like to conclude with I'd just like to conclude with what I said and some open problems. So, most of my talk focused on how to create this XQ model using this TQFT defect construction, kind of a proof of principle that fractal models can be thought of as a TQFT with these defects between them. And then on Friday, Danny will talk about how to make cos B code. In our paper, we'll discuss a pretty interesting non-abelian example where the fractons. Where the fractons themselves are not abelian particles carrying some degeneracy. And these examples lead us to conjecture that all gap fractal models admit this kind of defect construction. But we still need to prove this conjecture and maybe a first step. We'd also like to check that you can make cause A code. It's another proof of principle. My speculation is that you can, but I'm not certain. And another hope is that. And another hope is that this is useful for classifying fractal models, similar to how defects are useful for classifying crystalline SPTs. That's also not clear. Maybe we have to think about some sort of defect consistency conditions. But yeah, there's lots of work to do, and I think it's interesting. Thank you. Are there no other questions? Not the same language. Not the same language. But not the relation. Way relation. This is a excuse example this is a string membrane net. But the class B code is something like that. Um no, it's different than what we're calling a string membrane net, but you can kind of think about that way. Like the string membrane net, we're kind of thinking about it as like, you know, the Leven Webb string nets. And so you could think about how to decode that way. Could think about HOSP code that way. There are some strings and membranes, so strings along the 2D defects and membranes in the 3D bulks, which we call three stratas. So it's kind of, we should call it a string membrane net, I suppose, to kind of generalize the string nets. You would agree with that, right, Dave? Definitely. Yeah. Yeah. All right. So it's similar. So it's similarly pictures modulations. For Haspico you also have three published colour together with 2D ones and then all the options is trying has to the difference with the string net is that it's not just a translation invariant, right? You have to express these special surfaces where you have special rules. Where you have special rules. Yeah, you have these stratas and you put different rules in the stratus. So you had some more information. Module categories on the defaults. Telling us, what do you have? What do you need in order to make the big one? That'll be Danny's talk on Friday. You can ask him, I guess, any time. But we'll have like But we'll have like a 3D torque code and we'll put some two stratos. Two copies of 3D torque code. Oh, two copies, yes, I'm sorry. Uh-huh. And the letters? Mostly have used a different language than that using a stratification picture. So we're asking for a movie trailer. It'll be very exciting. So I wonder, try to disprove your conjecture, but I wonder if there's an absolute upper bound of how fast the degeneracy can go if you have a gap diffractile model. So what I mean is that if you think about your defects with the GKF, there's an obvious calculator how fast you can go. It's the quantum experimental linear size? Yeah, it's experimental with some quantum. Size? Yeah, it's expensive to some quantum dimension to the size of whatever something, right? So somebody can come up with a model which goes much faster than that. Isn't that not supposed to be possible? Yeah, that's what I was asking. Anybody can prove, you know, like a fragile model has basically a single exponential growth of degeneracy. You mean a model that goes like E or like 2 to the L squared? Yeah, something like that. Square? Yeah, something like that. Did you put it hard for stabilizing shock button? Yeah, for stabilizing, yes. It is. Well, they are not the one that specializes, right? Stabilizer, right? There is a... Well, I would put to say in this in this short period of time, but there is an argument I can take later. Basically the the ver the very fact that brown space is unabsorbable by local operators Are unobservable by local operators. The smallest operator you end up with is certain co-dimension. And the jurisdiction comes from the connotations of that, you know, so some representation of that codimension, sufficiently high codimension operator. And then you end up with codimension two thing. The frequency case which results in the single expansion operator. That's consistent with case. That's typical argument, it had a neutrophil argument gave you a bar. Anyway, you seem to be agreeing. So with that, happy ending. Maybe we should close the sessions. I'd like to thank the Karen for the last time. So John I So do I have to go with something?