It's been really great. I haven't been to Banff in a while, and so it's just been really nice to be here and experience some great math and some great natures as well. So yeah, so I'm going to try to keep this talk fairly grounded in some sense with try to explain. I want to explain all the different names in the title or words in the title and put it on what I would consider. Put it on what I would consider a more kind of classical footing, I guess. But at the end, we'll go through a end. So we're going to start with just reminding you kind of what a hop action is, basically. And then also remind you what the definition of the quantum double is if you haven't seen it before. And then give us kind of an alternative way. Give us kind of an alternative way of thinking of modules over the quantum double, which will kind of help us to perform the analysis that we're going to do at the end. And then we're going to work through an example of the quaternion group. And just to be upfront, these examples are pretty big. So the slides at the end, I'm just warning you now. But we have done more calculations and more examples of this, but we haven't really found kind of what we consider the general pattern yet. But we have some kind of interesting kind of preliminary results which are promising. So anyway, so let's get started. So let me just set the general stage. So we're going to let H be a finite-dimensional hop algebra over a field K. And the main question is: given a hop algebra H, find nice algebras on which Nice algebras on which H acts homogeneously and interfaithfully. And then, you know, once we've done that, try to study properties of the invariant sub-algebra. Okay, and so you can take this, you know, this is a very broad question the way it's stated. So what we're going to focus on is whenever H is semi-simple, and we're only going to consider the quadratic AS regular algebra instead of acts on. So you could perform these analyses on other algebras, but Other algebras, but we're looking for kind of analogs of classical representation theory of groups, or not classical representation theory, invariant theory of groups acting on kind of the commutative polynomial array, but in the non-commutative setting. And so we're focusing on the quadratic things first. It's already kind of messy enough there. So I'll mention kind of what you would have to do if you wanted to handle higher relations. Anyway, so. Relations. Anyway, so what do we mean by an action, first of all? So we just mean that H acts on. So we mean that A is an H co-module algebra. So H acts on A in an associative way, and it acts. On A in an associative way, and it acts. And by the way, I'm acting on the oh shoot. Oh, starting it. I totally speed up it. I meant it, I was trying to do right actions for everything, and then I promptly just messed it up in the very first equation. So these should be flipped around. I want the hop actions. I'm thinking of them on the right side. So this should be, but the way that H acts on our product is you use the co-product to split H into the two factors A and B and then add up all the different ways to do that. So and the invariant sub-algese. And the invariant subalgebra is just the elements of A that kind of behave like the trivial representation of the hop algebra, namely, whenever you act with H, you pick up a factor coming from the co-unit of H. Okay, so this is what we mean by a hop action, and these are the invariants. And so we are going to typically also assume that our algebra A is generated in degree one, so that the degree one component of A is an H module, and that. Of A is an H module, and that, and because it's an H co-module algebra, that determines the action on the entire algebra, right? Because you can just pick it apart using the co-product. So part of the motivating question, I have this word interfaithfully here, so I want to just explain that real quick. And so it's just an interfaithful H module is just an H module that's not annihilated by a non-trivial hop idea. Okay, so I don't want. idea. So I don't want a module that is secretly a kind of faithful module over a quotient hop algebra. And in the semi-simple case, these are easy to, well not maybe easy, but this theorem helps a lot to identify those things. And you just essentially take tensor powers of your representation v, and if every symbol shows up in some tensor power of Up in some tensor power of the initial representation, then that is an interfaithful H functional. So this is similar to what Van was talking about when she did the Mackay matrix or the Mackay quiver. It's in some sense saying that the Mackay quiver corresponding to V is connected, basically. You can start at the sum and of V and then move out by tensoring and you can get to everything. Thing. So there's kind of a combinatorial flavor to this as well. Anyway, so we're looking for these types of things. And just to give you a couple of easy examples that you probably are familiar with, if I have a group algebra, then the invariants are the usual original invariants and interfaithful actions are just the faithful ones. And for the dual group of the group algebra, the homogeneous action is just saying that there's another grading on G. Saying that there's another grading on G, or sorry, another grading on A that is a G grading that's compatible with the N grading. And then the interfaithful condition, if you kind of track through it, it just says that the grades of the elements in degree one generate the group. Okay, so that's what the interfaithful condition is saying for the dual of the group algebra. And so both of these are, you know, I mean, the kind of the point of The kind of the point of doing this for hop algebras is to leave this realm of just these kinds of things, right? So, so the kind of, but the, if you want to stay pretty grounded, you can just go to the double. So it's not too, you know, you're still doing like things with groups. I mean, you could do this construction for arbitrary hop algebra, right? But we're going to stick with this one. So the double of a group is defined to be the smash product of the The smash product of the dual group algebra with the group algebra, where you let G act on the dual by this kind of, it's like you're letting x act on, I'm sorry, you're letting G act on the input of F by conjugation first, right? So, and another way of writing this is just if I suppress the hash sign here, then I take the dual element for a group, the dual map for a group element. The dual map for a group element A times G, and then another one for B and H. And you just push phi B past G by conjugating what it's a dual of. And the product on this is really simple. So this is only non-zero whenever the two such groups match. So this gives us a way to kind of explore some interesting behavior for Hop algebras, but not leave the realm of. But not leave the realm of your classical representation theory. Okay, so all right, so the problem though is that we still would have to understand kind of, or actually before I do that, I want to get to the DG modules in a second, but what would the invariance look like for such an action? So we kind of have a, there's a, you know, inside of DG, there's the, the dual group algebra is a subalgebra, as is the group algebra. So you can kind of restrict the action to those. You can kind of restrict the action to those. And so you have kind of a group grading and a group action, and they're compatible. And I'll explain what I mean by compatible in a second. But what's actually kind of nice when you're trying to do computations with invariance is that you can kind of express the invariance of this hop action in terms of kind of usual invariant stuff. So the first statement is that if I take the identity component under this group grading that comes from the group action, it actually also carries a G action. It actually also carries a G action. So you can trace through and so trace through that. And while the opposite is not quite true, but if I take the G invariance first, it's not G graded, but the identity component of an invariant is an invariant again. So you can break these up into their G degrees. And what's basically true is that if you take the sum of the things corresponding to a conjugacy class, The things corresponding to a conjugacy class, that would be invariant. And so, since the identity is its own conjugacy class, you get another g-invariant. And so, you can compute the invariance into this hop action by first computing the identity component of the algebra and then taking invariance of that. And so, it's kind of like if you're familiar with doing like either non-communitive invariant theory when you're acting with a group and then also with identity components, it's kind of we're mixing both worlds, right? We're kind of doing one. Mixing both worlds, right? We're kind of doing one and then the other. Okay, so anyway, so that's kind of fun. So, but we're looking for these interfacial actions, so in order to do that, we need to understand the representation theory of the double. And so, luckily, this has been studied extensively. And Sarah Witherspoon, in a very nice paper, kind of gave us another way of thinking about the modules over the dual. The modules over the dual, or sorry, over the double, and what are called G-equivariant vector bundles on G. So basically, that's just a fancy word for, or fancy way of saying, for every group element, I have a vector space. And then, so in other words, one way to think about it is just a G-graded vector space, V. And this V is a G representation where it takes something of group grade A to something of group grade A conjugate of. Group grade A conjugated by the G, whenever I act by a G. So you move around the components, so you act, but you also move through another component, right? Whenever I act with the G. So it's kind of this interesting way of unifying a grading and a group action together. Is this the same thing as the other group build modules? Like get a group build modules? I believe. I think that it's the same category. Yeah, yeah, yeah. Bunch of different things. Yeah, it was all bunch of things. Yeah, right. Yeah, I actually. Right. Yeah, I actually want to learn that stuff a bit better. I don't know much about that. Okay, so anyway, so we can look at, so in other words, like if I'm trying to find an algebra that this quantum double acts on, you're really looking for, you know, you want a G-grading and a G-action such that the grades and the actions kind of play nice together. Kind of play nice together. Okay? All right. So, but I wanted to explain a little bit more about what are the irreducible. So, if you want to play this game of trying to find interfaithful representations, you need to know a lot about the representation theory because you have to do explicit decompositions and stuff. And so, what are the simple representations of the double? And they're actually very easy to describe. They're indexed by, so you take a complete list of representatives of the. list of representatives of the conjugacy classes of G, and then you take a simple module over the centralizer of that conjugacy class. Okay, so or I guess you're taking a simple module over the centralizer of this element. You want to be explicit, right? I mean they're all isomorphic for all the elements that are in a given conjugacy class, so it doesn't, like the group doesn't matter. But in what we're going to do, when we write down like actual basis of this, you want to be explicit so that you choose an element, an actual representation. An element, an actual representative, so that you have the actual centralizer in your hand so that you can choose a transversal of that centralizer whenever you're working through things. But anyway, and the correspondence between this set and a simple module is you just induce up. You just take the representation and you tensor over the group algebra of the centralizer up to the Of the centralizer up to the group algebra of the group. And we're acting on the right. And so this is, but that's, so this is what you do. And the group grade of one of these things, so if I take V tensor G, I mean, this is supposed to be a G graded vector space, right? So I mean, it's clearly a vector space, but the group grade of V tensor G is you take the conjugacy, so these are representatives of the conjugacy class, and so then you just conjugate that representative by G. So Represented by G. So this is going to be something else in one of the other conjugacy classes. So this G representation is kind of concentrated in degrees corresponding to the conjugacy class of the thing you chose, which kind of makes sense. If it's supposed to be, if the G modules, this is this G graded vector space, and the action takes you from a vector space to one of its other conjugates, it makes sense that the symbol should live on one of the conjugacy classes. Once I know what its behavior is on one element of the conjugacy class, On one element of the conjugacy class, I should be able to figure out what it does on all the other ones. So that's the idea. And what's nice is that it worked out. And it's easy to just compute what the dimension of this is. It's just the dimension of d times the index. And if you want to make this explicit, you have to choose a right transversal of gi in g, and then you can actually work with actual elements. But in order to do these computations, you need to. In order to do these computations, you need to know how to, if I have an element that's of the form transversal element times g, right, that's going to be in one of the other right cosets. So I have to turn it around and then I have to do that explicitly and figure out what works. Like what is the other element in that other order? I'm not going to show you those calculations. But I will tell you the results of them, I guess. I guess. Anyway, those are actually Ellen and Tolu are having the ones that do those computations, not me. All right, so anyway, so here's our example. So our example that we're going to look at is Q8. So I'm going to think of Q8 this way. So it's not your usual like IJK plus or minus one type thing, but R is that you should think of R as I, and then S is J, and then SR is K. And then SR is K. So these are: you have the center, so the identity and then R squared are the central elements, so the centralizers are the whole group, and so their transversal is boring. And then you have I, J, and K, and plus or minus I, plus or minus J, plus or minus K are the other conjugacy classes. And so their centralizers are also kind of obvious. These are cyclic groups of order four, right? And so they have, I guess I skipped this part, these are the representations of Q8. These are the representations of Q8. So there's four one-dimensionals and then one two-dimensional. And then these are the four characters of the cyclic group C4. And so the subscript just tells you which power of I it sends the generator to, right? So alpha one will send R to I, alpha two will send R to minus one, et cetera. And the one-dimensionals for The one-dimensionals for Q8 are just the ones that you get whenever you mod out by the order four subgroups, you know, i, j, and k. That gives you a map from q8 to z mod 2z, which will, in turn, give you a character, right? And so those are the four maps you get there. And so in particular, there's 22 representations that are on this list, right? I've got 10, I've got 5 coming from the identity, 5 coming from minus 1, and 4 each of the other. And for each of the other three. And so I'm going to call them v sub 0 to v sub 21. Okay, so I'm not expecting you to keep track exactly of which one is which, of course. But I just want to show you one example. Or I guess before we do that, we have a theorem which tells us which of these are interfaithful. What are the kind of the smallest interfaithful representations of DG that we could deal with? And so as I said, it's about kind of And as I said, it's about connectivity of this Mackay graph or Mackay quiver, right? And so it turns out that if you take one of these representations that only has one or two distinct simple sum and then those are never interfaithful, okay? And so it's clear that you can't do it with one. Because if I only start with one and start tensoring it together, then none of those conjugacy classes generate Q8. And you certainly need, in order to be interfaithful, you need at least the conjugacy class. Interfaithful, you need at least the conjugacy classes of the things you're choosing to generate. Because those are the only group grades you're going to be able to get whenever I start tensoring things together. What's a little more surprising is I can't do it with two still. Like I can't take one of the ones from I and one of the ones from J, tensor those together. Those will give me the right group grades, but it doesn't give me all of the representations corresponding to those group grades. So that kind of was a little surprising to us. But then we also have a list of the ones that work for when there's three summands. Work for when there's three subants. So you can choose the first two to be from any one of these distinct non-singleton conjugacy classes you like. So you can choose the first two to be any one of these as long as they're from different lists. Okay, so those are the first two you choose. And then the last one you can pick. You either have to choose the two-dimensionals from the central elements or certain other ones from the bottom. Certain other ones from the bottom three lists. Okay, and you get you can pick kind of one of six choices. There's some double counting in there that you have to watch out for if you want to count how many there actually are, but there's 224 examples. Okay, so now if you've seen some of our recent papers about this kind of stuff, we did it like we were completists and did every one of them, right? I don't think that's going to happen with this example, obviously. What we're hoping to do is find some interesting classes of these examples that we have some kind of family of things active. That we have some kind of family of things acting, but we're still working on that. Only when I know who could do this sufficiently now, I don't think the rest of us are screwed. Well, yeah, but it's like what's interesting is they combine in really subtle ways. So I want to explain how you can get an AS regular algebra. It's not completely obvious how you actually given one of these fine interesting examples. Because it's easy to just make a kind of naive choice and then it doesn't work out. Choice and then it doesn't work out. So, okay, so let's just do it. Look at an example. So, this is we're gonna look at v17, v20, v21. So, if I go back up here, that is, let's see, so this is 10, or that's 9, 10, 11, 12, 13, 14, 15, 16, 17. So, it's one of these, and then two from here. Okay, it's the last one. If I sorted it lexicographically, it was the last one of the lists. So, we just thought, hey, we'll try that one. Okay, so we've done a couple. We've done a couple of a few others in this list. It's 224 things, but this is the one I wanted to explain. So, if I wanted to find a quadratic AS regular algebra that works, this is six-dimensional, right? Because each one of these was two-dimensional because they were one-dimensional representations and the index was two. So we're looking for a GK6 AS regular algebra. Okay, so you have to impose 15 quadratic relations in order to get this to work. Okay, so we have to find a 15-dimensional sub-model. So we have to find a 15-dimensional submodule of V tensor V, which is 36-dimensional. But it's actually really easy to find what representations will show up using, there's a couple of ways of doing this. There's a nice paper on what's called the S-matrix. So this is like modular data associated to the kind of the hop algebra in the paper of Costagena and Ruel that kind of gives you how to decompose these. But you could also use Witherspoon's character theory for almost community. Character theory for almost commutative algebras, which is kind of an amalgam of both of those. I actually used GAP to compute the S matrix and then turn the S matrix into the Witherspoon's matrix. And I had code already to do that in Witherspoon's case. So these are the decompositions. And what you really want to do, I mean, this is not enough, right? You need the actual decompositions, because we need the actual decomposition. The actual decompositions, because we need the actual relations. So here's the bad slide. So this is the actual, it's kind of hard to see, but these are all of this is the decomposition of every one of these into kind of irreducible sub-representations. And so some of these are pretty easy. Like this column here, they're just like sums of differences of commutator kind of relations and sums of squares. The ones that are harder to find are these guys where they're D17, D20, I guess if I go. D17, D20. I guess if I go back here, make it. Oh, no, that was. Okay, so these, you can see these are, this is a four-dimensional representation. It decomposes as two, you know, two two-dimensional representations, right? So you have to find kind of what those two-dimensional representations are. And they look kind of like OR-type relations, right? It's like you see a x2y1 minus ix1y2, right? Somewhere in there, right? So it turns So it turns out that these guys, these four, are kind of nasty, and these are not too bad. So these, if you look carefully at them, they are basically just like skew polynomial relations between the y's and z's. And then these guys are double OR relations with X's on the Y's and Z's. So it's like the algebra we're going to get at the end is a skew polynomial ring in Y's and Z's. And then And then with a double order extension on x1 and x2. Okay, so but how do you actually see that? Because if you try to write down the relations, they don't look like they're an H module. It doesn't look like it's closed. So what you do is you take one of the relations in that list. So this is like one of the generators of one of the copies of V11. You multiply it by some parameter times the first entry in the other V11. And so you're kind of picking out interesting ways of combining the two V11s that exist, right? 11s that exist, right? Because V11 shows up at in so right, this is an almost commutative algebra, so the representation ring is commutative. So V17 tensor V20 is isomorphic to V20 tensor V17. So there's two copies of V11 from both orders, and you mix them in an interesting way. And you can put some parameters in there to get like a whole family of examples. And these relations look horrible, right? You don't want to impose these relations. But if you add and subtract them in an interesting way, But if you add and subtract them in an interesting way, if I take these two left-hand sides and add them, you can see that these two guys cancel. Ix1, Y2, and Ix1, Y2, they cancel. So this is X2, Y1 minus BY1, X1, because these guys will cancel too. So if I add them, I get a binomial relation, and if I subtract them, I'll get a different binomial relation. And so that's what they look like now, so they're not too bad. And that's a double word extension of skew polynomial ring. Okay, so, but this is the kind of analysis that you have to do, and it's not. Of analysis that you have to do, and it's not. This is the type that I was saying, it's not clear. You have to take some kind of linear combination of the two copies, because if you just take one of the copies, you don't get something that's a surrender. You have to kind of mix them. So anyway, so that's the end of the example. And I think I'm going to stop there, because I've subjected you to enough state taking time to questions by meeting. Yes. Yes. So, Frank, I think I got a little confused. Earlier you were saying you were getting a six-dimensional gas regular algebra, but then at the end, you ended up with four-dimensional ones. Well, it's a skew polynomial ring. It's like the base of the ring. And then I do a double OR on that. So the X1 and the X2 are like the double OR variables. So it's not, you have to. I missed the double OR extension. Yeah, yeah. Double O extension. Yeah, yeah. So, and it's actually a really nice double O extension. There's no derivation, there's no, and it's almost all of the relevant parts of those crazy formulas in the Zhang Zhang paper go away, and it's really, it's really simple to check. So it's a very, it's a quite tame double-door extension for this example. I see. And so, what about like, I'm sorry, I must say a second question, other people. So, so you got up to six. Yes, regular, right? Six is regular, right? What about five and four? So, um, all of the um all of these representations, so all of the simples, oh, oh shoot, I just crystal back up. Okay, here we go. So, all of these simple representations, these guys are all dimension one, and uh, and they don't help you generate, basically. They don't really help you generate the, they don't help you be interfaithful. So, I don't, I can't really. So, I can't really use these to get interfaithful things. So, I'm stuck using only two-dimensional things. So, I can't use, that's why I don't want to consider five. Because, in some sense, I mean, it would be interfaithful, but only because of some sum and of it. And so we weren't considering those examples. Yeah, but four, there weren't any. Like, because we said if there's two simples, if there's only two simples, then it's not unfaithful. Yeah, I see, I see. So it would be from some quotient out. So it would be from some quotient top algebra of the dull. Any other questions? I have a question. Could you talk more about, you said you had mixed relations? You had to take like two algebra. Yeah, so what we're doing is we're taking, so V17 times or V20 has this decomposition, and V20 times or V17 has this decomposition. So if I just take, and I have to take two relations, basically, from numerics, I have to take two relations from this, like a two-dimensional subspace. This, like a two-dimensional subspace of this thing. And if I just take like these two, like both of these copies, that ends up to, sorry, it has to have four relations. There's eight total, right? Eight-dimensional space, and I need to take four dimensions worth of stuff there. If I take these, then you don't get an AS regular algebra. But what we do instead is take like this guy plus a multiple of this, and then take this one and the same multiple of this one. And that will be a copy of V11 sitting inside of the direct sum of. V11 sitting inside of the direct sum of both of those. And so that's what I mean by the kind of mixed relations. Like you're having to find a copy of V11 that's spread out in the direct sum of both of these. It doesn't live in either one individually. At first, when you set mix volations, it sort of rank a bell because when you take the three-filled double, you have a copy of KG, and you have a copy of KG Goul, and you have volations for them both. And you need mixed relations to fill. Yeah, and you need mixed relations to fill out the rest of the presentation. So I'm wondering, like, is there a way you can see what G acts on and what G co-acts on and they give you relations? And somehow your mixed relations are dream felt double-giving precise infantry relations. Yeah, that's interesting. Or maybe that would explain why I have to spread them out across both and not just take on one side or another. Yeah, we don't really know why just taking this doesn't. Why, like, just taking this doesn't give you the answer. Like, it just seems that this other one worked. So, um, I have a question. Oh, I forgot one line. I'm sorry. Have you computed all the texture for that of simple modules? Yeah, we have. Well, this is the one I Well, this is the one I we've we have the so I have some some code that will basically compute a you have the the representation ring of actually any group. If you give it a group that GAP can handle, it can take, it'll build the S matrix on that side, bring it back over to Macaulay, and then have the representation ring there. So you can then just work with. So you can then just work in that ring and then compute that. But you can't, we don't have code yet to do the full, to do all of these kind of by. So in order to do that, you would need the item codence, which is not hard to do either, but it is kind of painful. I think it's possible to find this generators if you look at these decommunication rules. This is a funny generator commute. This is a finite generator comput with the if you look at those decompetition rules maybe compliance with the generators, and then perhaps the competitor can compute in terms of generators. Yeah, we would like a more like um automated approach to finding things. Um that would be great. So we're something else we're working on. Yeah. What's possible with this scenario? Well it's possible this is uh thanks. Any other questions? Okay, let's spend friend again. Okay, I just said to the online people, oh, you can hit the button. Please don't do anywhere, but I mean 