Of questions. We will hear Gusheng Pu, sorry for the pronunciation if it's not correct. Is it correct? And about HDD methods for diffusion problems. Please. Thank you. So I would like to thank the organizers for the invitation. And I'm sorry, I cannot. And I'm sorry I cannot be here in Oxaca, Mexico. And maybe I need to apologize more that I work mainly on final methods. I've never worked on Champs methods. I have friends who work on Champs methods, but I don't have any publication related to that. So this talk might be the most, I think, might be the most relevant to. The most relevant to most close one to Chef's method where we work on HDG method for diffusion problems. And our key is to construct superconvergent HDG methods where we play around with the basis functions. And it's a joint work with my future devicer, Bernardo Corburn, and the late Javier Sayers. So So, this is the problem we are interested in. We will be working on diffusion equations in mixed formulation. And here, we are interested in discretizing the problem on polygonal meshes. And then, to construct a DG method, the HDG method will The HDG method, we need to look for finite element spaces for three fields. One is the flux, which is a Q is a flux variable. We need a vector space for the Q. And U is a scalar. We need scalar finite spaces for U. And because we are working on HDG method, this hybrid space, we call it M, which is the space we use for U hat. So, it's a method that has local DG spaces in the element and a hybrid space on the mesh skeleton. Then we work on the weak formulation, do integration by parts. You have this variational form. Here, U hat is the unknown, the hybrid on-known, and this Q hat we call it the numerical flux. It's a defined. It's defined like this, it's a linear form. And then you have the third equation in force continuity of this q-hat. And this method can be implemented efficiently using standard condensation. You will have local servers and you have a global server. And in the end, you will be solving for a global. In the end, you will be solving for a global linear system for your hat only. And so, let's implement this method. And this is what we have. This method called LDGH. It's a hybrid version of the so-called local discontinuous gallery method, which use just polynomial space of degree k for all the variables and take the tau is the stability. The tau is the stabilizing parameter and take it to be a constant greater than zero. And this method is stable on different any general meshes. We can deal with triangle meshes, quadratal meshes, or polygonal meshes. So in 2000, this analysis of DG type methods for diffusion by these authors. By these authors, and they use L2 projections to do the analysis. And for the HDG method, we can use the same approach to do this analysis based on L2 projections. And then you derive these error equations and you end up with the energy identity. Look at that. Here this on the left is the energy of the projection arrow. EQ, EU, and EU hat are projection arrows. And U hat are projection arrows. And these pi's and p, they are just L2 projections. If you use these L2 projections on the left, you have the energy. You can control the projection arrow by the interpolation arrow. This data are the interpolations in the volume and on the boundary. So that's this energy identity. And then using that, we can apply Cauchy-Schwatz inequalities to end up with. To end up with some error estimates, look at that. So you get the L2 error of the flux Q is bounded by the interpolation error plus the two red terms. These two red terms come out from the boundary integration. And then you end up with, you can see that if you choose different choices for taus. Choose different choices for tau's, you cannot recover optimal convergence for the flux. The flux rates at most is k plus a half. The optimal rate convergence should be k plus one. And then we implement this method on both triangle mesh and the quadrature mesh. So we'll see what's going on with our numerics. On the right is a quadrature mesh. Quadratal mesh, we do see that the flux converges not optimally. Like in the when twice equal to one, it's roughly 1.5. When twice h it's roughly 1. So this is consistent with that L2 projection analysis. But on the left, we see when we work with triangular matrix, we see the flux converges in the optimal rate. Here par number degree k is equal to 1. Here polynomial degree k is equal to one. So the HDD method on triangular matrix they get optimal convergence. And I think the HD method was originally developed long time ago, around 2010. And at that time, the optimal conversion rate for the flux was a big thing in the DG community. Community. The usual DG method, they always get suboptimal for convergence. And then we need to understand why on triangular meshes performs better than quadrator meshes. Here, I should say that both methods, they use polynomial space, the degree k. On quad mesh, I still use pK space. So this analysis paper by Bernardo J. and Javia in 2010, they they explain the superior behavior on triangular meshes and also on tetradium meshes by showing that if your mesh if your elements are synclicists then you can design a tailored projection called the hdg projection such that when you do the energy analysis the the boundary terms will be uh cancelled. Terms will be cancelled. So basically, if you look at a third equation in the HDG projection, it said that your pi V and pi W, the projection for the flux and the scalar, they need to be linked together through the stabilizing parameter tau. And if you can do that, then this troublesome boundary terms can be cancelled out. If you cancel out that, then we can. We can have optimal convergence, and you can also get superconvergence for the post-processing of the flux. Basically, the projection error for the flux is bounded by the interpolation error, which is optimal. And because flux is optimal convergent, then additionally, if you can show that the average of your scalar has the superconvergent property. Your scalar has the superconvergent property, which works when you have four elliptic regularity, then you can pick up one order of convergence. And then we see that here is the same test. We worked on the triangular mesh, quadratic mesh, and the polygonal meshes. And we checked the rate of convergence for the post-processing. The series said that on triangle, And the series said that on triangles, it's a pseudo-developed convergence, and then on this quadratic and polygonal matrix, we don't see this superconvergence. It converges slightly better. In theory, we can only prove it converges with rate two, but in practice, it's slightly better. So that's a starting point of our study. Our study, this is mainly my PhD work. How do we construct spaces? How do we enrich these PK spaces on these general meshes such that you can recover the superconvergence? I want to guess three here. And here's some literature related. Basically, the Basically, the 2010 paper by Bernardo, Jay, and Javier, they say that if you have that HTT projection, then you do not have the flux terms on the boundary in your energy equality, then you have superconvergence. And it turns out that this, in order to satisfy conditions for this HDD projection, Projection, we need to work a little bit more careful on the finance basis that we choose. And then in 2012, this paper showing that if you can find these spaces, if they satisfy some sufficient conditions, which are not that easy to verify, but if you can verify these conditions, then you do have this projection and then you do have convergence, superconvergence. Superconvergence. And then in 2016, what we came up with is another set of conditions that will verify that sufficient conditions for HDD projection. So this we call it empty compilations. I'll show you what that means in the next slide. And then we say that we have a recipe to show you that if the chosen finite spaces do not satisfy Finite spaces do not satisfy empty compositions, we may be able to enrich the spaces. You add in more basis functions so that you can recover empty compositions. And this approach can also be used to generate divergence conforming finite spaces on general polygonal polyhedral meshes. And yeah, this definition of that decomposition. Definition of that decomposition. It's very abstract. Basically, it's a set of conditions that your spaces VWN need to satisfy. This ABC and the C is the most important one. It's a relates, basically relates the trace of the volume spaces V and W to the hybrid space M and assume that. And assume that this decomposition holds, we can show that the HD projection can be naturally constructed and then you get superconvergence and optimum convergence as we want. And then this slide shows you that we can check whether the space is set. Whether the spaces satisfy empty compositions by using this theorem we call the calculation theorem of empty compositions. If you give these spaces, if they satisfy ABC's three conditions, A, B conditions, they are relatively easy to verify. We always think of V and W starting with, say, polynomial spaces with degree K. So they'll satisfy A and B conditions. Sats by A and B conditions. The C condition is relating to check whether a number equal to zero or not. This number is the dimension of the phase space M. Here we are working locally on elements called K. And you have the dimension of this phase space M and then you have a dimension of the normal trace of divergent free functions in your vector space V and you have Space V and you have the dimension of the scalar function, which is whose gradient is zero. So the last number is always one. So the M index is basically a relation between dimension of the hybrid space M with the dimension of the flux space V. And the last one, it's just a number, which is one. And with that, we can. And with that, we can design, give me any elements, we can construct MD compositions. Basically, you feed in with the spaces VWM, and then you compute that M index. Then you say if this number is zero, then we are done. We stop. In our case, if it's a simplex mesh, this number is zero, so we're done. Now, if we are in, say, quadratic meshes, We are in, say, quadratal meshes or more general polygonal meshes. This number is greater than one. It will never be less than one. So if the number is greater than one, and what we need to do is to we just need to increase the vector space, increase the flux space. The number greater than one means the the normal trace of W free functions in the flux space is not rich enough to cover all the fitted space. Cover all the facet space in M. So then they increase it. We just need to be careful what basis to add in. And so this is the slides, maybe five slides ago, where we have three different matches. So we have the post-processing results. The post-processing results. And now we do this fix. We add the basis. We add these basis functions to our space. We only add the additional flux spaces. So the competition cost is not increased at all because the global system does not change. But with that, we will get optimum convergence. And we can also get HDU conforming post-processing of the flux on these meshes. So that looks good. And there are some more technical details on how do we choose that. Basically, it's all about the vector space, the divergent free functions whose normal trace. We need to look for the normal trace on each side. On each side. The construction on 2D polygonal meshes is a little bit simpler. On 3D polyhedron meshes, the first step is already very cubic if you have a very general element. But basically, you look for the divergent functions in the space, and then you look for its trace on one side, and then you fix this. And then you fix that you let that trace on that side to be zero, you you look for the trace on on the other side, and then you go through all these these sides and you compare your space dimension with the M space. And if you look, if you on the way you find something missing, then you add it to this orthogonal space called Cf. It says that there are some traces. that there are some traces that cannot live in m that cannot be characterized by the w free functions so then you find this mu in in that set then you enrich it using some dioding free functions that's uh then that's a construction and we we have done the the practical constructions uh in two In 2D, I think the series fairly complete. But we can show that on quadratus, you basically need two more bases. Think about a rectangle mesh. In that case, the mixed method for the smallest space that contains pK of mixed method is that BDM space, which is PK. That BDM space, which is PK plus two additional bases. And then on general quadrature meshes, you can do similar things. You use PK on that quadrature plus two more bases. And then next slide, I'll show you what these two bases are. And on more general, if your element has more size, you need to add more basis. In 3D, I think pyramids and prisms looks Prism certainly looks fine. Hexagon, there are some conditions we need to impose on the faces of the hexagon. I think we do not allow the hexagon to have parallel faces. It's some weird constructions. Anyway, we have some ways to do that. It's purely algebra. Some ways to do that, it's purely algebraic calculations, it's all about playing with this flux space, and you see that where we are working with the diverging free functions and stuff like that. So, this construction actually leads to the minimal degree freedom mixed method on these type of meshes that contain the polynomial space, the vector polynomial space. And there are some examples. And there are some examples. So the two spaces, two bases I add is, they turn out to be non-polynomial spaces. I think we can do is, if you have a convex chord, you just split into two triangles. And the new basis is equal to a polynomial on one triangle and the zero on the other place. And you take the rotated gradient of that. So you get a W free function. And the spaces for this pyramid, if you have a reference pyramid, then it turns out that we can add these rational functions. This looks at least looks clean. And so that's the way we play around with the finite spaces. The idea that we want to get that HD. We want to get that HDG projection, and we cannot do it because the vector space is not rich enough. They just add more bases. And the way you add more bases, there's a recipe to do that so that you can recover this superconvergence. And then there's another way to achieve superconvergence. Convergence that's that's where we do not want to play around with the finite spaces. We are very comfortable with the polynomial spaces. So, if you do not add new basis, then you might need to do something special for the flux terms. So, there are two approaches, they are all related. I think the earliest incidence, something Christoph. Christoph, he's in audience, Christoph's diploma thesis where they use HDG to solve the heat equation. And then they show that if you increase your panel degree for the scalar variable by one, and then you project back to panel degree k in your flux term, then you recover superconvergence. you recover superconvergence. So this is a very neat idea that works well for diffusion problems. Here PM is just an L2 projection onto polynomial degree K. So they call it the projected junk approach. They increase the local space, it projects it back down. And the overall cost is still on the face, it's 0.0 degree K, so it's the same as our empty composition approach. Same as our empty composition approach. They do not need to add our non-polynomial basis functions. So that's that. And this fancier version of that, play around with the flux, say that if we do not like to increase the scalar space in the volume, you can keep it pointed. So this is like LDGH pair of. H pair of finite spaces. Now you really need to do a lot of work to recover the superconvergence on general grids by using a very special type of stabilizing parameter. Here, I think that the key idea is that in the stabilization, the whole thing, the R star, OHR, that's the stabilizing operator. It's a linear operator. a linear operator and what it does is it creates a U star which is post-processing. The post-processing is directly built into your scheme and it's for the K plus one. And then you project it back and then you recover superconvergence. So that's the two related approaches and they all play with the numeric flux and they do not need to work with With finite space constructions. I like this approach also. And here's a comparison for three different approaches on a rectangular mesh. Basically, we see the same things for each method. So, with that, I think time for me to conclude. We introduced these mixed. We introduced this mixed form of HD methods for diffusion. The mixed form means that we write it into first-order system and then we discretize that. And there are two approaches to superconvergence. And yeah, that's it. Thank you. Thank you. Do you have any question? Do you I have one question? Do you add a look to the CDU method that allows also to have a pentagonal elements or hexagonal elements, but not with increasing the polynomial order, but by changing a little bit the shape of the The shape of the function. Changing shape of functions. Kell repeats that method again? I mean, CDO elements coincide with polynomial elements on triangle and on rectangles, but does not coincide on pentagons. Do you add a look on this type of element and how does it compare? Sorry, I'm not aware of all those kinds of elements. Sorry, I'm not aware of all those kinds of elements. Yeah. I think that's very interesting for you to have a look to CDU by Erna because it is, I think, another point of view that you should cite. Thank you. C D O C D O F Any question? Online question? So it's time for lunch. Thank you a lot. Thank you.