take uh like piece and paper and because it's uh involves some some tools which are not sort of broad you know the community but you know hugely useful so I decided to just like slow walk through this paper and like introduce a couple of tools as we go so the paper is called Linear Obstacles of Linear Systems in Waste Low Labor and it's easy to remember at my website And uh my website. Uh so let me start with the bigger problem. So imagine so this is this is like bug, right? So imagine you have to be slope, the slope goes down easily, and if you have some obstacles on the slope, say, The slope, say here, here, here, and here, and there. But our skier is not especially skillful. So this is the angle you can turn, right? Trajectory with this uh so again, the skier goes from left to right, as you can imagine this is sort of Right, as you can imagine, this is sort of a peripherization of the time. And the trajectory of the skier is, you know, is an initial function, right? So slope can go something like that. So probably you cannot go, you know, you cannot go something like this. Okay? But this is impossible. Not the good. Okay. So slope is one. Integration is And the question is the question is how many how many essentially different ways to go down but essentially different. I mean the ways which you know you cannot deform continuously one into another. One into another. For example, if you go this way or that way, you know, sort of the judges will say, okay, that's the same trajectory. Conceptually the same trajectory. Those trajectories can be continuously deformed one into another without hitting obstacles, right? They have the same class of equivalency. So, how many different classes are there? Anybody? It's a good problem for like much circle of from three to five, you know? It's easy to understand, and you know, kids will be busy for at least 15 minutes until we start cracking. Anyway? But shouldn't the answer depend on the loud angle? Yeah, the angle is fixed. So this is my angle, right? So, the angle is fixed. Okay, so like the cipher, so this is too sharp for you. So, this is too sharp for you. So, this is too shallow for you. You cannot go this direction. Anyway, we'll come to that. So, anyways, these kind of problems we would like to address, right? And, okay, so shall I write the last word? I'll give you some more time. Yeah, I'll give you more time. It's like a tree. You just draw a tree coming down. Tree, you just draw a tree connecting down. You can draw the tree, yeah, you get very basic, yeah, exactly. Yeah, yeah, you know, it's a nice piece of work, you know, as we'll see if there is a shortcut. Anyway, so anyway, so why it's like control theory, obviously you can say, oh, this is just the simple integrator, right? You have this is our special coordinate x, so x dot is equal to u, u is U is post one. And you have these obstacles, and the obstacles are instantaneous. So this obstacle happens in time T1, T2, T3, T4, and T5. So the obstacles appear and disappear. So in this case, it's just the artifact of the physics of the problem. You know, you go down the slope, you kind of retract it back. But in many situations, this is Situations, this is those instantaneous obstacles, are you know essential material? Again, of course, control theory, robotics, whatnot, autonomous vehicles, whatnot, they deal with the obstacles, real-life obstacles, all the time. But there are obstacles and obstacles. This obstacle, I can bump into it as many times as I want. Those obstacles come and go. And they're, you know, also extremely important. It's also extremely important. So I'm integration as I mentioned already is the control, especially in the swirl control. So imagine you have some, you know, some warehouse with a grid of pathways, and you have various Amazon robots collecting their own. Robots collecting their orders. So one trajectory, another trajectory. So trajectories have been specified. How you traverse them is different. So if you put it into space, then you see it's okay. There are some conflicts. You have some points you have to delete. But those points are instantaneous on some sense. After you're like before this instant, you're not interested where the obstacle says. The obstacles is after this instance, you are not interested in this either. This kind of problems is obviously important, and again, we need tools to address that. And this is sort of in modern interpretation. Yeah, that is the okay, so slightly Another is the, okay, so flat generalizing, you can consider sort of, okay, the one go to that. So just as a remark, so this is configuration spaces of graphs. Maybe if I have time, I will come to that. So, but you know, this is sort of the control theory. But actually, this theory But actually, this theory, like these kinds of questions, started to appear and pop up in the engineering community in the so-called concurrency problem. So this concurrency problem in computer science. And it deals with the following class of problems. So quite often you have Quite often you have a lot of processes. I mean, like, we have like we lost count of how many threads are down in our computers, in our little processors. You have a lot of processes running simultaneously, concurrently. Sometimes these processes need to address the same resource. This is dangerous. So imagine situation you have one process, so this is sort of initiated like some program evolving, doing something. Program evolving, doing something, and another program doing something else, whatever, some process which, you know, works with some resources. And this process, in this interval of time, tries to do something with a shared resource. For example, tries to change the value in some memory region, right? This process tries to do it, address the same memory region during this time. Time. So obviously, you should forbid the joint trajectory. So combined trajectory. So this is like both processes working, then one working, another staying, both working, and so on. So this is trajectory. One execution trajectory. It might be another execution trajectory. And those trajectories are materially different, right? So imagine situations: this is you are trying to log into your bank and you know, like reset your password, and this is. You know, like I said, you have a password, and this is the thief trying to withdraw the money from your account using the password, right? So this trajectory will be much more harmful to you than that one, right? So it's important to understand the structure of the path, avoiding obstacles. Of course, it's not necessary in just two trajectories you can have. Many trajectories are like those two processes interact will result in. Interactive to result in deletion of this line, most of the process interactive to result deletion of this line, maybe some three processes interactive to result the deletion of a point, or like point-like optical. But we're looking at looking at all possible trajectories which are evolving in space, maybe in different ways, trying to avoid those obstacles. So big question structure. Structure of this case of a related path. So paths which are involving a time, like thermodynamical path. Paths where some quantity is always increasing. Time of entropy. And avoiding obstacles. And by structure, I mean topological structure, meaning not how we can incur inferred topology on this sort of fifteen-dimensional space. But you know, homotopy type, number of holes, number of components, things like that. Components, things like that. Okay? So, this class problem will be solving. And in this talk, I will be addressing just one particular class, so our problem. In some sense, it will be the simplest possible problem ever. This will be a control problem. It will be leader system, it will be a dynamic will be. Be the dynamic will be cleaner. So X will be sitting to the sub m dimensional space, Q will be sitting to the sub, you know, convex body, m-dimensional space and look at some collection of books because And you'll have some collection of obstacles, so or it will be a collection of obstacles where each obstacle happens at time t, sorry, each obstacle happens at time tj, and the times are, you know, J and the times are, you know, like sign. And, you know, each of them is a fine linear subspace. Something like that. So here, everything is one-dimensional. By obstacles sitting in those. So this is like example of that. So, this is like example of that, right? So, my obstacles it happens more one to move, which happens in those times. Each obstacle is just a point. Okay? And reconsider the space of the cell of path, avoiding those obstacles. All the trajectories x u, we can fix, you know, starting pool. We can fix, you know, starting point or whatever, some class of initial conditions, it doesn't make any difference, such that x at c to j does not belong to all jobs. This is what we, the space we are looking at, and we try to understand what is the topology of this of this space. Okay. Another example is you can see the double integration, right? So you can install the Double integrated, right? So you can s dot will be b, v dot will be u v will be greater than one. Now we have somewhat more freedom for the obstacles. For example, type these obstacles maybe point means you are not allowed. So this is X and V is an invisible third direction. So you're not allowed, so you can be a co-dimension, sorry, dimension zero, so you're allowed to go through this core. So you're you're allowed to go through this point, but you have to go traversely. You're not allowed to pay attention to this corporate area. This is the type of obstacles you might consider. Okay. Okay, questions? Let's solve the baby problem. Ready? So how many classes? Give me the pipe right? Huh? 2 to the 5, right? Up. 2 to the power 5? Up and down, up and down? It's at most. At most, because yeah, so in principle you can say or. For each of them, you just say whether it traverses the bulk of the wall. But you know, some is impossible because again, this is impossible by a recognition. Some of them should be excluded. So at mod 32, this one, the answer is. The answer is. Okay, I can start drawing, but you know, like, you'll see how easy it is to mistake. But, you know, the answer is, well, so we have a problem. So whenever we have this class of problems, you have, you know, like one-dimensional point-like obstacles. So we can introduce the notion of the notion of chains of obstacles. The chain of obstacles is exactly what it sounds. It's just any collection of obstacles which you can hit. So, you know, like our problem was to avoid them, but now I change the problem to try to hit those obstacles. So for example, those three are machine, because they have. Form a chain because definitely there is a trajectory both for all three of them. Those two don't form a chain. Those two do. Anyway, so we can consider the chain of obstacles. And the theorem is the, okay, so first of all, we consider this, like, we consider the Like we consider the component of this depth. So, like, so we have some avoiding path, avoiding obstacles, and consider all possible paths which are in the same component. All we can achieve by deforming this one, right? So, this is connected component in the spacetime path. So, like, the first immediate and trivial observation is that connected components of this space This space, the way it was, are just over convex in the Ripschitz functions. So you can see just over Ripschen's functions, you know, with this slope, slope distorted by all scales. And, you know, if you have two paths which are sort of the same way around top, it was above and below, then clearly any linear hypotenuse. Clearly, any linear topology between that will be also the same component. We'll be not hitting obstacles, right? So essentially, topology is trivial. It's just like some convex components, you just have to count them, right? And the other problem is the statement is the number of those connected components is equal to, there is one correspondence with a number. There is one correspondence with the number of chains of obstacles. So, what chains of obstacles do we have here? Okay, let's number them. One, two. Let's call them. A, B, C, D, and D. Right? So, first of all, we have the empty chain. No obstacles at all. Then there will be five chains of left one. Then there will be five chains of length one, A, B, C, and D, right? One, five. The chains of size two, from here one, one, two, and three. So A starts of three chains of size two. This guy, one chain, four, this guy, five. So five chains of size two. 2 something like A C five length zero one two three how many shades of size three just one right eight all together twelve here's the proof uh So take any obstacles, any collection of obstacles, any path, any feasible path, maybe, like this. So in this component, and if you think about the Lipschitz functions, you can imagine sort of the smallest Lipschitz function in this component. So how it will go? It will go something like this. So, if you'll be thinking of those two nails, those two nails obviously will form a chain. Vice versa. Taking any connection of those guys, for example, those two, then you can form Lipschitz function hanging on them. That anything about, you know, updated to that will. Update the verb, you'll be computing. This giving example girls are something conceptually very important. It's much easier to work with the obstacles rather than the avoiding obstacles. That's what we're interested in, the pests avoiding obstacles, but working with the pests hitting obstacles is actually more convenient, more Convenient, more computationally feasible than for reputational purposes than walking around. This is the route we'll be taking. Is it obvious that there is no discount if you have the path that goes all the way down, the one that goes all the way up, avoiding the path? Yeah, this is the lumpy one. The empty set. All right, here's the empty set. Absolutely right, very good. So okay, so let's uh go back another reason this part. Still people? I'm still a little bit tired. So, for example, in the initial thing, you have this obstacle. Like here. Yeah, it's definitely. Now, basically, modulo. Basically, modulo this restriction that you said certain paths are not possible because the obstacles are too close. So you have to sort of restrict, you cannot accelerate involved. Right, right, yes. This is quite a control problem, everything is controlling this context, right? Right, right, right. But in principle, right, you could you basically enumerate in a binary way. Basically, enumerate in a binary way. Some of them are possible, impossible, absolutely. Can you turn down the volume? Is this Zoom bug? Yeah. Sorry about that. Someone was unmuted temporarily. I hope it's not how you're listening to us and we'll lucky being able to do us with the next five different times. So 00101 means below, above. So you have all the possible clients. Then you eliminate some of them based on Eliminate some of them based on acceleration in barely beating. Okay. So that's. Yeah. So this is like the baby version again. That's why I call it baby version. You can't just do it by beeping versus. So now we're going to somewhat slightly more complicated version. Again, this is still. And And collection of particles, collection of Ojal 1 goes on j. And yeah, so then looking for the space of path, like I'm looking at the topology of the space of path, avoiding that. Avoiding that. And so a little bit more of a general thing. Maybe so why, you know, like you asked. So besides the fact that you simply like talking about topology, why are you interested in this class at all? Well, you know, it is important. So imagine you're trying to, like, maybe try to optimize in this case. You're trying to find this trajectory. And whatever you call function, maybe it's a little bit complicated. Run your graded descent or whatever else. But. But all these tools are written in one component. So at least you have to know how many components are there. If there are holes, they give you also some information. So, like, you know, if you have a space which is all the panels, then you know that there will be some subtles there, right? You cannot just have one global minimum, so there will be some problems. So it tells you quite a bit about how. You quite a bit about how to expect from those problems if you work in the class of trajectories avoiding obstacles. Complexity, theological complexity of this class, is material for optimization problems, and even just to solve the membership problem. So you have the, you know, like imagine, you know, I have the algorithm, you give a path, and they ask, okay, is this path avoiding the obstacle? It turns out that, you know, like if you turn like the game. Let's render it as a problem in TCS, computational computer science, and ask ourselves what is the complexity, how difficult it is to do that. So one popular paradigm for measuring complexity is, say, algebraic decision G's, right? So you, you know, your trajectory given by some, you know, functions, maybe this was right, whatever. And you try to plug variables into coefficients of this function or whatnot. Coefficients of this function, or whatnot. It doesn't really matter. You try to plug stuff, you have some finite-dimensional approximation, descriptors of your paths, and you try to plug them into some polynomials and try to decide yes or no. Are we obstacle avoiding or not? So it turns out that the depth of those generic decision trees is growing with the total complexity of the space. So if the space has rich topology, the total complex Topology, the total bitter numbers, the total ranks of the topologies of the space is high, then you're already deciding whether your path is obstacle avoiding should be complicated. All of that is again, here it's sort of easy, right? It's just like some linear inequalities, but you know, more complicated situation, you know. Okay, so so there is ramani in this business. That's why we're doing That's why we do it. So let's set up some level picture. So again, so those are once again. So OK is CC Canal N-dimensional space. And so we introduce the number. So the co-dimension of this OP, which is n minus dimension. n minus dimension. Okay, so we call this number ck plus one. So ck is co-dimension less one. Okay. You'll see why it's useful, but you know, it's maybe a bit come out. For example here, my what will be my what's the dimension of this point? It's one, right? Zero dimension of one dimensional space. So code dimension is one. It's my C. So, codimental spots, my C K is zero. So, for all these guys, my C is my ranks or rank, whatever. C is all zeros. Okay. So you can have this guy. So you have this obstacle. This is my obstacle. So that we can, again, so outer j. Again, so auto-general is going this direction. You have to write it. We have to write. So then we can form some little spheres around those guys. Little spheres around those guys. This little sphere will be of dimension CK. For example, if you If you go just like this, above or below type, right? So CK is zero, and you'll be zero-dimensional sphere. You can go this way, you can go that way. It's one-dimensional sphere trajectory, you can go this way, this way. So in some sense, there is a circle of work trajectory in this case. And in general, we can say, okay, you know what? The space, we can, you know, if we have any, you know, any singular chain, any sort of boundaryless thing sitting here and avoiding obstacle, we would count the number of intersections. So we can just take this obstacle, put to the north array of ML rays here. And then we can count the number of intersections the trajectory will have in this thing. This guy will have this thing. So here the number of intersection is one. Here the number of this trajectory of this intersection is zero. Here it will be one. So this number, generic number of intersection to this sleeping part, no, it defines a cohomology class. So again, homology class is just tells you, so you embed something of dimension CK. Get something of dimension CK, which has no property, and then you have this huge guy and intersected some number of times. So, cohomology is just the measurement. You can think about as a measurement instead of like something you observe. So then you get this cluster P. Gas of p, I will write it, you know, negative. Like, this is what it means. I will write it sort of this elevated condition. So it's element of this co-homology class of this space where you move to the homology. So all this homologists and homologies, I will go all this working with some field, go like matters. But again, like, remember, all this. But again, like remember, all this uh attention is just okay. So you have this uh part of the space, this laser arrays, arrays of laser arrays, and you count how many times this particular family of trajectories hits it. This number can be typically zero or one. Okay? Okay, so what happens if you have a failure of A failure of those guys is one, zero dimension, zero dimension here. So we have the failure of these guys, right? We can have, so for any family of trajectories, we can have sort of a partial trajectories, so families of trajectories, right? So what we can do, we can take this family of trajectories that persecute it to this guy, persected to this guy, persecuted this guy, take the product of this, right? So C. Do you heat? With this, right? So, see, do you hit all these rays or not? So, formally, so again, so we have this again, just talking like pros, evaluated pros. So, we have this evaluation path, so EK. So, take this path, all paths without constraints of trajectories, and map it to V, so just you know, like if you have. So just, you know, like if you have x of so x is mapped for x at 5 c a check this map if we just map so correspondingly we have this for the obstacle avoiding. We get you know going to this place. This place and so mapping from here to there allows you to take this cohomology class and get it there. So you get this leap, like we call a basic notation. So gamma j is this, you take this class gamma j sitting in this space and lift it to, like, evaluate the path. It's just, you know, like looking at the path rather than the points. Looking at the path rather than the points of the space. Because the path at some point will hit the space. You can take any family of path, see how many times it will be hitting this guy, and so on. We have this clauses in this space. So it means that for homology there are key classes. K classes topology classes of dimensions CK and this homologies of our space which we are interested in. Once again, it's nothing else but the probabilization of this counting above or below. Below, above the gradient is one, below daily gradient is zero. You can take these classes, you can get product of these numbers. And the product is zero, okay, the product is not, a little bit better. So it tells us already that there are potentially quite rich topology in the space of the path. Here now, when we can move, you can see how those classes have everything. So again, for any problem, so this is, let's call the problem star. Problem star, sorry, UV just with the EBC, so why then K classes of dimensions. Sorry, E, sorry, so J. K is total y. So K total of cycle. Yeah, sorry, sorry. Is this ordinary homology or is this complex of words? It's just ordinary similar, you know, like ordinary homologists, you know, like you take this intersection class, but yeah, okay. But now, so in the star we can form the chains of obstacles. Again, we can define the chain of obstacles as any sequence of J one, J two. G two J C such that there is trajectory hitting all the obstacles. So now, so this, all this data, so you know, once we have this data, this data of course requires the, you know, the structure of this control system. So you have some linear subspaces sitting at different times, and you're asking yourselves, will you hit them at all? There's some problems you have to solve. There's control problems you can probably solve. Probably solved. And but once you have done that, then everything becomes completely combinatorial, fully discrete. So to have those changes of obstacles, you can form this data data produces, so go, you know, link. So go link, we will call it R this obstacle link. So the link will be generated again. It's just, you know, that's the thing. You take these letters and, you know, describe the rules of multiplications, right? Or maybe algebra. Algebra over over our field. You know, they'll work in over like real, so easy. We're working over like reals, so z, you know, two for two elements, whatever. We choose a real algebra, and we generate about those elements, we call it O1, O4, KV. So, of connections, so it will be greater bring. So, dimensions, the OJ will be a CJ, and the rules of multiplications will be really simple. So, O J1 O J two O J4 O J P will be zero. So any of these products will be zero unless J1 through JP is a J. Maybe we'll have a look at that and you know took some You know, took some algebra data, and I said, Oh, this is called Stanley-Reism routine. So, so this is, again, the related notion. So, here we have syncretial complex. So, let's just remember what simplicial complex is. The symposium complex, what? Symputial complex Key is a collection of subsets of k0, which is vertices. So you have some collection of vertices, and then we declare some sub-collections of them as simplex. Sub-collections of them is simplex. So, this will be simplex. This will be simplex. Anything like that is called simplicial complex. And the only rule is that if something forms a simplex, then any subset forms a simplex of smaller size. Anyway, so the steadily Rosner Reisner Re is exactly those rules. So, unless those numbers form as simplex, their product is zero. And if it does form as simplex, then it's whatever it is. It's just the product of the numbers. So, it's kind of unity for this, right? So, you can swap these guys and they can put them. No one could details. And the only thing we add is: so we have the standard standard risen ring, we only have the condition that the square of each element is zero. So this sort of reflects the fact you cannot hit the same obstacle twice. Anyways, we have this ring and we can just work with it, we can describe it completely. So, for example, it's a baby example. It's web example. Web example. Right? So we have this obstacle A, B, C, D, E. Then the ring will have elements one and we'll have elements OA or E, then we'll have the products. Okay, so we'll have this product, you know, OA or C, right? Or OC OE. So all these things will be non-zero. You'll be like OA times OC. OA times OC times OE, so you have all the sentiments. And the claim is that that's all that is. So the big theorem is that this is grown up theory. The first theory was The first theory was a quick theory. The grown-up theorem is that the homology of this path, obstacle-avoiding path, is isomorphic to this algebra, which we construct. It tells you everything about the dimensions, everything about the coordinates and numbers, and so on, and so forth. For example, here, all the C's have dimension zero. The product, therefore, also have dimension zero. So it means you have just components. So that means you have this 12 connected components, and you can number them in a very consistent way by those collections, by those chains. So that's monitoring with a cup product and everything? Yeah, it's just yeah, right. I mean, it is They need this form, just the form abstractly, but yeah, so we will be mapping, you know, like we will be mapping those and the holes and the yeah. And uh see about maybe just going back to uh So to explain what we give examples, and it's double integrated. So x dot is equal to v, v dot is equal to u, u is equal to 1. And let's consider the obstacles. Yeah, what obstacle? So this is obstacle. I can go through this point, but I cannot go with horizontal slope. And maybe this point was a horizontal slope forbidden. Like a stolen condition, right? You don't have. And maybe this point was a horizontal point forbidden. So yeah, so here's the interesting part. So how to part so how to find like here the like if the fast step of control theory starts how to find which of these uh obstacles form a change for example it's clear that you can go so that okay so if your parabola is something like this right so your trajectory is a given you know you start at given velocity at a given position your trajectory is you know is bounded by parabola you cannot go inside this parabola you cannot go below that parabola right for each of these For each of the solutions, we have the parabolas which you know you can have parables which you can reach. Yeah, it's quite clear that you can find the trajectory going from here to there, here to there. Here, sort of, you are. Here sort of you are, it seems that you can hit this point. Can you hit it with the horizontal slope? Transfer is not. So you look at the comprehensive, like funny little exercise. So you look at the complements of these parabolas. So this parabola and that parabola component will be this part and that part. And this parabola will be this part. So if, you know, here, corresponding components, you'll be a connected set. And here it will be disconnected. And here it will be disconnected. So therefore, you cannot hear. You cannot, these don't guys do not form chains. Quite easily established that. So yeah, so you have chains. We have chains A connected to B, A connected to C, but A and C are not connected. So this is our superficial conference. So A and B is. AB is a chain, AC is a chain, A is a chain, C is a chain, the subset of the complex, but nothing else. So the study, and so in each of these guys has dimension one, so the engineer rate of knowledge glass of size one. So what will be the, what will we have? So we have this, we have one, we always have one, and we'll have this OA, O D, and O C. So each of them is beneficial to one, right? This is a circle. Right. This is a circle here, right? So there's a circle of trajectories each point at this point, but you know, with different with different slopes. Slope can be either positive, equal up, and down. So it's circle. You have these three circles, and you have these two products, so OA and OB, OA and OC, and nothing else. So it means your bits and numbers, the topology of your space, will be one connection component. Connected component, three non-trivial one circles and two non-trivial two cycles. And in fact, we can easily see that the whole thing is equivalent to the joint, you know, we'll take this figure eight and multiply it by a circle. So that's what we will get. Two torus, two tori glued together along this uh table. Along the side, to take, you know, to circle the dot that, you know, put them together along with the hexon. This is monopoly of this space of optical avoiding effects here. Okay? Let's be careful. You can just compute basically everything. Okay. So wait. Can you do the cognometer? Do the cognitoring, you cannot always figure out. No, I'm not saying the cognitive, of course, not right. But this, like, yeah, so this is, yeah, so this bitch number is one plus three t sorry. I'm correct, but it's not also normal for the like brain speeds, you know, but you know, it's uh still, in this case you can compute it, you know, you can just look at it attentively for ten minutes and you you you see this uh to write good. Okay, so how do we prove it? So on one hand, on one hand, we have, okay, so first of all, so as I mentioned, so there is this mapping. This mapping of this ring into this homologous Into this homologist of my space. We just take any of these O's and map it, send it to these classes, corresponding classes corresponding to those obstacles. It's little circles probably around like obstacles. It's quite easy to see that this is injective. Nothing is killed in this process. You can easily construct some dual classes which will be evaluating to one and all material there. The one on all material elements here. The only problem is to prove that this is subjective, it's contour. So, this is all classes we can have, there is nothing else. This is the pregated problem. That's what I will be talking about mostly in the next hour. But the step to go there is, again, as I mentioned, it's much easier to work with the classes with the pets going through obstacles than. With the paths going through obstacles than going around them. And this is codified by the usage of first finite dimensional approximation and then the exact duality. So what happens here? So again, so we have this piece of path avoiding obstacles. This is peak. Oh, sorry, I forgot the main main theorem, of course. Not the other side of that. Not the answer. Of course, you should assume that AB is controllable. Because otherwise, you'll be sitting at some, you know, you'll be confined to some subspace, it connotes what's going to this is like large dimensional space. It's hard to work with it. So what we want to do first is do some finite dimensional approximation. Finite dimensional approximation. How you do finite dimensional approximation? Well, you just, you know, essentially what you do, you just consider that this is your time steps when you check your obstacles. And you just say, okay, so I start here and I look at all positions of my trajectories in those places. Then I consider all the trajectories which. Let me consider all the trajectories which are going through those points. Okay? It's quite easy to see that, okay, so I have this mapping, this evaluation mapping, this v to the power, power k will be r this size. Okay? So the same thing with my large space, my smallest space. Smaller space, but easy to see that the topology is not changing because all the paths which are, which fix, if you fix those relay points, then the classes of all trajectories which go through this hotel box is contractible. It's not a contractable set. So quite easily you can prove by getting some whatever theory would do that. So going from here to there gives you a quantum equivalence. That's what we are working. So now we are looking into finite dimensional situation. In this finite dimensional situation, we have this interesting structure. So this is like again this finite dimensional space. It's v to the power k. And in this v And this view to power A, you know, calls these obstacles again. Like each obstacle sits in some factor, but you know, like A, you know, so this will be obstacle in the factor J and E in all other factors. Okay? So just one constraint where it matters. So here this guy's dimensions is not changing. So here this guy's up to dimension, whatever it's like, C, C J. Cj plus one sitting in this space. So the image of the path, so consider this evaluation map. The image of this evaluation map is an open convex ball there. So if you can, you know, if there are two points, two pairs of points, you can hear it, and these two points, you know, the pressure can hear them, you know. You know, the projector here, then you know, can all this linear harmonic trajectories, you know, connect those two points. So the image is a codex ball. So it takes into some big open codex ball sitting in my space. So essentially, the situation is the following. I have this wall. This is the image. This is all evaluation values, all positions where I can. Values, all positions where I can, you know, achieve by varying my controls. And we have some collection of those obstacles. Those obstacles, of course, go outside of this ball as well, but you know, like all of these parts of these obstacles are of interest to me. What I'm interested, I'm interested in taking this ball, open comics ball, removing all these obstacles, and seeing what's the amount of type of the component. So interesting in this each story. interesting in this rich spark of anything outside you know I remove all this far away C of us infinity and I remove those obstacles and everything else I'm looking at the homologies of that and of course when I have this situation when I have something going off to infinity removed I can just Move, I can just pretend that everything sits in some large-dimensional sphere. So this guy actually sits in this ball, sits in this sphere of dimension nk. I just like collapse everything outside of this ball to like to something compact. It will not change what's happening inside, but will make my life much easier because now I'm living in a compact space. I'm living in a space sphere. So now I'm in the following situation. I have this sphere, and in the sphere, I have this collection of obstacles, like compactified obstacles. So this is obstacle, so Ok is this obstacle plus this is infinite portion. Let's call this something else. For star. For star is this one plus this infinite portion outside. You know, plus V union T minus my O. So you have these obstacles and what I'm interested in, I'm interested in the cohomologies of my sphere, this big sphere, but it's five dimensional, it's compact, isn't it nice? From which I remove my union, my My stark obstacles. This is a compact subset of my sphere. I think it was closed here. And then there is this really nice Alexander duality, which says that any homology here, I'm going to say homology of size, that will be. That will be exactly of sphere minus this compact set. It will be exactly the same as homologies of this minus q and k minus q and subtract one for signature, right? Or the space itself. So now we are not working with this fuzzy amorphous complement to those obstacles. We are working with You are working with a region, nice, compact cell. Let's go start next hour. Patience? Yes. Thank you. So I kind of lost track of how you were using the fact that the dynamics are linear. Well, it was several places. The first place was. Places. The first place was, you know, like this approximation. You know, like the fact that all fibers, you know, like I fix the intercepts, then, you know, all trajectories for big set. So this is, yeah, another one will be as before. When before the chains, when we were talking about chains, the structure of those chains of obstacles, the structure of protection is easy. Chain support, but I definitely both chain some particular ways. So perhaps I'm quite interested. Just to follow up on that, is there anything essential about having things associated with the linear system? I mean, can't you do this in more generality? I can do, I can do, like, okay, so you can't run this, like, it's like you're running now. I'm running on the highway, right? The pedestrian path. Everything is nice, smooth, beat. Path. Everything is nice, smooth, beat. And then you tell me, why won't you go to the forest? You can also run there. I can. Many more obstacles. So I mean, like a lot of things will not work, right? Or will require some extra constructions, some extra descriptions. Yes, so a lot of these steps, evaluation map, you know, like final dimensional approximations, a lot of that will work. However, it will become more complicated, be much much less transparent. You'll spend energy on going into various details. Energy of going through various details. Like nonlinear, like, okay, so imagine you have some control system, like, imagine you have a control system at your limit on the sphere, right? Forgetting about, like, if you can't go from here to there, in many different ways. Right? So, throw in obstacle, look at, like, even this like gradient system. You go from here to there in many different ways. You know, like circle forth, circles are ready to. Circle of words, and circles already has not clear topology. So, something, you know, like obstacles like that will start popping up if you consider non-linear situation. I'm not saying they are uncertain, not, you know, not impossible to overcome, not at all. But it would require some extra work where we have already spent an hour discussing this simple situation. But if you assume at least linear in the controls, if you assume it's at least linear in the controls, You assume it's at least linear in the control, not quite like the projectors, the actual spatial projectors is sort of material and many stuff. So the game, I'm just cheap, you know, choosing an easy way. Easy problem to solve. The obstacles come in spontaneously at the time and can they stay continuous at the time. That's one of the things You know, right, so like, okay, so okay, okay, okay, okay. So you'll you'll you'll be talking about modern instantaneous version a little bit more. So the problem is, you know, you know, the problem is like, you know, you have this asteroid, it's like zooming past. You can go rough or go, right? Imagine the asteroid coming to you and then stays with you. Then you can go this way and that and like going around many ways. So like there are some extra Well, there are some extra problems there. Go ahead, Obadiah. You're doing this in obstacles who are in co-dimension one compared to the space. Presumably that you did it in two dimensions, but presumably as well as the co-dimension of the obstacle is one. What about if the co-dimension of the obstacle is higher? Yeah, I mean, like, that's the example of the raised example. This example, the raised example was the dimension was two. This example where I am forbidden. So this dimension two. I can go through the point, but I cannot go through the point with horizontal patch. I cannot stall at the point, right? Like if you're skater ripping oil, you cannot move. This is an example of this for the national tool. And oh yeah, they just and then I did ten johns. And then I think then John's remark comes into play because you may not be able to control linearly. You may have to use non-linear lead bracket kind of calculations to avoid obstacles. Yeah, so this is another thing like, yeah, so like right now I'm breaking out like this piece of trajectory is going from point A to point B, my three cases just complex set, right? If you have some, most of the case you're going to have to resolve. Most of the case, you're going to have to resort to some bits to work out. Again, this is one of the obstacles which again. Possible to do, possible to handle, but we tried rather not to deal with it now. So in the beginning, you concurrency theory. I remember there was this guy, Eric Goudeau. Oh, yeah, yeah, sorry. I should have told you I should. It should be comparison. Yeah, so there's comparison theory. There's like big names like Eric Bo, there's like Martin Rouse and Elizabeth Palstaff. So they also have this direct bombology. But that dynamics was trivial, right? Okay, so what happens there? They, you know, they fell for the evil side. You know, they started to produce like miles and miles of abstract concepts. So there's like literally one paper where they computed a little bit of like quantity type of something. How do we type of something? Otherwise, it's like how to type of this is the same as how to type of that. I like specific concrete answers well. I guess maybe I'm a bit misled by this picture, but it seems that the answer that you get will depend on how much of k is contained in the ball. So there's a lot of. In the pole. So it goes compact, or does the answer stabilize as you grow the size of the pole? Okay, if you grow, if you grow, then you will, yeah, essentially it will stabilize and it will be supported, like you will be formed the realm of theory of linear arrangements about which I will be talking later. No question for now? So we'll go to the coffee break and we start at the leaf. Thank you again. Let me thank you again. The definition of your classes that are dual and some health and obstacles, I realize I don't actually understand the class. And how they relate to this evaluation map, I want specific questions. Yeah, I've just specifically done on zero stuff. So So you intersect it, step in here. You essentially make it a steady go into these places, right? So you get this chain, right? So you have this approach because you can pull back the perspective, the part of this perspective here, you know, this kind of parts. Take this, pull back p equals this, p equals that, and we need to do this. Yes. Those p-machies will be intersecting over some manifold that you perturb a little bit. What are those pre-regions? Like, what's the orange region you shaded? Okay, so I have the hostic goal. Then I take, for the most beams, vertically physics with the north. Okay. And how do we define north, generally speaking? So distinguish between the bottom. Because we could get total blocks that are relevant. And do we cost the sum of this range or this rate? The defines use, like Coffee's case for some codimension C plus one. So yeah, codimension C. So. Right, because the codimension was C plus one of the obstacles. Right, okay. So yeah, then we take the P into this, into this P into this, take this B which is persector. Take this image as a persector. If the dimensions are correct, we point to the metal class. How many points you will be having there, this favorite? This is the evolution of this product of those harmonic classes, the product of those harmological classes on this particular simulator. Can we take you to the need to sit down to like some details? Details. What's the point? You make it respective? Like some map? Is it the path map? Right. So it has a path map. Where you see this point? Each path sets this at some point. This distribution path. You can teach it. You can this uh you have this uh thing here, let's call it uh size, it is fair, right? Yeah, you might find you know. My collection is this product of this beads, right? At times CK. Okay, that's okay. So each path you get the point here, right? So but if you have prediction of these obstacles and you uh see where this intersect is this mark finds this obstacle. Why is this obstacle? You know, it produces yourself. Yeah, yeah, and we go one side of the obstacle or the other. Yeah, or yeah, or you depend on the side, whatever. I had another trivial question. I don't see how when you talk about not hitting something tangentially, how does that relate to having a OJ, which I thought was