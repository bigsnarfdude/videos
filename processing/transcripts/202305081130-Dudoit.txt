PhD students and postdocs: Philippe Boadon, Nima Helzazi, Fanny Perodou, David Eriso, Hector Rue de BÃ©zieu, Kelly Street, and Kuhn van den Berg. And special thanks to John Nye, who has been my collaborator of more than 20 years for motivating my work in this area and many other very interesting biological questions. And also, thanks to my collaborators. And also thanks to my collaborators in statistics and computer science, Peter Bicot, Yvonne Cremont, Elizabeth Perdum, Jean-Philippe Verre, and Nier Yosef. So here's an outline of my presentation. It's basically a survey of the main steps in a workflow that we've developed to analyze single-cell RNA-seq data to study stem cell differentiation. And today I'll normally focus on Focus on, I'll focus mostly on the latter part of this workflow, so on the inference of trajectories and genes that are associated with differentiation processes. So first, a few words about the biological question, which motivated our work. So our collaborators in the NYLAB are interested in studying stem cell differentiation in the mouse olfactory epithelium, or in short, OE. OE. Their work has important practical applications, in particular to the prevention and treatment of neural tissue damage and degeneration. So think diseases like Alzheimer's. So here we'll be focusing on a particular type of adult stem cell, the horizontal basal cell, HBC, and we'll be using the P63 protein as a molecular switch. So under a normal Molecular switch. So, under normal conditions, these HPCs self-renew. And when p63 is knocked down, they start differentiating into a variety of cell types, equaling neurons and substantacular cells. So I'll present results for two data sets. The first data set, the OEP63 data set, is an older and rather small data set by today's standards. It's about 700 cells sequenced using the fluid and Sequence using the Fluid MC1 platform. And here we're applying RNA-seq to measure genome-wide expression levels in mice that had the LotsAp mice and mice that had PCC3 knocked out. The second and more recent data set is the OE injury response data set. It consists of about 25,000 cells sequenced using the 10x Genomics Chromium platform. And here we're Platform and here we're looking at gene expression in adult mice that had been treated with methimazole. So here's a picture of a mouse's head and just to show you where the olfactory epithelium is. And here's a diagram where we're showing you the various types of cells in the OE. So here again, we're focusing on these horizontal basal cells in green, and there are a variety of other types of cells in the OE. Other types of cells in the OE: so cesentacular cells, neurons, globospasal cells, and olfactory and sheeting cells. And under normal conditions, the HPC self-renew. And then when P63 is knocked down, then they start differentiating in neurons and cystacular cells. So that's what we'll be studying with single-cell RNA-seq. I probably don't need to give too much of an intro on RNA-sequencing to this audience. On RNA sequencing to this audience, I'll just say that our starting point for analysis is already very processed data. It's this matrix that has rows corresponding to genes and cells to columns. The entries are read counts, and they reflect the expression measure of a particular gene in a particular cell. And we want to answer a variety of questions using these data. So one of them is what types of cells are in this Are in this illustrated in this data set. What are the genes that are differentially expressed between the cells? How do the cells differentiate from one group to another? And what are the genes involved in the differentiation process? So here's a few more words about the workflow that we've developed to address these questions. And this is really more an advertisement of the work that we've done because I won't be able to spend much time. Done because I won't be able to spend much time on any of these topics. And in gray here, gray font, I've indicated the name of our packages we've developed for each of these tasks, and they're released through by connector. So before we do anything, we look at data to make sure we understand our data and detect their main features, whether they're good or bad. It's really crucial to look at data to make sure that we understand what's going on. You know, we understand what's going on and to avoid garbage in, garbage out. We still spend much time also on normalization, pre-processing, to adjust for read counts and make sure that when we see a difference between expression measures, that difference is really due to the biological effects of interest and not unwanted technical effects. So, I'll get back to that in a few minutes. Dimensional reduction is a very Reduction is a very common step in RNA-seq to visualize the data, but also as input to downstream methods like clustering. As you all know, principal component analysis or PCA is a classical method for damage to reduction. It has well-known shortcomings, but we can improve on PCA in at least two ways in the context of RNA-seq and similar data. The first one is to introduce a regular Is to introduce a regularization step, which is very useful in high-dimensional setting that gives us sparsity and stability in the principal components. And then also the second aspect is when we have control data or background data set, we can adjust for unwanted technical effects in the PCA itself by contrasting the covariance matrix of the data set with the covariance matrix of a background data set. So we've combined these two notions. Background data set. So we've combined these two notions in sparse contrastive principal component analysis. I'll mention briefly the Zinby wave approach. So that stands for zero inflated negative binomial wanted variation extraction. And this brings together a variety of consideration we've seen in EDA and also in normalization. As the name indicates, ZINBI allows us to account for zero inflation and over-dispersion. Zero inflation and over-dispersion. But the main aspect of the method is how we parametrize the mean and the zero-inflation probabilities of this in V distribution. So a proper parametrization of these mean and zero inflation probabilities allows us to accommodate for a range of experimental design to adjust for known and unknown factors of unwanted variation. So to build in normalization. To build in normalization in this distribution and also to quantify biological effects of interest. There's also a dimensionally reduction aspect to Zimbabwe wave. Perhaps more important in practice is that this Zin B wave approach gives us weights that we can then use to unlock standard bulk RNA-seq methods like Ajar, D-Seq, and even LEMAM. We've also looked at class. We've also looked at clustering. As you know, cluster analysis is a very common step in these high-throughput studies, both for the clustering task itself, but also as input to other methods. It's a very vexing problem because no matter what the clustering algorithm or the data, we get clusters. So the question is: are these clusters reals? Real? Are they reliable? So you might ask, why yet another clustering method? So that's not actually what we're doing. Instead, we're Not actually what we're doing. Instead, we're proposing two approaches to deal with clustering. The first one is essentially an unsupervised analog of supervised learning methods, where we it's called resampling-based sequential ensemble clustering. And the idea is to provide a framework for aggregating clustering results from multiple clustering algorithms and also clustering on resampled version of the data set. So the idea is that that gives us incredible. Idea is that that gives us increased stability and it formalizes what people do often in practice. The second contribution is that we've provided Dune as a cluster merging procedure to allow us to navigate the trade-off between cluster resolution and the replicability of these clusters across data sets. So let me just jump then to the application of trait seeking. Trait-seq to our data set. I won't have time to talk about normalization. So, if you remember, our goal here is to study how these HBCs differentiate into various types of cells in the olfactory epithelium. So, we've developed a method slingshot that provides a flexible and robust manner to infer cell lineages and pseudotymes. So, here, Pseudotimes. So here, pseudotimes refer to the position of cells on lineages. So their transceptional time, if you want. And it's often related to the chronological time, but not always. So Slingshot allows us to identify any number of novel lineages and also to supervise the inference process by incorporating information we already know. So in many settings, We already know. So, in many settings, when we study differentiation, we know some of the terminal states. So, we can feed that information to Slingshot. So, there are two main steps in Slingshot. The first one is to infer the global structure of the lineage, that is the number of lineages and where they branch, using a minimum Hispanic tree on the A minimum spanic tree on the clusters. So, not on the cells themselves, but on the clusters. And then the second step is to refine this by inferring the cell pseudotimes along each of the lineages. And for this, we use simultaneous principal curves. This builds on the principal curve notion that was developed in Trump-Hastie's group at Stanford. So we apply We applied slingshot to our P63 data set. So there are about 700 cells. We clustered the cells using RSEG, that's our resampling-based sequential ensemble clustering method, to identify intermediate states in the differentiation of A species to neurons and cells and tacular cells. We had about eight cell types, if I remember correctly. And we also supervised link. We also supervise LinkShot by giving it information on the known terminal cell clusters. So, substentacular cell, microbilus cells, and mature olfactory sensory neurons. It turns out that if we hadn't supervised Slingshot, we would have drawn the false conclusion that cestentacular cells can develop into global spasal cells. So, when we apply So, when we applied slingshot, we identified three lineages. The first one goes from HBCs to sensitive injection cell, the second to microville cell anal via GBCs, global spasal cells, and the third to neurons via this intermediate state, the global spasal cells. And this is just a schematic of slingshots. So, the first step is dimensional reduction. Here we use principal component analysis. Principal component analysis, and each dot on this figure corresponds to a cell colored by the cell type. The second step is the minimum spanning tree, and the third step, third and final step, is to project the cells onto the lineages using simultaneous principal curves. We also inferred lineages for our second and larger data set of about 25,000 cells. Cells. And we also supervised slingshot. And these are the lineages that we identified. So, starting with activated HBCs, this was the injury setting. We had a lineage that went directly to cestentacular cell. Then we had a lineage that went to regenerated HPCs. And then this third lineage that went through neurons via GBCs again. Again. So, once we have a way to infer lineages, the next natural question is to identify the genes that are associated with the lineages. And that gives us more information about the biological process that underlie differentiation. So, most current approaches to date. Most current approaches to date assess differential expression between discrete groups of cells or cell clusters, and that fails to leverage the continuity that we have from the trajectory. So we propose a method called TraitSeq that relies on negative binomial generalized additive models to infer differential expression within lineages. Expression within lineages, as well as differential expression between lineages. So, once we have, and we detect different types of differential expression patterns by looking at the coefficients of the NBGAM, by looking at contrast of these coefficients. And we can also use the fits from the NBGAM to cluster genes according to the expression patterns. Patterns. So here's a closer look at TreatSeq. So this is looking at only one gene. This is the gene for GINB, which is a well-known transition factor. It happens to be differentially expressed in all three lineages in this case. And so let's look at the plot on the left first. So this is just a scatter plot of the log read count for that gene. Count for that gene against the pseudotymes infrared link shot. And this is in the OE injury response data set. So about 25,000 cells colored by the cell type. And here when we move to the right panel, these are the NBGAM fits for each of the three lineages. So the cystantacular lineage, the recombinant, the regenerated HBC lineage, and the neuronal lineage. And the neuronal lineage. So, more detail about the NVGAM. So, this NVGAM allows us to relate the read counts for each gene in each cell to the pseudotimes of the cell in each of the lineages. So the Y's are the read counts, the T's are the pseudotimes. Here, G indexes gene, I indexes cells, and L indexes. Indexes lineage. So the parametrization of the mean for the NBGAP model is in terms of smoothing splines, cubic smoothing splines of the pseudotimes. Here, the Zs are indicators for membership of each cell to each lineage, and we can also introduce covariates as well as normalization offsets. So the key quantity in this NVGAM are the betas, the Are the betas, the coefficients, and the smoothing splines? And by looking at different types of contrast between these betas, we can pick up different types of differential expression patterns between within a lineage and also between lineages. So we've applied TRIT-SEEK to our P63 data sets. So this was the data set where we had about 700. Where we had about 700 cells and were looking at differentiation of HPCs to neurons and sustedacular cells. First, we were interested in detecting the genes that were differentially expressed in the neuronal lineage. So this is what this heat map here is on the left. Rows correspond to genes, columns correspond to cells. The cells are ordered by pseudo-time. Pseudotime. And here are the top 200 genes that were found to be differentially expressed within the neuronal lineage. And there's been clustering of the genes. So this approach basically revealed five gene clusters that each have different regions of activity during the developmental process. Move to the right panel. Now we're looking at differential expression between Expression between lineages. And this displays four transmission factors that were found to be differentially expressed between the three lineages. And it turns out these four transition factors are involved in epithelial cell differentiation. So just a quick recap of what we found from SlinkShot. So, right, so within a lingage, we can find genes that are differentially expressed, and that reveals Differentially expressed, and that reveals clusters of genes with different patterns of activity. Overall, when we applied Trait-Seq to our two data sets, we were able to uncover transrational programs that are active in each of the three lineages with both known and novel marker genes. It turns out that cystectular cells are produced via direct conversion of HBCs without a cell division. By contrast, the neuronal cells are produced via an Are produced via an intermediate and proliferative state, the global basal cells. We took, we pushed TRITSIEG further by calculating numerically the first derivatives of the N-BGAM fit. So that allows us to find genes, the peak times of the genes in each of the lineages. So this is This is on the so we applied this to the neuronal lineage. This is a diagram, a heat map for the genes in the olfactory epithelium injury response data set. So the rows here correspond to all transmission factors in this data set. So there are about 1.5 thousand transmission factors. Columns again correspond to cells ordered by pseudo. Ordered by pseudo-time. And what we did here was to compute the numerical derivatives of the NBGAM fit and basically order the cells here on the left, sorry, order the genes on the left by their peak time. And on the right here is just a clustering of the genes. So when we use these derivatives of VNV gamma, we can. These derivatives of V and V Gam, we can identify transition factor activity cascades in each lineage, and that gives us an idea of the moment at which each of these transition factors are most active. So we can group then the transition factor based on their sequential activation profile, and that allows functional annotation. So I'm just looking at the time here. I think we're running out of time, so I'll stop here, and I'd be glad to take questions. So thanks for your attention. Thanks for your attention. Hi, Sandrine. Thanks for the talk. As a sometimes user of these trajectory methods, and in particular I'm wondering if you've come up with any diagnostics to know, like, if you're barking up the wrong bush, like, there really isn't a trajectory structure in your data. How would a user know that they're looking at the wrong sort of biological model? Oh, that's a really good question. I think early on when we tried to develop TESA, we looked at permutations of the data, right? So that might be a way to see whether you're looking. So, that might be a way to see whether you're looking at any signal or not. So, it would be a quick way to do that. So, you would permute your data and try to fit the trajectories again, like say permute the cluster labels. So, break the link between cells and cluster labels. Right, right. So, that's what I'm thinking now. I'd have to go back at what we did a few years ago, but that would be an idea to just see whether you have any structure, right? Whether you have any structure, right? Yeah, because I guess, I mean, it seems like the screenshot is working off of you feed it some embedding and it's going to find a principal curve for you kind of one way or another. So I guess it seems like the quality is all as basically as good as your embedding, the quality of your embedding is. Right, right. It depends on everything upstream. And like you said, it will return a structure no matter what. A structure, no matter what. So I would do something like that. I mean, I might still return also just one trajectory as well, right? So no branching. But that would be my quick reaction. It's a really good question. My quick question would be to try to break things by having permutations of some sort. Great. Yeah. Thank you. Thanks. Great question. Can you hear me somewhere? Can you hear me? Yeah, now, yes. Yes, is there any other question here from here on site? Seems we are good, but we are going to have a discussion later if you can join us. And if not, thank you so much. It was a great talk. Thanks. Thank you very much. Bye-bye. Bye. Okay, our next talk is from Gerald. It's from Gerald here on time. Are you going to connect your computer? Perfect. Okay. And I will be monitoring the chat if people want to have people from the Zoom audience wants to add any question. Thank you so much, Gerald. 