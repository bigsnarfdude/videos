Okay, so I'm going to start introducing you, Richard, if you're ready, and then we can get going. So it's my pleasure to get our first Australian speaking. He's going to talk about Bayes spaces and the embedding theorem for tangent categories. And so And so take it away, Richard. Thank you, Robin. Thanks for the invite to speak here. Sorry, I haven't been able to make any of the talks so far. It's a bit inhospitable here in Australia to do so. So I'm going to ask some questions as to whether things that I might want to use have already been talked about. But I'll try not to do that too much because I'll try and be reasonably self-contained. All right, but I. But I gather we've just had a couple of hours of talks about tangent categories. So I'm going to at least assume that you know what a tangent category is by this point. But maybe not. Maybe there's been less discussion of maps between tangent categories. Is that accurate? Yes. Okay, good. All right. So maybe I'll start by telling you about that. And the reason I want to tell you about that is because the thing I want to start by telling you about is the free tangent category on an object. For which, of course, I need to know the max with respect to which this freeness holds. So, first, I'm going to introduce a little bit of notation. So, C is a tangent category. Then, in the definition of tangent category, there are various limits involved. In particular, we have these fiber products. So, T sub n of X is the fiber product of Tx over Xn times. But then we also have these other pullbacks. But then we also have these other pullbacks, which are something to do with universality of lift. So something to do with what Ben would have just been talking about. So there are pullbacks of this form. What are they? If I have t2x going to t squared x times tx, and then I have x here. So this is zero map. This is t of p. P. This map here is, well, I do p after one of the projections, and then this is some map here I have to define, and then this whole square is a pullback, so that's one of the axioms for a tangent category. So I'm going to call these fiber products and these pullbacks collectively tangent limits. Okay, so they're the limits involved in the definition of a tangent category. All right, and the reason I want to talk about those is. And the reason I want to talk about those is because I want to talk about preserving such. And that comes up when I talk about a map of tangent categories. So a map of tangent categories, let's say F from C to D, well, it's just a functor. But that preserves tangent limits. So that's why I want to talk about tangent limits. Talk about tangent limits and comes equipped with some natural isomorphism between, I guess, first doing f and then doing the tangent functor of d that should be naturally isomorphic to first doing the tangent functor of c and then doing Doing the tangent functor of C and then doing F. So you'll observe here that I'm doing composition in the normal order rather than the Canadian order, and that's how I'm going to do it throughout. Okay, and that has to be, so I've got this, which compares the two tangent functors, but then obviously there are these other data associated to my tangent categories, and so I just ask that this phi makes the obvious squares involving phi and, for example, Involving phi and for example p or zero or l or c the obvious square involving those commute so I could say coherently with the rest of the data okay and so then I can say that tangible Tange is the two category of tangent categories, tangent functors, and tangent transformations. So, what's that? That's just a natural transformation between the underlying functors that's compatible with the phi's. I won't bother right. Phi's. I won't bother writing that out because I don't really care too much about that. All right, but if I've got a nice two-category of tangent categories, then I can ask about the free tangent category with respect to these notions of maps. Okay? So we can speak of the free tangent category on an object. All right, so my first goal is to describe this to you. And it turns out to have a very neat description. So this is due to Poon Yong, who was here a bit ago, but just messaged me to say that he had to duck out. But basically, Poon did all the hard work I'm going to tell you about today. So I saw what Poon did. I saw what Putin did later and then kind of made some deductions from that, but really all the hard work is Putin's, and it's all concentrated in this first section. So I'm going to tell you slash remind you about a particular tangent category, and that's the tangent category of K algebras. So let K be a commutative rig. So, K alge is the tangent category of K algebras. So, if I've got a commutative rig, then I can talk about algebras over that rig. That is K modules over our rig with a multiplication. I guess commutative. Commutative with the tangent functor. So I'm just going to tell you what t of the k algebra A is. And I just take A, and I take the polynomial extension by a new X on X squared. Okay? And with, and I'll just tell you the other important datum in the rest you can figure out for yourself. So p from ta to a, well, that something in there is a plus bx, right? Where x is this nil square extension. And I just forget the nil square part and project that onto a. Okay. Some questions in the chat. So is there a lax version of tangent functor? Yes, there's a version of. Tangent functor, yes, there's a version of tangent map of tangent categories where I don't ask that this phi be invertible, and that's both possible and useful, but not for today. So I'm just going to stick to this version, which you might call a strong or a pseudo-tangent functor. I won't say tangent functor, I'll say math of tangent categories to avoid confusion with this tangent functor. All right, okay, so going back to this example, so we've got this. So, going back to this example, so we've got this tangent category of k algebras. And I guess a thing we can note is that another way of writing this tangent structure, I can say that TA is really just w tensor A, where W is just kx on x squared. Okay. Okay, I can just see it as tensoring with this more atomic object, kx on x squared. And from that, we can compute and I can compute all the other data. Using t and p, I can compute tn and tn of a turns out to be what I'm going to call wn tensor a, where, and then I work. Say where, and then I work out what wn is, and it's k extended by x1 up to xn quotiented out by the ideal generated by xi xj for i less than j. Okay, so that means each xi is nil square and also each xi xj is zero. Okay, so if I wrote that out, elements of wn are going to look like a I can look like a plus b1 x1 plus b2x2 plus dot dot dot plus b n x n, and that's going to be it. Okay. So as a module over k, it's got a dimension n plus 1. All right. Okay. So there we go. That's our notion of, that's this particular tangent category. And then we define what I'm going to call v sub one. What I'm going to call V sub one is the full sub tangent category of K alge generated by the single object K. All right, so that means I take the object K, I close it under T, and then I guess TN, and I also have to. T n, and I always have to close it under all these pullbacks and tangent limits that exist in a tangent category. And I get some subcategory of K alge, which is going to be a tangent category by construction. And if I work out what the objects I get are, it's the full subcategory on objects of the form W sub n1 tensor all the way up to. one tends all the way up to W sub n k okay and so with a little bit of analysis I mean not analysis but with a little bit of checking you can see that that is indeed closed under all the structure you need to get a tangent category okay so why is this category called v1 well the nomenclature comes from Comes from synthetic referential geometry. So, what is a V algebra in this context? It's a commutative K algebra A such that the underlying K module is Finally generated and free, and such that I can write A as the direct sum of the ideal generation, sorry, the K module generated by the unit element plus M where M is a composer of nilpotence. Okay, so M is in fact a maximal ideal, and when K is nice enough, you can characterize these things in sort of more classical algebra terms. They're precisely the local Artinian K algebras. But for that, I guess K has to be something a bit more special than a community of ring, certainly a commutative ring. And I don't remember my algebra well enough to know exactly what else I need, but. Exactly what else I need, but in a nice enough setting, they're just local Artinian K-algebras. All right, so the point is that these V algebras, they give me always a subtangent category of K alge, and now V one And now V1, let's call this subtangent category V. And then V1 is just a subtangent category of V. Okay, it's easy to see that all these W n's, all these tensors of W n's are V algebras in this sense. Okay, all right, good. So now we come to. Now we come to the very nice theorem that Poon proved. So, Poon doesn't quite state it in this way, but I am going to because I think this is somehow more easier to see what it says. And the theorem is that V1 is the free tangent category on one object. On one object, and that object is just k. Okay, so I mean, in particular, inside v1, I have all these tensors. In particular, I've got the empty tensor, which is just the unit k algebra k. Okay, and the claim is that that freely generates V1 as a tangent cache group. So, this is quite hard work, as I've kept saying. So, I'm not going to prove anything like, I'm not going to give anything like a proof, I'll give you the idea. Going to give anything like a proof, but I'll give you the idea. So, if C is a tangent category, and if X is in C, then I'm basically going to define a tangent functor from V1 into C. And so, what do I do? Well, Well, the object K is just going to go to X, right? I mean, that's the deal, right? If it's true on this object, then I should be able to send this object anywhere, and then everything else should be completely determined. And so that's all right. So K goes there. Then all these other objects. So what about W? Well, W is just T of K, right? It's just W tensor K. And so that must be sent to Tx if this is going to be a tangent factor. And similarly, And similarly, if I look at kind of w tensor w, that's t squared of k, and so that better go to t of x. And I can just carry on like this. So for example, if I look at w sub 2, that's t sub 2 of k, and so that better go to t sub 2 of x. And in general, if I've got wn1 tensor, wn k, that'll be better go to that'll be better go to and then i'll do the ordering carefully here tn k down to tn1 of x okay because wn1 tensor all the way up to wn k is tn1 all the way down to t tnk all the way down to tn1 of k i seem to have two different kinds of k but i'll show you can try and figure that out okay all right so that's on objects then on morphism And then amorphisms. So, for example, I've got P sub K, which goes from W to K. And that I just map across to P sub X, going from TX to X. Okay. And all right, so this sort of carries on. You can imagine I can do this for all the various maps of the form kind of P, I could do this for zero, L, and so on. so on but the thing is it's not a priori clear that that is everything right because in v1 that's a full subcategory of v so far i am able to define this thing on certain maps in v1 because i can see visibly that they're of the form like p k or p sub something else all right so if they are obviously part of the tangent structure associated to v1 then i know where they have to map in c and so the amazing thing that uh poon proved is that actually thing that Poon proved is that actually every map in V1 can be built up out of the maps of the tangent structure. Okay, and therefore we know exactly where all these maps have to go to because this thing is supposed to preserve the tangent structure. All right and having done that you're still not done because you then have a candidate for how to define this functor. We have to check that definition actually makes sense in particular it's functorial and that's even more work to do that. So I mean as with So, I mean, as with all of these coherence proofs, you get to a certain point and think, oh, well, this looks good. And then you're not even halfway through. There's just heaps more work to do. And Putin did all this work. And I'm very thankful for that fact because otherwise I couldn't do what I'm about to do. Okay, so I'll just say plus lots of hard work end of proof. End of proof. All right, good. So, this is in a paper by Poon that's in tech somewhere. Do I have a name? Jim. It's called Classifying Tangent Structures Using Vay Algebras. Okay. Okay, right. So that's Poon's result. And so now I'm going to use that to tell you about Vay spaces. About vase spaces. So we can see V algebras as certain affine schemes, if you want. If that's your kind of thing. And what are they as affine schemes? Well, they're the Well, they're the function algebras on infinitesimal neighborhoods of a point. Okay, so the function algebra of point is just k. Oh, sorry, Peter's asked the question: is v1 independent of the read k? No, it's the V1 independent of the rig k? No, it's heavily dependent on the rig k. I just admitted to write it. So k becomes an implicit parameter through everything I say here. Sorry, I should probably have pointed that out. But yeah, V1, everything's just parameterized by k, henceforth. Okay, so we can see these things as affine schemes. Of course, if k is not a community of ring, then this is in some slightly broader sense of affine scheme than is normal, but let's ignore that point. Okay, so what the Okay, so what the point, what is the deal here? So, k is the function algebra of a point. kx on x squared is the function algebra of a point together with a degree one infinitesimal on it, namely a tangent vector. And so if I have k xy on x squared, y squared xy, that's the same as that's a point with two commuting tangent vectors on it. tangent vectors on it. Or I could look at k x y on x squared y squared and that's a point with two non-commuting tangent vectors on it. Okay. All right. Now points aren't very good spaces so you might want to try and glue points together and get something that looks a lot more like a space. So it's natural to want to glue these things together. Okay. And so we have a definition. I guess there's sort of really two definitions. So the category V sp of V spaces Is the full subcategory of functors from v to set on? I'm really trying to fit this on one line, let's do that on the pullback preserving functors. On pullback preserving functors. I don't know why I'm insisting on trying to do this on one line, but I did it. There we go. Okay, the category of v spaces is the full subcategory of v set on the pullback preserving functors. So that's definition part one. Part two is the category V1 spaces of V1 spaces. Spaces is a full subcategory of, and then I restrict to V1, which remember are just these things that we singled out to give the free tangent category an object. And instead of functors that preserve pullbacks, I look at just the ones that preserve tangent limits. Okay, so tangent limits are particular pullbacks. So this should seem of a piece with definition one. Piece with definition one. Okay. All right. So the UNAIDA embeddings, so I can take V brackets one op and I can embed it into V brackets one spaces. So that normally lands in V1 or V set, but in fact. But it factors through this subcategory. And these exhibit V brackets one space as the free co-completion of V brackets one preserving existing and then either pushing. And then either push outs or tangent co-limits. Okay, so in V1, we have tangent limits, and so in the opposite category, I have tangent co-limits. And basically, so V1 space is just the result of gluing together these particular infinitesimal affine schemes whilst preserving these particular co-limits. And these co-limits aren't really like kind of gluing. Like, kind of gluings in the sense of algebraic geometry. There, because I mean, there's just points, right? There's not very much gluings you can do in there. But the ones you preserve are these ones here. And so, in the end, what you think of a vase space as is just a bunch of points. And around each point, there's some infinitesimal neighborhood, but there's no global structure. Structure. I mean, it's worse than that. There's not even any local structure, right? I can't say that one point is near another point. The points are just separate, but they all have their own infinitesimal neighborhood around them. Okay, so it's kind of very minimal kind of space that only has the information you might need to do differential geometry. Okay. All right. So I'm just going to finish this section with a little lemma. Finish this section with a little lemma, which is about Cartesian product. So the Cartesian product in V1 space has a nice characterization or has a nice property, which is going to come in handy in a minute. So if I look at a map from x times y to z. y to z in V space, V1 or V, what doesn't matter, V1 space. This corresponds to a family of maps like this. So XA times YB to ZA tensor B in set, which are natural in A and B. Okay, so what it's telling us is that the Cartesian product That the Cartesian product on V1 space is actually the day convolution product with respect to the tensor product on V. Okay, and so the proof is kind of easy. And the key point is this, since tensor product is actually the co-product, right? We're in a category of commutative K algebras in V1. So in K algebra, commutative K algebras, the tensor. K-alge, commutative k-algebras, the tensor product is co-product, and this effect restricts to these subcategories. And because of this, when we go up into V spaces, you see that yA times yB is just the same as YA tensor B, because the United embedding from V up into V spaces preserves limits. Okay, so if I know that. So, if I know that, then up here, I can write x and y as collimates of representables. And then I can use that times in V space preserves co-limits. In each variable, this condition, which I'll call star, and the Unity lemma. So if I just stitch all those together, then I get the result. Okay, so it's just sort of an easy exercise. But the key point is once I've got this, everything else follows naturally. All right, good. All right, good. So, oh, Poon's back. Hi, Poon. I'm now ready to tell you about the thing which I got out of what Hoon proved. And this is tangent categories as in rich categories. So I've got a paper about this. So I've got a paper about this. And basically, once you've got Poon's result, they're just a step of kind of completely formal deductions that get you from Poon's characterization to tangent categorizing rich categories. So I'm not going to give you those purely formal deductions, although I think they're very kind of nice. I'm going to just tell you the result and explain how it works. So first of all, I'm just going to remind you about a little bit about enriched categories. Enriched categories. So there's a standard notion of category C enriched over a symmetric monoidal category V. So that involves a set of objects. And then home objects C X Y, which are in V and then I've got composition maps which go from C Y Z C Y Z is an object of V and C X Y is two so I can tensor them together in my monodle category V and I can ask for a map from that tensor into C X Z and then identity And then identities similarly are given by a map from the unit of my monopoly category, which I'm going to call k into cxx plus axioms. Okay, we're going to need just one other little notion from enriched category theory. So, in enriched category theory, Theory. So, our normal conical limits that we have in ordinary categories lift to the enriched context, but there's also another kind of limit, which is called a power. So, if C is a V enriched category, I've got an object X in C and an object V in V, then the power Power of X by V is an object V pitchfork X in C together with I'm going to say V natural bijections. So let's say it like this between maps from Between maps from W into C Y V pitchfork X in V and maps from V tensor W into C Y X in V. Okay, so I mean the easy case is where I take W to just be the unit of V. To just be the unit of V. And then I'm saying that basically maps from Y into V pitchfork X in V are the same as maps from sorry, maps from Y into V pitchfork X in C are the same as maps from V into C Y X in V. Okay, so that's this notion of power. And so here's the theorem, which is that a tangent category C Tangent category C is the same as a V1 space seen as monoidal under the Cartesian product. So a V1 space enriched category with powers by representables. Okay, so inside. Okay, so inside V1 space, I've got the representable V1 spaces, which are just these. I mean, a V1 space is a space, and the representables are just these one-point spaces with these sort of nice infinitesimal neighborhoods. And as I say, there's a proof of this. So maybe I can say that the theorem is due to me. So there's a paper again, what's called. The paper again, what's called an embedding theorem for tangent categories. Okay, so that's in there. Okay, and so as I've sort of trailed, the proof really uses Hoona's result. So, given a tangent category C. C I can define a V1 space in rich category C underscore and so how does this work? It's got the same objects and I'm going to tell you what c underscore x tell you what c underscore xy is that's going to be a v space and so i've got to tell you how i get it so it's going to be a function from v1 to set so first of all i've got a function from v1 to c which is the thing the unique tangent functor that picks out y okay so that was the notation we used for that and then what do you know i've got And then, what do you know? I've got the representable functor cx blank intercept. Okay. Now, the first thing is a tangent functor, so it preserves tangent limits. The second thing is a representable functor, so it preserves all limits. And so this functor here takes tangent limits to limits in set, which is what we said of vague one spaces. A one spaces. Okay, so that's sort of how you use PIN's result. And if we make it a bit more explicit, we can say that CXY, so it's a V1 space, so I've got to tell you what its value is at Wn1 tensor up to Wnk. Well, that's maps in C from X into T sub N K down to T n1 of Y. Okay, so you can see very clearly how the tangent structure gets embedded. Clearly, how the tangent structure gets embedded or gets encoded by this enriched category. All right, so far, I've just told you what the HOMs are. So, I should also explain how composition works. So, we need things like CYZ tensor C X Y to C X Z And that's where this little lemma comes in. So, by lemma, that's the same as giving things like this, right? I've got to go from Cyz evaluated at the V1 algebra A times C X Y evaluated at the V1 algebra B. I would go from there into C X Z evaluated at A 10. Evaluated at a tensor b all right and so I mean the general case isn't so hard but let me just give you a particular case just so you can get some I mean once you see the particular case the general case will be fine so for example I've got to give a map like this right X w tens W tends to W2. So this is a map from Y into T Z, right? Because W corresponds to T under Putin's result, and then W2 corresponds to T2. So here I've got a map from X into T2 of Y. And I've got to produce a map from X into T2 Tz. Well, that's easy, isn't it? I go from X into T2. Using it, I go from x into t2 y, so that's f and g say. So here I do f and then here I do t2 of g, and that takes me into t2 tz. Okay. All right, so you can sort of maybe believe that the rest of the structure is going to work out, and this is going to give me an enriched category, but I also told you it's supposed to have powers by representables, so powers by representables. So, I've got to tell you if I've got a representable that's like yw, that's a representable V1 space, right? So, I've got to give you, tell you what the power of an object x is by that. And basically, the idea is that maps from maps in C from Y into this power here should be the same as Should be the same as well, let me just write it out actually. So it's characterized by the fact that maps from yk into C underscore Y Y W pitch for X are the same as maps from and then I guess I can say And then I guess I can say yk hence a yw, which is just yw into c of yx. Okay. All right, so in other words, maps from y into this power should be the same as the maps in Cyx at stage w, which I said a map from y into t a. Which I said I mapped from y into Tx. And so that makes it extremely natural to take that yw pitchfork x is just tx. Okay, so not only are the tangent structure encoded in these homs by the various sets of this Vase space, it's also encoded by this power very explicitly. And that tells you how the other direction of this proof works. Tells you how the other direction of this proof works. If I start with a V1 space in rich Carespuri with powers, in particular things like this, then those powers are what are going to give me my tangent functor on my underlying ordinary category of this enriched category. Okay, so there's some dot, dot, dots here, and then at the end of the proof. All right, so I kind of made it look like I'm doing some work here, but as I Like, I'm doing some work here, but as I say, really, there's just a couple of formal steps you can do to derive this without thinking at all. And those steps are due to Richard Wood and Brian Day. So, really, I've just taken those results and stuck them all together, and you get this, which is kind of nice, I think. So, I've just got five minutes. So, I'm just going to tell you very quickly about the embedding theorem. So I don't know if this definition has been made before, but I'll just remind you if it hasn't. So a tangent category C is representable. If it's Cartesian closed and the functor TNX is just given by X to the DN for suitable objects DN in C. Okay, so in other words, I mean in particular Okay, so in other words, I mean, in particular, the tangent functor tx is just given by exponentiating by an object d, which you think of as the free-living tangent vector. Okay? And so here's the theorem, which is actually now just a very direct consequence of the enrichment theorem above. So I guess again, this is in this paper of mine. For every tangent category, Every tangent category embeds fully into a representable tangent category. All right, so what do we do? Well, we view C. We view C as a V1 space enriched category and consider the enriched UNADA embedding of which there is an enriched UNADA embedding. So this goes from C into C op and then the base of our enrichment which is Bay1 space. Space. This isn't the ordinary functor category, it's the enriched functor category, which I'm not going to tell you what it is, but it's not the ordinary one, it has some extra conditions. So this corresponds to a full tangent embedding. So the codomain is a pre-sheaf category. The codomain is a pre-sheaf category, and a pre-sheaf category always has limits. Pre-sheaves on a small category has limits, so I should say small, I suppose, here. This corresponds to a full tangent embedding. Moreover, so pre-sheaves in set are Cartesian closed categories. In the enriched world, if I'm enriching over a Cartesian closed base, then pre-sheaved categories are again Cartesian closed. So this is because it's pre-sheaves on a Cartesian closed base. So all we have to show is that the So, all we have to show is that the tangent structure on this codomain is actually representable in the sense of being given by exponentiation by suitable objects. The tangent structure on the codomain, what is it? Well, it's always the case in any In any tangent category seen as a vase space in rich category, the tangent structure is just given by, as we said, power with this representable y of w. All right, but the point is this can also be constructed by an exponential, namely I exponentiate by the co-power of the terminal object by yw. Okay, so I don't tell you. Okay, so I didn't tell you what a co-power is, but it's the dual notion to a power. So I take the terminal v space and I take its co-power by yw. Okay, now this exponential here, exponential by one doesn't do anything. And exponential turns co-limits, and copair is a co-limit, into limits. So it must this exponential here, just in any. Exponential here, just in any Cartesian closed enriched category, this exponential here is the same as this, and therefore, this object here is the representing object, making this into a representable tangent category. All right, that's it. Now, that all looks quite abstract, but the nice thing is that we can actually unravel, and I'll stop once I've written. And I'll stop once I've written this down. We can unravel the above construction to find our embedding is of C into a category. Into a category of what you might call tangent pro functors. So I told you to go and figure out what that meant, then you probably would guess correctly. From C into the category V1. And that turns out to be a nice representable tangent category, and C embeds fully and faithfully into it. So I guess the nice thing about this enriched view is that I can't see. View is that I can't see any reason why you'd try to embed C into this category, but it turned out to be like the best possible choice of a representable tangent category to embed C into. And I think that's kind of got to be at least one justification for taking this enriched viewpoint. I mean, there are others, but I guess that's where I'll stop for today. And thank you. Thank you, Richard. Are there any questions? Maybe first. Okay, Richards, I'm still um. I'm still a little bit uncertain about the dependency on K. You see the one depends on it, but it doesn't appear in it's not clear to me how the attentions category all right okay right so okay I should right so I should probably be a bit clearer so if I take k to be n the natural numbers so then uh So then K allergy is just commutative monoids. So that captures the notion of tangent category as stated, kind of, I mean, that's the notion of tangent category. So really, I should just say commutative mono. So these theorems here, it's a family of theorems which describe generalizations or specializations of the notion of tangent category. Category where each TA is not just a commutative monide in the slice, but a K algebra in the slice. Okay, so Ta over A has the structure of a commutative K algebra rather than just a commutative monoid. So I mean, that's very natural if K is the real numbers, then you're saying that each tangent bundle has the structure of a real vector space, or sorry, a real algebra, an R algebra. And our algebra. Okay. So, yeah, sorry, I completely elided that point. I can see now why you're asking questions. Yes. So if you make that amendment, I can talk about tangent k categories or k tangent categories or whatever. And then this theorem characterizes those. But yes, the basic case would take k to be. K to be N and the case that Brasitsky looked at would be, I take K to be Z. Okay, okay. Okay, so I would like to ask, so the embedding theory looks like very similar to the top house. So is there left adjoint some kind of like localization? Some kind of like localization of this embedding. Right, yeah. So you can embed V1 spaces into this functor category, and there is a left adjoint, but it's not a left exact left adjoint. This thing's not a topos in general. Yeah, I mean, can you define similar, I mean, kind of because this is not, yeah, because topos is kind of the free shape of state, but can you imitate some kinds of Some kinds of definition of this kind of topic over what we want. So you can work. So in a topos, you have a very rich internal language. And in synthetic differential geometry, you exploit that very rich internal language to the full. So in this case, you're working in this category of very... Working in this category of V1 spaces, which is not a topos. So you don't have the same internal language available, but certain aspects of it still are available. So you can sort of, I mean, you can use the internal language of a finitely complete category. That's fine. But it doesn't have any of these nice exactness properties or doesn't have all the exactness properties of a topos, although it is infinitely extensive so that you've got some bits of it available, but you can't do everything that you would in a topos. Everything that you would in a topos. Now, I think there is another embedding theorem, which is that I can embed C. So I can look at a topos, which has kind of an embedding of their algebras up into it. And then I can define a notion of microlinear object with respect to that embedding. With respect to that embedding, and the microlinear objects form a reflective subcategory, and that reflective subcategory is a tangent category. Okay, so the better theorem would be that I can embed any tangent category into the microlinear objects or the topos with a kind of an embedding of V into it. So I think there is such a theorem. I haven't tried to write it down, but I sort of roughly know how it might look. And that theorem would allow you to work within this bigger topos and use the full internal language there and then reflect back down into this subcategory of micro-linear objects, which would include these, which would be these V1 spaces. Oh, sorry, which would be this category of tangent profunctors. So, yeah, it's true that you're getting quite close to the sort of toposes that turn up in synthetic differential geometry once you do these embeddings. Okay, thanks. Are there any other questions? I do have a question. Yep.