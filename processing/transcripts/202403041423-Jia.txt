 Okay, so let's resume with the talks of the afternoon. And well, the first talk that we are going to have, unfortunately, is going to be a big talk because very unfortunately, Vikham couldn't join in person for visa problems. So it's a huge pity that she couldn't come, but still she was nice enough to give the top 3. And she's going to be hearing today about this paper incorrectly initial. This paper in collaboration with Michael Boff, which is entitled Honor Haystad: Explicit Examples of Exponential Quantum Security Complexity. So, please, Yifan, whenever you want to start. Yeah. Okay. Thank you very much for the organizer to invite me and for Ranhila to introduce me. And sorry for giving the first talk today online. And I hope that I give the talk online, but it still will not borrow you. And so in this talk, we are. So, in this talk, we are trying to introduce the attempt that I made together with my supervisor Michel Wolf together towards figuring out some explicit examples of exponential quantum circuit complexity. So, let's come to the first question is why are we interested in such kind of examples? Namely, the motivations. So, probably most of you in this workshop will know the definition of circuit complexity usually comes. Circuit complexity, usually complexity refers to the number of resources that you need to do for some computations. So, for circuit complexity of some gates or unitary, then we just refer it to the minimal number of the elementary gates that we require to construct something that is very close to the target unitary that we need. And we call the tolerance that we are allowed here the error, which is larger than zero. And we can write this in the notion of C refers to complexity epsilon ug. Complexity, epsilon ug, while g here is some gate library, which we should require it to be universal so that we can reach any unitary, any qubit unitary. And here we also assume that this gate library contains one or two qubit gates because we want it to be local, but of course you can also allow more of them, which will not change in the end the results too much. And the new The U that we have is our target quantum gate, and the epsilon here refers to the error that we allow. We can define also the same for states, namely if you have some initial product state at the very beginning, then we refer to the state complexity as the number of elementary gates that we use to transfer the initial product state to the target state within dump error. So you should. So, usually, it's easy to think about whether we can get some upper bound on the unitary. And also, like in the year of 2000 to 2010, there are various different paper talking about the decomposition of target unitary, which we know that allows our epsilon larger than zero. We can always do this by exponential of n poly log 1 over epsilon steps. Also, SoloWiki type provides us good results. Type provides us good results. Namely, it's not so much important what kind of universal gate library that we choose, because in the end, we will only have some polylog of one over external overhead, which will not strongly influence our demand of figuring out some unitary that has an exponential circuit complexity. Circuit complexity. Meanwhile, we can also define a new version of circuit complexity, namely the exact circuit complexity, which can be looked as some ideal model that we set our epsilon to be zero. And the C0U here, we can think of, of course, then the gate library, we cannot take it to be discrete anymore because then the circuit complexity can be infinite. But if we take the continuous Infinite, but if we take the continuum, a continuous set of gate library, namely all one or two qubit gates, we can always reach any unitary within exponentially many local elementary gates. So far, we know a lot about the upper bound. What do we know about the lower bound? So it was a very textbook knowledge that actually almost all states and unitaries on an ampetite hilber space will have an exponential. Tight Hilbert space will have an exponential quantum circuit complexity. This can be done within parameter counting or a carving argument that is pointed out in Yensen Trong. Namely, you think about all n qubit states as some unit one vectors on some spheres. And then to cover all the spheres, of course, we'll need exponentially many unit series that we can reach in the end. However, when we come to the question, can we point pinpoint some explicit statements? point some explicit states and gates with polynomial super polynomial lower bound on the circuit complexity namely can we really figure out for example on this big sphere what kind of small points that are actually very hard to approximate this question then becomes super hard so uh think of the question itself uh when we do an upper bound we can always do this by some explicit uh constructions then we are done but if we're trying to do some lower bound then we really have to ensure Lower bound, then we really have to ensure that there does not exist any kind of shortcut or what we are doing is the most clever way all around the world. But how can we ensure that we are always the most clever people on the world? And also think of this as an optimization problem. It does not have any good mathematical structure. So it's extremely hard to just solve this question to have, for example, an explicit, I mean, to come out. Uh, I mean, to come out with the unitary complexity for an explicitly given unitary which does not have some special structure. Also, a similar question can be very hard in classical case as well, because in classical case, we also ask like if we have some Boolean function that can we can we have some explicit Boolean functions that we know that will have an exponential circuit complexity, but this could this is proofing. This could this is proof in the end also very hard because it has been very very long time that we cannot even come up with a superlinear lower bound and also we I mean it's strongly guessed that if you can come up with such kind of instance probably you can use this instance for example to prove P is not equal to N P if this is a question that is in NP. So this question is also thought to be very hard in the classical case. And as far as we know And as far as we know, in the quantum case, we can construct some explicit states and unitaries with a linear lower bound, for example, using the probability bound or using topological order. So basically, you prove that your state has some very global properties that has to be transferred from the initial state so that you cannot use very limited number of local gates in order to reach that. Then our job is done. Then you can prove a linear lower bound. But in the end, we don't know. But in the end, we don't know whether you can construct something with, for example, a superlinear lower bond on the quantum circuit concaxity. Moreover, in Erison, it was proved that if we manage to find such kind of explicit hard states, this will lead to an unconditional separation of complexity class. So namely, construct this states itself, finding this amplitude, we can do this in P and putting this into the states. And putting this into the states, it's going to be sharp P. So it's in general, this process is in P to the power of sharp P. However, since we know these are very hard states to construct, this cannot be in BQP. So especially this implies that BQP is not equal to P-space, which essentially means that actually proving an unconditional circuit, unconditional separation of complexity classes is even harder than finding such kind of instance. So that's why we are saying. So that's why we will say this is a question like finding a hay in a haystack, which refers to our topic. So what we really want to do is we're just trying to find, figure out an exponential hay from the haystack. So of course in this work, we did not figure out this problem completely. Otherwise, I would be super happy. But rather than that, we are trying to approach a little bit this question by thinking of a much easier version of this. Namely, we are trying to search for We are trying to search for some explicit examples whose exact construction requires an exponential size of circuit. So we're only thinking about the Epsom equal to zero case. So to figure out such kind of, to construct such kind of explicit examples, the first thing that we will really think about is we are trying to construct some lower bound on the cyclic complexity to simplify the question. And what we'll use here is to And what we'll use here is to use transcendence degree, which is a very mathematical notion. But in the end, the idea is super simple. So the idea would be, we suppose we have a very small circuit. So it only contains a very small number of local gates. So in the end, this will result in a very big matrix, which will have, for example, 4 to the power of n different entries. But in the end, they all come from a very small number of elements. Number of elements. So, in the end, they have to be very dependent on each other because they have the same, let's say, parents. So, they cannot look too unfamiliar to each other. For example, in this very small circuit, we have six two cubic gates, which will have 96 parameters. But in the end, it will go to some very big matrix, which has 4 to the power of n entries. Then the 4 to the power of n. Then the photo of n entries cannot be too independent of each other. So we use this independence to give a lower bound on the exact circuit complexity. Then the question comes to be, can we give some rigorous definition of this dependence and independence? What we refer, I mean, what we talk about before in this idea. So to define this dependence and independence, we observe that actually what we Observe that actually, what we are doing in constructing a circuit is we do matrix multiplication here and we make tensor product here. So, what we are doing, thinking of like resulting in the entries of a final unitary, we are only building up polynomials. So, we are building up a polynomial on the input of the entries that are in the local unitaries. So, in the end, all operations are algebraic, like all operations. Are algebraic, like all operations are algebraic. So, what we already refers to this independence is, for example, two elements that cannot be built up within each other using some polynomials. That's why we'll refer in the end this are independence as algebraic independence. Now, we come to something that is a little bit more mathematical. So, let's define this transcendence degree. We will say a complex We will say a complex number is algebraic if it's a root of some non-zero polynomial of finite degree with rational coefficients. Otherwise, we'll call it transcendental. So in the end, it's actually not very easy to prove, for example, a number is transcendental. But some good examples that we know is, for example, square root of 2 is algebraic number because it's a root of x squared minus 2 equal to 0. And we can prove like in 19. like in the 19th century we proved that the exponential e itself, the e constant itself, is transcendental. And we can also prove, for example, p is transcendental. And then we will refer the overline q as the field of complex algebraic numbers, because you can think of this as algebraic closure of all rational numbers. Knowing all of this, then we define that. of this then we define that if we have a few numbers a1 to a n they are all complex numbers and we call them algebraic independent if you have a polynomial which we only use algebraic coefficients or original coefficients or integers as coefficients and we have that using this polynomial on the n elements the result is zero then this will refers to that the polynomial itself has to be a zero polynomial That the polynomial itself has to be a zero polynomial, then we call that actually these numbers are algebraic independent. So this looks a little bit complicated, but we can just think of this as an upgraded version of linear independent, which we are more familiar with. So thinking of if we have some a1 to a n that are complex numbers and they are linearly independent over the fields overline q, then this means that if we have a linear combination, Linear combination that in the end comes out to zero, then all the coefficients beta one to beta n have to be zero. So what we do actually for algebraic independent is we do not require that it has to be a linear combination anymore, that the degree here has to be one. And we allow, for example, 0, 1, 2, whatever, as long as the degree in the end has to be finite. So involving that, we can define this algebraic independent. So, similarly, we can also define this transcendence degree as if you have a set that consists of some complex numbers, then this transcendence degree with a gamma on the set will be some integers that refers to the maximum number of algebraically independent elements of S. So, I mean, this also have some very similar analog for the linearly independent case. So, basically. Independent case. So basically, if we have, for example, some subspace, and we will say, like, the dimension of the sub-vector space spanned by some vectors that we have will be the maximum number of linearly independent elements that we have. So, here we are also only counting the maximum number of algebraically independent elements, and we refer this as the transcendence degree. Is there some questions regarding the definition? Okay, if there's not, then we can go from transcendence degree to circuit complexity. So basically, following the idea that we mentioned before, the simple idea of small circuits only involves small number of entries. So basically, in the following, I will apply this gamma also to vectors or matrices or chances. Matrices or tensors. But don't feel it scary because what we are doing is only we ignore the structure of all of them and we're only taking out its entries and form them as a set. So basically we take, for example, gamma of a set of A11, A12 to ANN for our matrix big A. And then we also use this C0U to refer to the exact circuit complexity of a unitary, which we allow. Of a unitary, which we allow all one or two qubits gates as, or qubit gates as elementary gates. Then the theorem that we will have is that if you have some gates, some vector, some state vector or some density matrix that will be represented in a product basis in C to the power of D to the power of tensor N. Then we'll have that actually the transcendence degree of the The transcendence grade of the gate will be will provide a lower bound on the exact circuit complexity only up to some constant. So, in the Q-bit case, then this just means that the transcendence degree will provide a lower bound on 16th times the exact circuit complexity of the unit theory. And the same also applies for density matrix or vectors. Maybe some people will be a little bit unhappy. Maybe some people will be a little unhappy about we are using this matrix representation because it's then strongly basis relevant. But in the end, a better way to think of this is we can look at the transcendence degree of the spectrum of the unitary or the spectrum of the density matrix, because actually they all provide a lower bound on the transcendence degree of the matrix representation of the unitary or the density matrix itself. So if we use, for example, this part, the mostly This part, the most left part, then this will be also basis invariant. Then it provides a lower bound on the exact circuit complexity. The proof idea is, as we talked before, what we're only doing is we'll prove that all the thing that we do to build up a circuit is some operations that are very algebraic. That we do is building up polynomials, which means the transcendence degree cannot increase by. Transcendence degree cannot increase by building up the circuit itself. So, for example, if we take the matrix product of two matrices, the transcendence degree of the entries has to be smaller equal than adding up the transcendence degree of the entries of A plus the transcendence degree of the entries of B. So in the end, what results in the end is, of course, the transcendence degree of the gauge has to be upper bounded by the number Upper bounded by the number of the local gates that we use, multiplied with how many parameters this one local gates have, which is d to the power 4, or for the cubic case, 16. Then we can take some minimal number of the circuit, which refers to C0U. And the second step refers to the density matrix, but this is also easy, so we'll just go across this. And the last thing is a little. Across this. And the last thing is a little bit more interesting because for how to understand that the transcendence degree of the spectrum will be smaller equal than the transcendence growth of A, that is, we'll discover that actually the eigenvalue there are the roots of a polynomial, which is the determinant. And for the determinant of a matrix, all the coefficients are constructed by the entries of A. This means that the eigenvalues This means that the eigenvalues as a root of such kind of polynomial has to be in the extended field by the entries of A. This means that all eigenvalues has to be in this field, meaning that the transcendence degree itself has to be smaller equal than the transcendence degree of the matrix. I've asked a question. Yes, please. I don't know much about this. So I want to connect to something I remember. There's something called an algebraic group, which I think the unitary group is a group. The unitary group is a group. And there's this definition of algebraic, which has to do with like the matrix. I think it's the matrix elements of the group in the ERAPs, can be defined as like being a curve or some curve. Is what I'm saying making any sense and or does it have any connection to what you're saying? I think it's not as long as I know, I don't think it's. No, I don't think it's related, but yeah. I'm thinking like the big units here, u and 2 to the n is like some defined by some big curve that's got like high transcendence, whatever. And then the little little bricks that you use or have like low, you know, degree or something or low dimensional curve. And I thought maybe a circuit kind of builds up this as it goes deeper and deeper, but I don't know what I'm talking about. I don't know what I'm talking about. Is it more related to the geometric approach? I'm not very sure about this. So, yeah, maybe we'll talk a little bit later. But in this point, I didn't recall, like, because we are here, we are just trying to look at, for example, the entries individually, let's say. But I feel like what you are mentioning is more refers to the unitary itself as yeah, I'm not. Yeah, I'm not very sure whether it has a connection to each other, so I don't feel so. But maybe I can think a little bit more. Is there any other questions? Then if not, I will just continue. This very similar message can be applied also to tender networks. Namely, what we are doing is, okay, so first to Okay, so first to these pictures, we can just thinking of this circuit represent, I mean, this circuit complexity, the circuit representation, as a very special case of tensor network representation, which is right-hand side. And then the thing is, then we are thinking of whether we can generalize our result before also to tensor network rep, like the difficulty of represents a tensor by a tensor network. And then the thing that comes to us is actually they have the That comes to us is actually they have exactly the same method because making up a tensor, you are just doing some tensors, building up together, and doing some contraction, which is also building up polynomials, namely like the operations are very algebraic to each other. So that's why we can come up to the theorem too, namely transcendence degree of tender network can provide a lower bound on like how difficult how difficult Difficult, how difficult a tensor network representation could be. So, namely, it's also like the transcendental of the tensor will provide a lower bound on the number of parameters that you have to use in a tensor network representation. So, writing this out completely, then it will be like the number of internal vertices times the bonds dimension to the power of degrees. So, these are basically all. So these are basically all possible parameters that you can include in Tesla network presentations. And the idea here, the proof idea is exactly the same, namely pointing out that all operations are algebraic, so that constructing them all together, you cannot build up anything that is outside of the field. So up to now, we already construct some very explicit examples. Then our original problem, we think, I mean, possible. We think, I mean, a possible solution now comes that is we can change this problem to trying to figure out a number of transcendental numbers that is very large, and we can fit this somehow like into the spectrum of a unitary or the spectrum of some density operators. And for this, there's some very useful theorem that we can make use of, namely called Lindemann-Weierstar theorem, which shows us a little bit the connection. Which shows us a little bit the connection between linearly independent and algebraically independent. So, in this case, if we have alpha one to alpha n that are algebraic numbers, and meanwhile they're linearly independent to each other, then using the exponential function, we can exactly lift the linear independence to algebraic independence. So, you so we find this extremely useful. That's because we recall that if we have a unitary, then this. That if we have a unitary, then the spectrum has a very good form that we like: that is, all values are exponential of i multiply some real numbers. So this is exactly what we want. Then the question would be, can we figure out some large number of linearly independent algebraic numbers that we can put into the exponential? So, thinking of this, the idea that we come up with, let's think of, for example, Up with, let's think of, for example, the roots of some prime numbers: square root of two, square root of three, square root of five, and square root of six, or whatever. And then, thinking of we're trying to build up a linear combination of such kind of numbers that leads to zero. So, a natural guess would be actually you cannot use rational or algebraic coefficients in order to do that. And in the end, this is also a proof result called Besikovich's theorem, namely, if you have P1 to Pn, that are n prime numbers. Pn that are n prime numbers, and then you can take the roots of them, the product of the roots of them, which makes them to be linearly independent. So in this case, what we do is we have P1 to Pn, then we take different roots of them, which here the JK is then one, either, I mean, 0, 1, 2, 2, D minus 1, and then over D. So just different rules, and then we multiply them all together, and then we can prove that actually all of them are linearly independent. All of them are linearly independent. So, combining all of them together, what comes up, what we will have is then we can build up a diagonal Hamiltonian, which on the entries, they are all linearly independent algebraic numbers. And then we look at the time evolution of this diagonal Hamiltonian, which will lead to some diagonal unitaries, but they will have also They will have also then the algebraic independent entries on the diagonal, which will lead to a very high exact circuit complexity. So, this is what we'll get. Basically, we look at the time evolution of some diagonal Hamiltonian, where we put phij here as the entries of the diagonal unitaries as the products of the roots, which we actually apply the Basikovic theorem. And in the end, we have to ensure that. Ensure that every like the entries appears here should be algebraic, so we cannot take a random t. So, here we can actually take all algebraic t, but for easier observation, we'll just take the integer t. And from previous slides, we'll know that the exponential of it phij are algebraic independent. All d to the power of n elements are algebraically independent. And from the theorem that's called. And from the theorem that compares the transcendence degree with the circuit complexity, we know that actually the exact circuit complexity has to be exponential of n. This is just applying what kind of theorem that we come up with for. And since we use the transcendence degree of the spectrum, this result is stable on the perturbation of eigenbasis. Also, UTs do not admit an easy tensor network representation. Admit an easy tensor network representation exactly by another theorem that we extended. So, the theorem two that we extended from the circuit complexity version. And then the interesting thing is here, actually, for this description, first the UTs are very explicitly given. Well, while here we actually only include P1 to Pn that are N primes, and we have one line to describe what is going to happen by the future. describe what is going to happen by the PJ and actually we can already written write out what the diagonal unitary is. This is very not this is very different to the usual like random unitaries that we have because usually if you have a random unitary it's also very hard to talk about this because it will have four to the power of n parameters that you have no idea like how I like explicitly writing this out would take an exponentially long time. Exponentially long time. Why we're happy about why we find this result interesting is also because, for example, then thinking of we have 100 of primes, and then the 100 prime is then 541, which is three digits. And then using all of them, you can build up a unitary that is 100 qubit large, and it will have an exact circuit complexity that is ensured to be larger or equal than 2 to the power of 96. equal than 2 to the power of 96, which is something like 10 to the power of 28 or something similar. So we can have something that has easy description but very high exact complexity. But then the complaint will be okay, but then we don't have anything known about the approximate version. Yes, because the transcendence degree, for the transcendence degree, we are talking about independence and Are talking about independence and dependence and independence, and we know that if we perturb this a little bit, then everything will change variously. So, we cannot actually use this transcendence degree argument for allowing this epsilon to be larger than zero. But still, here in this case, we can come up with some probabilistic results, namely, to look at this family explicitly, we can put the we can push this t into infinity, then we discover that. Into infinity, then we discover that this family will be uniformly distributed on the diagonal unitaries. So that actually you can apply the results for diagonal unitaries, also for our specific families of examples, so that we know that all but double exponentially small fraction of the example unitaries that we have can be also proved to be hard, even if you allow epsilon approximation. But however, partially we are happy, but partially this does not matches what But partially, this does not match what we want in the very beginning, but because we want some unitary that can be described explicitly. But in this family, we don't know like where this hard instance is going to happen. Probably the T could be like super, super large. If the T is super, super large, then it does not really meet somehow like our requirement that this is easily describable. So this is some probabilistic result, although we are not completely satisfied with it, but still nice to see. But still nice to see. And I didn't say anything about the state here, but we can do exactly the same or similar construction for states. And we can also prove the approximate result for the state as well, because we can transfer this as to be uniformly distributed in maximally coherent states. But all of them, they were included in the paper, so I want to skip them in order we can talk a little bit more about overlook and summary. Bit more about overlook and summary and whatever. Okay, I have five minutes left, so let's summarize. So, basically, in this talk, what we were trying to do is we construct some explicit sets of unitaries and states such that they have easy description, meaning they have only a linear number of prime numbers and prime numbers, and you have one line description, and then you come up with all the entries. And their exact construction will require exponential. Construction will require exponentially many local gates. This is a result proved by the theorem that we derived at the very beginning. And the vast majority of the examples are hard to approximate. So this is a probabilistic result if we allow epsilon larger than zero. Also, so the most one of the one of the things that people get interested is just this new lower bound on the exact circuit complexity, which Circuit complexity, which is based on the transcendence degree. I think it can be seen as some new tools to give some lower bound on the exact circuit complexity on one explicit unitaries rather than thinking of, for example, the unitaries as a set together. For example, think of this, all of them as a ball or whatever. So, this is some other approach because you can pinpoint some specific unitary and talk about it. Specific unit area and talk about its circuit complexity. And similar method also applies for tender network representation because all operations are algebraic. Also, transcendental number theory can be used for proving some no-go result in quantum information theory. Because before, I think there are also some examples that people try to use this transcendental numbers and algebraic numbers to prove that something cannot be done or whatever. So this is actually a Or whatever. So, this is actually a good mathematical tool to do something like this. For overlook, there's a small follow-up project that we are trying to use a similar theorem to build up some explicit circuit with linearly growing exact circuit complexity using some C-NOT gates, putting the correct positions by grid codes, and some zero rotations on single qubit. And we construct this. qubit and we construct this to be a so so this is an iqp circuit which there exists some results saying like uh simulating this should be hard classically and uh we're just trying to use this kind of circuits uh and combine with our method before using transcendence degree together to say like such kind of circuit actually will have the complexity increase every two steps because you have a new number that is algebraically increased. That is algebraically independent of everything that you have before. So it's actually some quantum circuit that is incompressible. And the intuition is whether we can provide some new tools or some new sites to the Browns-Wins-Keyn conjecture, which basically tells us if you have some random quantum circuit, then applying each step something, then the quantum circuit complexity has to be increased. And this is based on a note together. A note together with Jonas, I think in the workshop, Jonas Hafferkamp and Khriti Tekun, and currently in preparation and hopefully will be out soon. In the end, let's talk about the thing that we really would like to look at. So actually, this question comes a little bit to the bottleneck by we, of course, want to figure out some explicit case that is hard to approximate as well. Hard to approximate as well. And then we really need some tools for that will work for the complexity notion, allowing some allowing approximation and whether we can find some tools for this. And I think the problem is we don't have some very purple tool to provide some lower bound on the circuit complexity extremely when the circuit goes very deep. Also, another side to look at this problem is whether we can think of the implementation. we can think of the implant implications of the lower bound on a complexity and what kind of result can it can it i mean uh can it lead to if we provide such kind of explicit examples of uh exponential circuit complexity so first thing that we are thinking about is how we combine actually the notion of the complexity for description namely you counting the parameters and whatever so of course it also it's also It's also up to how people define this descriptive complexity on whatever, but how we actually can understand the relationship of describe something efficiently or hard and the notion of really compute something that needs a lot of steps that are really hard. So, actually, how can we combine the two notions of complexity? And the other implementation and the other direction would be whether we can find some other implications of explicit states with. Of explicit states with exponential complexity other than the unconditional separation of the complexity class. And one important thing is whether we can find some other haystate construction that is hard, but is more natural, like not human-made, and more related to what we are interested in. So, this is basically some outlook of what we can do as some follow-up, I mean, after this project. I mean, after this project. So, thank you very much for listening. I think I'm just finishing time. And do you have any questions? Thank you very much, Huffa, for the nice talk. Can I ask you a question? Will this work? But I'll ask the question here. I think she can hear you. Yeah. Yeah. Is there an obvious relationship between the complexity of description and the spectrum complexity? Of description and the circuit complexity, because you could find like very simple descriptions. Like you take a local American, you need like what we order n parameters. You say, take the ground state of this local Amatonian. That's a very short description. But the certain complexity could be exponential and generally is, right? Yes. Yes. So, like, why would one the other? Do you have insights into the relationship of the two? Sorry, I didn't hear the. Sorry, I didn't hear the last answer. Do you guys have an insight into the relationship of the complexity description and the unitary circuit complexity? Yes. I think what you have talked about is also like, I think some partially like shows, for example, what could the relationship should be. So, I mean, I think, yeah, I think the general, I mean, if I have to guess something for that, I would say, like. To guess something for that, I would say, like there should be something that can be described easy, but still have very hard, uh, very high complexity. And what you have mentioned before, or this brown twist can conjecture, should be like some instance for this. For example, if you have some local Hamiltonian, then you will allow this to evolve, and then the complexity has to grow, or you look at the, for example, the ground state of the long-evolving Hamiltonian, then the ground state will at some point be very hard. So, I mean, for me, it reflects somehow like. Me, it reflects somehow like some perspective of these questions, like my understanding at least. Thank you. Yes, so that's why I would guess that probably you can also find such kind of haste. I mean, also it's hard to find, but probably it's it could be fine. But the thing is, probably it's very hard to find whether they just are existing, or we don't know. Yes, so um, have you? So have you read this paper? There's a paper by Ben Lovitz, where he uses like techniques to construct explicit examples of quantum states that have exponential stabilizer rate. Sorry, could you please repeat what paper it is? It's by Ben Lovitz, and I think there's one with specific examples of states. Examples of states that have some stabilizer. Back stabilizer rate, but not approximate stabilizer. I feel like these problems and perhaps the techniques are somewhat okay. I think first I cannot hear very sorry for this, but I cannot hear very explicitly about what the paper is. But I think I didn't, I haven't read about it. You mean the exponential stabilizer? Sorry? Sorry? Yes. Yeah, okay. Yes. I don't think I've read that. Maybe it's good to have a look. Yes. Are there any more questions? But it doesn't seem to be at least different. So thank you very much again for the talk. Thanks a lot for all comments. Yeah, I think I will stop sharing now. Yeah, I'll see you online for the rest of the watches. Yeah, then see you online at some other point. Yeah, no problem online. Yeah, no problem. Yeah, no, no, I think we have half an hour for discussion. So you can say some discussions. Well, it's not actually. 