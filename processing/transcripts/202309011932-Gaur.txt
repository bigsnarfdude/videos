I'll give a brief overview of what bits are, how they differ from cluster bits. Really, how can we get information out of a quantum system? Basic toolkit that we use in computer science to design algorithms. There are a couple of things in there. I'm only mentioning one thing. Engine one thing. Where does the power come from? There are four or five general principles. I will talk about one principle in particular. Rather than write code, we like to draw pictures. So I will show you a lot of pictures which can do different things. And right at the tail end, I will show you some of the stuff that one of my students did. Very recently. It's still half picked, so any comments would be greatly. Would be greatly appreciated. So classical bit is in one of the two states, either it's on or off, just like a light bulb. And we need one bit of information to describe this state. Rather than think of that bit as a single bit of information, we can think of it as a vector in two dimensions. Dimensions. The two orthogonal bases correspond to the states. It's cumbersome to write these things, therefore we use some notation. If I have two classical bits, I can still talk about their states influenced in these funny symbols, right? So both of them are in state 0, 0, both of them are in state 11. Not only that, sometimes rather than specific. Sometimes, rather than specifying the binary thing which corresponds to the state of individual qubits, we will specify the decimal number, right? So, this translation is automatic. It depends on whether we read the bit from the left or from the right, but it should be clear from the context. So, if I have a collection of n c bits, then we can describe uh exponentially many states. Exponentially when it is the base. So, so far, nothing new. All I have done is tagged these brackets to my states. One of the things that is difficult to quantum computing is that operations have to be reversible. Luckily, we can do reversible computing on classical bits also. If there is only a single qubit, then there is one reversible option. qubit then there is one reversible operation the not gate in physics textbooks it's listed as the x gate definition of which is if the bit is in this state and if we apply this operator the new state will be this if the bit is in this state if we apply this operator then the new state will be the other one not the one we started with a good way to A good way to describe this is using a circuit of this type. The wires correspond to the bits. Right now, they are still classical. We apply the gate operation. Input is to the left, output is to the right. If you want to model the math behind it, then this state can be computed from the input state by performing a matrix multiplication. Multiplication matrix definition of the x operator is this. But we will not work with this notation quite a lot. In fact, we will not really use it that much. If I want to explain how I got from this state to this state, this matrix multiplication. So to simplify matters, all we need to do know is All we need to do is know as linear algebra. That's all. There is a reversible operation on two classical bits which is very very important. It's called control not control in the sense that one of these bits is the control, the other one is the target and target gets flipped. The state gets flipped if and only if control is one. Control is 1. In this example, in this picture, target is y, control is x. So if x is 0, it's in state 0, then nothing happens over here. But if x happens to be in state 1, then XR operator forces Y to change state. And the schematic, the pictorial representation of this gate, of the control mod gate, is. Of the control NOT gate is X connected to the control wire, the control bit with a solid dot. Sometimes this black dot will be shown as a hollow circle and I'll point the difference when that happens. Really what does this do? It stays 00 or nothing changes because control is 0. Nothing changes because control is 0, control is 0. Only when the control is 1, target gets flipped. I think now we know enough that we can write the matrix description. The point here is the matrix is of large size. If I have 2 qubits, then 2 possible bits, then this matrix is of size 4 by 4. If I have n such bits, I can define a control mod over n bits. Then this matrix would be of size 2 to the power n times 2 to the power n. You can think of indices corresponding to these columns and what the C naught operator does, it changes the basis indexed by 2 and 3. So I have introduced the famous notation without Introduce the famous notation without even talking about qubits, right? Now, what really is a qubit? It can be in a state which is given by this quantity where alpha and beta are complex numbers. There is one constraint on these complex numbers. The squares of the magnitude should sum up to 1. Why? Because we want to treat them as. Why? Because we want to treat them as probabilities later. This definition already gives us many possibilities, many in the sense that there can be infinitely many states which a qubit contain. A classical pit cannot do that. So already we are gaining something. Not only that, a classical pit has to be either or, but a quantum bit can be in a superposition. It can be in a superposition, so-called superposition. We have bigger problems. For a classical bit, we needed only a single classical bit of information to describe this thing. Here, we have a number which does not have a finite description. So, we cannot describe alpha in beta. Alpha and better precisely. So we have gained a lot just by introducing this definition. We have gained infinitely many states, we have gained superposition and we have gained in some sense lot of information. Information that is tied to number of bits in the decimal expansion of let's say the real part of alpha vector. There is one catch. We are all used to copying files, moving data from one USB to the other. Qubits, we cannot do that. An arbitrary state of a qubit cannot be clawed. It looks like a restriction, but it's really not because most of the time we are interested in those states which can be closed. So, what does it mean to work with qubits? If my qubit is in this state, it's a superposition of this state and this state, these numbers, the square of them add up to 1. And if I apply the non-operator, what is the resulting state of the system? What is the resulting state of the club? Well, apply x linearly to the two terms. And there is no classical analog of doing this efficiently. In the sense that I can change state, which could be very large state, I can change that by applying a small number of operations to a new state and that operation cannot be performed efficiently classically. There is another very important Operator called the Z operator and all it does is it puts a phase of I'm using a new word without defining it in front of the one state right so if the original state was 0 nothing happens to the face if the original state was 1 then there's a minus 1 at the top here it's illustrated again by linear It again by linearity, nothing changes over here, but on this side we get a minus sign of the problem. If we take those two linear operators and create a new linear operator using this definition, we get something called a convergent. And all these operations x, z, and h are reversible in the sense that if you are are reversible in the sense that if you apply them twice you get the identity matrix get back to the we would get back to the point that we started right so hardemar when applied to this state gives us something which we call the plus state right why this matrix multiplication will give us one square root of two ket zero plus one square root of to get one label it to be plus we apply this ket2 We apply this kit to state one, we get a state which we call k minus. As an illustration, take a superposition, apply h. H on this will give me something and h on this will give me something. Things may either add or they may cancel out their positive or negative interference, right? So, in this particular state, the answer would be So, this gate is a basic gate and it gives us ability to do a lot of things. So, those of you who are with a math background, this picture might look very, very familiar. Something is commutating, right? And indeed, it is. If I take these four states, which we have talked about: 0, 1, Which we have talked about 0, 1, plus, and minus, then by applying the x k, I can go from 0 to 1, both directions, right? If I take plus and minus x, then by applying the z operator, I can go both directions. And from here, we have seen on the previous slide, I can go in both the directions using Hadamard. And between 1 and minus again, I can go from this side to this side using Hadam. So this picture really tells me that So this picture really tells me that some two of them is enough, h is of course necessary, but I can describe z in terms of h forward by x forward by h and similarly x can be written as h forward by z forward by h. So there are lot of such nice relationships. I am just giving one. You should keep in mind that this I don't want to use this word. I'll say it. And say it at a pause.