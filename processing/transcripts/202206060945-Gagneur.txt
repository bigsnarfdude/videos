Yeah. So this talk is on the different topics. I'm moving to PortelMix here. I'm going to show you a project we are running at the moment to try to perform de novo peptide sequencing. Before I start, let me advertise a seminar that we are running called the QP seminar, which is a Which is a webinar once a month where we had quite a nice set of speakers on deep learning applications for biology. So feel free to visit the Kippie website and register there. Also, to why not suggest talks if you want to speak here. We are very welcoming talks. Coming talks. Okay, so as you know, DNA, RNA, and proteins are the three major classes of molecules of life. And DNA and RNA can be sequenced at high throughput. And that allows us to study a large variations of genetic modification, mutation detection. We can perform, we can discover species, pathogens, perform metagenomics. Do also or support a lot of synthetic biology, perform DNA barcoding, etc. If you also search the entire combinatorial space of DNA and RNA sequences easily. With proteins, it's very different because we don't have such a tool. Proteins cannot be sequenced. And in practice, we are good at retrieving what we know already, but a proper de novo sequence. But a proper de novo sequence technology is not available yet. So, however, there are basically deep learning is helping here and we see progresses on this problem. I'm just mentioning a few methods here that leverage deep learning in combination with mass spectrometry to improve on this side. On this side. So, why mass spectrometry? So, tandem mass spectrometry is, as far as we can see, the technology that is closest to allow us to do de novo sequencing of proteins. And that is by techniques in which proteins are digested in a first step through enzymatic digestions into short peptides, typically 10 to 15 amino acids. Are typically 10 to 15 amino acids. I'm just making a little cartoon over there here. I will focus on those three amino acids in the center as a typical peptide coming from this first step. And then those peptides in the mass spectrometer are ionized and they get fragmented. Ideally, they get fragmented at every position between every amino acid of the peptide. And each of these fragments. And each of these fragments, of course, it's not a single molecule, it's a bunch of peptides that come together. Each of these fragments give you different ions. We'll focus here on two types of ions, the B ions, which are here from the left to right, from the N-terminus to the C-terminus, and the Y ions, which are the complementary one from the other side. So, on a computer science point of view, you can think of the B ions as the prefixes and the Y ions. Prefixes and the y-ions as suffixes. And then each one of them goes into another round of mass spectrometry. So their mass overcharge will be determined at a very high accuracy, by the way. And so in an ideal world, a scatoon here, one gets a peak for each of these sub-ions, for each of these fragments. And then in theory, if everything was easy, if we were actually having a label on every Actually, having a label on every peak, if we knew which ones were the B's and which ones were the Y's, we could simply, for example, take the B series and look at the differences from the start and then to the next peak, etc. Or we do it the other way around from the Y point of view, starting from the precursor mass and read out from the differences of masses between those peaks the actual sequence. I guess you guess that this is not an ideal world. Ideal world. First, yeah, so that's just what I said. First, the peak labels are not known. It's not such a hard problem because if you know the start or the end, you can easily get an anchor, but nevertheless, you can have a problem here finding the right labels. And then there are many missing peaks. And once you start to miss two, three, there's a combinatorial possibilities to make a bridge between peaks. And you have contamination peaks. And you have contamination peaks. You have in this drawing here, or this actual data here, the gray peaks are peaks that do not correspond to the actual peptide sequencing. They're coming along because the precursor may have a similar charge, and then they gives you the blurry ID. So if you start just from the data without the labeling, then it's going to be more tricky to do the benefo peptide sequencing. So the methods that The methods that we are proposing is the following. We want to, or we suggest, to consider the problem of denominal peptide sequencing as an image translation task. So what image are we talking about? We look at this 1D image that is along the mass of a charge of the peptides. And then we do very small pixels in a way. They are pixels which are. In a way, they are pixels which are of one Dalton, and Dalton is the mass of a proton or neutron. And then, in each of these, along this image, you have the channels who correspond to regular and blue, but here you can encode many things. At the start, I'll tell you that we can encode the peak height, or the sum of peak height, or the maximum of the peak height that falls into a bin. And you'll see that the framework is flexible, and one can make use of those channels to provide more information. Channels to provide more information to a neural network that use this framework. And then, why is this allowing us to do the novel peptide sequencing? Because you can think of this as an image translation. You want in your output an image that has the same dimension, but for every bin, now can I give a label? Can I give this B plus or these Y plus labels? And if I had them, then I should be able to come back. So we're going to look first at this problem. And this is something we do together with Daniel and Dalai. We do together with Daniela and Dela. The second innovation we're proposing for this field is to deal with this very, very sparse data, right? So I have an image, but I have peaks that can be separated by things as long as 186 deltons, or 186 bins. This is the mass of the tryptophan, the most heavy amino acid. So, if I want to relate this bin here to something which is a tryptophan away, I need to look up. Far away, I need to look up so far. The thing here is we know beforehand the mass of these amino acids, so we can actually construct a convolution which we call a gap convolution that directly picks the information over there. And there we work with also with a master student, Johannes, who suggested to do this in an efficient way by basically constructing a so-called view where we pull out at every position here, basically the data shifted by the mass of the amino acids. By the mass of the amino acids, and now we are back to we have an image per amino acid, and now we can do standard convolution where the convolution left and right looks at the neighbor beams, but up and down. So in the upper track and the lower track, you have things that are this 50 or 186 Delta up or down the line. And so this allows us then to efficiently look at these faraway distances. And now every layer basically. And now every layer basically is able to connect peaks that could be corresponding to adjacent fragments. And then from layer to layer, we're basically able to go at higher resolutions. Okay, we can also build on prior work and prior work from our colleague Matthias Wilhelm at the tomb has done as basically make a strong contribution in the forward problem. Contribution in the forward problem. If I know a peptide sequence, can I predict the spectrum? So, can I find out what is the height of the peaks, which one will be missing? And so, this is something you can see here on the right-hand side from the original paper from POSIT. A particular sequence is provided to that algorithm, and it predicts the height. So, you have the predictions at the bottom, and then kind of mirror the experimental, and you see that. Experimental, and you see that this is a non-matching peptide, and this is a correctly matching peptide. And here we have very nice matching heights. And so, what we actually, this was the starting point of the project is if we have a solution for the forward, can I use it and optimize it back? And so, we're going to make use, of course, of this data for the algorithm. So, what we can do is we can basically leverage tools like Prozit. We can leverage competitor tools that already did. Competitor tools that already denounce peptide sequencing in such an image translation task, where we provide in the input not only the heights of the experimental peaks, but we can also provide candidates labels. And so our task is now just to correct candidate labels. We don't have to discover from scratch. We can also provide, and we do this, predicted peak heights. And so then it's still the same architecture and same. Same architecture and same task output a probability for the B plus or the Y and the Y plus series. So that's the binary classification. Here is an example on a real data set. You have at the top one of these spectrum. You see, so let me guide you through this complex slide. You see here the peptide suggested by Pinoval3. Peptide suggested by Pnobo3, another algorithm, and this is almost correct up to a permutation here. It's correct, Egk, it suggests EGK at the end, and the correct peptides ends with GEK. And so what you see is that there are these beans over there that have, or these are here, that have a wrong association. So here we have, for example, with the EGK, there is no With the EGK, there is no suggestions for a peak, but we are predicting. This is the class probability here. We're predicting that this is actually the position of an ion. And then when we go with as input the correct peptide, we are we have a full agreement. We are not suggesting any changes. So the probabilities of changes are all very low. Whereas here, we are suggesting two changes for those two positions. And this means this is actually the correct peptide, and this was a contamination. This was a contamination, the correct peak, and this was a contamination. So that's one example. Globally, we can improve a bit the B plus beans and quite a bit the Y plus beans from candidates from P novel 3. And so this gives us a first basis for doing an improvement. How am I with time? How long? Started a bit late. I have 10 minutes? Okay. So far, so good. So far, so good? Okay. So, nevertheless, this was not completely solving the problem. I mean, we are able to relabel classes, beans, but you still need to get the full peptide sequence. So we have then leveraged on that algorithm in a number algorithm that is a bit more complex. I will guide you through it step by step, which is a You through it step by step, which is a genetic algorithm. So, the idea is the following: instead of just focusing on one possible solution, we're going to work in parallel on an entire population of candidate peptides, which is depicted here. So, at a particular generation, we have a series of peptides, a family of peptides. And then for each one of them, we'll compute a fitness, a goodness of fitness. A fitness, a goodness of fit to the actual experimental spectrum. I'll show you how we compute this in a minute. And then this is a genetic algorithm. So what you do is you select from a particular population a certain set of subset of individuals, weighting them by their fitness. So the fitter, the more likely they are to be represented in the next generation. And then what you allow is some types of mutations. And here, what we have implemented. Have implemented some guided mutations that make use of our binary classification, where we have hints as to which places seems to be correct and which places seems to be wrong. And that gives us then the next generation where we compute the fitness and we do this for several generations. Okay, so first, what is our fitness? So, as a fitness, we know we're going to make some edits. So, what we realize is we would be able, we're actually able to farm. We are actually able to farm a particular peptide, a candidate peptide. We're going to make an estimator of the number of edits you have to do on this sequence to get the correct one. So there's enough data to train such an algorithm. And so this fitness, the edit distance, is called a 11-shine distance. We train it here with a random forest, was a good choice, providing a set of. Good choice providing a set of features for that. Which features did we use? Where I showed you posits that are extremely good from a particular sequence to predict a spectrum, so we can compare the POSIT predicted spectrum, these are these, and the actual experimental spectrum. So that's one way to see whether a peptide seems to be fit. And then we also have this binary classification. We should suggest very little changes in the bin if we believe it's a In the bin, if we believe it's the correct one, and so this is the other part of our algorithm. Um, this to show you that this uh bin at this distance is not too bad, I show you at the bottom here the Levenstein distance between a candidate peptide and the correct peptide, and on the y-axis, the number of predicted changes when I use a particular threshold for my probability. And so, around 0, 4, 0, 5, what you see is that you have a relatively nice separation. Relatively nice separations of the distances. So, we have indeed quite a bit of information in our bin class predictions for the actual number of edits that has to be done on the peptide level to reach the correct one. Okay, so here is the result of the random forest. These scatter plots basically are testing whether our fitness will be helpful, will be helpful in the sense of discriminating the correct peptide. Discriminating the correct peptide from an incorrect. So, what you want is always a higher score for the correct compared to the incorrect, so that we keep optimizing to get this correct peptide as the best one. So, that's important, and that's what you see here. There's maybe over 90% of the peptides that actually have a higher score than an incorrect peptide proposed here by one of these methods, Novor, and here P novo3. P novel 3. You see this on two different data sets: a HeLa cell line and human tissue data sets from Wong et al. Good. So we have that in place. And I may have five minutes still left. We have the fitness score now. Remains now how we are going to perform the mutations. Okay, so guided mutations. As I said, we have established. As I said, we have established this tool for Bing-class probabilities, and we're going to leverage that by proposing mutations in sequence space, right? We work on sequence space, which mutations I have to do in the sequence space to propose new individuals that hopefully are going to do a better job at the fitness level. So, here we leverage a concept that has been developed several years ago. Been developed several years ago for denovopeptide sequencing called the spectrum graph. It's a lot of concept. Everything's fine so far. Yeah. The spectrum graph is a graph, directed graph that's where every node corresponds to a peak. For us, it's going to be a bin. And we can put edges between bins when their differences correspond to the difference to the mass of a charge of an amino acid. Of a charge of an amino acid. And then what we're going to try to do is find a path that starts from the source from zero all the way to the sink that corresponds to the mass overcharge of the entire precursor. It's something we can measure and know beforehand. And these paths must use basically edges that corresponds to amino acids. What we have that those algorithms didn't have before now is we have on every bin, we have a Have on every bin, we have a confidence that this has to belong to the B series, and you can imagine the spectrum graph can be also visited the other way around or the y series. So, this allows us to give some weights to have some more favored path through the spectrum graph over others. So, what we do is this, we provide basically an algorithm that first prunes a bit the spectrum graph to have only those that are connected by edges. By edges that correspond to amino acid mass. And then we basically, in this mutation process, from a given peptide, we're going to draw random paths through the spectrum graph, favoring paths that go through bins that have high probabilities. So here's an example where we can draw from the same graph two different peptides. Two different peptides. Okay, so far, so good. Good. And so when we put all this together in the genetic algorithm, run the genetic algorithm here for just five iterations on this HILA data set compared to PNOBO3, what we see is that we can improve quite substantially the entire overall recall by 27% to 37%. To 37%. This improvement is also true at pretty high precision, which is a regime of high interest for application where you're actually sure of your predictions. You see, this is still not cracking the problem, but there is already a substantial improvement. We've done here this for PNOBO3, and we are in the process of applying it on other algorithms. Other algorithms and a larger data set. So, in conclusion, I show you that this problem of de novo peptide sequencing can be casted to an image translation and that this framework is quite flexible. One can play with the input of this representation of the data. And that can be helpful directly for the translation, but also for questions that are related to de novo peptide sequencing. We introduced also a We introduced also a new layer that may be helpful for mass spectrometry with this gap convolutions where the gap corresponds to amino acids. We have this score that is very helpful because it's good. And we showed, I didn't show you this, but we can take an existing method. It simply re-rank with our score and improve a precision recall. So I have a better way of finding whether you're confident in your identification. So this also by itself maybe helps. So, these also by itself may be helpful for the community and others to build upon. And then, finally, we made use of all these innovations into a genetic algorithm, which have promising results on the first data set. More extensive analysis and benchmarks are on the way. And yeah, we hope that this is going to give further good results. With this, I would like to thank the people in the lab who've been working on this project. So, Daniel. Been working on this project. So, Daniela Claport-Henré, the PhD student, working together with Johannes Hingerl. And this is a very exciting and fun collaboration with our colleague Matthias Wilhelm, also at the tomb. Okay, thank you.