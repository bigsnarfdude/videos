Okay, actually. Okay, well, welcome back. It's my pleasure to introduce Federico from University College London. And he's going to talk about a geometric presentation of the flop-flop auto-equivalence as an inverse spherical twist. Yeah, go ahead. Thank you very much. First of all, I would like to thank the organizers of the conference for organizing. Of the conference for organizing the conference and inviting me to the conference and giving me the chance to present my work. The title for this talk is, as Nitin just said, a dramatic presentation of the flop-flop of equivalence as an inverse spherical twist. And of this title, there are three words, which will be the key ingredients for the talk and the result itself, which are flop. Result itself, which are flop, out equivalence, and spherical twist. What I'll do during the talk, I will introduce these three pieces and then I will state the theorem. And in the end, we will work through some explicit examples and see how things behave. As a convention, during the talk, all the functors will be implicitly derived, so I won't write left or right, right functor. Write right functor, I would just write the functor itself. So let me start giving you the definition of what is a flow. I would not be extremely careful here, it's just to give you an idea. So we start with a map F minus from X minus to Y, which is a small extremal contraction. And roughly, this means that the locus contracted by F minus. By F minus has codimension at least true, and that F minus contracts to a point, a curve, which is extremal, and such that the intersection of Kx minus with C is smaller than zero. Furthermore, we require that the canonical class of X minus is trivial with respect to F minus. Then, when we have such a datum, we can define what's a flop of We can define what's a flop of f minus, and that's going to be a birational morphism f plus from x plus to y, such that three properties are satisfied. The first one is that x plus is not isomorphic relative to y to x minus. The second one is that also the canonical class of x plus is trivial with respect to f plus. And the third one is that x plus has only mild or terminal. Only mild or terminal singularities. This is a birational geometry notion. And the reason why we're often interested in this is that there's a conjecture proposed by Bondal and Orlov that says that in such a situation, we expect to have an equivalence between the bounded derived category of X minus and the bounded derived category of X plus, whereby dB, I mean the bounded derived category of coherent sheaves on such Of coherent shifts on such scheme. Let me give you the easiest example possible of such thing. This is the Atia flop. In this case, the situation is quite simple. We take x minus to be the total space of O minus 1, two copies over P1, and X plus is the same thing. Then we can contract the zero section in both these spaces, and we get the singular. And we get the singularity AD minus BC inside A4. And let me notice that even though X plus and X minus are isomorphic, they are the same variety, there doesn't exist a map in either of the two directions that make the relative diagram over Y commute and such that it is anisomorphic. So even if dBx minus and dBx plus are clearly isomorphic in this case, Isomorphic in this case, it's still interesting to understand whether they are isomorphic relative to y. Notice also that in this case, x minus and x plus are actually Calabial, so the triviality of the canonical bundle is obviously satisfied. There's a theorem due to Bandel and Orlov that says that in this case we have the sort equivalence and this equivalence is linear over y and this is because we can And this is because we can construct it via pull-push via the fiber product, which in this case is given by the total space of O minus 1 minus 1 over P1 cross P1. So in this case we have an equivalence and this is the easiest example possible. The problem with this conjecture is that it doesn't provide us with a functor and this makes it even harder to This makes it even harder to tackle because we don't have a functor and we just can check whether that functor is an equivalence or not. We have to produce a functor first of all. However, there is a natural candidate, and that candidate is, as in the case of the Atia flop, the pull-push via the fiber product. So we take, we call P and Q the projections respectively to X minus and X plus from the fiber product. And x plus from the fiber product, and as a matter of notation, from now on, I would denote the fiber product as x hat, and we get two functors. Now, let me remark that at the moment I'm ignoring problems that might arise because of the singularities. So, for example, does the pullback preserve boundedness? Because at the moment, I'm just talking about ideas. How you can work through these things, and we will take on singularity problems. And we will take all the singularity problems at the end when we want to make the precise statements. So we have two functions: pull-push. And the question is: when do these functions work? Well, they work in a lot of examples. For example, standard flops, which are a generalization of the Atia flop. For Mukai flops, for Calabiao threefolds, they work for the Aboa flop, Asmanian flops. So they work in quite a lot of examples. So, they work in quite a lot of examples, but they don't always work. For example, they don't work when we consider stratified Mukai flops. However, let's say that they do work, right? So we had two equivalences, one going from x minus to x plus and one going from x plus to x minus. And therefore, we get an equivalence of either side. You can consider it for x minus or for x plus. I will consider it for x plus. Consider it for X plus, which is called the flop-flop alt equivalence. And that I will denote as FF. And this is the composition of pull up by a Q, push down by a P, pull up by a P, push down by a Q. And the nice fact is that this out equivalence is non-trivial. And what I mean by non-trivial is stronger than not just the identity. But to explain what I mean by non-trivial, To explain what I mean by non-trivial, in this case, I have to recall a little bit about the structure of the auto-equivalence group of DBX. Inside the auto-equivalence group of DBX, we always find three types of auto-equivalences, which are the standard blocks, like they are the easiest possible ones. The first one, it's built in the triangulated structure, it's given by the shift, which, as we know, just takes a complex and it's Just takes a complex and it shifts it in degree and up, and eventually changes the sign of the differential. The second type of alt equivalence we have is push forward along an autoportemic field of x, and the third one is sensor product with a line bundle. These are the three easiest types of auto equivalents we can look at, and they generate a subgroup which is isomorphic to Z that acts by a shift, direct product. Shift, direct product with automorphism of X, semi-direct product with the P-card of X, and it's called the standard auto-equivalent subgroup of the automorphism group of dBx. And there's a theorem due to Bondon and Orlov that says that the equality here holds as soon as X is a smooth projective variety and omega X is either ample or anti-AMPO. The point here is that as soon as Ff is not the identity, Ff is not the identity, then it is not inside the subgroup of standard equivalences. And this is simply because it is always the identity on an open-dense subset where the two varieties being birational are actually isomorphic. And if it was inside this standard auto-equivalence subgroup, then it would be the identity everywhere. Studying the auto-equivalence group of the derived category of X is always very interesting and Very interesting, and a motivation comes, for example, from mirror symmetry because we can look homological mirror symmetry tells us that there should be for any calabia variety X a mirror X set, which is a simplective variety, and such that the derived category of X is isomorphic to the Gaia category of X set. The point is that the category on the right reads the symplectic geometry of Xz, and so there are alt equivalences coming from symplectomorphism. Equivalences coming from simple ectomorphisms or then twist. And the natural question one might ask is: well, what does it happen if you take the equivalences on the right-hand side and you bring them to the left-hand side? So you bring them to dBx. What do they become? For example, we know that then twists on the Foucault category correspond to spherical twists on the derived category of X, as we will see later on. So we have talked about. So, we have talked about auto-equivalences of dbx, we've talked about standard out equivalences, and we said that the flop-flop is not inside that subgroup. And the question is: then, well, what is the flop-flop out equivalence? Here is where we have to introduce spherical functors, which will give us the answer to this question. I will use spherical functions as a black box, because I don't want to go into the technicalities. If you want a reference for This, if you want a reference for spherical functors, just look up the paper by Ano Lovinenko's spherical DG functors. What is a spherical? The question is, what is a spherical functor? Well, obviously, it's a factor between two categories, C and D, which have to be suitably enhanced if you want the theory to work well, that satisfies certain properties. And the interesting thing is that out of such a functor, you can construct another equivalence that we denote. equivalence that we denote Tf of the target category D, which is called the spherical twist around F. Notice that actually you could also construct an out equivalence of the source category C, which is called the co-twist around F, but we're not going to use that. So spherical functions are actually useful because they let you construct out equivalences of the target category starting from a functor that satisfies certain properties. 13 properties. Let me give you some examples of this. The first example is the one from which everything started, the whole theory of spherical functions, and there are spherical twists around spherical objects. And they were introduced by Seydal and Thomas. So, how do we define spherical objects? Well, you take a smooth projective variety X and an object E in the derived category of X. Derived category of x, and we say that it is spherical if two conditions are satisfied. The first one is that e is stable under tensor product with the canonical bundle, and this tells us that the cell functor on E actually acts as a shift. And the second condition is that home from E to a shift of E by an integer i is either C, if I is zero-dimensional. If i is zero dimension of x and zero otherwise. And this second condition actually tells you why we call such an object a spherical object, because if you sum all these pieces over i, then you get a graded algebra which is isomorphic to the comology algebra of S dimension of x. When you have such a spherical object, Seden and Thomas construct another equivalence, which is called the spherical. An outequivalence, which is called the spherical twist around this spherical object, that on an object F acts as the cone of the evaluation map. Clearly, this definition, this cannot be taken as a definition because cones are not functorial, but you can suitably enhance everything using free Mocha functors. And in that case, you can construct the auto equivalence. And you see that on objects, it acts like this. From the properties, we Properties we required for E, we see that the twist around E acts on E as the shift by 1 minus D, where D is the dimension of X, and the twist of E on F acts as the identity as soon as F is in the right orthogonal tree, meaning that there are no homes of any degree from E to the object F. From these two properties, you can show that the twist. You can show that the twist around E is not in the subgroup of standard alt equivalences as soon as D is bigger than one and the orthogonal, the right orthogonal is not zero. And therefore, spherical twists around spherical objects are the first example of analytic equivalence, are an example of an alto equivalence, which is not a standard alto equivalence. The second example I want to give you is a bit more tricky because it actually says that every alto equivalence is a spherical Every auto equivalence is a spherical twist around a spherical factor when the category is suitably nice, meaning it can be enhanced and the auto equivalence can be enhanced. And this is a result proved by Ed Siegel in 2016, which tells you that basically if you want to study alto equivalences of nice categories, then you can look at spherical twist transpherical functors. To give you an explicit example, To give you an explicit example of how this might work, let's look at tensor products with a line bundle. So we take a line bundle L inside the Picard group of X, and we look for a functor F from some source category C to dBX, such that the twist around F is given by a tensor product with L. The claim is that you can take Y to be the total space of the dual of L, this is the geometric total space, and then you can take And then you can take as the function the restriction along the zero section. This gives you a function from dBy to dBx, which is spherical and whose twist is given by tensor product with L shifted by 2. If you want to delete this shift, you should consider the graded algebra, the shift of graded algebras given by OX plus the dual of L shifted by minus 1. And you see that graded categories. And you see that graded categories and DG categories naturally come in this theory, and actually, DG categories are the right setup to define spherical functors because they embody all the homotopy structure you need. The question is, clarification. So when you say total space, does this already have a dual in it or does it not? No, no, that's what I meant. Like, you have to take the double G1. It's the spec of C. Is the spec of seam of L. Okay, great, thanks. In this case, yeah. So, in this graded algebra, instead of the sum of two summands, you take an infinite sum? Yeah, you take like you should take sim of O plus L dual minus one. You should take this symmetric power there. You have to take like the point is that you. You have to take like the point is that you should consider L dual minus one as a shifted line bundle, and then you should consider the symmetric power of this shifted line bundle so that you're building a shift inside that will cancel the shift by two in the twist. You're taking in a graded symmetric algebra, basically. So, if you have an odd shift, then it becomes exterior algebra. So, it's on the two summons. Is that what happens? Yeah, yeah, I'm thinking about that. Yeah, I think, yeah, because in this case, the shift is odd. So, yeah, it becomes an extreme algebra, and it's probably just those two things. And that should work anyway, because even if you take the total space and then you take the formal neighborhood of the zero section, then everything I said there should work. Everything I said there should work anyway because you still have the zero section inside the formal neighborhood. And because this result here comes from the standard distinguished triangle you have for push-pull by I. And that works even if you just consider a neighborhood of the zero section given by O plus L here. So in this case, this one should be enough. You take O plus L dual, you take the total space of this as a greater. Space of this as a graded algebra, and then you restrict to the zero section, you get a distinguished triangle for push forward, pull back along the inclusion, and you get that the shift delete because you get a shift by minus two. Okay. Okay, so I was saying, what's the use of cycle? What's the use of spherical functors for us? Because we introduced spherical functions, and up until now, what we just said is that every alto equivalence can be realized as a spherical twist around the spherical functor. Well, the use for us is that when you present a spherical functor, an alto equivalence as a spherical twist around a spherical functor, then the functor itself, F, embodies important information about the twist around F. For example, Around F. For example, the functor and the source category can answer the question: does the twist around F split as the composition of simpler out equivalences? And this is interesting for us because we're looking at out equivalences, the flop-flop out equivalence, and it's interesting to understand whether it splits in simpler out equivalences. Maybe some of them are standard and some of them are not standard. And we want to look to study its. Look to study its nature. In order to understand what I mean by this, though, we have to recall what's a semi-formal decomposition because that's the determinant we need for C. And the idea here is that there's like we can give some kind of analogy with semi-direct products or group. And this is just some analogy. So don't take it too literal. The idea is that when you have two groups, G and H, you can choose amorphism from. You can choose a morphism from G to the automorphism group of H, and then you can define a new group called the semi-direct product. And this semi-direct product clearly is not symmetric in H and G, because you made the choice of phi, right? And the point is that even though you just know that it's a semi-direct product, you can still take questions about the semi-direct product into questions about G, H, and Phi. So you're H and phi. So you're splitting the group into smaller pieces which might be easier to handle. And the idea behind SODs is similar because we want to chop up dbx into smaller pieces which are semi-orthogonal. The question is how do we define semi orthogonality? Well semi-orthogonality is defined in terms of the gradient home of the bounded category. So we take the sum over all integers. Over all integers of homes from the first object to the second object shifted by n. And then we say that dbx has a semorthogonal decomposition in terms of a1 up to a r, which are subcategories of dbx, if there are morphisms from a i to a j, if and only if i is smaller or equal than j. So you can go from left to right, but you cannot come back. And dBx is generated in a suitable sense by A1 up to By A1 up to AR. Similar to decomposition will turn out to be useful for us, but first of all, let us see some examples and recall another notion which we will use later on. The easiest example of a similar thogonal decomposition is that for projective spaces, which is due to Bellinson. And here it's the banded derived category of Pn as a similar thogonal decomposition in terms of O minus N, O minus N minus 1. n, 0 minus n minus 1 up to O. And here, when I write an object, I just mean the category generated by that object. This is actually a very particular example of a similar phogonal decomposition because this is an exceptional collection. And what is an exceptional collection? Well, when we have n objects E1 up to En such that they give you a semifogonal decomposition of dBx, then we call them an exceptional collection when An exceptional collection when the self-form, the graded self-home of EI is given by just C, so it's just the identity in degree zero. And in this case, we call E1 up to En a full exceptional collection. The reason why full exceptional collections are interesting is that in this case, you can construct a dual exceptional collection, which gives you the which is called the left dual because I chose. Is called the left dual because I chose the left one. So you have F1 up to Fn, such the graded home from Fi to Ej is just C delta Ij. And they will come handy later on when we want to describe a generator of a category we will be interested in. Another very simple example is that of blow-ups. So you take Y inside X as smooth projective variety, then the derived category of the blow-up has a similar phonal decomposition in terms. Thermal decomposition in terms of dbx on the rightmost spot, and then you have codimension of y in x minus one copies of the bounded derived category of y. An example of this is when you take the origin in A2 and you blow it up, then you get the total space of O minus 1 over P1, which maps to A2. And the bounded derived category of the total space in this case has a orthogonal decomposition in terms of the pull-up. In terms of the pull-up of the banded derived calorie of H1 and the structure shift of P1 twisted by minus 1. The interesting thing for this object is that it is exceptional, meaning that if you compute the cell form, the graded cell form, you just get C in degree 0, just the identity. And this tells you that the category created by it is equivalent to the derived category of the point, which is internally equivalent to the derived category of function. Internal equivalent to the derived category of finite-dimensional vector spaces. And we will see more examples of such objects later on. Now, we introduced similar though decomposition and spherical functions, and we said that similarthogonal decomposition could help us in answering the question of whether the twist around the functions as the composition of simpler alternatives. And indeed, spherical functions and semi-orthogonal decompositions go together. Go together in the sense given by the following two theorems. The first theorem is due to Halper, Leischner, and Shipman and tells you that if you have a spherical functor from C to D, and C has a semorthogonal decomposition in terms of subcategories A and B, and you satisfy a technical condition, then the twist round F splits as the composition of the twist round F restricted to A, composed to the with the To A composed with the twist around F restricted to B. Notice that in this statement I'm hiding the fact that F restricted to A and F restricted to B are spherical themselves, which is not always true. Can you remind the technical condition? The technical condition is that if you consider the co-twist around F, then this semi-orthogonal decomposition is mapped via. Is mapped via this. Then you have another simulal decomposition, which is given by B and the equator on F of A. This is the technical solution. So it behaves like the inverse of the surfunctor. Yeah, exactly. It behaves like a surfunctor, inverse of a surfunctor. The second theorem. The second theorem goes the other way around, because the first one told you that if you have a spherical functor with a semi-formal decomposition and technical condition, then you split the out equivalence. The other one, which is a theorem I proved, tells you that if you have two spherical functors, F1 and F2, with the same target category C and the source categories A and B, then there exists a third spherical functor with the same. Third spherical functor with the same target category C, such that the source category of these new spherical functors, which I call D, has a semi-orthogonal decomposition in terms of B and A, and the twist around these new spherical functors F tilde splits as the composition of the twist around F2 and the twist around F1. Therefore, we now have what we were looking for, which is if Looking for, which is if you represent the node equivalence as a swiss random spherical factor, then you can try to look at the source category, see whether you can find at least one source category which has a similarthogonal decomposition, because the source category for a spherical functor is not unique. And then you can start asking yourself, well, does it split? If it splits, what happens to the restricted functors and so on. Now, that is. No, I'm sorry. Yeah. Can I ask what is the gluing functor for this semi-orthogonal decomposition? It's the bimodule given by the homes from F2 to F1. Inside C, right? Yeah, yeah. Technically, you have to replace F2 with some kind of enhancement, but the idea is that you take F1. Probably you can just compose F1 with the adjoint of F2 to get a functor between the categories and use that's the idea. Okay, thanks. Now let's get back to our setup. So we have the Cartesian diagram of X minus and X plus over Y and X set is our fiber product and we call P and Q the projections. Can Q the projections to x minus and x plus. And now we have to make the following assumption, which is that if you push down the structure sheave of x plus via p, you get the structure sheave of x minus. And the same holds if you push down the structure sheaf of x hat via q, you get the structure sheave of x plus. As I said at the beginning, these are derived factors. So what I'm saying is that this holds true at the H naught, and then there are basically no cohomologies. There are basically no cohomologies when you look at the fibers. That's basically the idea. And we will see in a moment why we need to make this assumption. Our aim is now to present the flop-flop as the inverse of a twist around the spherical functor. But now, as we're getting to the statement, we have to take care about the singularities I talked about at the beginning. And as we need to take care of the singularities, what we do is What we do is we replace dBx with dqcx, where dqc is the unbounded direct category of complexes with quasi-quirant cohomologies. In this way, we don't have to ask for anything on the maps P and Q. The pullback and the push forward are defined, and then we can try to come back from DQC to DB. Now the flop. Now, the flop-flop is the composition of pull-up by a Q, push down by a P, and pull up by a P, push down by a Q. And clearly, push down by a Q and push down by a P don't see their common kernel, so kernel of P push down intersected with kernel of Q push down, which I will call K, inside the derived category, the unmanded derived category of XZ. Therefore, it seems natural to consider the quotient DQCXZ model. The point is that by the assumption I made before, the category DQCXZ mod K has a semorphogonal decomposition in terms of the pull-up of DQCX minus and a category C, which is just given by the objects in the quotient, which push down to zero via P. And the theorem is now that if you consider the inclusion of C inside the quotient and then Of C inside the quotient, and then you push down by Q, the factor you get, which I will still denote Q push down, is spherical. And the inverse of the twist around it is given by the flop-flop out equivalence of DQC except. Spherical, like there are various ways in which you can define spherical. In this case, what I'm using here is I'm giving a full periodic SOD of the quotient. SOD of the quotient. And from that, I get that this functor here is spherical. But that's a technicality I don't really want to go into. I'm sorry, probably I missed the assumptions. So do I assume that the dimension is three or you work in... No, no, no, no, no, no. This works in any dimension. Like the assumption is you just need this assumption, and of course, you need that the true flow. That the two flop like pull up by IP, push down by Q, and pull up by Q and push down by IP are equivalences. As soon as you have those, then this theorem works. So, in particular, you don't need to assume that the fibers are at most one-dimensional. No, it works in complete generality. I will talk about the relation to the relative dimension one in a moment. Okay, thanks. Okay, so I want to make a few remarks. I want to make a few remarks about this theorem. The first one is that generally we are interested in dbx rather than dqc, and therefore one might ask: well, can we come back to dBx from dqc? Of course, like we should make some assumptions if we want to work in general. Like the point is that this theorem works in great generality. And if you want to come back to dB in great generality, you should require, for example, that the pullback preserve boundedness. That the pullback preserves boundedness, so you should require finite third dimension and stuff like that. When you require finite third dimension properness, which also ensures that the pushdown preserves dB, then you can come back to dB. The point is that you can come back using like general constructions, and this doesn't really give you any insight on what's happening, or doesn't really give you any insight. Doesn't really give you any insight on the source category for the auto equivalence FF of dbx plus. However, there is a case in which you can describe the source category for dbx plus for the flop-flop on dbx plus quite explicitly, which is when x plus is smooth. Because in that case, you just restrict to compact objects and everything goes through. And in that case, you can describe C, the compact objects in C in terms of a compact. In C, in terms of a compact generator, which turns out to be helpful if you want to describe the source category. The second remark I want to make is that the idea of studying the quotient category dqcxz mod k was first pursued by Botzenta and Mundal in the case where F plus minus are fibers of dimension at most one. More precisely, they proved that you They proved that you can do the same game I played above, and that that functor is spherical when the fibers have dimensional at most one. But they also put something more interesting, which is that you can also you can actually give an interesting geometric source category for the spherical functor giving you the flop-flop, which works as follows. You take AF plus to be You take AF plus to be the abelian category of coherent sheaves on X plus, such that the direct push down by F plus is zero. Then you can derive the inclusion of Af plus inside CoX plus, and you get a functor from dB of AF plus to DBX plus. They prove that this functor is spherical and that the inverse of the twist around I is isomorphic to Ff. The relation to the The relation to the previous theorem is that they prove that AF plus has a projective generator of P, of which I will denote the endomorphism algebra as AP. And the point is that C is generated by such object, so it is equivalent to the amount of derived category of AP modules. And if you restrict C to dBXZ mod KB, and notice that this makes. Kb and notice that this makes sense only because within relative dimension one, otherwise, dbxzat mod Kb is not necessarily a subcategory of dqcx at mod K. If you make this intersection, then you get back the bounded derived category of AF plus. The third remark is that when the dimension of X plus minus is 3, then a result by Donoman and Wiems says that. And Wiems says that the flock flop is actually the inverse of the twist around the spherical functor, whose source category is the bounded-derived category of the construction algebra, of modules or the construction algebra. And the point is that in the same paper as above, Bodzenta and Mondal proved that in this case, so when you're in relative, when x plus and x minus at dimension 3, then AP is isomorphic to the contraction algebra. Therefore, C in this case is derived. Therefore, C in this case is the derived category of the construction algebra. The last remark I want to make is that the theorem actually works for any correspondence. So you don't need y. Just take a correspondence z that maps via p to x minus and via q to xz and assume that pull up via p push down via q and pull up via q push down via p give you direct equivalences. And that there's the assumption that. The assumption that the pushdown of the structure shield of Z gives respectively the structure shield of X minus and the structure shield of X plus, then if these assumptions are satisfied, the theorem works. So that category C gives you a source category for the flop-flop out equivalence. I'm calling it flop-flop, even if it's not necessarily coming back from a flop, just because it's the same idea, but it works for any correspondence. Okay, so. Okay, so these were the remarks I wanted to make. Now, let me give you some examples where this theorem can be worked through in a little bit more detail. So, the first example is that of standard flops. In this case, we take x plus and x minus to be the total spaces of m plus one copies of O minus one over Pm. And we take, and in this case, the fiber product X is isomorphic to the blow up in Pn of X minus. Blow up in Pn of X minus, and it is given by the total space of O minus 1 minus 1 over Pn cross Pn. Then there's a theorem by Jad Bilton, Donovan, and Mikam that says that the structure shift of Pn in this case is a spherical object, and the flop-flop out equivalence splits as the composition of n inverses of spherical twists around the spherical objects OPn-1, OPn-2, up to OPN-N. Now, given this theorem that gives us this decomposition, and given the theorem above about gluing of spherical factors, what we would expect to find is a similarthogonal decomposition of C in terms of n copies of the derived category of vector spaces, because the source category, one of the possible source categories for spherical twist transpherical objects, is the derived category of vector spaces. And furthermore, And furthermore, we would expect that the pushdown functor from C gets identified with the functor that sends the ith copy of C, which is the ith generator of D C counting from right to left, to the structure sheaf of Pn twisted by minus I. The theorem I proved is that this expectation is indeed correct and it works plainly in the sense that there are objects. In the sense that there are objects which clearly map to these structure shifts, which are given by OPN cross Pn twisted by 0 minus I. So one would try to use these objects as generators, and indeed this works. So there are morphisms from the structure shift of P n cross P n twisted by 0 minus I to the structure shift of P n cross P n twisted by 0 minus J, if and only if I is bigger or equal than J, with I and J that go from one from one to N. From one from one to n, and if you compute the self-ex algebra, then you get just the identity. Furthermore, if you sum them all up, you get a generator for C. Sorry, you are computing morphemes in each category? In the quotient category. It's actually very important that you do it in the quotient category. Even if you do it, for example, if you take n equals two and you try to compute the homes for these objects. For these objects, then they will be exceptional even in the DQCX set. But if you say compute to compute the homes from the twist 0 minus 2 to the twist 0 minus 1, you get the vector space V. Whereas what you should get, if you want to glue them back, these spherical functors here, you should get V plus V in degree 1, because those are the homes between OPN minus 2. OP OPN minus two to OP n minus one in X plus I maybe I should say we tried for a long time to get to get a spherical functor from the subcategory of Pn where you take all but one exceptional object and it just isn't the right thing. So this K is really, but I didn't understand what this K is. Can you tell me one more time? Yeah, K is just the intersection of the kernel of P star and the kernel of Q star. And the point is Q star. And the point is that, as you said, if you try to do things without going to the quotient by K, they don't work. But when you potion by K, then it solves the problem of the morphisms. But it also makes it much harder to compute the morphisms themselves. This is really nice. And in the example of the standard flop, this K, is it just generated by O of minus I minus J? Yeah. Yeah, yeah, yeah, yeah, yeah. Yeah, it's not clear from the beginning. You have to make some computations which are not that hard, but yeah, you can do that. Yeah, so I was saying you get a generator for C, so you prove that the expectation you had is actually correct because you get the SOD. Because you get the SOD. And this also tells you that C can be thought of as a G D G enhancement of the category of modules over the grid algebra with relations given by the quiver with n vertices, arrows going from left to right only, and at every vertex you have just a copy of the identity. Let me stress that this theorem can actually be generalized to the family version. The theorem by Aditon Donomanemikan. The theorem by Abiton Donomanemi can generalize to the case in which you take a family version of the standard flops. And this theorem can be generalized. So C in that case will be the gluing of N copies of the derived category of Z, where Z is basically the basis of this family of flops. And the way you do that is basically restricting to the standard case. To the standard case by the argument of restriction to the normal cone. Yeah, you basically take the family over A1 which embeds everything as the non-standard one and on the zero fiber is the inclusion of the normal bundle. And you can play games with frame chi factors to restrict to the zero fiber and in that case it works, so you can make it work also in families. Also in 10 years. The second example I want to give is that of Mukari-flops. In this case, we take x plus and minus to be the total space of omega 1 Pn. And this is just the zero locus of our regular section inside the previous example. And X set in this case is Pn cross Pn glued with the blow-up in Pn of X minus along the projective bundle of omega 1 Pn. The projected bundle of omega 1 Pm, and it is clear that this projective bundle embeds in the blow-up. The way in which it embeds on the left-hand side is using the Euler Excel sequence. Even in this case, we have a theorem by Adlington, Donald, and Meeken that tells us that the structure sheaf of Pn is a P n object, which I'll define in a moment, and that the flop flop splits us the composition of N out equivalences, which are the P twistron, the P functors. P twistron, the p functors, around the objects op n minus one up to op n minus n. A p object is defined similarly to the to a spherical object and it's defined in terms of two conditions. The first one is that e is stable under tensor product with omega x. And the second one is that if you compute the self-ex algebra as a gridded algebra, this is isomorphic to CT mod t. is isomorphic to Ct mod Tn plus one where the degree of T is equal to T. And this gives you the reason for the name because this gradient algebra is the gradient algebra of Pn, of the cohomology of Pn. And these objects were introduced by Huybrex and Thomas and when they introduced P objects they also introduced P twist around P objects which are anode equivalents and they are constructed similarly to P to twist round spherical objects. You just need to take two columns. Spherical objects, you just need to take two points. In the same paper I talked about before, L. Siegel gave a construction for the p-twist around a p-object as the spherical twist around either of the following two spherical functors. The first one is the functor whose source category is the category of modules over CQ, where Q has degree 2, and the functor is given by tensor product with E. The second one is given by tensor product with the kind of By tensor probe with the canonical extension of E given by T, and the source category is the category of modules over C epsilon mod epsilon squared, where epsilon has to be minus one. Notice that these two functions are related by causal duality. So as we have these descriptions, similarly to what happened for standard flops, we would expect that either C as an orthogonal decomposition in terms of n copies of the derived category CQ. Category CQ or n copies of the derived category of C epsilon mod epsilon squared. And the theorem I proved is that somehow both these things are correct, but not completely. We have a semorthogonal decomposition of C in terms of n copies of the derived category of C epsilon mod epsilon squared. And to prove this, you have to find a generator. And the generator for this SOD is a little bit tricky. The idea is that you take the left. The idea is that you take the left dual exceptional collection of OPN minus n, OPNOPN over Pn, then you put it up to X plus, you put it up to X set, and then you project it to C via the left adjoint. And this gives you the desired generator. The reason why the more obvious one, the direct sum of all the structured shifts of P and cross Pn with the correct shifts, which work before. Shifts which worked before, doesn't work in this case, is that even if it does give you a generator of C, this object is not compact. Therefore, you cannot use it to describe the whole category C, but nevertheless, you can use it to describe the fixed subcategory generated by it. And therefore, there's a subcategory T of C such that T has a semorthogonal decomposition in terms of n copies of perfect modules over CQ. Perfect model sober CQ. And host the radar is given by this direct sample. And this tells us that T and C can be thought of as the G enhancement of category of modules over two algebras. The first one is the one given by the quiver with n vertices, arrows going from left to right, and morphisms at each vertex given by CQ. And for C is the same quiver with the difference that With the difference that at every vertex you have C epsilon mod epsilon squared. Let me notice that in this case you cannot really generalize this to the family version because the description given here of the p-twist as a p-functor, as a spherical twist and a spherical functor, doesn't work in full generality. I thank Timur Lobinenku for explaining me this. So you cannot really generalize this straight away to the The family version. You should try to describe the source calibration in some different way for the family version. Now, let me conclude talking about two more examples, which are the Asmayan flops and the Abois flop. The theorem has very few hypotheses, so it works even in these cases. And each of these cases are interesting features. For Gaussian flops, For Gazmanian flops, we know how the flop flop behaves thanks to work of many people, and we know that it splits as a composition of spherical twists around spherical functors. One could try to use the GAT presentation of Gasmanian flops to get information about the source category C. This procedure works very well when you do it for standard flops. Unfortunately, it doesn't really work well for Gasmanian flops, and the reason is that the Is that the GAT problem has more than one stratum, and having more than one stratum makes things harder, and I wasn't able to match the pieces in the correct way. The second example I want to talk about is the Abois flop. And this is an example in which the flop flop is the composition of inverses of spherical twists, five of them. And it is an example in which the spherical objects An example in which the spherical objects we were twisting around are not independent in the K-theory group of DBX, meaning that there are XOR sequences relating them. The problem then is that what I tried to do for standard flops and Mukai flops was to take as generator for C the obvious objects, which are the things supported on the locus where the true maps are not birational. So it was Pn cross-Pn. Rational, so it was Pn cross Pn in that case, and to take the objects I was twisting around as generators. The problem is that in the above flop, you cannot really do that, because you have five objects, but just three of them are needed to generate all the five of them. And this doesn't really match even with the source category you would get from the theorem I talked about of regluing spherical functions. Because the obvious way to glue the five spherical twists would be to get a category which are. To get a category which has five generators. Whereas in this case, it seems only three of them are needed. So it's not clear how to go to describe the category C in this case. This is all I had to talk about. So thank you for your attention. Great. Thanks, Federico. That was a great talk. Thank you. Please use. Please use the chat or whatever to thank Federico. Are there any questions? I would like to comment on this theorem by Leisner and Shipman that So, this condition may be technical, but it's not superfluous at all. Like a quick and dirty example where it doesn't hold is if your category A is a direct sum and your category B is a direct sum, and your spherical functors have one of the summons as a kernel. So, you essentially have your normal picture, and then you add an empty direct summon to it. An empty direct summon to one and an empty direct summon to another, and then you can glue the direct summons that don't participate in the functors. You can glue them however you want. So it does not affect the spherical, so it should not affect the sphericalness. And in fact, Sophia Restad, a graduate student of mine, is working on the conditions. Working on the conditions on the gluing. So, the question is: what, so under what gluing the functors from A to C and from B to C and so from A to D and from B to D and from the gluing to D are all spherical. And the answer is so the tentative answer is that, so you say that the gluing bimodule should be. That the gluing bimodule should be isomorphic to the home between the two functors bimodule. But in whatever gluing of the functors, there is a morphism from the gluing bimodule to this home. And the answer is that the cone of this module, of this morphism, should be annihilated by the functor from B to Z on one side and the adjoint to the functor from A to Z on the other side. So, in your situation, this co-inergy is zero. Yeah, yeah, because it's isomorphism in that case. Sure. And it looks like a sufficiently necessary condition. But then the composition of the twists is not the twist in the glued functor. So there is a defect somehow. Any other questions? So I had a question about the Grassmann example that you talked about. So the issue is that the unstable locus has different strata. Basically, the point is that if you use a lot of theorems, one from the One from the paper you wrote with David Favreo and the others for Carnival and Grassmann flops, and then another paper by Donovan and Siegel, which describes some spherical functions. Then you know that, for example, for Grassmannian flops 2,4, then the flop-flop splits as the composition of two spherical piston spherical functions. For the source categories, are the derived categories of P3. Now, the way I try to take all The way I try to take all the Grassmannian flop example is the same as I try to take all the standard flop example. So you have two GAT problems. One of them realizes the two sides of the Grassmann flops only, and that gives you the way to construct the drive equivalence. And in that way, you can also see how the flop flop splits. But then, if you want to compare the picture with the picture of the fiber product, you have to consider a slightly larger A slightly larger GAT problem, which rises both the two sides and the roof itself. The problem is basically that in the standard flop example, you're basically working in one dimension. You have just one line given for the smaller GFT problem, and then you're working in two dimensions in the bigger GFT problem. But you can match everything up. Instead, when you work in the GAT problem for the Grassmannian flops, then you work. Gracemanian flops, then you work in two dimensions, even in the smaller GAT problem. And one of the two parameters for this GAT problem actually doesn't really play a role. You can move it quite well. And the point is that when you try to compare the picture from the bigger GAT problem with the smaller one, it would seem you get you get you can compare the categories well up to a point, and then there are some objects you would you would like to get. You would like to get that you don't from the roof. So it seems in some that somehow the source category in the roof is different from the gluing of the derived categories of G2P3 because you don't get everything you need from the smaller GAT problem which realizes the flop flop. It's slightly technical. I see, okay. But we can talk, I can explain it more if you want. Okay, if there are no more questions, let's thank Federico again for a great talk. And we will resume in an hour and a half. We can go back to refreshing the election results. Hi, Federico. Is he there? Yeah, yeah, I'm here. This is really great. This is a bunch of things that Will and Kieran and I couldn't figure out how to do. Yeah, I actually read their mark in the paper. Yeah, so yeah, congratulations. That's really nice. Thanks. Yeah, I mean, like, it's really the idea is not too bad. Really, the idea is not too bad, but then, like, you have to be careful about some technicalities about generators and stuff. And the problem is really that then, when you want to describe C, the problem is that the objects are somehow natural, but then when you want to look at the homes, it's very hard because there's a quotient involved. So, you need to somehow resolve stuff, similarly to how you resolve with projectives when you go to the drive category. So, for the ABWA flop, you Flop, you need a tilting object and you don't find it, or you do find it, but it's the problem that for the above flop. No, like the problem for the above flop is that you have five objects downstairs, like on X plus, for example, which give you the out equivalence. But these five objects are like are related by X out sequences. So, what I would try to do generally is you take the Lagrangian times times the P3 you have in the Boaff. times the P3 you have in the wafflop. And as generators, what I would try to do, I would take the five objects giving you the twists. But in that case, you cannot do that because you just need three. You don't need five. And that doesn't really match with the picture of how I was able to glue spherical functors because if I want to glue five spherical twists on spherical functions, I would get a category with five generators. Instead, in that case, you get a category with only three of them. So it's really So it's really strange, and even the homes are very hard to compute in that case because the abois flop is a gluing, the probability in this case is a gluing of something which is five-dimensional together with something which is six-dimensional. And like computing the homes, it's very hard because even if you try to embed it in something smooth, then it's the zero locus of a non-regular section. Non-regular section, so it's of two non-regular sections. So, but I think I'm asking something much simpler. So, you for the theorem, you needed a tilting object? No, no, no, no, like the theorem works. No, no, no, the theorem works. The question is, how do you describe C? Yeah, okay. Okay, that's what I thought. But yeah, no, this is really good. Yeah, I mean, like, because the whole point of the theorem was to give somehow a way to describe the flop-flop. Somehow, a way to describe the flop flop of equivalence, because if you can understand C, then you might be able to understand the flop flop itself, right? But then describing C, it's quite hard in general. But now, if you need to put some line bundle on the correspondence instead of just O. Yeah, that's something I tried to do and I wasn't able to. Because, no, because like what you would try to do, at least what I tried to do, you would take like a twist of the You would take like a twist of the pull-up by the object itself, somehow. And then the adjoint would be like the push-down up to the twist with the dual. And then you try to play the game, but it doesn't really work out. So, hi, Ed. Are you there? No, Ed's not there. Never mind. No, he's not there. I mean, he might be. His his face is there, but not him. Okay. Not him. Okay. Yeah, I tried to think about that actually. I don't know how you could do that for something which is not the starter shift. Hi, I'm here. I'm cooking dinner at the same time. So it's funny challenging. All right. Great talk, Federica. Very nice. Thank you. I'm going to miss the last talk, so I'll see you guys tomorrow. Bye. Bye. Oh that's super nice. So I didn't actually quite get what you were saying with the yeah, it's yeah, it's quite technical. I have the notes, I will send them to you. The idea is basically that the subcategory for the Grace Mannian flops when you do the smaller GAT problem, which just gives you the two sides, is generated by like a triangle of bundles, starting from S S u al minus three, something like that, and then you go up with some seam. That and then you go up with some seam, and with the on the right hand side, you have like ho chun. And the point is that if you if you describe the flop flop using this picture, you need all these bundles. Because what you do is that then you cut out the subcategory generated by six of them, which gives you one of the two sides. And then you get two copies of four objects, which give you the derived categories, the P3. But now, if you go to the bigger GAT problem, then you have Then you have the objects you would like to use, which are supported on this on the logus which is contracted. And then, wait, what is what do you mean by the bigger GAT problem? Like you have a bigger GAT problem which rises both the two sides and the rule and the fiber problem. Ah, okay. Like the small one is the one which rises only the two sides, and the bigger one is the one which rises three of them. And then what you would like to try and do is take the bigger one. And do is take the bigger one and take the subcategory C you can identify there and map it down to the smaller one because you can embed the smaller one inside the bigger one by the vanishing like the non-vanishing locus of two of two things of two coordinates and the problem is that of this triangle subcategory you don't get all the objects you get fewer of them which is which which is strange because it means that you're not really getting the direct gluing Not really getting the derived the gluing of two derived categories of p3 above. There is no reason why you should do, you should do, however, because like the source category of a spherical functor is not unique. But what I what we would we were expecting even with that is that at least for Grassmannian flops that would work. But that's where you see that even when you pass from P1, from PN to Grassmannian, then everything breaks down. Okay. And so you think, so were you trying to say that this is somehow related to the fact that there's different dimensional strata? The point, yeah, because the point is that when you have just one stratum, I thought it for quite some time, and I think that if you when you have just one stratum, then like you can abstractly prove that C is necessarily the same category you have for the flop log using the GAT problem. Using the GAT problem. If you have a GAT presentation which gives you the alt equivalence and you have just one strata, then the fact that you're on a line basically tells you that you cannot get too far. It must be that subcategory. But when you have more than one stratum, then things get more complicated. Okay. I mean, I thought about it for a while, and I'm quite sure that that works for one dimensional. That works for one-dimensional stratum, and indeed, if they the standard flops, there it works, and there's just one stratum. But when you would, even for G24, for G24, I did all the computations needed, and you see that there's at some point you have this functor that just doesn't give you all the bundles you would need to give that source category. I see, okay. Okay. It was a very nice talk. Thanks. Thank you. Thank you. So you're in Bonn at the moment, right? How is the situation there? I mean, it's okay. So now there's like a new lockdown, I guess. But it doesn't seem to be too crazy. Like there's still stuff happening, you know, like it's not like restaurants are completely closed. Not like restaurants are completely closed or anything. There's still takeaway or like you can order and stuff. So it's not seems like kind of, yeah. First, I thought it would be like worse, but I mean, gyms are close and stuff, but otherwise. It's the same here, more or less. We started new lockdown. No, we're starting it tomorrow. People at the moment are like having fun outside. And then from tomorrow, they will have to stay home. Yeah. Is it like, do you have to stay home completely or? Do you have to stay home completely, or not completely? Like, you can go out for exercise, or if you have to attend appointments at the doctor, or like for groceries and stuff like that. And most of the places still will still be open, like construction sites and stuff like that. And everything which makes takeaway will stay open. So most of the things will actually stay open. Yeah, yeah. I will be home anyway because I'm not feeling well. Ah, really? No, right, yeah, right. I was actually wondering whether I should ask to postpone the talk. I was very, yeah, I mean, like, I had strong fever this morning. Oh, no. Did you get tested? Yeah, I had to get tested because my fiancé couldn't go to work otherwise. And we're both negative, unfortunately. But yeah. Did. Yeah. I was not too well. That was not too well. Yeah. By the way, I will send you the computations so you can have a look at them. Okay, awesome. Yeah, that would be good. Yeah. They're handwritten, so I would scan them with my phone, but that should be okay. Okay, yeah, that's fine. Okay. Great, yeah. What are you working on? What are you working on at the moment? I'm trying to find something to work on at the moment. Yeah, I've been reading some stuff, but yeah, nothing, I've got nothing to work on at the moment, actually. I'm trying to find something new. Yeah. I'll have to find something new. Yeah, let's see how it goes. Yeah. What about you? Yeah, I'm working on, like, I think I was telling you. Like I think I was telling you in over email this thing with the stratified Mukai block. Yeah. Yeah. It's kind of, I mean, it's somehow like quite complicated because, so basically, I mean, it's somehow a combination of what P did with this Graphsman flop and this derived using this like derived DG resolutions. But somehow the like all the DG algebra resolutions get kind very involved. Yeah, I guess so. And then so trying to like just compute compute basically homologies of like CDGs is what I'm interested in. You told me that anyway you can now deal with the statement even when the internal degree is not zero, right? I mean that's a good step forward. Yes. That's actually a very step forward. That's pretty nice. Yeah. Yeah. Definitely, that's that's pretty nice, yeah. Yeah, but that is still in the C star case, so oh, okay, yeah. I mean, like, the problem is that, like, with C star, it's like the presentation as a C star model is too general. Somehow, that's the feeling I get, right? So, it's really like to tackle a general statement within a GAT presentation as a C-star model, it's really hard because, yeah, things are very not regular, and then you call it like crazy, yeah. It's kind of complicated, yeah. complicated yeah yeah um yeah i still haven't looked at uh i haven't i haven't yeah i haven't read your email about the well i've looked at it