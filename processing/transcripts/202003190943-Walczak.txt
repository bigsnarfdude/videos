Hello, everybody. Thank you for giving me the opportunity to speak at this wonderful remote workshop. So, I'm going to speak about coloring rectangle graphs with omega colors. This is joint work with Parinha Chalemsuk from Aalto University. So, first, let me explain what First, let me explain what this is all about. So, we are going to colour rectangle intersection graphs. So, suppose that we have a family of rectangles in the plane and consider the intersection graph of that family. So, we want to color the rectangles. These are full rectangles together with their interiors. And we want to color them in such a way that two rectangles which intersect get intersect get distinct colors. So this problem it was so what was the problem here? Bielecki asked whether you can color such graphs with a number of colors that is bounded by the size of the maximum click. So this is the clique number, this is the omega which I'm going to use here. And that problem was solved by Asprut and Grinbaum in the 1960s. In the 1960s. So they proved that rectangle intersection graphs can be colored with a quadratic number of colors. So what follows from their proof is 4 omega squared minus 4 omega. And this was one of the first chi-boundedness proofs ever shown. And on the other hand, they showed an example that That six colors for omega equal to two. So for the triangle three case, they showed an example which uses six colors. Then this example was generalized by Kostochka to three omega colors for general omega. The upper bound has been improved by Handler in 1998 to, but just in terms of the multiplicative constant here. Here. And for a really long time, it was an open problem to whether this quadratic bound or this linear bound from below can be improved. One notable result from 2011 by Chalerm Suk is that omega log omega colors suffice, but provided that this kind of configuration is forbidden. So there are no two rectangles. So, there are no two rectangles where one is fully contained in the other. So, beware that this kind of rectangles, they are also intersecting rectangles. So, we consider two rectangles that they intersect also if one is contained in another. Okay, so when this configuration was forbidden, then omega log, omega colors were they did suffice. Suffice and somehow it looks quite strange that with this condition we have a better upper bound. And it shouldn't really matter that two rectangles like if we add this kind of possibility that one rectangle is contained in another somehow intuitively this is not a good configuration for colouring, right? That should not allow that should not force many more colours. Not force many more colors. But there were some problems with challenge proof, which so it did not generalize to this case. And the new result, which I'm going to speak about today, is that we can actually get an upper bound of omega log omega in the general case. So without any restriction on the position of rectangles, just for any rectangle intersection. For any rectangle intersection graphs, any intersection graphs of axis parallel rectangles in the plane. So it remains an open problem, for instance, whether you can get a linear upper bound. This lower bound of Kostochka is still best known, and so maybe it is even a correct upper bound, but we don't know whether a linear upper bound is possible. So before I go into more So before I go into more details of this problem, let me okay. There is someone asking for more light. Is it better now? I hope so. I hope so. So this problem is related to the problem of finding maximum weight independent set in such rectangle graphs. This is known to be an NP-complete problem. So because it is an NP-complete problem, it makes sense to ask for good approximation algorithms. Algorithms and it is easy to find an approximation algorithm with approximation ratio of log n. This is just divide and compare. And with weights, so far the best known bound was just slightly better. So the approximation ratio of log n divided by double log of n from 2009 by Chan and Harpelen. And the Chalem Suk and Chushoi, they proved that. They prove the double logarithmic upper bound in n, so that kind of approximation ratio, but for the unweighted case. So when we are looking for independent set without weights, maybe it will be better if I turn on the light. Another notable Another notable result here is by Adamashek and Wiese, who find a Q-petas, so quasi-polynomial time approximation scheme. And the new result here, which follows from this one, is that we can get this double logarithmic approximation ratio also for the general problem with weights. So, this result here, it follows. Here, it follows from that bound by some kind of standard linear programming and randomized rounding approach. And so, more precisely, it can be proved that if we have a coloring algorithm which uses that many colors, omega times some function of omega, then that would give that function of log n approximation algorithm. Of log n approximation algorithm for maximum weight independent set in rectangles. So, if we substitute logarithm for that function f, then we are getting double logarithm of n here. And this is how this result follows from this one. So, for instance, if we can prove a linear upper bound here, then it would follow that we can have a constant factor approximation algorithm for the independent set program. For the independent set problem, and this is an open problem which we don't know what happens here. And actually, notice that when we are looking for the maximum weight independent set in rectangle, sorry, maximum independent set in rectangle graphs, but without any weights, then it makes no sense to consider this configuration because we can just exclude the larger rectangle. The larger rectangle. If there are no weights, then it never pays off to take the larger rectangle to the independent set. So then this configuration is excluded. So that result of challenges, it also follows from this result of challenge. Okay, so what we are getting here is like the new result is strictly for the weighted version of the problem. Okay, so this is everything. This is everything that I want to say about this maximum weight independent set in rectangle graphs. And in the rest of my talk, I would like to show you some ideas first behind this original proof of Asput and Greenbaum, how this quadratic bound was obtained, and then I would like you to show the proof of this omega upper bound. Is everything clear so far? Do you have any questions? So, if there are no questions, let me erase this part and maybe leave that part still for a moment. So, first, let's consider So first let's consider a special case of the problem. Here I listed all possible configurations of intersecting rectangles. The rectangles can cross, they can be one contained in another, we can have side intersections like these or these, and we can have diagonal intersections like these. And let's first suppose that this crossing configuration is excluded, that we don't Is excluded, that we don't have any pair of rectangles in this configuration. Then, what you can observe is that in each other configuration here, it happens that a corner of one of the rectangles lies inside another one. Actually, that happens even for two corners. Like, for instance, these two corners lie in another rectangle, and here there are also two corners which are covered. Are also two corners which are covered by another rectangle. So I claim that this implies that we have linearly many edges in our intersection graph. Because whenever we have an edge, so two intersecting rectangles, then this edge is witnessed by this edge is witnessed by one corner covered by Corner covered by another rectangle. And each corner can be covered at most omega minus one times because omega is a click number. So the number of edges then is something like omega minus one times fourn because we have four n corners in total. So this is we have a big O of omega times n edges. This is the case in the entire graph. This is the case in the entire graph, but this is also the case in every induced subgraph. So our graph is big O of omega degenerate, so it can be colored with Big O of omega colors. Okay, so we can have here this for this kind of rectangle graphs, this linear boundary can be achieved. And actually, if you do correct calculations, then you would get 4 omega minus 5 minus 4 column. Minus five, minus four colors, that many colors suffice for this case. So, in order to get this quadratic upper bound, what we need to do, we need to get rid of this configuration in some way. So, how to do that? We are going to split the whole family of rectangles. So, suppose that this is So, suppose that this is the abstract picture of the whole family of rectangles. I'm going to split it into some number of sets. These sets will be enumerated from 0 up to omega minus 1. And this split is as follows. If we take a rectangle, we look at all rectangles which cross this one vertically. So, for instance, all So, for instance, all rectangles like that. And we split according to the maximum size of a click among these red rectangles. That maximum size of a click will be between 0 and omega minus 1. So, our rectangle goes, for instance, to level. It goes to level i. If we can have a click of size. Of size i, and i is the maximum number here. Okay, and now you can observe that whenever we have two crossing rectangles, then because this higher one has this witnessing click, then for the lower one, we can add the higher one to the click, and this witnesses that there is a larger click for this for this smaller one, so this smaller rectangle should go to a higher level. Okay, so now if Okay, so now in each of these levels, this configuration is excluded, so we can apply the reasoning that I showed you before that we have linearly many colors and that it gives quadratically many colors for the entire family. So to show you what happens, so this is a quadratic number of colors, and in order to improve it, So, what Chalemsuk did for this result, he used this same kind of partition, and then he applied a very beautiful divide and conquer approach, which I'm going to show you in a moment. But because he was using this partition, he could not deal with that configuration that one of the rectangles is contained in another one. So the first In another one. So the first thing which I'm going to change here is the definition of this partition. Okay? So this is the first step in order to obtain this result. It will be to consider a partition like that, but define in a slightly different way. So first of all, I'm not going... So if I want to decide where to put a rectangle R. Put a rectangle R. I'm not only looking at those rectangles which cross R vertically, but I'm also going to look at those rectangles which contain this side or which contain this side. So rectangles like that or rectangles like that or also the rectangles which contain R. Okay, and let's call the family of these rectangles V of R. Okay, so Okay, so I'm looking at all of these configurations which we can have here, where R is the rectangle, this smaller one. And we can have a look at just instead of those crossing one, we can have a look at the maximum size of a click in this set. And now the argument that That in each level we avoid this configuration, it goes through the same way. But actually, okay, so this was the first change in the definition of the lever. Then the second change, and this is a crucial thing, this is an idea by Carl Kierstad and Tom True. And Tom Trotter from 1981 is that in order to decide where to put this rectangle R, I don't want to look at the maximum size of a click in this set, but I want to do some kind of this is going to be defined in a different way. So, first of all, I'm going to put these rectangles to the levels in To the levels in some order. And let this order be the order which is decreasing by height. So the higher rectangles, I'm going to decide on them earlier than on the rectangles which are shorter. So this means that if I'm going to decide where to put the rectangle R, all these red rectangles in VR, they have already been decided where which levels they go to. Levels they go to. So now the rectangle R goes to level I if inside this family V of R there is a clique which contains one rectangle from each of the previous levels and moreover I is highest with that property. Okay, I hope that this definition is Okay, I hope that this definition is clear. So I'm not only requiring that there is a clique of size i, but I'm requiring more. That inside this clique, there is a rectangle which has been inserted put to level 0, a rectangle put to level 1, and so on, a rectangle put to level i minus 1. Okay? And what does it give, for instance? So one consequence of that would be That would be that if I look at one level, then also this configuration is excluded. We cannot have one rectangle contained in another one. So the fact that a cross is excluded, this is also the case. This is also the case. This still holds because if we have this witnessing click that this higher rectangle belongs to level I, then that click can be extended by this higher rectangle and it will witness that this shorter rectangle, that the one with less height, should go to level i plus one. Okay, but here the same applies. We have some click which witnesses that this That this rectangle R goes to level I, but also if this larger one goes to level I, then I can extend this script with the larger one and this is the widness that it should go to level I plus one. Okay? So already this configuration and this configuration is excluded in one of the levels. And for instance, what can be shown What can be shown using just this kind of leveling is that if inside our rectangle intersection graph we have only these kind of intersections, so this is excluded, this excluded, this is excluded, and this is excluded, only this kind of intersection happens. Okay, then inside each level here, only this and this can happen. Moreover, at level zero, we cannot have any. Level zero, we cannot have any intersections. So now level zero has chromatic number one. And then it can be easily proved with a kind of argument like this, that whenever we have a rectangle at some level i, then there can be at most one rectangle at the same level intersecting it like this, and at most one rectangle intersected, intersecting it like this. So each level is a two-jedi. So each level is a two-degenerate graph. Therefore, here the chromatic number of each of the next levels is only three. Okay, so in total, if we have only this kind of intersections, these four intersections, we get that the chromatic number is at most three omega minus two. And moreover, it can be shown, and this is also a result by Kirsten and Trotter. By Kilsted and Trotter. They did it using a different language, but this is what can be deduced also from the result, that this is tight. So with these kind of four intersections, this is the bound and it is a tight bound. Also, if we exclude containment, then this is still a tight bound because the lower bound construction does not use containment. Okay, so then finally, this will still not work if we want to get this double logarithmic, this omega log omega upper bound on the number of colors. So I still need to modify this partition. And now this modification looks like that. So the levels are still numbered from zero up to omega. Still numbered from 0 up to omega minus 1. Let's assume without loss of generality that omega is a power of 2. So this is 2 to the power k of some k. But I want to enumerate these levels using the binary representation of the numbers. So for instance, this will be like 0 in binary, this is 1 in binary, this is 2 in binary, and so on and so on. So on. So, in some sense, we have a tree of these levels according to this binary representation. So, for instance, for these two levels, for this, we have something like that. Here we have something like that, and so on. Let me erase this one, then we have a power of two. Then there is a common node in the tree here, and then there is a common node in the tree here. So, what now the partition? So, what now the partition will be? The partition modified one more time will be similar to this one, but it will be using this kind of tree in the following way. So, and then I'm going to classify the rectangles in that order, decreasing by height. So, whenever I'm going to decide where to put rectangle R, the rectangles in V of R have already been put. But now I'm going to something like that. Going to something like that. I decide to put a rectangle on such a level like this. So I'm looking at the path to that level in that tree. And now whenever I go in that path, whenever I go up, I'm going to consider all of the levels in this. In this sub-tree, which would be if I went down instead of up, I'm going to consider them together. And then I'm going to consider, okay, maybe let's look at this one here to have a better example. Suppose that I asking whether to put rectangle R here, that I'm going to consider these two together. These two together. So now rectangle R goes to this level. If inside this V of R there is a clique which contains as many rectangles from this set of levels as is the number of levels. So here we want to have in a Levels. So here we want to have in a click four rectangles from these four levels. But now I'm not saying that one from here, one from here, one from here, and one from here, but just four out of them together. And I want to have two rectangles from these. Then this is a good level to put rectangle R. And I'm putting rectangle R in the highest level for which such a click exists. Okay, this is the crucial definition. This is the part. This is the crucial definition. This is the partition which I'm going to consider for the next part of the algorithm. Okay, so now I can tell you how the coloring algorithm, how the coloring works. So let's again, so this is a definition of the partition. Let's again consider our whole family of rectangles. Here I speak. Here, I split it into two halves according to this split here. So, according to how this tree, these are the omega over two lower levels, omega over two upper levels. And then, from this set of rectangles, so from all rectangles which have been put into any of these four levels, I will take out some set. Take out some set. From these, I will take out some set. I will tell you in a moment what these sets are. And then the rest will be partitioned according to these next slides. And then again, I take out some sets from here, take out some sets from here, from here and from here, and this is going to be partitioned again, again, again, and again. And so on. Until I end up with single levels here. So, when doing this kind of partition, what I'm going to take care of is that, first of all, each of these sets here can be colored with linearly many colors in the click number. And second, this click number will be linear. Will be linear in the height of that part. So for instance, the click number of, if this height is h, then the click number of this will be, if I remember correctly, something like 16h at most. So then, if this can be colored in linear in 16h colors, this can be colored in linear, and so on and so on, then all this colours On, then all this column here can be colored in big O of omega colors. All this will be colored in big O of omega colors, all this will be colored in big O of omega colors, and so on, using completely separate sets of colors for each of these parts here. We use a completely separate set of colors. So that gives a big O of omega log omega colors together. Colors together. Okay. So now, what is this set here? So suppose now that I have some rectangle, some part of the graph which is like that. So this is contained in the union of these levels. Let's call it S. S and so I'm going to put to take to this set here all the rectangles that remained here which are four edge covered in S. What does that mean? It means a rectangle R is for H covered in S. Is 4H covered in S. If there is a clique such that it has four H rectangles with top sides above R and at most 4 H rectangles, sorry, at least 4 H rectangles with bottom sides below R. And all of that forms a clip. Okay, that means that this is. That means that this is four-h covered, and these kind of rectangles are going to this set which we took here. And then it's easy to realize that because of that, the clique number of this thing is at most 8h. Okay, so this is how we guarantee that this smaller thing here. Guarantee that this smaller thing here has not too big a click number. Because if there is a click which would be bigger than 8h, then it would mean that the middle rectangle in the clique, it should actually go to this part. And so what remains to be proved in order to complete the proof is that these sets, so these sets which are H4H covered in S, that they can be colloged. That they can be colored with linearly many colors. It seems that I don't have too much time left. So just let me show you what is the reason for that. The reason for that is that I'm going to find so recall recall that argument which I used to show that if we have only this kind of intersection. only this kind of intersection we are concerned of the rectangle. So now inside this R, the argument is going to be similar except that for a rectangle R, instead of sorry, apart from the four vertices, I am going to find three more points in. Three more points in R and now this will have the property that whenever two rectangles inside that set intersect, so actually whenever they cross like this, then this crossing is witnessed by one of these three additional points. And this is enough to make sure that this chromatic number is linear. So So, maybe let me finish with showing you how these three points are defined. If we have this R, we are using the fact that this R is 4H covered, so there is this clique of 4H. Sorry, suppose that we have to do that. Okay, I want to define the three points. So, R is 4-H covered. So, here there will be a point inside that click that witnesses that it is 4-H covered. That would be one of the points. So, this is witness of 4-H covered. And the other two points will be, there is a witness that R should go to the level where we put it. Level where we put it. Okay, so this witness, there is some click, and this click is witnessed by some point inside R. And I'm going to look a leftmost witness like that for R and a rightmost witness like that. And these are the three points that do the job. And the arguments that they do the job is very similar to what I showed you here. What I showed you here for these special cases. So, yes, so the conclusion is that these sets here can be colored with linearly many colors in their click number. And because the click number is linear in the height of these sets, then each of these columns can be colored with linearly many colors, and because there are And because there are log of omega levels of this divide and conquer, we are getting big O of omega log omega colors in total. Okay, let me stop here. Thank you. Okay, thank you.