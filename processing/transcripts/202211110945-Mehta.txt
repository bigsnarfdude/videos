Okay. All right. Take it away. So I'm going to talk about detecting patterns of accessory genome coevolution in bacterial species using data from thousands of bacterial genomes, which, as it turns out, is certainly too broad a title for this particular situation. But let's get on with it. So, what do I mean by co-evolution? So I'm considering. Um, I'm considering the like genes in the accessory genome of bacteria. And so, like, the question I'm asking is: okay, so does the presence or absence of one gene make a difference as to whether or not another gene is also present or absent in the same genome? So, in this little cartoon I have here, each row is an example genome of four bacterial samples, and then each column is a little gene in that genome. And then I've colored the I've colored the core genome genes in like a lighter color because they're present in all the samples. And I've colored the accessory genomes in a little darker color because they're present in just some of the samples. And so the question I'm asking is here, okay, so you have this pattern of where the dark blue gene and the yellow gene are both present in or are either both present or both absent in the same samples, whereas the dark blue gene and the green gene. And the green gene are either present or absent in the same sample, but not both present at the same time. And so, the basic idea is to look at the patterns of presence or absence of genes, of pairs of genes, to see if there are co-evolutionary interactions between these accessory genes in the way that if one gene is present, then that makes it more or less likely for another gene to be present. To be present by horizontal gene transfer. So, when applying these sorts of techniques to large sample sizes, so like this is an example, neighbor draining tree of all the 40,000 staff warriors or publicly available staff warrior samples. You run into computational issues with the large trees. You don't want to do computations along these trees because, as the trees get bigger, the computations get slower. And so, the general approach I have here is that I throw away most of the tree and try to look at only the sample, only pairs of samples in the tree that might give you the most information. So what I mean by that is we're going to consider differences between close relatives. Normally, so in this little cartoon here, the first two rows are a pair of closely related genomes, and almost by definition, you'd expect them to vary. By definition, you'd expect them to vary very little in the gene content because they're so closely related, and so you'd expect as a baseline for them to be almost identical. But if there are gene presence-absence differences across these pairs of closely related individuals, that indicates that there might be something interesting. Some interesting event, evolutionary event happened very recently. And so, therefore, could not be necessarily explained by the underlying tree structure of the samples. Tree structure of the samples. And so, in the second two rows here, we have two closely related individuals, one of which has these blue and yellow genes, the other one which doesn't have both the blue and the yellow genes. And so, that might suggest that a recent evolutionary event or a recent co-evolutionary event either led to the acquisition of those two genes by the first genome or the loss of those two genes by the second genome. And this had to be recent. And so, and so that's an example of what I would call a positive. Would I call a positive interaction between these genes? Either they're both present or they're both absent in these pairs of closely related individuals. And then in the bottom two samples here, two closely related individuals here, we have the blue gene present in one, but absent in the other, and then the yellow gene present in the other, but absent in the first. And so that would indicate, that pattern would indicate a negative interaction between these two genes in that the presence of one of them makes it less likely for the other one to also be present in these. To also be present in these closely related individuals. And so the basic approach that I'm taking is I basically just count up all the situations where we see that second pattern and all the situations where we see that third pattern for any pair of genes across all pairs of closely related individuals in the sample. And then whichever one's bigger, either the positive interactions or the negative interactions, we take as the co-evolution score. The co-evolution score of the pair of genes. So I applied this method to a database called Staphopia, which compiled about 40,000 publicly available genomes of Staph aureus. And Staph aureus is particularly interesting for this application because of its importance in antimicrobial resistance and the fact that antimicrobial resistance genes are. Antemic orbital resistance genes are frequently transferred through horizontal gene transfer and part of the accessory genome. And this database was put together by collaborators at Emory University. And so this is the tree I showed earlier, which is an example. It's the neighbor joining tree of all the samples in that stepphopia database. So you can see there's a wide variety of diversity in antibiotic resistance types and also sequence types. Also, sequence types. I will say that this database is being updated now, and there should be eventually about 70,000 genomes in this. Okay, so applying my method to the Staphaureus, the 40,000 Staph aureus genomes, we got an interaction network between genes. So each of these, each node is a gene or gene family as determined by running the data through Praka and then Panaru. And then each edge is an interaction between the two genes. And so solid lines indicate positive associations, negative lines indicate negative, or dashed lines indicate negative interactions. And these genes are colored roughly by their function. And so the main things to notice here are this network. So the red color here, which are all genes that are related to some sort of viral. Which are all genes that are related to some sort of virulence mechanism or pathogenicity mechanism, whether it be a toxin production or biofilm formation for colonization purposes or immune evasion. Those are all those red genes. And then also the light yellow and light blue genes are all antibiotic resistance related genes. In particular, the light blue genes here are SEC-MEC complex resistance genes, and SEC-MEC is the primary source for mental resistance to SF. For menticillin resistance in Staphorius, which is what you get for MRSA, the big clinically relevant antibiotic resistance strains in Staph Aureas. So this network is dominated by these antibiotic resistance and virulence interactions. And we were expecting the antibiotic resistance interactions to show up here, but we weren't really expecting the virulence interactions to show up as much, which suggests that recent co-evolution in the genome of Staph aureus is driven not only by antibiotic resistance, but by the total. Not only by antibiotic resistance, but by the totality of the host-pathogen interaction, including virulence behavior. And in addition, if you notice that almost all these interactions are positive and there's very few negative interactions, which is a pattern that we see consistently and has been seen by other groups working in other systems using different methods. And so that suggests that these accessory genome evolution. These accessory genome evolution events are being driven by these positive interactions of groups of genes being shuttled together at the same time. And so where do these positive interactions come from? On the x-axis here is a graph distance for the pangenome graph constructed by Paneru on these data. So if two genes are close together on that graph, then they were... So if genes have a link on that graph, then they were adjacent. A link on that graph, then they were adjacent in one sample at some point. And so, if they're close together on that graph, that suggests that they're more closely linked. And then on the y-axis here is the actual coevolution score that I computed for each of these gene pairs. And so you notice that almost all the, so the highest scores are certainly all associated with a highly linked gene. So they're close together on the pangenome graph. And then there's a big positive score bias towards that. Positive score bias towards that. And so that's just that the mechanism of what's going on here is that these groups of genes are being shuttled at all at once. And so that's you get the positive interaction and you get the high linkage. But in the low linkage region where there's those blue points here, you still get some like significant outliers from the main distribution of scores. And the interesting thing about those is that virulence-related genes tend to be overrepresented in the low. In the low linkage situation as compared to the high linkage situation, which suggests that the virulence interactions might be occurring over a longer range on these bacterial genomes than things like antibiotic resistance, which generally occur in these high-linkage situations. Finally, you can also apply this method to phenotypes. So here I apply it to the presence, the predicted presence or absence of an antibiotic resistance phenotype. or absence of an antibiotic resistance phenotype in the in this data set and so on this x-axis here is my coefficients core on the y-axis the correlation between the presence absence vectors of these antibiotic resistance phenotypes and um uh you can see that there's this there's basically two groups of of these antibiotic resistance phenotypes the first is uh down here in the bottom these are uh um the fairly common antibiotic resistance phenotypes and and importantly there's the um beta beta lactam resistant The beta-lactam resistance, which is what SCC-MEC is, and what the other antibiotic resistance genes that occur in that network that I showed earlier are mostly. And so that's the big clinically relevant antibiotic resistance phenotype. And then there's this other cluster over here of very, very rare antibiotic resistance phenotypes that don't really show up in the score because they are highly correlated with each other, but they're rare. Okay, I'm going to skip that because of time. And so, ironically, because this is about runtime. But my method is comparable to other existing methods based on runtime. And some methods are better than others in different situations. Okay, so in summary, we've developed a method to detect genetic interactions in a large bacterial lasets that does not require a phylogenetic tree. All you need is a distance matrix, and you only look at closely related pairs of individuals. And so, recent horizontal gene transfer-based evolution and stuff, Aureus is primarily. Transfer-based evolution of Staph Aureus is primarily driven by the host-pathogen interaction, virulence, antibiotic resistance, and especially involving SC-MEC. And high linkage leads to more positive scores. And you can find this in a preprint by archive. And the method is available to download and use in the ArcPackage decoder, which is found, you can find on GitHub. And thanks for listening. I'd like to thank my postdoctoral advisor, Daniel Weissman, and our collaborators at Emory, Tim Reed, Robert Pettit. Our collaborators at Emory team read about the credit. I have a question. Hi, I think you can hear me probably, right? Yes, yes. Okay, wonderful. So, I wanted to double-check something about my understanding of your co-evolution score. So, for any sister taxa comparison, Taxa comparison. Is it like an integer? Like you either are together, they're either found together or not. I guess why I'm digging into this is I was wondering what it would mean to standardize by the number of deletions or number of gene gains that you see over that evolutionary distance. So it's like, what's the probability or like, is it more likely than random chance that I lost these two together or more likely than a random chance that I gained these? Like, so normalized by the number. These, like, so normalized by the number of gene changes, uh, right. So, um, to answer the first question, it is not an integer, but not for the reasons that is good that I'm going to answer the question for. It's uh, I sort of weight all these pairs by like how many of them are in a bush that you get by determining how close close pairs are to avoid over-representation of certain bushes. But um, uh, the uh, the way I um, so the way I incorporate the um Way I incorporate the underlying that baseline difference that you were talking about is in, so like I compare the score that you get to a, so it's so the test in which I like determine the significance of these scores incorporates the that variation. Yeah. Awesome. Thank you. All right. Yeah. We have a question from Leonid. Leonid, you can read in the chat, everyone, I think. Oh, okay. I think. Oh, okay. Oh, they are. They are. Okay, so the question is: are the phenotypes in Stephoop yet derived from a computational method using presence-absence of genes or experimental work? And the phenotypes in Stephop are derived from a computational method. A revised is the one I was using. Sally, do you want to make a quick question? A quick question, yeah. Sure, quick question. So, I'm linkage must help, but as you noted, that the linkage is constantly changing, and plasmids also will have different linkage relationships. And so, I'm just trying to dig into that a bit more. And if you can supplement or tell us how you accounted for all the syntony across all of the possible arrangements. Arrangements? So I basically let Panaroo take care of that. So the software that takes all the individual genomes and tries to create a pangenome graph out of them. So that's one linkage relationship. So it's like a summary linkage relationship across all the individual genomes. Right. But let's say in one little clay, there's a particular plasmid that has a different relationship. That has a different relationship. And so it's creating this positive association, but not because of any functional interactions. Oh, oh, oh, oh. So there's a there is a bit of a like a chicken and egg thing here, right? Because like if the, if like, so functional directions can create LinkedIn as well. So there's no, yeah, so I haven't, I've sort of been agnostic. Yeah, so I haven't I've sort of been agnostic to the uh to that sort of thing for this this uh this method, but that is definitely yeah, something to look into, yeah.