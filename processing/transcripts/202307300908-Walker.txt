You're good to go, John. Sorry, we were just making sure to be recorded. Okay, yeah, cool. Okay, yeah. Hello, everyone. Sorry, I haven't been able to participate yet, but I've been following along on Slack and looks like you guys are having a great weekend. And I'm jealous you're all in Banff. It's a great place to be. Yeah, so when I kind of knew I wouldn't be able to be in person and I was talking a bit with Santi about how I could contribute, and my first thought is. And my first thought is, you know, I could give some ideas of why I think maybe open source software isn't used as much in the industry. And then I thought, you know, everybody doesn't need another middle-aged white man telling them what they think. So the idea of a survey and asking people actually, you know, getting a sampling of why people may or may not use open source was an idea. And Santi gave me a lot of help in kind of crafting this. And we managed to get it out last week. To get it out last week, and over the weekend and a few days, we got 104 responses, which I think was pretty cool. Um, it was kind of shared, I mean, on LinkedIn and through various Slack channels and a couple of listservs. So, you know, it's hard to know who you're reaching completely. So if I so this was the first question, so it was about five or six questions, like depending on whether you answer yes or no. like depending on whether you answer yes or no to whether you use open source but so this is you know how would you describe your workplace probably could have done it a bit more granularly to pull things out but predominantly industry people which i guess makes sense because that's kind of my network that we're probably tapping into mostly but a bit of academia a couple of government people um so the the main question is do you use open source software so predominantly everyone Predominantly, everyone, most people said yes. So the nose was actually 14 people. And I guess, as you'd expect from the breakdown, they were mainly industry people as well, but a couple of academics, I believe. Yeah, so I really today, this morning, I just kind of tried to pull together things. So I haven't really even analyzed or really even cleaned the data too much to figure, you know, to pull things out. So this question, which software tools do you use? Question: Which software tools do you use or open source tools? I tried to go through and kind of make sure when people spelt Simpeg right or Fatiando didn't add a Terra to kind of make it representative. But by far, the biggest thing that people are using is QGS, which is kind of interesting, which I would say, as I interact with a lot of geologists and over the last five years, I'd say they've the number of people now asking for formats that will go into. Asking for formats that will go into QGIS instead of Arc where MapInfo is, I would say, it's the dominant thing. And I use it myself. It's great. Yeah, and Simpeg and just Python in general, but lots of other little things. So it's kind of interesting. Some of these I'm not sure 100%. Like I'm not sure if Geoscience Analyst is actually open source, but maybe they just meant like geo apps or something. But anyways, it's interesting. This one was a little tougher. Why do you use open source software? Use open source software. People wrote like whole sentences or you know paragraphs. And I was just using this free online word cloud thing. So I just stuck all of the text in. So this doesn't really make a lot of sense, but the big words you can see, which I even got out of just reading it is free in software was free, was important to people. Also, free as in freedom, a couple people mentioned explicitly, but yeah, flexibility. But yeah, flexibility, you know, support, stuff like that. So lots and lots of reasons. And so there's going to be, I'll have to take some time to kind of dig through that and pull out themes and stuff like that. But lots of feedback in there, which was good. This one was interesting as well. I thought, you know, how relevant are these tools in your workflow? So from one saying I could easily replace them with non-open source up to. Non-open source up to, you know, my, I rely on them. I mean, it does make sense that you maybe get this distribution, particularly all these, I would say everyone who answered this, you know, they already use it. So, you know, maybe people down here, which, you know, I'm probably kind of on this end, to be honest, because I don't actually use a lot of it. But when I do, it's kind of a tough question too, because like SimPeg is the one thing I use it. And I, in cases where I use Simpeg, it's because I can't use anything else. So I guess I shouldn't be down there. You kind of have to be. I guess I shouldn't be down there. You kind of have to be up here. But, anyways, this again, it's interesting to get a feel for that. But the one that the question that I kind of wanted to look at was why people don't use open source software. And so I kind of, again, these were all sentences and paragraphs. So I tried to go through and pull out kind of some main things that were repeated. You know, a common one was it's kind of out of their control. You know, the companies buy the licenses, so they kind of get stuck with it. Companies buy the licenses, so they kind of get stuck with them. One respondent said that, who I know works for Barrick, said that he wants to use more open source software, but the IT people within the big company perceive it as not secure and he doesn't really know how to convince them otherwise, other than just telling them it's okay. But yeah, then there was a lot of these kind of similar things of like either not knowing about tools, not having time to learn new. Not having time to learn new software, not having programming skills. This kind of falls in the same thing. You know, they're just more comfortable with closed source just because they've always used it. A few people said there weren't tools for their particular workflows. I think maybe some of that seemed to be coming out in some of the discussion from yesterday, particularly around gravity corrections, which is interesting. Yeah, and then ease of use, which probably falls into, you know, just being comfortable with certain types of things. Being comfortable with certain types of things, and I guess if you've always used Windows-based products, if you get shown something even slightly different, it makes you uncomfortable. Yeah, and then there were a couple of people, you know, who were very clearly, you know, they just said, you know, we write our own code so we can change it as much as we want. And that's what we do. So fair enough. Yeah. And then the last question, which I didn't summarize, it was just, do you have any other comments? And yeah, people wrote a lot of stuff. So it's going to take a while. People wrote a lot of stuff, so it's going to take a while to go through that. But, um, yeah, overall, I think it'll be interesting to kind of dig more into this. But for only a few days, it was a good response. I might send out a couple more reminders just to get some more answers, but I think this is probably a good, a good start. So thanks for giving me the time. And yeah, if anyone has any questions, and if anyone, I mean, I could actually, I could put the CSV with all the answers up in Slack if anyone wants just to have a look at it. If anyone wants just to have a look at it, just because it's if you want to play around or just see what people, it's completely anonymized. I thought it collected email addresses, but it doesn't. So that's actually a good thing. So okay, that's it. Thanks. Thank you, John. Thank you very much for taking the time. Can you hear me? Yep. Okay. Thank you for taking the time to. For taking the time to not only like actually writing the survey and sharing it, but also to go through the results. Learn a lot of interesting stuff there. So anyone has any questions? I guess I've got a follow-up question to this. If no, why not? My follow-up would be: what incentives? What incentives would encourage you to use more, or what's holding you back, or any insights from that point of view? Yeah, definitely. Nobody mentioned anything like that in anything, like I'd like to use more, but yeah, I mean, a couple of them were things like the one that said, like, I'd like to do it, but my company just have to use whatever they tell me. So that seemed to be. Tell me, so that seemed to be, or I mean, the lack of time was one we're just saying, like, my pressure at work, you know, I don't have time to figure out a new way to do this. I just have to kind of, all I can do is keep up using the tools that I currently have. And I kind of fall into that myself. I mean, I know there are, I could use, you know, open source things for a few bits of my work, but I need probably the time just to set it up properly. And because it works the way it is right now, I. And because it works the way it is right now, I resist that because I'm busy, which is not a great excuse. I should make time, but yeah, I think that seemed to be the overwhelming one. I was also interested by the lack of people being worried about lack of Python programming skills because I've found that as well when I first started looking at some of these packages. If you're not used to, the first thing you have to do is install a package using the command line. Install a package using the command line, that can be a little daunting. And I think it does turn off a lot of people. They'll just kind of panic and just say, oh, I can't do this. Which I think some of the things mentioned yesterday also kind of highlighted that, you know, making things more accessible to new users just in a way of, I guess, hand-holding, which is good. Good to do. We have a question from Megli. She said, Thank you, Sean, for the survey. Do you have any comments on how you change the source seed from the company that the open source is not secure? Yeah, I don't know. Actually, when I was out running this morning, I have a friend who's a prof here in Edinburgh, and he does a lot of machine learning and stuff. And I mentioned that I was doing this, and the first thing he said is what he hears a lot. He, the first thing he said is what he hears a lot from people in industry or, you know, and whether it's anecdotal or real, but this question of, you know, oh, you know, this code, like, you know, if anyone can change it, then it clearly, you know, has to have security issues. And it's, I think, yeah, I don't know how you could convince someone of that because, like, that, I mean, yeah, anyone could try to change it, but you know, you're not going to put in a pull request or approve something that's. To put in a pull request or approve something that's got some weird. I mean, I don't even know, yeah, like do things like access the internet. I don't even know how you'd put a virus in a code or what people's worries are. So, yeah, I don't, I don't know. Maybe it's just that some IT people and big companies that's just so outside of their, you know, what they're used to. I mean, they're probably not deploying. Maybe if you found someone who's deploying like a large, you know, Linux. A large Linux thing for like in a corporate sense, they might actually understand that these things can be okay. But if they're just buying whatever the big Microsoft or whatever package and taking their word for it that it's safe, yeah, I don't know. It is a good question, though. I can make a comment on that. I actually replied his email on that topic. One thing I didn't mention was that. I didn't mention was that they don't have any problems, like they don't have any security concerns with the closed source software they are using. So that kind of made me think that they are thinking that security by security, it's a good security measurement, which actually is a deal. Security by security is not providing any security. So yeah, I think it's like we need probably need to work on changing that perception of not being secure. But at the same time, I think it's like if you get into a little bit about cybersecurity, you will learn some of these concepts and you'll say, no, it's not because, like, the code is open source, that means that. Open source, that means that it would be not secure against you by comparison with another closed source alternative. So yeah, I think it's an interesting question and I wasn't aware that people were having these thoughts. Yeah, thank you for your comments. I agree with you. It's more about her perceptions. About perceptions, not the effect is safety or not. How to change the perception is a big issue to persuade someone. Thank you. Thank you, Mangi. Okay. Yeah, this lack of Python programming skills is sort of an interesting point. Skills is sort of an interesting point for me. It seems like industry is really happy when there's some nice, sort of out-of-the-box types of things that they can use and it doesn't require their employees to have Python scripting and programming skills. And I'm sort of wondering how much of the onus should be put on industry to have employees with some base level amount of skills. So, are sort of the developers. So, are sort of the developers responsible for creating things with clicky buttons or limiting any kind of scripting requirements to reach this user base? Or is some of the responsibility of the user base to get a base level of programming skills to be able to use this? I'm sort of wondering where everyone feels kind of along that spectrum, the responsibility is to have those skills or to provide things that limit the. Or to provide things that limit the requirements to use the software that we develop. Yeah, well, I mean, I can jump in. Yeah, I'm not 100% sure. I agree with you that, you know, people, I mean, many years ago, I was working for a major mining company and they were thinking of continuing funding different consortia. Different consortia. And one of the people just said, Well, these codes don't have a GUI. I'm never going to use them. I don't care how good they are. And I was like, What? Like, are you crazy? Like, he was, he was a pretty smart guy. He was a good geophysicist, but he was just like, I'm not running something from the command line. And I was, I just kind of, yeah, so it's something you come up against. And I think there are people like being able to click some buttons. And again, I don't know. Again, I don't know how you overcome that. You'd hope maybe as Python and things become more prevalent in university education that more geoscientists will just have that skill and then it will kind of work its way through. But yeah, I don't know. I kind of agree around your last point. I think it's kind of a generational thing, perhaps. And I think earth science is. Earth science has maybe not traditionally, but branches of earth science have been kind of a bit low-tech in some ways. And now I think having more, you know, having basic programming as a requirement for any kind of science, I think is absolutely. And so if that's kind of coming through at university level, where people are, you know, you've got to take a programming course as well as geology, whatever. As well as Geology 101, that kind of ground up, but you know, this still takes patients or so to kind of get through the system, and then everybody's more fluent and comfortable with programming because they're blind alongside Vox Art. It's kind of an integral part of doing science, not just earth science, but any science. Sean, thanks for a great talk. I kind of was intrigued by your small comment about where you are categorized in, like you're trying to use the reason why you have used ZipPad because you didn't have any other option to use. So it seems like that's an obvious use case of open source code, because even myself, if I have enough funding to use the commercialized software, I mean, it has UI and UX. That has UI and UX, which is really better than open source. I mean, I'm definitely using that because, like, my time is precious. That's the efficiency that I need. But do you, as a kind of like, as a as an individual running geophysics, and then, like, I don't know, not exactly sure or not, but do you see more use of that case? Like, okay, I cannot, like, there are more problems coming in where the existing commercial software doesn't. The existing commercial software doesn't handle. So, like, using the open source quote is the only option that you have. So, that like that's sort of like that's the major use case of the open source. I'm just kind of asking the efficacy of that case, which I don't think it's fun. Yeah, I mean, like that one in particular was, I mean, it was airborne magnetic gradiometry data and. Gradiometry data, and I mean, the other codes that I use. I mean, I have some old DCI, I use the DCIP2D code, which obviously doesn't do it. And I use Geosoft Voxy for just potential fields data, but they don't use that type of, or they don't invert that type of data. So that was kind of why. Yeah, no, it is, it is, yeah, it's a difficult question because there are, I see. I see probably if I used open source, I might be able to, I probably could, my workflows might be a bit easier because I've kind of really had to force some closed source software to do what I want it to do, which isn't very efficient sometimes, but I've figured out how to do it. So, yeah, I'm not sure I'm answering your question, Soggy. I think that was you, Soggy. But yeah, I don't know. It's and yeah, I think you asked about some future. And I think you asked about some future things. Yeah, I mean, I think that'll be a case where, I mean, Teosoft or, you know, Sequent, I guess they are now, who have their Voxy kind of cloud-based inversion. You know, they're kind of, there's some development being done, but I don't know what's driving it. And it's definitely not super fast. Like, I think their potential field inversions are just kind of the way they are. So, yeah. So, yeah, if some new data type or like, I mean, incorporating, yeah, just constraints in a different way or joint inversions, like more complex type things are definitely, I think, where getting into open source is good. Because yeah, if there's something that's not quite the way you want to do it, you can either grab the bit of code that does it and make it do it, or maybe contributors will be able to help you. So, whereas, Be able to help you. So, whereas talking to a large company that's now owned by two consecutively larger companies over top of it, as a single user, you're really not going to get anywhere. Even if you're considered like, you know, you know, people, it doesn't really help. I've got some bug requests that haven't been fixed for years. So, one more question from Sue. Do you hear any comment about why? Do you hear any comment about why QG is in the survey? Probably why they use it a lot, I think. Yeah, I don't know. I didn't actually look at too closely about why. I mean, I could tell you why I use it is because I used to use MapInfo and I just stopped paying for maintenance because I didn't use it that much, but I needed it sometimes. That much, but I needed it sometimes just for certain things for clients. And then I heard about QJS and I started using it, and it's great. I mean, it's just like, there's nothing about like you, I don't see it, it's, it feels basically like you should be paying for it because it's, it's really good, which I mean, it's kind of not a knock on open source things, but like all the things we were talking about, like user interface, you know, just everything, it's it feels like. It feels like it should be commercial software. It's really good. And I think a lot of people that I know who use it, it's because it's really good, but it's also free. And something like ArcGIS costs a ton of money. And you can do pretty much everything with QGS. One little thing around that. Also, I think Michelle is involved in that. So the Loops Review Group had created a QGIS. Had created a QGIS plugin to load the OSS one to the GRP files in it. So just wanted to shout it out. Oh, cool. Yeah, that's good. I mean, I give data to people and yeah, I was converting them to GXFs because GDAO will import those into it. But yeah, that was something I was thinking someone should do. So that's good. Do the grid, so that's good to know. Go for the yeah, okay. So, I had a project recently with a big money company. So, we also have this go through some of the key problems here. So, a few things I learned from this project is that about why they don't like open source is the following. First, they have been doing things using some certain type of software for so many years. Of software for so many years, they just don't have that motivation to switch. I mean, that basically asks them to change or modify their workflow, right? That's number one. Number two is that the entire team don't know how to use Python. Okay, so they do have a new client who knows deep learning Python thing, but the rest of the team, they still use Kubernetes. Team, they still use commercial software to click button, button, button, button space. So that's another issue that there's a lot of people that don't use Python. And the third thing that really comes in the way is when we try to every project, our project will come in Python. So we have to walk them through every single step of installing all the packages. There's so many things that went wrong. When you install all the packages in the entire All the packages in the entire something else is computer, right? And all of the user interface. So, in the end, we do have a solution, but the work we come up with is we design a user interface. It's not ideal, but it sort of helps with the problem of Python programming. They don't have to be Python security. Secondly, we, instead of walking them through each, every single step of installing Python. Each every single step of installing packages, we figure that creating a virtual environment is so much powerful. So, we um, so anyway, there's no easy solution here, but uh, I can definitely need to, I mean, thanks. Yeah, I know that sounds very, uh, very familiar. Yeah, I also have some comments about my experience when I worked in. Experience when I worked in the companies, even to commercial software. So, employees dislike to change from one commercial software to another. The reason is building a project, the data input is really difficult. The different format, when they put it in one software, it's not easy to convert to another software. Easy to convert to another software. So that force even some commercial software want us to change. They have make a model just for the data transition from one software to another. Otherwise, it's really huge work for the employees. I never thought about that problem, but actually, the operation, the clean. The operation, the click of button is easier, but the data transition between different commercial software is a huge time consumer task that maybe give some you think about the open source, if the how they can be data input to the format input to your this open source software. Open source software, it may be an obstacle for some users. Thank you. Thanks. Yeah. Last question? Yeah. Okay, last question. It was just a comment. I've had the same experience working with a company that uses commercial software, and I've been sort of the only one trying to implement. One trying to implement open source code in Python, and it's a very isolating experience because you're the only one trying to push it, and all of the others are already in their own, like very used to and very settled with their own data formats, the commercial software that they use. But one thing that I found funny is that when they wanted to implement new things to the commercial software, pitching ideas. Commercial software, the pitching ideas of oh, you should add this, they would always have to go through sales, like the marketing team of the commercial software. And those conversations never led to anything because they had other priorities. You know, it's more of like a, well, how much are you willing to pay sort of thing? And I think that's something that, as a like a professional or scientist, you're very It's a negative thing on the commercial software side, and I think more people are noticing that. And so that's more of a pro for the open source because yeah, we don't have to deal with sales. Yeah, okay. Not that they, but you just you have different priorities. You know, you want to use, you want to implement something for. To implement something for your work, and they're more of like trying to get into paying points. That was just my experience. Yeah, no, definitely. I'd agree with that. I mean, yeah, it is frustrating because you can see like, oh, I just need to do this thing, even if it's a small thing. And yeah, if it's, if it's, you know, if it's easily kind of accessible through Python, you could maybe just write a quick script to do it. And, but, yeah, if it's all. It and but yeah, if it's all closed and you don't have those skills, it's making a proposal to some company, yeah, who, like you say, will want money for it or they just won't do it because it's not worth their time. So yeah, it's yeah, I think that's definitely a plus, but it does go back to people kind of, I guess, being, you know, used to doing those things. Like I, when I first started working, I think I tried to convince one of my bosses to buy, well, it was back a number of years ago, but I'd learned MATLAB in grad school. I'd learned MATLAB in grad school, and so I wanted them to buy me a MATLAB license. And they would say, Why do you need this? You're not a programmer. And it's like, well, but I can do these things that.