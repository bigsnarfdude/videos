My name is Mel C, and I'm working with Professor Jessica Lee at USL Department of Statistics. So, our topic today is benchmarking computation doublet detection methods for single-cell RNA sequencing data. So, doublet formed when in the single-cell RNA sequencing process, the reaction volume in The reaction volume includes the two cells into one reaction volume so that we think the two cells as one cells and it will bias the downstream analysis because the double the doubies doesn't exist in the real data. So there are several methods, computational methods trying to solve this problem. But in the field, there's lacking a comprehensive benchmark to show the advantage of each method. These advantages of each method. So, here we utilize 16 real data sets with experimentally annotated doublings and simulation data set to evaluate the methods accuracy and their effects on downstream analysis. So, first, the overall detection accuracy are measured on a real data set, and we found that we use AURLC and AUPRC to measure their accuracy. We found that WD funder, WDP, Found that W Defender, W detection, and solo has a relative advantage in this benchmark. And next, we use simulation to check their accuracy under various experimental settings and biological conditions. We found that with higher W3 sequencing depths, more cell types, and a higher degree of heterogeneity between cell types, the method actually got improved in terms of their performance. And then we checked their effect on. Check their effect on cell clustering analysis by checking whether they can eliminate W that give you superior clusters. We found that W Funder and W detection actually outperform other methods in this benchmark. And then we check the effect of the method on identifying highly variable genes. We found that the screw bleed and double finder actually give us better performance in this benchmark. Performance in this benchmark. And then on the DE gene analysis, so the method gave similar results. And then finally, we check their effect on cell trajectory inference. So most methods can effectively remove this bridge between two branches. Then we check their performance under distributed computing. The idea is if we have one huge data set, we cannot run them in one computer. So we use different clusters to So, we use different clusters to run those methods and combine them together. We found that with more clusters, the performance actually is going down for all the methods. And finally, and then we check the computational efficiency of each method. We found that the best methods, WFUNER, is not the fastest method. Also, the fast method, CXBS, did not give us the best performance. So, there's still some improvement. Still, some improvement can be done in this direction. And finally, we check the user-friendly perspective of different methods. Then we summarize a score system here. So this is summary. We found that overall W funder has the best detection accuracy and the CXBS has the best computational efficiency. So that's all. Thank you.