Good morning, everybody. Thank you for coming to my talk. Thank you, organizer David, for inviting organizer Rita to give talk. So I will talk about cluster coloring and we're going to use the product structure. These are my co-authors. I hope the paper hasn't been written. So, this is a tentative list of co-authors. So let's see what I'm going to talk about. So, you have seen throughout the week some applications of a product structure, including Q layers, actually, that you haven't seen. That's the one that David skipped. No repetitive coloring, P-centered coloring, compact encodes or universal graphs. You saw that talk when we gave it. And today I will talk about cluster coloring. I would say it's a work in progress because there are a couple of interesting other projects. Progress because there are a couple of interesting other problems left. So, first, let me define cluster coloring. Graph is K colorable with clustering C, if you can color vertices of the graph with K colors, such that when you take an induced graph of the color class, the connected components in that induced graph have constant size, have size C, rather. Size C rather. So when C is one, you get proper coloring. Okay, so it's a generalization of in some ways, I guess, weakening, if you increase the C of proper coloring. Okay, so probably the most famous coloring result is a four-color theorem, and stated as clustering result is telling you that every planar graph can be colored with clusters one. Colored with clusters one. So, one interesting question that you can ask is: Can you improve this four if you allow bigger clusters than one? And the answer is actually no, no matter how big a cluster size you allow, there is a planar graph. In fact, I think it's a tree tree, planar tree tree. I can't remember. There is a planar graph that cannot be colorless. Graph that cannot be colored with three colors such that the cluster size is at most C for whatever C you pick. Okay, so in case of planar graphs, clustering doesn't help you reduce number of colors. And that's typically the game that you want to play. You want to see, can you reduce the number of colors if you allow clustering sizes bigger than one? And in this work, the most important definition is that of clustering. The most important definition is that of clustered chromatic number, and you can say that a class of graph, so for example, g can be planar graph, homogeneous graphs, and so on. You can say that a clustered chromatic number is the minimum k, such that there exists some constants such that every graph in a family can be k-colored clustering at most c, most that constant. So, what we have seen right now is that. We have seen right now is that cluster chromatic number, as well as proper chromatic number of planar graphs, is four. But for some other, that's what we've seen. But for some other classes of graph, you actually get a huge improvement if you allow clustering. Okay, so the proper chromatic number of graphs embeddable on a genus of fixed, on a surface of fixed genus. On a surface of X genus is unbounded, or rather, it grows with the genus. And if you allow clustering, then cluster chromatic number is first result was that it was at most five. This is by this set of authors. So there exists some constants such that you can color every graph of bounded genus, bound only genus, with five colors such that the clusters have constant size. And the size of the cluster. Size and the size of the cluster now will depend on the genes. And this has been improved by the result of Dvorak and Orin. Neither of them are here, they left. And actually, they proved that all the surface graphs, so graphs of boundogenus, have clustered chromatic number four. And because of planar graph, that's the best possible. Ground, that's the best possible. Okay, so and then probably the most interesting questions in this area came from trying to prove Hadeger's conjecture, equivalent of Hadeger's conjecture in the clustering setup. So, what you want to prove, so Hadeger's conjecture says that every graph that exclude K T minor is T minus one colorable, and we can say that. And we can say that with this, it's kind of like a race started, probably even before this cluster chromatic number was defined in the way that we have seen from the earliest results that they can be colored with linear number of colors in T by Kavarayashi and Mohai. And then there were improvements until this penultimate result where Result where Zenek and Sergei proved that indeed Heidegger's conjecture works for in-cluster setting. In fact, they prove it for something stronger. They prove the least coloring version of this result, which is known not to be true in the classical Haliber conjecture. Anyway, I don't know if this result is written. Has it been written? This has been announced. It hasn't been written. Been written. It makes it gives a little bit of motivation for what we're gonna talk about today. Okay, so I'm assuming the genus graph is the same result. With the four, you don't know, because it was the same people and same year. So I don't know if either is written. Anyways, to be written. So they got the optimal result. So, what I want to know, I'll look at when you can build this optimal result. Obviously, not. Optimal result. Obviously, not in all proper minor clause families because T minus one is the best possible amount. And when can you even get rid of this dependence of T in proper minor closed families? It turns out that complete bipartite subgraphs. Oh, let's go back here actually before I even get there. Here's one example. What if you bound a degree of the graph? Uh, degree of the graph, okay? Because if you look at the lower bound that I didn't explain, a lower bound for planar graphs, uh, it has high degree, okay. So the bigger the constant you have, the counterexample has, for your for clustering, the counterexample has higher degree. So the natural question is: can you do better if you assume that your graph class has constant degree? And indeed, And indeed, this has been proved by Louis and Gwen that planar graphs, in fact, all boundogenous graphs of bounded degree have clustered chromatic number three. And the result is best possible due to the Hex lemma, which tells you that if you two color this hexagonal grid, one of the colors will have a component, will have a long path. Will have a component, will have a long path, therefore, a component, unbounded size component. So, this is the optimal result for bounded degree graphs on surfaces. In fact, I'm missing one slide. Oh, I'm not missing the slide. Here it is. The theorem changed. In fact, this has been generalized to all proper minor clause families of bounded degree. Three is enough. Three is enough by Sumil and Chong Hong. Okay, so what do we want to study here? Excluding, not excluding, but saying that the graph has a maximum degree delta, same as saying that the graph doesn't have K, complete graph on K comma delta plus one vertices. So you're excluding a complete. Excluding a complete bipartite graph, one bipartition has size one and the other delta plus one. So the natural thing is to ask, what can you say when you exclude K S T, let's say for fixed S? So presumably this S can be, if you're looking at graphs that exclude a fixed minor, this S is hopefully much smaller than the complete graph that you're excluding and hopefully. Graph that you're excluding, and hopefully, you get better results there, better bounce. So, there are two questions that are left with previous work in this direction, when in addition to looking at proper minor closed families, you're excluding some complete bipartite graph as a subgraph, not as a minor, as a subgraph. One question you can ask is: What's the best size of the What is the best size of the component that you get that you can get in that case in both in bounded genus case and minor closed cases? So the previous results were exponential. Admittedly, in the original paper of Gwen and Louis, they really were just interested in improving the result, not necessarily in reducing the size of the clusters. They just wanted that it's bounded, but it was exponential. But it was exponential there. And in the minor closed result by Chung Hung, and I already forgot, minor closed result, it was also exponential. So using something akin to product structure, in fact, we started with product structure. We wanted a simpler result with better bounds. But at the end, it turned out we didn't need a product structure for this first part. And we get the bound. First part, and we get the bound which is delta to the three for the boundogenous graphs and delta to the five for proper minor closed families with very simple proof. So I was thinking yesterday, which of these, and then next result is, what can you say about excluding KST as a subgraph? We have some results there too. So, yesterday I was debating which of these two results to present and To present and Torshin asked, What's all Pyotr asked? What are you going to talk about? And I said, I don't know one of these two things. Torsten says, I know what you're going to talk about. And then he reads an abstract. And indeed, the abstract says, I will talk about this. And it turns out I didn't write that abstract. David, the boss, wrote that abstract, but it's probably my fault or rather Google's fault. This morning I found about 20 plus. I found about 20 plus emails from David in my spam folder. So he probably tried to get me to write an abstract, and when he failed, he wrote it himself. So this is what I will talk about. So let's see what it is and what was known. So we want to get a better bound on clustered chromatic number for graphs for proper minor close families. Proper minor close families of graphs, so each graph includes KST as a subgraph. And we know now we really have a good result when S is one. Okay, so let's see what was known for other S's. Okay, so here's what I would want. I would want something of this will be typed. This will be ideal result which we don't have. ideal result which we don't have that every minor close uh every minor closed free whatever very minor closed i guess there's no free here with no case the subgraph is s plus one colorable well here it has to say that s is at least two because it's not true that s is at least one but remember when s is at least one this is uh bounded This is a bounded degree, and this is tree coloring, and that's necessary. So, for S is greater than or equal to 2, you want to prove this bound S plus 1 for the cluster chromatic number, and that is still open. We prove it for some classes. You will see it. Okay, but this was known. S plus 2 was known. It's by this result. What am I doing here? What are we? Okay, let me show you what our results, results that were known. Okay, maybe two years. Okay, maybe two years ago, David and Chung Hung had a series of two papers. One of the results in the paper, this was kind of, I wouldn't say a side result, but it's maybe two pages long. They proved that if you look at the bounded trivia families and you exclude KST as a subgraph, that then such families are S plus 1. Such families are S plus one not colorable, they in fact S plus one choosable with constant cluster size. And in fact, what did I want to say? Yeah, so these ones are S was unchoosable with bounded clustering, and this is reasonable truth, maybe two pages long. Okay, and they proved the second result they have there is that if you If you have a family, proper minor plus family where every graph excludes KST as a subgraph, then you are S plus 2 colorable with bounded clustering. Okay, so these two papers together have about 120 pages. As I said, the first one is short and I will use that. This one is, I don't know, together, like this one. Know together this one, okay. Let me say what I so this one, the main part in this proof, the main thing was proving that graphs of layer tree with that exclude KST as a subgraph are S plus two colorable. That was their main thing, and it has a main lemma which is 60 pages long to prove these calculations. Okay, so what is What is my goal here? I would like a simple proof, at least for product structure, of this result, for even better S plus one for this family using product structure. Okay, so by the way, notice that when I was talking about Zenek and Sergei's result, it's not written. This one is written and it gives because And it gives because if you don't have ks plus one as a minor, then you don't have k ss as a subgraph. So it implies that graphs that don't have k t as a minor are t plus one colorable. So you add only two to that result that is not written. So it's a strong result and gives lots of motivation to study this KST excluded subgraph. Subgraph. Okay, so here's what I wanted to prove. Okay, so let's summarize the main thing in their paper, the difficult part, which is that graphs are not a KSV subgraph and with layered tree decompositions, which are, if you haven't, I don't know, I don't think they were introduced this week, but it's kind of like a generalization of they're a little bit stronger than product structure, but just a little bit, I would say. Little bit, I would say they're not the same. We prove that they're not the same. A product having a product structure implies you have a bounded layer tree with, but not the other way around. So they proved that the graphs that have a constant layer tree width, and it doesn't, we don't need to know what it is, and no case T as a subgraph are S plus two colorable with bounded clustering. So, what I wanted is to find a simple proof, but where layered tree width is three with is layered three decompositions are replaced with product structure okay so here's what i want a simple proof any proof bound that every graph having kc subgraph such that the graph is um that that graph is a subgraph of a p times h where h has a constant tree with is s plus 2 colourable with bounded clustering. I want a simple proof of that. simple proof of that because their result already implies that or even better new result that they are s plus one colorable which would be tight s plus one is tight in all of these examples because it's tight for bounded trivial graphs uh s plus sorry s plus one is the best you can hope for and by the way again there is a cover that s plus two is tight when s is one okay so this is for interesting for s at least two okay Okay, that's what I want. Yet another thing I didn't get, or we didn't get, but let's try to prove it. All right, so you have this graph H that doesn't have KST subgraph. And G is a subgraph of P times H, where H has constant three-width. And keep in mind all the time, what I'm going to use is that. What I'm going to use is that graphs are bounded three-width S plus one colorable with constant size clusters, and the dead proof is simple. So I'm going to use it as a black box. So this is one of the things that worked in all the previous examples where product structure was used, is that you have a simple graph result or known result for bounded tree with graphs. So here is the same thing. So typically how strategies worked with little bit of extra work. Little bit of extra work in the previous talks is that you apply known result to H and then you try to extend it to the product. Okay, so let's try to do that. So this is our graph H and by David's and Chung Hung result, we say, oh, there's plus one color, but great. So we color H with that many colors. And then you think we typified to the product. This is just, you know, first vertex in the. You know, first vertex in the product, and I apply it to the path. So I get colouring like this. Okay. All right. So I know now what to do. So this is my example is when S is two. So I'm using three colors. So what I'm going to do, do, so when you, you can think of it, if I have this H and I uncontract it, because I don't know the length of the path, some of these colors may. Some of these colors may create a huge cluster. Okay, but we know that they induce a path or a forest of paths, each cluster. So, what I would like to do is to break these clusters using this S plus second color. And that's actually easy to do. The picture shows you. So, in a second layer, by layer, I mean this second vertex of a path, if you like, then it projects into a path. I take a color. I take a color plus one and replace each vertex of that color with S plus second color. Then I skip one layer and then do the same for color two, then I skip a layer and then I do the same for color three. Okay, and then it's not, it's easy to see that you broke all the clusters. The clusters now have length, whatever. Oh, yeah, I guess. Six or something, okay? Because eventually, like after six layers, each color is broken by S plus second color. Okay, so but this is wrong. So what's wrong? We know that G doesn't have KST as a subgraph. H. H, you know nothing about H. The easy way to see this, think of when S is one. So we are looking, that means G has bounded degree. There is no product structure that has that every bounded degree graph is a product of P and bounded degree H of bounded trivia. There is no such result, and you can even think if you think of product structure of contracting that H. Of contracting that age, this is actually what happens. You are contracting those parts. You end up, there's no reason that after you contract, you have a constant degree. In fact, David posed this. I was thinking about this also. If I was forced to guess, I would guess that the answer is no, but maybe it's not, which would be nice. Is it true? This is where the motivation comes. He posed the question on this co-author. Co-author that says for every graph, let's say planar or more general bounded genus, apex minus three graphs of bounded degree, are there subgraphs of p times subgraphs of bounded tree with and bounded degree? So that's open. I'm not sure that there is reason to believe that it's true, but maybe it's true. But we don't know that. So this is. We don't know that. So, this is completely wrong because this graph does not exclude KST. So, then we don't have we only have three as a result of that graph. So, this is wrong. So, and for that reason, actually, we don't have a result that I wanted, which is that all the graphs that exclude KSC is a minor and have this nice product structure as possible. Nice product structure as plus two colorable. That's also open. Well, simple proof. It's not open because the result is known for layered, bounded layered three with graphs. Okay, so what did we look at now? Oh yeah, so here's the problem. H is not KST3. And in fact, which will become interesting later, H is not even a minor. Product structure doesn't give you that H is a minor of. That H is a minor of G. The results in our original paper give you, in some cases, that H is a minor of G, and that's going to be useful in what we did manage to prove. I will call this a blocking strategy because this will come back. You block these with one color, you block or you cut these long clusters. Okay. All right, because I can't read. All right, because I can't prove this, right? I can't prove that graphs that have a product structure and exclude case in subgraph have this. I'm going to replace product structure. And in case of minor closed families, we actually prove this is if and only if. So I'm going to say forget product structure. We are anyway only looking at graphs that exclude Exclude a proper minor closed families, and in that case, this is if and only if you have a product structure, if and only if you exclude the fixed apex graph as a minor. So, I'm reducing the goals. So, here's a new reduction. I want to prove that result. So I want either a simple proof that apex minor free graphs that exclude KST as a subgraph are S plus two colorable, or even better, new. better new proof a new result that they are s plus one colorable so some of these we achieved so let me just tell you what what we did and for that as i said product structure doesn't it's too general uh it doesn't work so i'm gonna actually introduce david already introduced it but i will introduce it again it's simple and equivalent to product structure except that in this setup of layered partitions i can say something more Say something more about the structure of the graph, in particular about the structure of apex minor free graphs. So, what's a layering? David already introduced this: it's a partition of vertices. So, think of layering as that P part in a product. So, it's a partition of the vertices into layers such that edges are only between vertices, and the same layer of vertices in consecutive layers, or rather, I should say, partition of vertices. I should say partition of vertices in ordered layers or label from layer one, layer two, and the edges are within a layer or between two consecutive layers. And then you have a second partition of P of vertices into parts. Parts are denoted by these blue blobs in my picture. And so basically layer partition is a pair, it's partition into layers and partition into. Into layers and partition into parts, such that if you replace a part, a whole part, each part by a vertex, that's called a graph is this, quotient or quotient? Quotient graph is H. So you see here that this H is H from a product and this layering. And this layering gives you the path in the product. So, what do you want here? What you want is that each part intersect each layer in a constant number of vertices. And if you think of products of path times h, that would mean that intersection of each part and a layer is exactly size one. Exactly, size one. Oh, yeah, one. Okay, so like in this picture. So here's what we know. Yeah, so this is just to make connection between just a picture to kind of that demonstrates that these things are the same. All right. So I want to prove that result either as plus. prove that result either s plus one or s plus two for apex minor free graphs apex minor free graphs are can be obtained from click sums of so-called strongly almost embeddable graphs okay so we have to do these strongly strongly almost embeddable graphs ahead of doing click sums this may surprise some of you we can actually we have a product structure theorem for Actually, we have a product structure theorem for apex minor free graphs. But remember, I can't do this on product structure. It becomes, and when we prove the product structure theorem for apex minor free graphs, we were doing click sums on these layerings, and then we proved that we get what we want. But now this structure that we get is not as nice, not nearly as nice as what I need. So I'm going to do strongly almost embeddable graphs and then do click sums. So strongly almost embeddable graphs, they're going to do. Mass embeddable graphs they were introduced. It's just embeddable, so it's a you get a graph embedded on a fixed surface plus vertices plus apex vertices that can connect only to vertices. So what we proved, so that's what I want, or rather S plus two. So what we proved in our original paper is something stronger than product structure for this class of graphs, for strongly almost immediate graphs. Strongly almost embeddable graphs. We proved two things that I need. One of them is that every strongly almost embeddable graph has this partition where each part is a connected graph. What that means is that if I contract that part, the resulting graph has bounded, the resulting graph, each part, if I contract it, the resulting graph H not only has bounded three widths, it's also a minor of A minor of the original graph G. So you could see actually that already this particular result, if you replace KST as a subgraph with KST as a minor, then that previous strategy that didn't work would work now. Although that's not super interesting results, you're already excluding an apex and now you're excluding KST as a minor. Not interesting, but I'm just saying it's already helpful. At least you know. Helpful. At least you know that H is a minor of G. But that's not enough because again, you contract and you're not KST free anymore. Oh, oh, just a second. I'm missing something. Oh yeah, so at least this is not a problem. But we proved something else. The parts are connected and all the mess is in the first place. The mess is in the first layer, meaning the graphs induced by layer two onwards has bound the genus. And in fact, I think based on this thing that David just proved, maybe it's even plainer, but I'm not sure. I still need connected. I mean, they just proved this. But this is enough. The graph induced by layers two onwards has bound the genus. So with that, we can work. So, with that, we can work. So, here's a little cheat. So, here's what you do. Here's your graph: a layering of your almost strongly almost embeddable graph with all the mess in the first layer, meaning vortices, apices, non-planarities of all kinds, and so on. All of that is in the first layer. So, what I'm going to do, I'm going to take all the parts that intersect layer four. That intersect layer four and below, maybe even three words, but I don't want to mess with it. And these are the parts I'm going to contract. So in this case, this would be contracted. In this case, I contracted up to layer four. So this part spans layer one to four, but I contract vertices up until I get to layer four. Okay, so I get a resulting graph. I'm going to call it H prime. Resulting graph, I'm going to call it H prime. It has bounded three width. It lives on four layers. That's one. And two, more importantly, because that, I claim this whole graph doesn't have KST as a subgraph if the original problem S was at least three. And the reason is that the original graph didn't have KST as a subgraph. So imagine now that actually there is a So imagine now that actually there is a KST and S is bigger. Where can it be? It's not in the first three layers because I didn't touch them. And the nice thing about KST is that has diameter two or three. That's why I left the first three layers. So first three layers, it's not there because we didn't touch it. But then for the other layers, it's not there because it's a minor of surface. Minor of surface graph, so you don't have k3t. Okay, so now we can fix that proof. So what is now our s plus 2 coloring of the graph algorithm with s at least 3. That is, I just explained, contract all the parts in layers 4 and 4 and later. You get the resulting graph as boundary tree. You get the resulting graph as bounded tree with the no KST as a subgraph. You apply David and Chung Hung result, and you get S plus one coloring. You uncontract, you apply that blocking strategy, you use S plus second color from this second strategy. So we got a simple proof and S plus two colors. Okay. Can we do S plus one? Well, we can do it. S plus one. Well, we can do with another sheet. We can do s plus one. So here we start the same. You contract all the parts four and onwards. And then on that layer four, on that layer four, so here's actually, let me give you an intuition. So really the first couple of layers, you can have a graph. Layers you can have a graph on the tree which you may actually need those s plus one colors in the first layer, okay, from the tree width of these impurities. But then you think, if I'm going down, eventually, shouldn't I be needing, what was the boundogenus graph result? Four. Four should be enough, right? If I'm going, I'm going trickling down. But the problem is how you can't just cut it because you end up with t plus one plus four. One plus four, or whatever, S plus one plus four. So I would like to somehow save one of the colors that were used in the first layer for a blocking. I would like to at least be able to save one color. So here's how you save the color. You put the dominating vertex on the fourth layer. Okay, on that layer where you have a bounded genus graph. A bounded genus graph. You put the dominating vertex and you pre-color that vertex with color one. That's the color I'm going to save for breaking the blocks. So that's what I'm going to do. By the way, graph still has bounded tree with. It had the bounded tree with. I had nominated work and somewhere trivial goes up by one. So I end up with a graph of bounded tree width where one vertex is pre-colored. Is pre-colored. So there is actually a version of Chung Hong's and David's result that allows you to do that, pre-color a vertex. There's a whole complicated statement there, but what all I need is that I can pre-color one vertex and make it be proper. So this bounded degree graph, sorry, bounded three-wheel graph now, I can color it with S plus one colors. It with s plus one colors such that that vertex that I added is not only colored one but no neighbor is colored one. Okay, so now it's easy. You uncontract and then I apply one as a blocking color. So we have S plus one coloring. I pay a price here by adding a dominating vertex than my surface part now can have K S T. Can have K3T as a subgraph, but it doesn't have K4T as a subgraph. Okay, so we get that for F is at least four, you get S plus one coloring. Okay, so that's what we have. So we get when S is at least, when S is three, we get S plus two coloring. Simple proof, when S is at least four, we get a new bound, S plus, and tight bound, S plus one coloring. Coloring. What we need to do is also click sums. The click sums, you can't just blindly apply click sums on this. So you know you color these parts. You can obviously apply click sums because you don't get to choose how many colors the click is colored with. And if you start just gluing them on the same click, you can get big clusters. Although originally, you didn't have big clusters. Okay. Okay, and I can't apply Chung Hung's and David's result to pre-color the cliques because they are too big. We don't have the clicks are not, we don't have a bound on the click. I mean, it has nothing to do with yes. It can be much bigger than yes. Actually, that's the point why we're looking at KST subgraph. The clique can be too big, and there lamps that would be too strong, that you can pre-color every click. Strong that you can pre-color every click and get it be proper. You need it to be proper. So that doesn't work. So, what we need to do is we do these contractions in each part and actually apply click sums on these parts. Now, you can't apply all the contractions. Or now you can apply all the click sums because maybe some of the click sums is in a surface part. So, you apply the click sum, so you do contraction of each part. The click sum, so you do contraction of each part. You apply the click sums on the parts that didn't disappear. And you get these blobs like that, right? So if you have the parts, the almost, strongly almost available graph, you apply the click sums that you can, you can prove that these graphs are bounded tree width. You can prove that they exclude KST. The same thing, you didn't, so you apply this and you apply. So, you apply this and you apply their result to these blobs. So, blobs have boundary tree width and they don't have KST as a subgraph. And now you color each blob by their result with S plus one color, you uncontract, and now you have to do click some, you know, remaining. There has to be a click here that connects to this part here. But now we know that that click has size three and. And that in David and Chung Hong's result, I can pre-color three is I can handle three. So that means that I first color this blob. There's a click here of size three that I have to apply somewhere here, a glue to somewhere here. I read off the colors. I pre-color them in the second blob, insist that they are proper, and now I can do click sums. So that's the result. So, what did we get? Because I had these conditions. Yeah, so now I can do it. When click size is small, now I can use the result. Okay, so here's what we know. What did we prove? When S is at least four, every apex minor free graph, we get the tight result. So every apex minor free graph, in no case, this is subgraph, is S plus one colorable, that's tight. Colorable, that's tight with bounded clusters. The proof is simple. I gave you the whole proof, and the result is new. The bound is new. When S is three, we have a simple result for A X minor three graph with S plus two colors. We don't have an improvement. So it's still possible that this is S plus one. For S is two, we have nothing. We're going to get to that. This is the result I didn't talk about and this is bounded degree result, so I'm not going to, I didn't spend any time on that. I didn't spend any time on that. So, here's what is not known. We got nothing for S is true, meaning nothing of what I wanted. We don't have a simple proof of S plus two coloring because K2T is planar. So, really, it would be interesting. So, here's an interesting problem for me. How do you color planar graphs? Simple proof that planar graphs with no k2t are. Are either four or three colorable, that would be new result. It's three colorable. I think it would be new result. So, simple proof of the first line, and both in case two and three, any proof, well, I guess that's a conjecture, that they are S plus one colorable with bounded cluster sizes, and that would be tight. So, we don't have a tight result for 2A3, and we don't have a simple result for S is two. For S is two. And we got nothing for this, it is only for apex minor for usal that we achieved. What we didn't achieve is proper minor closed families, simple proof for all proper minor closed families. Remember, in Chung Hung's and David paper, they use layer, all of this was at the end used to prove results from proper minor closed families to get S plus two for all proper minor close families, excluding KST. Close families excluding KST. We only have that in bounded degree case. We simply cannot, at least we didn't, so we want simple proof of that. We simply cannot handle both arbitrary apes and click sums. One or the other is easy, but not both. So I'll leave you with that. I think that's the end.