Dimitri, Itskinson, Artur Ryazanov and Anastasia Sofromov from St. Petersburg. Okay, so the topic, so the proof system that we are analyzing proof for in this system, it's about the depth figure. So let me just briefly remind you about the system, so how we are considering it. So first of all, we consider So first of all, we consider formula depth as the number of alternations plus one that in order to handle with unbounded finite connectives. And like so, like in any frequency system, we consider a finite set of sound derivation rule and of this form here, where the number of premises can be greater or equal than zero. So if zero is a maximum, and the proof is the usual. And the proof is the usual definition. So you have a sequence of formulas such that the last one is what you want to prove. So here we are moving with tautologies. The depth is the depth of the proof, it's the maximum formula depth. The size is the sum of the size of the formulas. And this symbol I mean that we are moving in a proof where the depth is mounted by D, so non-electric. So obviously, as you can imagine, handling a proof in this system, it's rather It's rather uh um annoying because of uh so what we are doing it is uh just uh to do proof and to making proof appealing to a very nice characterization of proofs as a games invented by Sambas and Pavel Pudlak, which is called the Pudlak-Bus game. So, this game I'll just remind you quickly if you don't know them, so it's played in this way. You have a set of initial conditions. Set of initial conditions, so formula Ci equals some Boolean value Ci, where you are considering that the conjunction of all this initial condition is unsatisfiable. Same the adversary is claiming a satisfying assignment for F, and so essentially Pavel is trying to put in a contradiction, same asking formula at each round until one is terminating again. The terminating again when we reach what is called a trivial control. Reach what is called a trivial contradiction with the formula. So, some very simple contradiction on the initial condition, for example, of this form. Okay, V1 and V2, it's equal to 0, but V1 is 1, V2, V1 is 1, C2 is 1. So, in the paper, okay, so what is a Pudlak-Bus proof? A Pudlak-Bus proof can be seen as a binary tree, where in a node, in the node there are the formulas that publish. There are the formulas that Publisher squeering at each node, and the leaves are labeled with trivial contradiction. So, depth of the proof, depth, and size are defined, as you can imagine, by looking at the depth, the size of the formulas we are using. And so, we say that we have a PB proof of C from this axiom C L, from this formula C L, when we have a P B proof of this initial condition. So, all the premises are true and the consequences is. The premises are true, and the consequence is false. So, what we prove in the paper is this lemma that essentially enables us to work with the Pudlak bus game without worrying too much about the details of the proof. So, essentially, we can go from FD to Pudlak bus system and vice versa polynomially in the size, and we detect under control, under constant control. So, then we are happy with that. Are happy with that, and we can essentially make proof a bit easier to describe. So, I'm quickly going into this because Dimitri was already presenting this, citing contradiction. Also, you probably all know about that. The only thing that I want to just focus your attention on is that what Dimitri was calling parity for an edge, I'm called par for an edge. So, this is these formulas where the tosser here there is a parenthesis, missing parentheses of the Is a parenthesis missing parenthesis, so the sum of the variables is equal to the charge, to the charge of the so this is this parenthesis. And as a tautologist, we are considering the CNF expansion of this formula as usual. And remember that we are moving with tautology, so our formulas in this case is not this conjunction. Two things that I want to just present you with a picture. One, it's of picture, one it's already was already mentioned by Dimitri, are two special graphs. One is the grid graph, so every one of you know, and another graph it is a very a graph which is a subgraph of the same parameter for the for the grid, which resemble a bit to the grid. That it's it's called the wall graph. It's this graph here, I omitted the definition because it's rather intricate because of the missing of these edges, but I mean you can understand precisely what kind of graph. Precisely what kind of graph it is. So, these are two important graphs in our work. So, keep in mind these two. So, what are the results that we know about the complexity of proofs for citing tautologies in bounded depth frege? So, of course, in bounded depth frege we have several results on PGENO principle, and I was not mentioning here all these results. But on the site in tautologies, On the sighting tautologies, we have the first result given by Alice D. Urbart in 1996. So these were exponential lower bounds for sighting formulas over the complete graph. The depth reached for that lower bound was log log n. So Eli Besserson was later giving a lower bound, a super polynomial lower bound for citing on Maddo degree of expander. And this work was a kind of reduction, so it was reducing to the PG. Of reduction, so it's reducing to the Pigeon principle, a lower bound, that using a technique, so making by more quart and few, a simplified technique. So more recently, so after a certain number of years, so in a very great paper, Pitasi, Rosman, Servidio, Tan, they were proving super polynomial lower bounds for cycling formal over three regular graph at this depth here. So the result was really very, very nice. And so And so one year later, ASTAD, as I think Divity was already mentioning, this lower balance was improved both here in the size and the depth for sighting formulas, but over the grid H of M. Here, in our work, we will use this result essentially as a black box. And you will see how. So I think that if I remember well, Dimitri was also introducing. Dimitri was also introducing the tree width. So I was just putting here the definition of tree decomposition of the graph. Maybe you all of you know. So please make attention to the fact that I want to be quite fast on this. Make attention on the fact that the bugs in the 3D composition are subset of vertices. So in particular, so you can have some original node to be in more bugs. In more bugs. This is because later I will use another kind of decomposition of graph where I am partitioning the vertices, so making a difference with this. So the width of the trigomposition is the maximal size of a bug minus one, and the three width is the minimal width among all possible triggers composition. So given this definition, I can state our two results in the paper. So it's essentially lower bound. Essentially, it's lower bound and upper bound, so quite tight for the complexity of citing formulas over any graph in terms of the three width. So, essentially, you can see that we have a sim for the lower bound part, we have a similar result to the one of ASTAD, where we can replace the three width of G here, and the upper bound uh we has essentially this times a factor of polynomial in in the size of the initial formula. Size of the initial formulas. So, what I will do then in the talk, in the time, I will explain the ideas that are behind the lower bound and the ideas that are behind the upper bound. I will not be detailing the proof, but so I hope that the idea can be captured precisely. So, let me just remind you about this graph operation that are under this grid-minors theorem of. Grid-Minor's theorem of Robertson and Samos that I will mention in a second. It's a very easy thing, so maybe all of you know, but let me just remind. So we have three operations: edge removal. So you see, you take an edge somewhere in your graph and you remove it. You have a vertex removal. So let's say that you want to remove this vertex from the graph, and then you are just removing all these three things. Notice, in particular, I already can tell you immediately now that so this vertex removal can So uh this vertex removal can be obtained essentially as a sequence of edge removals. Okay, so for this we will not be looking at the vertex removal, but this will become later. And at the end we have this end edge contraction rule. So imagine that I want to contract this edge here. This is bringing my graph into this graph here where I'm just merging into one new node. And please notice that it will be important a bit later. That it will be important a bit later that we are increasing the degree here. So, we are just creating some more degree. But I will be more precise later on this. So, what we know about this operation? So, we know a minor, okay, the definition of a minor or G, it's a graph that can be obtained from G by a sequence of this operation that I was telling you. So, important theorem, it's a very well-known theorem by Romans, Seymour, and recently By Romans, same and recently proved by Chuzoi, is that every graph G has a minor of this, as a minor has a grid HR with this parameter here, only of the three width of 137. So we are going to use this theorem in a way that I will try to introduce here with a very simple idea. So, because given that we have this theorem, one can try to say One can try to say that, oh, okay, I can try to just implement this idea to get lower bound for tritinom graph in terms of the tree width. I just if H is a minor of G, then I'm trying to see that the small proof in Banded Frege of the sighting tautologies of G can be efficiently converted into small proof of that sighting tautology for H, keeping the depth constant. Keeping the depth constant. If I'm able to prove this, then well, I'm happy because at the end I have the grid by this theorem and I can apply the Astad theorem. Okay, so this is the sequence of operations that we are doing leading to the R. So what is the problem with this simple idea? So the problem is that some of the operations that we have seen are not Operations that we have seen are not working very well when we are applying on certain formulas over the graph. Let's see what are these operations that are not working very well. So, let's first of all look at edge removal. I will not look at vertex removal because vertex removal is a sequence of edge removal. So, forgot about that. So, we look at edge removal. What is edge removal? Edge removal is this operation here. So, I'm taking this edge here and I remove them. So, let's look at the So let's look at this the equation that we have in the original formula. So par A it is this equation here, 1 plus 2 plus 3 equals 0, because this is the charging of the nodes, and par B it's 4 plus 5 plus 3 equals 1. So what is happening here on this graph? Well the charging might change, but keeping the parity, let's say. So then 0, 1, 1, 0 in these two cases, to obtain the new equation for this. To obtain the new equation for these things, we just have to apply an assignment to the variable x3. So exactly to the edge that we are, to the variable corresponding to the edge that we are removing from the graph. Okay, so you see that assigning this will pass to the new equation that we really had need there. So then it seems to be not a problem here, because if there are if we are doing the energy removals on the graph, this is simply a restriction on the formula. Restriction on the formula. So it's okay. So it seems that we can apply this. So let's do the other. So the other instead is presenting a problem because the problem is the following: that we are passing from this situation to this situation. Okay, but let's look again at the equation that we have here. We have this equation, this other equation for A and B, and then here we have to do this equation for C, where the charging is the sum of these two. So notice that here to get So notice that here to get this new equation, what operation are we doing? So essentially we are substituting in one of these two equations, in this let's say in the first one, x3 with the sum of the other two variables, x4 and x5. So essentially, what is happening here when I'm doing this is substituting on the formula and maybe on several formulas in the proof, that the depth can increase because parallel is this formula here, and then the depth is increasing at each. And then the depth is increasing at each contraction. So then the sequence is failing because the depth is a depth is a problem. Okay, so how we were doing so what we were doing. So we were learning this other operation on the graph, on graphs. This operation is called vertex suppression for vertex of degree 2. Let's see this operation. Let's see this operation. Let's see this operation. So, this C is a vertex of degree 2 with some charge. This really doesn't potentially. And so, this operation is just removing this vertex and joining these two edges into 1. Okay, so we are passing from this situation to this other situation. So, this operation here is not, I mean, it's a quite important operation. But let's analyze what is happening now. Let's analyze what is happening now on the formulas, on the exciting formulas on G when we are doing this operation. So let's see in the other, exactly like in the other cases. We have the new equation for the parity of BSC, for example, and then we want to see what is the new equation for the for B now here. But see what we are doing, so we are just setting the sum of these two va the variables corresponding to the edges that on the vertex that we want to remove. on the vertex that we want to remove to the charge of that vertex. But this exactly means x6 equals not x3. And so this substitution that we are doing here to obtain the new equation of B, it's still a substitution like before, but it's much more efficient because instead of a formula, or that one formula, we are substituting a variable for a literal. So this then means that whether means that vertex suppression are captured by substitution of variables by literals, what I think Sasha was called projection in his talk before. So now this is very interesting and now we want to see if we can do something on discrete minor theorem. So what we can say there. Okay, so what we look is that first of all let me just say to you that if in a graph we if In a graph, if a graph H can be obtained by a sequence of suppression and edge and vertex deletion from G, it is called a topological minor of G. So we were following some notation and definition from some graph theory paper. So maybe there are slight differences between something that I have seen on some paper improve complexity and this in graph theory on this definition. In graph theory, on this definition, but I mean, we were following that things. And one thing is that I was looking at the operation of suppression for vertex of degree 2. But of course, this operation can be also analyzed and what they are doing in graph theory for vertex of degree of bigger degree. But we are interested only in degree 2, and you will see why. So, what we are able to prove is a theorem that actually, to be honest, we see this. To be honest, we see this theorem mentioned in some paper, like, but we never see this proof. So, we try to give a proof of this theorem with this similar theorem as the one that we have seen before, but a topological minor. So, and then we say that we can say that every graph G has the the the wall R as a topological minor, where R it is exactly the same same value as before. Okay, so uh Okay, so how we are proving this theorem? So we are proving this theorem of course using the important result I think of Chuzzoli, the grid minor theorem there. So the proof is not very complicated, but I think it may be interesting. So since W L, the wall, it's it's a minor of H L, there is a sequence of removals leading from one to the other. So by grid minor theorem, we can go from uh G to H L. From G to H R. And actually, so we have a sequence of so we have a sequence of operations leading from G to W L. And actually, what we are doing, we are taking the sequence where the number of edge contraction is the minimal possible. So, there is a minimality condition. And since, moreover, one can see that the operation can commute, we can consider this sequence leading from G to H. First, we are applying all the removals, and then we are applying all the contraction. All the contraction, the contraction. So, this is important because if you think one second, you will see that contraction on the grid to vertices can be essentially our suppression, so can be done as a suppression. So, here you have the proof. The proof is essentially an observation of the fact that the contraction cannot never be on a degree, so always all contraction must involve a node of degree 2. And the reason. And the reason is that otherwise, I'm just be quick on this, otherwise by the minimality condition, the degree it is increasing. So if the degree, because the contraction is increasing, the degree except that in one case which is excluded by our minimality condition. So, but if the degree is increasing, then we would create a node of degree greater or equal than four, but this will be a Or equal to 4, but this will be a contradiction of the fact that the wall doesn't have node of degree 3. And the contraction and the removals are in the first part of the proof. So what is the lower bound? So the proof of the lower bound here. So let's say that we have now we can have this sequence provided by the theorem that we have seen before, G leading from G to W L, where before we have edge removals. Before we have edge removals and then suppression, and then we have lemmas that are essentially proving what I was describing in the naive idea. So the removals is very simple because a restriction. The suppressions is essentially, so we can prove that if H is obtained from G by suppression, if there are fregended frequency proof of siting on G then of size S, then there are frege proof of T H Frege proof of TH, setting of H of size S plus a polynomial G in depth plus a constant. So the main point here is that this projection are semantically, I would say, closed under composition. So if I have one projection here and another projection here, and I'm composing them, I can capture this new substitution by another projection. So this closure, it is This closure is semantical. So then, so this proof is not immediate because syntactically the manipulation is a bit involved, but you can do that. And so at the end, we finish this by having a proof of what? So we're starting from small proof of G and we are arriving to small proof of H over of W of R. We still have to arrive to a proof of H over. So what we are doing H over. So, what we are doing is, so we are dealing with this situation, but so what we can do is the following. So, given that we have the wall, we can apply contraction to these edges in the wall and passing to a grid of this form, 6,2 in this case. So, and after that, we can remove what we have to obtain an exact grid H3, which is essentially the half of this number here. So, you can. Here. So you might be wonder why in this case I can apply contraction so free. And the point is that if you notice, all these contraction can be applied essentially in parallel, one at once. And they are all on disjoint edges, on disjoint nodes. So the depth is increasing by one, but in one shot everywhere. So because of this disjoint. Everywhere, so because of this disjoint trans property. And we are not increasing of this quantity here. And essentially, then we have done because we are reduced from G, small size proof from G, from sighting on G, to small size proof of the grid for losing one half, but essentially we can apply the end of the theorem of Asted. And this is concluding the lower bound. So let me just give briefly, very briefly, the idea of the upper bound. idea of the upper bound. So in the upper bound what we are doing is the following. So first of all we are considering, we are finding a compact representation of equation of this form, parity of xi equal i. We are able to put this into a formula of depth, de-depth formula, so under control the depth, but of size growing as 2 to the n omega 1d. So once we have this, then once we have this representation of this form here, Once we have this representation of this form here, we are just producing proof in bounded at Frege of these rules here. Essentially, we can reasoning on this equation with the right parameters in bounded Frege. And these two results immediately prove that it's just a matter of nothing, that there are a bounded Frege proof of size 2 to the M to the O1D. M is the number of edges. O1 D M is the number of edges of G times the polynomial factor in the size of the formulas of the formula. This is immediate from this. But this is not sufficient because we don't want M here, we want the three width of G. So what we are doing here, so we are doing the following. So we are introducing this, introducing, we are using actually this notion of three partition of a graph. So a tripartition of the graph, if you probably Of the graph, if you probably know it, but let me just remind you what it is. It is each vertex of H is a set of vertex of G, which form a partition, so each vertex is exactly one back. And the distinct nodes of H, so backs AI and J, are adjacent in the tree, in H, if and only if there is an edge in G with one end point in the first bag and the other end point in the First bag and the other point in the first bag. When this graph here is a tree, then this is called a tree partition. Can I take two minutes? Okay. So of course we can define the width for this decomposition like the maximal size of a bug and the tripartition width is the minimal as usual. So this is an example here. So you can see that in each bag this In each bag, it is very easy to look at. In each, how many edges there are? There are the three partition width of G times the maximal degree in G edges. So that means that if I can look at that siting formulas only on the graph restricted to a partition, the previous lemma is immediately saying that there are size so this graph here, G is restricted to a to a bag here, of of this size here, because this is the number of uh of edges. This is the number of edges that we had before. So now, what we can do is that indeed we can prove that, oh, sorry, this for each bag is a typo. There are bounded figures proof of TG of this size exactly for the citing formulas over G. How we are doing this? So this is just a very high-level idea of the algorithm. So we have keep in mind this picture here. So what we are doing in the proof, it's In the proof, it's implementing this area. We are searching among this bug for one bug where this condition it is holding. What it is saying, this condition, this condition it is saying that the sum of the edges in the boundary, it is different from the total charge of the back, of the nodes in the back. If you think one second, this condition must necessarily be true, because the formulas are true. Are true, so unsatisfiable or tautological, as you want to see. So, once we have, there must exist one. Once we look at this bug, then we apply this proof here. And then we can do this proof for this bug here. And this is essentially the proof, how we are doing the proof. I'm finished, it's just one thing. So, this lemma still we have not done because we have the tree partition width, and we want the tree width. And we want the three weight. And so we were quite lucky because we discovered that there is a theorem, quite recent theorem, I think it's David Wood, 2009, proving a strict relation between the three partition width and the tree width of the graph. So then applying this theorem and reasoning by cases in the proof, so it's a bit technical, not difficult, we were able to prove the upper bound. We were able to prove the upper bound as we want. And uh that's it. Thanks. Quick question from the I didn't understand the uh interaction between uh the this rewriting uh graph uh moves and the proof. Shouldn't you to do it uh uh To construct these rewriting rules that uh in a way that uh the proof co proves the their correctness? Or is it from outside? So what you want to do is just to be sure that suppression are coming from after removals. The point is that we want to be sure that it's a sequence of the operation that you are doing on the graph, the suppression are coming after the removals, and that it can be done. removals and that it can be done because the operation can commute and then you have a sequence indeed pro leading from G to the wall of R to index and so the rest I if I understand well your question the rest is just matter that so sizing is not increasing too much so in applying so if you are starting with a small size proof on for siting on G then no operation, it's increasing uh the size uh too much. So maybe you're okay, sorry. So besides the crude theorem, there is also characterization of three with in terms of brumbles. Some of you are familiar with that. So brumbles, in some sense, they need to be closer to clicks. And then I was wondering if you can use something like when Sasan used You can use something like Benson used for reducing. Ah, but you don't want that. I was going to say reduce Pisson for principle, but that's not good because Pisson for principle is not hard enough. I know that you remember, but we were not considering, so I mean. Okay, I answered my question. If there are no further questions, let's thank the Colour. At least we resume it quite fast. So we have to stop. But it's uh it's pushed down and then I thought?