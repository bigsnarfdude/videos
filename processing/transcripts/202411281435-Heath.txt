To meet so many people this week. And the work that I'm talking about on proper rainbow saturation numbers is joint with what looks like a whole long list of people. So this was from a project started last spring at Iowa State where I was doing my postdoc with a bunch of the graduate students, Dustin, Enrique, Joe, Alex, Hope, Coy, and Nick, along with Anna Hathbap, who's another postdoc at Iowa State. She's now on the job market, if anyone is hiring, and Ryan. Anyone who's hiring, and Ryan Martin, one of my postdoc supervisors. So, I want to talk about a coloring problem, which should be kind of fun for the last talk of the day, hopefully. But before that, we'll start out in an uncolored setting, just talking about the traditional saturation problem. So, I'm interested today in graphs which avoid certain subgraphs. That's the big idea. And of course, naturally, we'll say that a graph G is Naturally, we'll say that a graph G is F free for a fixed forbidden subgraph F if it does not have any copies of F as subgraphs. So for the first few slides, as we get used to some of the definitions, my forbidden subgraph that I want to avoid is going to be just the triangle. And we'll look at some different examples of graphs as we think about saturation. So this first graph here is clearly not F3. It contains a copy of the forbidden subgraph we want to avoid. Subgraph you want to avoid, whereas the other two have no copies of triangles, so they're F-free graphs. But I don't really just want F-free graphs, I actually want something a little more interesting. What I'm interested in is F saturated graphs, and these have two properties. So first, they are F free, which we saw these last two examples are. And in addition to that, they have this property that adding any edge to the graph on the same set of vertices will break. Vertices will break this F free property. So no matter where I add an edge to G, if it's F saturated, some copy, at least one copy of F will be created. Okay, so of course this first graph, G, is not F free, so it's certainly not F saturated. The second example is F free, but there is a way to add an edge to that graph that does not create any new triangles. So this is not triangle saturated. And of course, in this last example, And of course, in this last example, I again have an F-free graph. Any way that I add an edge, a copy of a triangle, at least one, is created. So this graph is F-saturated. Yes. Induced sub-graph or not necessarily induced. Good question. So we have these S-saturated graphs. What type of questions might we want to ask about them? Well, a natural set of questions that we can ask about these edge maximal. These edge maximal F-free graphs is how sparse or how dense can an F-saturated graph be if it's on N-vertices and it's F-saturated. So these are quite natural questions. The first is perhaps the most famous problem in extremal graph theory. When we want to ask about dense F-saturated graphs, this is exactly asking about the Turin number or the extremal number of F. So the maximum number of edges I can have. Of edges, I can have in a graph on n vertices with no copy of f as a subgraph. And so this is very well studied at this point. Of course, going back to 1907 with Mantel's result, again, we're thinking about our forbidden subgraph as being the triangle. We know that the extremal number of this graph is n squared over 4, what we get by having a complete bipartite graph, which is as balanced as possible. Of course, it's triangle saturated, right? Anywhere that I add an edge is in one of the two parts. And edges in one of the two parts, as that will, of course, create many copies of a triangle. So, trend numbers, very well studied. On the other hand, when we think about how sparse an F saturated graph can be, the question that we end up with is determining what we call the saturation number. So, what is the minimum number of edges in an n-vertex, a saturated graph, sat of nf? And if we think of the same example where our And if we think of the same example where our forbidden subgraph is the triangle, it turns out the best we can do in this minimal sense is to take a star with n minus 1 leaves. Again, of course, it is triangle saturated. Any edge that I add in my leaves will create a triangle. And this is quite sparse. It has just n minus 1 edges. So we have this quite large range of possible numbers of edges that an n-vertex f saturates. Of edges that an n-vertex f saturated graph can have when f was our triangle. And these problems are quite well studied. One interesting result to note is that for the saturation number, it is known that this is always linear in the number of vertices. So what I want to talk about is a coloring version of this problem. What happens when we introduce colorings? So of course, an edge coloring is just an assignment of colors to the edges. Assignment of colors to the edges of our graph. And we're interested in two types of colorings today. Proper colorings, probably everyone is familiar with. I want on any pair of adjacent edges to get distinct colors. And the second, maybe less familiar, but perhaps intuitively named, rainbow colorings, where every edge in the graph gets a distinct color. So, as Chris said earlier at lunch, anti-monochromatic, right? As far from monochromatic as possible, every edge gets its own color. Gets its own color. Okay, so then the question would be: what is the natural analog of saturated graphs in the coloring context? And what we are going to choose for this is the following definition, which I'm going to say is properly rainbow F saturated, because there are different ways that you could consider saturation problems in colorings. Colorings, and this one in particular restricts our focus to proper edge colorings. Okay, so say I fix a graph F and I want to ask if some larger graph G is properly rainbow F saturated. Again, I have two conditions that I want to check. The first is kind of the equivalent of being F free. So the graph is having some proper edge coloring that is rainbow F free. Rainbow F free. Okay, so it's enough to have a single proper edge coloring with no rainbow copy of F. The second property, again, the idea is that these graphs should be essentially edge maximal among graphs that are properly rainbow F free. So the idea is that any edge we add on the same set of vertices now will break that property, meaning there is no way to properly edge color our graph G without a rainbow copy of H. Without a rainbow copy of H, of F. In other words, every proper edge coloring of G has at least one rainbow copy of F. So big picture, we start out with a way to avoid rainbow Fs, but any way we add an edge, we can't avoid them anymore. So maybe the fact that this definition is so wordy and it has these for alls and for any edge and all these colors, it's kind of tough to wrap your head around. And so we'll do some examples. And so we'll do some examples to build up a little more understanding of what this looks like. But one thing to note is that G can have copies of F and still be rainbow F saturated. So the class of graphs we have to consider when we're thinking about what graphs can be properly rainbow F saturated now includes graphs that do have copies of F. It's just that there should be some way to properly color and avoid rainbow. To properly color and avoid rainbow copies, and that's broken momiatics. Okay, so that's a lot of words, so let's do some examples. We're not going to stick with the same example as before with the triangle. Why? Because any proper edge coloring of a triangle is a rainbow triangle. So the triangle case, in fact, the rainbow saturation number is just equal to the original saturation number. So this is not the most interesting example. So let's kind of Interesting example. So let's consider a different example now to get our intuition. So now our forbidden subgraph that we want to avoid rainbow copies of is going to be the path on four vertices. And as before, we need to check two conditions. We need to check that there is a proper edge coloring with no rainbow P4, and that adding any edge breaks this property. So all three of these graphs here satisfy the first condition. I can properly edge color them in a way that avoids. Edge color them in a way that avoids random pats on four-vertices. In two cases, this is easy because there is no P4 to begin with. In the case of the complete graph on four-vertices, it's just that there's a clever bit of color. Okay, so they all satisfy this first property. But now, when we consider the second property, we can see that when we add an edge that was missing to this first example, there still exists a way to properly edge color that has no new rainbow copy of P4. Has no new rainbow copy of P4. So this fails that kind of maximal maximality happens. Okay, so this one is not properly rainbow P4 saturated. The next example, K4, there are no edges to add, so that's kind of trivially satisfied. This is a P4 saturated graph. And then in the last example, any edge we add, again, will be between two of the leaves. And if we think about what any proper edge coloring of this new graph. Edge coloring of this new graph with this red edge came like. It's got this triangle, and so of course, in a proper edge coloring, those two edges coming out of this new edge will need different colors. If we were trying to be kind of sneaky and avoid rainbow P4s, what would we want to do? We want to reuse colors that already appear in the graph so we don't get a rainbow path. But because this star has four edges, and I need to use colors other than blue and And I need to use colors, one of them blue and green on those remaining two. At most, one of them can get this red. That leaves us one color that has to be new, and that will create not just one, but actually two rainbow copies of P4, right? Red, blue, orange, red, green, orange. So again, we've really had to think about all possible ways to properly color this graph and check that all of them will have a rainbow keyboard. Any questions about definition? So now we can ask the same questions. How sparse, how dense can a properly rainbow F saturated graph on N vertices be? And the dense version of the question, the Turan analog, was defined by Kibash, Mubay, Sudokov, and Bristrada in 2007. And we use this star in our notation to denote the fact that this. Notation to denote the fact that this is the rainbow version of the bubble. So if we think about our example where f is p4, it turns out the best you can do if you want as many edges as possible is to take essentially a bunch of disjoint copies of k4. We know k4 individually, we just saw, was rainbow, p4 saturated. It turns out taking disjoint copies is still rainbow P4 saturated. And if we don't have our number of vertices being divisible by four, you can throw Vertices being divisible by four, you can throw in a smaller clique as well. So how would we check that this graph is rainbow P4 saturated? I mean, first, again, we have to check that there exists a proper edge coloring with no rainbow P4. Check. Two, we have to think about any edge we add. Does it break that property? Well, where can we add edges in this picture? Just between any two copies of our graph. And there's just way too. And there's just way too much going on in each of these components, right, to be able to hope that when we add this edge, we could get away without rainbow copies of P4. Even if I stick with my same kind of conservative first coloring, I've already got many copies of rainbow P4 created. And there's no way I could be more strategic than this. So this ends up giving us three halves N edges. We've gotten over four copies of our clique with six edges, so three halves n edges. And just for comparison, Edges. And just for comparison, I'll note that in the uncolored setting, the extremal number for P4 is just 10. So we can see that this is larger than the uncolored traditional Turin number. Okay, what I'm interested in is the saturation problem. So this was defined much more recently in 2022 by Bashaw, Johnston, and Rombach. And And this is what I'm calling the proper rainbow saturation number of the graph because, again, there are multiple ways that you could choose to define this. In some previous paper, I think, for example, maybe Natasha Morrison worked on a version at one point where perhaps you dropped the proper condition. There are some versions of the problem where you restrict the number of colors you can use in your colorings, the size of your palette to begin with. But this seems like the most natural. But this seems like the most natural analog of the rainbow trend problem. Okay, so for this same example, we again had already seen that just a star with four edges was rainbow p4 saturated. And if we want as few edges as possible, again, the thing to do is just take many disjoint copies of this construction. It still satisfies the first property that there exists a proper edge coloring with no A proper edge coloring with no rainbow P4 because there's no copy of P4 at all. And any edge that I add, I will create a copy of P4. We already checked the case where we added an edge between two leaves of the same star. We would also need to check all possible ways of adding an edge between two copies, leaf to leaf, leaf to kind of center of the star, center to center, etc. But I'll just say there is no clever way of properly edge coloring this. Edge coloring this larger graph that avoids a rainbow P4. So, in their original paper, Bashad, Johnson, and Rombach checked all of these cases, showed that it does indeed satisfy this edge maximal rainbow P4-free property, and this ends up giving us a rainbow saturation number for P4 of about 4/5ths N. And again, for context, just to compare to the uncolored case. The uncolored case in the traditional saturation world, this is a construction that you use just as a matching, and you have about half the verses. So as you would guess, given that the problem was introduced in 2022, at this point not that much is known. In fact, the only specific small graphs for which this number has been determined are the P4. Determined are the P4, where I basically just showed you almost the entire proof, at least of the upper bound. We didn't check the lower bound, but of the upper bound at least. And then very, very recently, this should say like 2024 plus, just in the spring semester, Anna Hafpap, my collaborator, Bernard Lidiki, my other postdoc mentor, and then Thomas Marcerek determined up to some constant the saturation number for C4. Saturation number for C4. And this involved significantly more work than the little argument group for P4 that I basically fully sketched for you on the left slide. So in our project with the students from Iowa State last semester, we were able to extend this list a bit. So this should say for k at least 5, we know that now the rainbow saturation number for a path on at least 5 vertices is n. Five vertices is n up to some constant. We have some upper bound for the saturation, the rainbow saturation number for cycles that are of odd length, at least seven. And then the example that I want to spend a little bit more time talking about, maybe we also determined up to a constant the saturation, the rainbow saturation number for K4, which again is the first open case because of the triangle, every proper edge colouring is between them. Okay, so I'll just give you a small hint of what one of these proofs would look like. If we want to prove an upper bound on this rainbow saturation number for K4, then what we need to do, again, is give some construction with 7 halves and plus some constant number of edges. And so in each of the examples we've seen so far, the constructions have been disjoint constructions. Constructions have been disjoint copies of some small saturated graph. That's not the case in this example, interestingly. Instead, what we do is take a single universal edge, we've got a pair of vertices x and y that are adjacent to all of the other vertices in the graph, including one another, and we take copies of k4 in the rest of our n minus 2 vertices. So how do we check that this is a good construction? How do we check that this is a good construction? We need to check those two properties. We need to say first that there is a proper edge coloring with no rainbow paid for, and then that adding any edge breaks that. So what does the good coloring look like that checks property number one? We take the color placed on the edge xy and repeat it in each of the copies of the K4 down in the bottom of the graph. And then we take the unique. We take the unique way of coloring the rest of this copy of K6 with matchings in such a way that there is no rainbow copy of K4. And the set of colors we use on each of these copies is distinct, disjoint, except for this pair of red edges matching the color of our edge XY. And so you would obviously need to check that there really are no rainbow copies of K4 in this graph, but maybe you can trust me. But maybe you can trust me on that. And then you would need to check that when you add in some edge, you break this property. So, where can you add in an edge in this picture? Still just between copies of the K4 living in the bottom of the graph. So some edge, for example, like down here. And it turns out there is no way to color this without creating a rainbow copy of K4. So this gives us 7 halves n minus 6 colors. n minus 6 colors. Again, if we don't have n minus 2 exactly divisible by 4, we can have some other small component down here. Some smaller weak component. Okay. I'll finish up just by giving you a little sketch of what a lower bound proof looks like because in proper rainbow saturation land, coming up with clever constructions is kind of the fun part. It's a little more approachable. You know what you're looking for. Still a lot of work to do. Know what you're looking for. Still a lot of work to check the conditions, but it's a bit easier than trying to prove lower bounds. Because for lower bounds, what do you have to do? You have to say that there is no way to have a properly rainbow saturated, K4 saturated graph if you have fewer edges. So the idea is that we would like to argue that if you have a properly rainbow K4 saturated graph, it really has to have some To have some similar structure to the construction that we, the construction that we examined. So we would like to say that if it's got few edges but it still has the saturated property, then it does have some universal edge up at the top, and then that we kind of understand what the rest of the structure looks like. That none of the components in the rest of the graph are too big, and it basically looks like a lot of copies of K4 almost. And so the idea is to. And so the idea is to say: well, if we had some universal edge, then we can argue there can't be too many small components down in the rest of the graph, because otherwise it wouldn't be saturated. There would be a way to add an edge in and not create now, in any proper coloring, a new rainbow K4. So the idea is that if it's saturated, there are no small components down in this base of the graph. And so as long as we have some universal A, the proof is pretty easy. Universal edge, the proof is pretty easy. The issue is, of course, you don't know that you have some universal edge, so you need to do a little more work to argue that if you don't have exactly this universal edge, you still have kind of a similar structure. And the idea is that you want to argue, you basically have some small dominating set, and again, that you kind of know what's going on in the rest of the graph in order for it to be saturated. So, the main idea is that some nice dominating set might work. That some nice dominating set might work basically like a universal edge. And the way that you prove this is in basically these four steps. So, to show that if you have a big enough properly rainbow K-power saturated graph, it has to have a small dominating set of vertices. And then argue that it's either actually the edge you were looking for to begin with, or you understand well what happens in the base graph, that every vertex in the rest of the graph has at least three edges going up to that vertex. has at least three edges going up to that dominating set. And this will push up your number of edges in your graph to pretty close to 7 halves n. And so you analyze your degree consequences and you end up saying, okay, sure enough, you end up with at least 7 half n number of edges. So that's kind of the big picture. And hopefully it gives you an idea of the type of work that we did. Of course, there's lots of open questions. This problem is still very, very new, despite being quite natural, of maybe first steps. Of maybe first steps. We only have bounds now, especially nice upper bounds for larger cliques and cycles. I should mention that at the same time we completed our work, Natasha Morrison and her student Andrew Lane also put out a paper on this same topic. And they also obtained the result for PATS. They studied some other families of trees. They didn't study K4, but so we had kind of a nice overlap with them. And if you're interested, A nice overlap with them, and if you're interested in hearing more about the work that Andrew did, he's talking at the CMS on Saturday. And then there's also some bigger picture questions. We know that the saturation number in the uncolored setting is always linear. Is that true for the colored setting? It seems like the colored number is always a bit higher, so that would be interesting to see. And so, is it always the case that the proper coloring version is always more good than the uncolored version? Them on television. And that is where I'll leave you.