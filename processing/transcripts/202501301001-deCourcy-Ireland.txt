And yeah, apologies in advance if my voice gives out on me, but I'm feeling a lot better. So yeah, so I want to tell you about some joint work with Zach Greenberg and Anna Bienhag about non-commutative Markov numbers. So before I can do anything non-commutative, I want to just I want to just quickly review sort of how the Markov numbers come out of the cluster algebra that's associated to our favorite punctured torus. And we've seen this a little bit, but I just want to spell it out and highlight a few bits. So, sort of very generally, so there's these cluster algebra or surfaces. So, very generally, for any surface with boundary components and punctures and marked points, we can associate a cluster algebra that's going to reflect some combinatorial properties of triangulations and flips of triangulations of the surface. I don't want to get too caught up in the details, but basically, I want to show you just one example. That'll be good enough. Really, two examples. But I'm going to consider my surface to be a disk with four marked points on its boundary. So, really, my surface is this square. So, I'll call this one as a square, and I'll label the four marked points: one, two, three, four. And when I want to go to my puncturus, I'm just going to identify these sides and these sides of the equivalent. So, to such a surface, we can associate a cluster algebra. And the way we do this is that for each triangulation, we'll get a seed in our cluster algebra. So, I'll start with this triangulation, and this will give me a seed in the cluster algebra. So this is the surface. Over here is the cluster algebra. And the way I make the seed is I put one variable through. Make the seed: I put one variable for each arc in the triangulation, and I'll just label them by the label that comes from each side. So one variable for each arc: x12, x23, x34, x14, and then the middle here I have x13. And the way I come up with the quiver is I put an oriented cycle of arrows. And it doesn't really matter which way I pick it as long as I'm consistent. Way I pick as long as I'm consistent. So I always do clockwise. So here's my seed. Then the fact is, is that if I flip the triangulation, this is going to correspond to mutation. So here's what I mean by flip the triangulation. This is going to give me a new seed, and it's going to be obtained by mutation of this seed. This C. So we have the same x12 x3x414. And now I have x, I'll call it just x24. And we have this quiver now. And you can check that this quiver is obtained by a mutation of this quiver at the central node. And of course, there's a relation. The relation says. The relation says that, well, I actually know what x24 is, it's 1 over x13 times product of ins plus product of outs. So generally for the combinatorics, you know, the correspondent says if I do some mutations, If I do some mutations and get the same arc in two different ways, well, the two expressions I'm going to get are actually equal. So there's a correspondence between arcs and cluster variables and triangulations and seeds and flips and mutations. I don't want to get too caught up with it, but yeah, so we can see where Markov, or at least our Markov flipper comes from. If I identify the two sides, so Markov. So to mark off if I identify the two sides and maybe call this one, call X12 just X and X23 just Y and X13 just C, then I'm gonna get my Markov clicker. Y C. From holding this up. So we see there's two arrows between them. Okay, so this tells us where the squiver comes from, and we know that if we evaluate everybody at one, we're going to generate the Markov numbers. One question you might have is, where does the Markov equation come from in this picture? So, where this comes from, actually, is, let me just grab this over here. For every over here. For every little, for every triangle and every vertex of the triangle, I can associate a function I'm going to call the angle. So for this little spot here, I'm going to associate a function called the angle. I'm going to denote it by h, lower 1, upper 2, 3. And this function is the opposite side divided by the two adjacent sides. The two adjacent sites. So in this example, it's x23 divided by x12x13. Now the mutation rule is equivalent to the following fact: that the angle here, after I flip and find x2, 4, is equal to x. Flip and find x24 is equal to the sum of the two angles. It's equivalent to the statement that H124 is equal to H123 plus H1 through 4. And we can see this just by taking our mutation formula and dividing through by whatever we need to get this H124. So I need to divide by H. 1, 2, 4. So I need to divide by h, by x12 and x14. If I do that over here, I'll get the expression for this side. And then you can see these two summary for these two pieces. So whenever I do a mutation, I actually see that the new angle that's formed there is just the sum of the two old angles. And sort of equivalently, these angles will get split up into two things that add them back to the original problem. So my claim is the Markov equation. My claim is the Markov equation comes from finding the total angle. When I identify all the sides, I get a punctured torus. There's one puncture, and I can add up all of the angle around there. So for Markov, so on when sigma equals I call S11, the total angle Maybe this is a little computation. I'll call it just h. We can see sort of one of them. It's going to be something like, for that first one, it's going to be y over xz. And we're going to get all symmetric, all six symmetric permutations of this. So we'll get also another y over xz, and then plus an x over y z plus dot dot dot. Z plus dot dot dot. And this total sum we get is equal to 2 times x squared plus y squared equals 6 squared over xyc. So our Markov equation is just stating that this total angle sum is the same for every triangulation, right? Then whenever I flip, I split an angle into two, that adds up, and I add two together. And I add two together so the total sum is the same. So this H is invariant for all, is the same, has the same value for all clusters. So in particular, it's equal to whatever it is on the starting cluster. So if I start by evaluating x, y. xyz equals 111, that says that h is equal to 6 for all the clusters. So that gives me my Markov equation. 6 equals, for all the other clusters, 6 equals 2 times x squared squared c squared squared for all charts. Any questions on that? So, this is the commutative story, and I want to tell you how to make this non-commutative. One last time. So, how did you identify getting from this picture the one with the X12, X13, X24 to the triangle? Again? Like, what was your identification? To this. Um, to this holding it both. Yeah, yeah, so right, I'm identifying this side and this side, and this side and this side, right? So I'm saying x12 is equal to x34, and x23 is equal to x14. And you can see that it pulls them up like that. And I just call them XYZ. Yeah, yeah. So if you're uh if you're familiar with hyperpossibility, If you're familiar with hyperbolic geometry decorated type familiar theory, this angle is actually the length of the four cycle segment that passes between here. The cluster variables are the lambda length, so they're like the something like the hyperbolic length measured between horror cycles on my picture. And this angle will be computing actually the length of the horror cycle. And so that's one way to interpret this additivity of the angles. Okay, so So not communative surfaces. And this is from Stein and Rexar. I should have, I thought like 2015 or something. So, they describe a non-commutative version of a surface type plus delge. So, I'll just basically show you what happens for my favorite surfaceless square. So, we're going to make everybody non-commutative, but we have to do a couple, there's some technicalities. So, two, three, four. So, we're going to make some non- We're going to make some non-communitive algebra that's something like the cluster algebra. It's not, for some technical reasons, it's not exactly the cluster algebra, but we'll just forget about that. So, what do we do? We take our surface and our triangulation. We want to come up with a bunch of variables and relations that sort of reflect this mutation stuff. So, we're actually going to associate to each arc two cluster variables, and we think of them as having to do with the two orientations of the arc. So, for each guy here, So for each guy here, I'm going to associate two cluster variables: x12 and x21. 3 and x32. x13 and x31, and so on. So these variables should be like thought of as a seed. In our usual cluster algebra, the variables within a seed don't satisfy any relations. But we actually need. But we actually need to impose some relations already on the sort of initial variables in our seed. So we need some like seed relations. Relations. And the seed relation is going to be some fact about sort of a non-commuted version of this angle. So define the non-commuter over here. Non-commutative here. Non-commutative angle. Angle. I'll denote it. I try to write capital letters for my non-commutative things. So I'll write H sub 1 upper 23 is the following expression. So it's something like starting here and traveling around the triangle based at this point. So that's at least. Uh that's at least what you what you can think about uh explicitly as X21 inverse X23 X13 inverse. I got everything so I define the non-commutative angle as this based at this point and I require I add the relation at At the angle relation relation that this equals if I go the other way around. So that H123 is also equal to if I go this way. So that would be X31 inverse, X32, X12 inverse. So I'm imposing on my sort of initial cluster variables in the seed, I'm imposing. Variables in the seed, I'm imposing this condition. I call this the angle condition. And I impose it at each angle for each of the two triangles. That makes sense? So even in my initial cluster variables, I have to impose this. Can you just say again how you think about choosing which one to go around the triangle? Yeah, I mean, I just sort of think of something like. I just sort of think of something like: I'm traveling this way, this way, this way, and then I do something that inverts these two sides. So when I invert a side, like normally I would do x12 when I'm traveling this way, but when I invert it, I like go backwards and inverse. So that's maybe some pattern you can see here. It's like, I go, it's really like 1, 2, 2, 3, 3, 1, but these two ones get inverted, so they get flipped and inversed. It's like some multiratio being equal to 1. Multiratual being equal to one, and that should have some geometric meaning? It's not. Looks like the braid relation. It's, I mean, there's something kind of like a braid E relation with this. You can think about it if you take a double covering of the surface, ramified over the center of the triangle here, then this will become a hexagon, and it's the sort of monodromy around that function. Of monodroming around that functor is one thing that is holding. So, navy, if you, when you say I want to make a non-commutative version, so I know that the Markov numbers are traces of matrices, and I would say instead of taking the traces, I replace the variables by matrices, like A, B, C. Should these X, X, Y variables, should they be interpreted as the matrices or certain coefficients in the matrices? I don't think we want to think of them as I don't think we want to think of them directly as the matrices, but yeah. Think of them as group elements or maybe we could think of them as group elements in some that there's some sort of path composition that's something that we're doing. But I don't want to think of them as. Okay. Just one remark, I'm not going to spell it out, but this angle condition at this vertex actually implies the angle condition. Vertex actually implies the angle condition at this vertex by taking the angle expression here, inverting it, and sort of conjugating it by x12 and x21. So there's really, for each triangle, there's really one extra relation we're imposing. So in this picture, there's really two conditions I'm imposing for these two triangles. Make sense? Okay. So then if I made specialized computer case, I would have. Especially either case there have some extra measures of freedom. Yes, right. The way I'm going to describe this is I'm going to force you to evaluate these two things to the same thing if I specialize to a commutative case, which will get rid of these relations, I think. Because this relation allows you to write one of these variables in terms of all five of the other ones. So. So, if I have this, I should tell you how to write an exchange relation that's going to tell us how to write x24 in terms of all this stuff. And you can sort of vaguely think of it as like if I go from 2 to 4, there's like two paths I can follow. There's two sort of zigzag paths. And I'm going to again do something where I sort of invert. I can again do something where I sort of invert some elements with this funny rule. So x24 is going to be x21, x31 inverse, that one gets inverted. x34, that was this path, plus the other way. X23, X1, 3 inverse, X1 fourth. My exchange relation. Now, if you want an exercise. Now, if you want an exercise in non-commutative algebra, you can check that if I do this exchange and then I exchange back, I should get x13 back again. This is actually a little bit difficult because of the inverses that appear in here. And inverting, how am I going to invert some non-commutative expression like this? But you have to use these triangle, or sorry, these angle relations. So, sort of importantly, this is equivalent. To additivity of the angles again by multiplication. So this is equivalent to H123 plus H134 equals H124. You can see this by, if I multiply on the left by x12 inverse and on the x12 inverse and on the right by x14 inverse then I'll get this expression here and this expression there. Okay? So this is another way to convince yourself that this sort of makes sense. Okay. So that is the non-commutative surface itself. So, one remark I want to make. So, actually, I mean, just to write it down, so we defined some algebra, some non-community algebra associated to the surface, which is like Q adjoin all the different cluster variables, x, i, j. With their inverses, modulo base angle plus exchange relations. And I just want to remark that this isn't quite exactly the same as the cluster algebra because I also sort of need to put in inverses to these elements. In the cluster algebra, I don't put in inverses of the cluster variables, but because of some non-community business. Uh because of some non-community business, I can't really get rid of the x13 inverse in this exchange version. I can't put it on this side. So I'm sort of forced to invert everybody. And it makes this algebra a little bit different, but granted me, we're not going to tell you a bunch of stuff about this algebra. And one little remark is that this algebra has an involution, sigma and anti-involution. evolution, which is just given by sigma xij equals xji. So this respects all of the relations that I've written down. So anti-angvolution means also switches the order of the products. Okay, so now it's pretty clear what we want to do. Okay, so now it's pretty clear what we want to do if we want to make non-computer Markup numbers. We're going to go to our punctured torus, so I'm just going to identify opposite sides of this square. And the Markov equation should be the sum of the total sum of the angles. So Markov. Markov. I'm going to say X12, I'm just going to call big X. X23, I'm going to call big Y. And X31, I'm going to call big Z. So that's in my little picture here, my punctured torus. I'm going to label it like this. So x says go this way, y says go this way, and z says go this way. Does that make sense? So we get y here, and I have x here. So I have x going this way, and I'm going to just write sigma x for going the other way. So I'm going to use this Hantian volition to take care of that. So really, we start with x, y, z and sigma x, sigma y, sigma z. And sigma x, sigma y, sigma z. And so what is the Markov equation? The sum of the total angles, right? So like this first angle is going to be, I'll call it big H, something like sigma X inverse Y sigma Z inverse plus, and I'm going to get all symmetric permutations of this. permutations of this sigma x sigma z inverse y sigma x inverse plus dot dot dot and I want to just remark that there's no two in this right this permutation is different from this one because of the non-commutative so before we saw this two that just canceled out whatever but now we really have six sum n's so our Markov non-commutative Markov equation says that Equation says that this expression is equal to whatever it is on the first cluster. Now, if I want non-commutative Markov numbers, I need to evaluate. So I want to come up with how to evaluate, to evaluate a I'll call it C list S one one. S Y 1 to some ring. That's going to send X Y Z to C in R. And I'm also, I'm going to make some simplifications. I'm going to assume that whatever ring I'm going to evaluate this in, to actually come up with something I could call Markup numbers, I'm going to assume this ring has an anti-involution as well. An anti-involution as well, and that this map commutes the two anti-involutions. So that way I can just tell you where x, y, and z should go, and then their sigmas should just go to whatever the sigmas, or that sigma x is just going to go to sigma r A. Okay. Now you could, I'm sorry, before you read it, so you think you have this implemented. Before you so you think you have this implicit convention that you're always writing products, there's always plus one minus one in the exponents. Yes, I mean this um this a priori this is just um by definition of what all the relations and stuff are. My question is first the first time you you wrote this angle relation uh just to do that. Yeah, so is it basically that you've also got the relation where you take x q 1, x q 0 x x x x x X21, X23 inverse, or where you flip the, instead of starting by writing inverse, you first start by writing. Yeah, I mean, let's just take this whole thing and take its inverse, right? So you're allowed to take in your algebra, or yeah, my algebra, I'm attaching, I'm putting in inverses of all the elements. So we are allowed to do as if you've got a usable non-committee algebra, all the losses. Yeah, I think I'll go first. Yeah, so, okay. Yeah, so okay, so what do we want to do, right? We want to actually evaluate this in some ring. The way we want to do this is we want to evaluate the initial cluster variables to something and say that this determines what all the other cluster variables go to via the exchange relations. Right? And so then our goal would be to just pick some initial evaluation. We have to make sure the initial evaluation satisfies these angle relations. Angle relations. And something I should mention is that the mutation automatically implies the new angle relations. So I really have to, I would only have to check the angle relations on the first thing. The hard part, actually, is making sure that all my new cluster variables are invertible to ensure invertibility of. Oh, new cluster versions. And just because I meant to write it down, actually, maybe I'll put it over here. We should just be explicit of what the exchange relation is. Right? So my Z prime, I'm going to think is going. I'm going to think is going from the top to the bottom, that's like x21, is equal to sigma x z inverse sigma x plus y sigma z inverse y. So we can consider a sort of mutation rule that says xyz to Y z to sigma y x z prime, I think is what the appropriate mutation rule is. When I do this flip, I'm going to say the new angle, the new arc goes from here to here, and then to sort of recover my oriented cycle, I need to switch the direction of one of the two guys. So, this is like my mutation rule combined with cyclic rotate. Okay, can I take like five more minutes, hopefully? I really want to get to my nice example. So, okay, so how do I ensure invertibility? In a usual cluster algebra, the way we do this is by forcing all of my, I can come up with an evaluation by picking every With an evaluation by picking everybody to be positive real numbers. Then my exchange relation involves a plus sign. I know my new plus or variable is going to be positive, and I can keep going. So we want some sort of positive structure structure on R sigma. So I'm going to give So, I'm going to give you a little definition of this. So, a positive structure is a choice of B, some subset contained in the symmetric elements, the fixed points under this involution, intersect the invertible elements, so they need to be symmetric and invertible, such that V is closed. Closed under addition. V is closed under addition and inverse. I usually require that one is in B and it's also closed under the following operation for A in R cross. R cross A V sigma A is back in V. So it's closed under this symmetric conjugation by elements in hard cross. So given some choice like this, I call it a positive structure. So we call them an evaluation evaluation. Positive and admissible. I usually call it admissible too. Maybe I'll just call it positive. Yeah, I'll call it positive if all the angles, all these non-commutative angles are mapped into B. Then, this actually ensures that all the new cluster variables after I do these exchanges are invertible because I'm always adding angles that are in B to get the new angles. This implies invertibility of the new cluster variables. So, now I can just quickly write down my favorite example. So example I'll take my ring sigma and to be I'll just do two by two matrices of the real numbers where sigma is transpose And I'll pick V to be positive definite symmetric matrices. Positive definite symmetric 2x2 matrices. And we can check that this satisfies all the stuff to be a positive structure. So then, little fact, if A is in R cross, A is in R cross is any element in there, and R has a positive structure, then 1A inverse is always an admissible triple, an admissible starting triple. So it satisfies that all of the angles are in, that satisfies all the angle conditions, and all the angles are in this positive code. And that all is for stuff. So, for example, I can take A to be my A to be my favorite example. I'm going to take A to be one, upper triangular matrix, and I'm just going to go ahead and replace that with a T instead to get a sort of family of these. And then we get some non-commutative Markov numbers. So our initial triple is identity A T A T inverse. The Markov equation. The Markov equation is equal to the sum of the total angles. That turns out to be 6 plus T squared. As we do mutations, we get sort of some matrix versions of all our favorite Markov numbers. And I'll just write some of them down. And notice that if I plug in T. And notice that if I plug in t equals 0, I better recover the actual Martian members by, because then I'll be 1.1. So what are some of the examples we get? If I keep that one in there and then mutate at the other two spots, I'll see stuff like t squared plus two minus t minus t2 minus t t squared plus two. So that's a deformation of two. So that's a deformation of 2. And we're going to work at 1 for 2. 2. 4. 5t squared plus 5 minus t 5 minus 6tq minus 8 minus tq x5 t squared plus 5. You get the idea. You get the idea. So, this is a deformation of the mark on number five, which I've pointed to zero. So, we get five times the G3. Okay? All right. I think I'm over time. Quick questions? Anyone in your example is not positive, right? Um it's it's faster, yeah. So what was your definition of positive in this case? The angles need to be positive, right? So, what are the angles? So, I sort of skipped over this. I said, this always gives an admissible triple. The angles are stuff like what do you mean by positive R? This is positive definite definite. Okay, okay, that's I'm not. Okay, okay, that's I'm that's okay, you're saying that if we take the angles Yeah, the angles are stuff like A is sigma A sigma A A this sort of stuff. So if I evaluate all these I always get a positive definitive symmetric matrix Over zoom. Yeah. Is there some relation of this with quantum technology space? So I sort of believe this to be a slightly different deformation than like a Q-deformed cluster algebra. Although I also think in the same paper we talked about sort of a Q-deformation of this thing again, which is maybe. Which is maybe a little bit weird since it's already non-commutative, but somehow it looks really similar to the QD, the usual Q deformation of the cluster algebra. And so maybe I sort of view it as like we have our normal cluster algebra, and then we have a Q deformation, and then we have a non-cumminative version, and then maybe there's a non-cumminative Q deformation that was sort of done by doing both of them. By doing both of them. And somehow the difference between these two is almost nothing, right? But since this thing's already non-commutative, it doesn't really do anything to it. In fact, it looks again like the same thing over a different ring. So maybe there's some way you can understand all this, but it really, I think that it's a different chunk of function. For surfaces, there's a more general scan relation. Is there something like that? Is there something like that in this market setting? I really don't know. I have thought about this a little bit.