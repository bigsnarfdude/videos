We should have it called say hello. Now you get to okay. Well, hopefully we are now all not afraid because I'm gonna be talking more about a new growing trees. Today I'm gonna talk about my work with NOAA. Today, I'm going to talk about my work with Noah on enumerating rooted binary perfect phylogenies. Okay, so first let's just talk about what perfect phylogenies are. A lot of you might be familiar, but this kind of comes in the context of a problem where we have some sample of a bunch of sequences, which we can represent as haplotypes, and from these we might want to construct some sort of rank tree to represent the evolution. Now, a more concise way that we can represent this is with a perfect phylogeny, where instead Is with a perfect phylogeny, where instead of labeling the leaves with the sequences, we instead label the leaves with the integer corresponding to the multiplicity of this haplotype in our sample. So going further, we're going to denote S as the number of sequences in our sample or our sample size, and N is going to be the number of distinct haplotypes in our sample, which you'll note is also going to be the number of beads in our purpose phylogeny. So, more formally, what I'm going to So, more formally, what allows us to create this more concise representation of our tree is that we're going to be assuming that there's no convergent evolution and no recombination. And for the rest of the talk, I'm just going to be talking about binary grid and purpose phylogenies, although I always say it. And this has a lot of important expectations that were well motivated by Julia's talk. And this work is also well motivated by Julia's in Noah's talk. Who is in Noah's paper from 2022 that counted ranked and non-ranked trees associated with perfect phylogenies? That's very important to understand the state spaces structures that we might be thinking about when we're looking at problems that might be looking at inference evolutionary parameters from coalescent type models. Okay, so there's a few different things that we're So, there's a few different things that we're going to count here. So, first, we're going to be counting binary phylogenies with just a given sample size S, so that we can have any number of these. Then, we're going to go a little bit more specific, and we're going to assume we know that we have S sequences in our sample, and that N of them are distinct, or equivalently, that there are N these in our perfect phylogeny. Then, the last thing that we're going to enumerate is if you have a sample size and we have a given topology for our And we have a given topology for our perfect biology. So we know the exact computational structure already, and we're just going to be figuring out where the integers go on this perfect biology. So just an example of the kind of thing I'm talking about, this is going to be corresponding to the third question that we're going to be answering. So say we're given this topology for our perfect phylogeny. We already know that there's n distinct sequences in our sample because we can see that it has five leaves. And we're going to assume that we have. And we're going to assume that we have seven sequences in our sample. So, to count these perfect phylogenies, we're going to be assigning integers to the tips of the perfect phylogeny. So, we might have three sequences in our sample that are the same, and the rest are distinct. And so then we have one three on our perfect phylogeny, and then one's on the other tips. We can also have two sets of two sequences that are the same, and the rest are distinct. The rest are distinct, but these are phylogeny. And there's also a lot of other ways that we could assign these integers to this given topology. So this is kind of going to be one of the key things in our enumeration problems. So now we're just going to hone in on our first question, which is counting binary perfect phylogenies with a sample size S. So when we just have one sample in our sequence, we can just have the single leaf perfect phylogeny with a one. Once we have two sequences, One, once we have two sequences in our sample, we could have them both be the same, and then we'll have the sequel meet perfect phylogeny there with the two, or they could be different, and we'll have the two weak perfect phylogeny there. We can continue on. There's three different perfect phylogenies with three samples. There are seven once we get to four sequences in our sample. But note here, you start to see some of the complexities. So, for example, if we have two sequences that are the same. Sequences that are the same, and then two others that are distinct. There's a few different ways we could label this three-leaf topology with them. And in addition, if we have all sequences that are distinct, so corresponding to the four-leaf perfylogenies here, there's still a few different topological structures for this perfect phylogeny, which then creates more perfect phylogenies. So we have the first few trends over sequence: 1, 2, 3, 7, 14, 35. 1, 2, 3, 7, 14, 35, and so on. They get big quickly, and we'll talk about how quickly later. And note that this is also in the online encyclopedia of integer sequences, but with not a lot of theories to go with it. So we're going to kind of be providing some of that theory and also providing it in the context of worked phylogenies. Rooted topologies. It's going to be rooted, yes. Everything is binary rooted. Okay, so in order to do this, we're going to kind of bar. In order to do this, we're going to kind of borrow some of the theory from Finer rooted on label trees, because we're going to first note that they are actually the specific case of perfect phylogenies, where all of the sequences in our sample are distinct. So we have as many samples as we have leaves, so just the perfect phylogenies all with labeled with integers ones. So this is a nice subset of our perfect phylogenies, and it's actually going to allow similar properties. So this is So, this is like a very common theory. You might know that the unlabeled trees are enumerated by the Wedderburn-Ethrington numbers, which are also in the OEIS. And the numbers start 11123611, so on. So, how do we count these recursively? So, the really nice thing about rooted trees is that we can break it into the left and right subtrees. And then we want to know how many trees there are with n total leaves. There are with n total leaves. We can look at all the partitions of n into left and right subtrees and multiply all of the trees with n minus i leaves times the trees with i leaves. We're going to note that we're going to have symmetries here, so we're going to define that these two trees are equivalent, so we're going to have to add a one-half onto our recursion here. And then in addition, we have one more special case, which is when. Have one more special case, which is when n is even. We're going to have to deal with the case where we have n over 2 leaves on our left subtree and n over 2 leaves on our right subtree. So we can't just multiply them. Instead, we have to count the u n over 2 choose 2 cases where we have distinct trees on the left and right subtrees, and also when we have the same tree on the left and the right row number two. And this comes out to this nice. And this comes out to this nice form that fits into our recursion very well, and means we just have to add on this extra one-half Universe for two. Okay, so how does this relate to our binary perfect phylogenies? So we're actually going to have a super similar recursion. And we have a little switch here. Note from instead of defining the left and right sub-trees by their number of leaves, here we're going to define them by the size of our sample. So it's every point we're going to. Our sample. So we're going to be looking at x. And the only difference that we have between this recursion and the previous one is that we have this extra plus one, and this corresponds to the single leaf perfect biologically, since we don't have to, we can't split that into a left-brain subtree, since there's only one leaf there. And otherwise, it's exactly the same. So the next thing we're talking about is we want to look at how quickly these structures grow and a nice way to get these asymptotics. Way to get these asymptotics is by looking at the generating functions. If you don't know what generating functions are, they're super cool. It's essentially a power series where the coefficient of z to the n in our power series is the nth term in our sequence. So, knowing this generating function allows us to use a lot of like theory for functions already to learn more about our sequence. So, how do we get a So, how do we get a nice form for this generating function? We can plug in the recursion that we already had, where I've written it in a slightly more concise form, collect terms, and then we end up with this super nice implicitly defined generating function. And I say this is nice because there's been a lot of theory which looks at implicitly defined generating functions. And if they follow some certain properties that have been outlined by a number of people, then we know that the Of people, then we know that the asymptotics are of this form, and there's a framework for computing what these parameters are. So we get that the unlabeled trees, or this has been gotten by many people in the past, they're at about 2.5 to the n over n to the 3 halves, where n is the number of these mass products to put this. So again, since our recursion was super similar to that of the unlabeled trees, our generating function is also super similar to that of unlabeled trees. The only difference we have here. Trees. The only difference we have here is the z over 1 minus z term, which comes from this power series where all the coefficients are 1 from that extra plus 1 in our recursion. And lucky for us, this implicitly defined generating function fits the same properties of the generating function for unlabeled trees that allows us to very nicely get this asymptotic form. So then we get that the binary rooted parpetrophylogenies grow at about three. Grow at about 3.26 to the size of our sample S over S to the 3/2. So, remember the numbers from before, we have that the perfect phylogenies grow a little bit faster than our unlabeled trees, which we might expect from that unlabeled trees are specific to perfect phylogeny, but also their growth is comparable, sort of they take on the same asymptotic form, one's not growing exponentially faster. Exponentially faster than the other. Okay, so now that we've looked at that problem, we're going to briefly talk about the problem where we have S sequences in our sample and we know that N of them are distinct. So we can get these recursively, and I'm not going to go through the recursion because it's a little bit messy with some of the constraints. But I am going to talk about some of the first few columns of this table. So when we have just When we have just one leaf in our perfect phylogeny, we know there's just going to be one perfect phylogeny possible. Once we have two leaves, the problem is then just what are the number of partitions of our sample size, S, and that's going to correspond to the number of phylogenies. Once we get to n equals 3, it's going to get a little bit more difficult because then not only do we need to come up with the partitions of the sample, Partitions of the sample size into three. We also have to figure out where to put them on the tree because it's no longer symmetric. And I'm going to talk more about this a little bit later when we get to the problem of counting binary perfect phylogenies with sample size S and not given phylogenies. So, first we're going to talk about the case of when we have caterpillar perfect phylogenies. Julia talked about caterpillars earlier, but they're just going to be Just going to be trees such that there's only one cherry. We're also going to define C1 and C2 caterpillars here because they also have the very nice property of the caterpillar with n leaves has on its left subtree the caterpillar with n minus 1 leaves, which and then the right subtree is just the one leaf tree, which makes our recursions very nice, easy to do. So again, we're going to come up with a generating function. Up with a generating function. So we're going to have a generating function for each possible number of leaves. And CMS is going to be the number of catalytic numbers by logic leaves with n leaves, symbol size s. So our generating function is going to grow with s here. So let's look at some of the first few generating functions for this. So g1 is again, we just had that one perfect phylogeny. So it's just the power series where all the coefficients are 1, comes out to the Coefficients are one comes out to the same form we've seen before. For the caterpillar with two leaves, we have the same symmetric case that we saw earlier in our recursions, and we can actually use our generating function from G1 to get this generating function because of this structure of caterpillars. Okay, then moving on, once we get to G3, which is going to be this generating function written. Which is going to be this generating function written out. We can again use that, we can actually just multiply our generating function. So the generating function for two leaves times the generating function for caterpillars with one leaf. And then get this form and continue inductively until we can get a general form for the generating function for the number of leaves. We're nice because although we might not always have a caterpillar topology, Caterpillar topology. No matter what topology we have, if we continue zooming in on the subtrees, we'll always end up with caterpillars in the end. So then we can recursively enumerate the number of perfect phylogeny structures with this given topology. Okay, so in summary, what have we done? We have computed how quickly the binary rooted perfect phylogenies grow with the size of our sample. We also We also personally counted the number of phylogenies with S sequence in our sample and N naves, and also with a given topology. And these are all important because it tells us a little bit about the computational complexity of some problems with appropriate phylogenies. Okay, I just want to thank Noah and my wonderful lab members and fun resources and happy to take any questions. Any questions? So this is UN sampling distribution. I'll ask you existing. I think so. There's a probability. Yeah, I know, but so I mean you don't. But certain, I mean, you did much more, but certain things like so onward. The number of distributions on the term. I don't think so, because she's a she's a has a hierarchical structure, you know. So it's not just a partition, but it's also the hierarchical partition. So they can actually cut competition energy. Right. So that's under a particular kind, which is the number of partitions, anyway. Right, but then we have the extra step of kind of putting them onto under a particular kind of putting. But in all the probabilities are not I think this collapses onto those probabilities. Yeah, sort of subdivising. There's only one level, maybe. I think it's humans didn't do it in a framework, but later it was. And is there an intuitive explanation for why the number of perfect phylogenies with S was just like one more number? Um so it's not quite one more. Quite one more, it's there's gonna have an extra plus one in our recursion, but then this is gonna propagate through quite a bit, so our acid pots end up either. I'm working with that data. I recognize. I think it's not, yeah. So like we want to find out maybe someone. Maybe some of the children have to do it. Yeah, I thought it was all right. I thought I was just six out of one thing real quick. It's like trying to define a set of objects in which to capture the object. Find a set of objects in which to catch the properties. Right, right, right. So, like, there's a large section of the one here. You don't necessarily need to do the whole education to that. But does in all these ways. Everyone's like, but I didn't really like it. I feel like I've seen that if I've never turned that to one. The reason we asked you that I know that there's that. I'm trying to take it into a point, but it keeps filling. Oh no, it's not so I think so many experiences. Yeah, following you around the people from the side space. Okay. Where do you think? Oh my god. Oh my gosh. Some of the earlier things my mom used to be taught to smooth. So they had like, you know, thumbnails for an email or whatever. And I took so long to get like every YouTube video smile. I believe it for now. It's like every phrase just like smiling, so happy. You know what I mean? That's all the sound of his eyes too. Like the scary. Like scary text authorities like notebooks adding his own slide. Got it. Yeah. No, I'm smiling all like her. That's right. It was really. It's a gravitational music shit. Oh, but beautiful parts. Yeah, yeah, yeah, yeah. Oh no, you just pressed left aside. I like to put this. Yeah. Thank you. Thank you. Oh, no, I didn't trust any buttons. Oh, sorry. It's okay.