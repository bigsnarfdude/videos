Okay, uh hi, uh I'm Marianne and uh today I wanna talk about uh Cro UEM Density Maps Register problem and uh how we use uh optimal transport tube to solve this problem. To solve this problem. So, these days there have been multiple talks giving an introduction about Cro-UEM, so I'm gonna skip this part. But to keep it short, let's just say that Cro-UEM is a method for solving a structure of biomolecular complexes. And one main advantage of this method is that you can solve a structure of different conformational states of a biomolecular. Formational states of a brain molecule all at once. But before analyzing this data, what we have to solve is the element problem, that is to find the 3D rotation and 3D translation, that a combination of these two matches two density maps as much as possible. So this problem has a lot of application in analyzing differences, similarities, and the pathway of conformational states in a biological. Formational states in a biomolecule. And also, let's say that this problem would have been a lot easier if we had atomic models and using the correspondence data between atomic structures, we could apply a coch algorithm and solve this problem. But when we are dealing with density maps, we don't have such correspondence there. So, previously, there have been some approaches to solving. Some approaches to solve this problem, including this approach, which has been implemented as a built-in built-in command in PyGeral, named FitMap. This method uses an objective function, which is usually overlap or correlation between the input density maps, then applies a stiffest gradient as an algorithm to maximize it. But it has a high chance of getting the second local minima, and these objective functions. And these objective functions might not be the best choice in some scenarios. So we propose our algorithm allo-energy, which uses another representation of maps and alternative. So to be able to efficiently compute our objective function, we have to convert density maps to point plots, and for this Maps to point plots, and for this purpose, we use topology representing methods. This method basically first thresholds the map and converts it to a 3D shape, then beginning with a 3D random point flow, at each iteration assembles a new point from the shape and move other points towards it. So after some iterations, it will bring nice coverage of the shape. And our objectivity function And our updated function for triple rotation R and translation T is the visual distance between two point clouds after applying R and T on one of them. So here is the mathematical notion. And as for the search algorithm that optimizes this objective function, we are going to use a stochastic grading of the soundlike algorithm. And we are going to update on quaternion representation. On quaternion representation of rotations. So we begin with Q equal to no rotation and apply it on one of the point clouds. Then at each iteration we compute the transportation plan between two point clouds and randomly choose a point from one of the point clouds and find its corresponding point in the other one, then compute the utility and distance between. Compute the utility and distance between these two as a function of Q. And in the next step, we update Q regarding the gradient of F and update on the plane again. So this will happen, and after some iterations, we will reach convergence. So let's see some results of this method. So the hardest part of this kind of experiment. Part of this kind of experiment is defining the ground truth. So here is what we chose: a pair of atomic models, which is demonstrated here. Then using MMAlign, which is an atomic model alignment method, we aligned them together and then converted them to density maps and defined this state as ground truth. As ground truth. Then, using different rotation angles and different axes, we applied arbitrary rotations and applied alignment methods on them and compare the results. So to give it short, there are two phases in this pipeline, data generation phase and alignment phase. And here in table one, we are showing the mean and variance of rotation angle error after align. After aligning with a primer and aligning using different number of points and this number of points. So, as you can see, both methods are doing well when the initial protection angle is as small as 45 degrees. But as it starts growing, Chimera starts getting local minima, while Alana is doing somehow good. And when it grows very large, both methods are. Grows very large, both methods are just fading. And the full experiments and results are available in our papers, so you can see. Okay, so what are the limitations of this method? As I mentioned, in many applications, you have to align maps with partial D. And what I mean by this term is that one major part in one of the maps. One major part in one of the maps is missing. And the bad thing is that Align LT heavily relies on the assumption that both match entirely or somehow entirely match. So if you, for example, apply alignment on this example, you will get this weird alignment, which is not what we want. Also, one other limitation of alignment is that it's Notice that it's sensitive to initial imposition, so it's a little hard to use. So we are gonna solve this issue first to solve with VU square movie distance. This variant of optimal transport is specifically designed for a case where there is no global metric showing distances between points of two-point cloud. Instead, we have two Instead, we have two metrics showing the distance between each point cloud. And here is the mathematical definition. And as you can see, because this mathematical definition only relies on the and prime, which are inner cluster metrics, applying any rigid body transformation on one of the point plots doesn't change it at all. So it makes it very convenient for our case to It's very convenient for our case to use. And you can see here an example of finding correspondence between human bodies using grommopassociation distance. So this meth, I think grommo fashion distance solve our problem in being sensitive to initial imposition, but it doesn't solve the partiality issue. That's why instead of Kermo-Passerstein distance, you are gonna use the unbalanced perm of Passerstein distance. Balance form of fazer-sign divergence. This is basically the same formulation, but instead of having a strict condition for the optimization, they are deleted and two KL divergence terms are added. So here would be the outline of our method. We would use this unbalanced form of asserration divergence to find the correspondence between two point plots. Then we use Koch algorithm. Then we use Kauch algorithm to find the optimal alignment. So let's see some results. To show the power of this method, we used the same experiments we had for alloy energy, and except that this method is invariant to initial limiting position. So we aggregated all results in just one cell. In just one cell. And as you can see, this method is doing better than alignment even when the initial rotation is as small as 60 degrees and let alone larger angles. So this is a promising result, but our main motivation was doing partial maps. So let's see a result on partial map. In this experiment, In this experiment, I deleted one of the chains in a complex and aligned chain to the whole complex and find this alignment which had an error of about five degrees. So, this is just one result, but what we plan to do is to have a Is to have a benchmarking result. So we plan to gather two data sets: one like what we have right now, artificially by removing some parts of maps, and one a real data set, and perform a benchmarking experiment and compare the accuracy and run time with other existing methods, which we were unable to compare in LAT. Unable to compare in LINOT because we were just local LINOT. Also, we are doing some project with labmates on using this method in model building. And in the end, I wanted to thank my supervisors, my lab mates and Fred, and also the organizers that may have this presentation. If you had a protein with units ABC and they're very similar to each other, not exactly the same, and then you align in A. Would it always match with A? Would it always match with A? Is it sometimes going to go to B and C, depending on how close they are? What's going to happen? Do you mean the aligno T method or this germ of assertion? Gromofasign. That actually depends on the initialization in computing grammar fascist and distance. So computing grommopassond distance is itself an iterative method and it has some initialization. and uh it has some initialization. Uh so uh depending on that initialization uh you can match your uh uh submodule to chain A, B, C, or F, D. So this is exactly what happened here. So these two chains are completely the same. So probably if you change the The initialization of methods, it's possible that instead of this alignment, you will get the alignment that are aligned to this one. Quick question. In the first method, if we understood correctly, you have your density map, then you sample some points, and then you do some relaxation. Yeah. I was wondering if you could speed up that process by just sampling promotion. Only probability proportional to the density. So, yeah, that's a very good question. And actually, I don't think it's initialized randomly. I think it actually, the point cloud is initialized with the underlying map as the weights, and then you diffuse after that. Yeah. Okay. Okay, it's uh different. The thing is that uh even if you uh if you use uh just probabilistic sampling, um you're gonna need more points to resemble your shape. Uh so uh computing uh battery share distance is very costly. Uh so uh it doesn't matter if uh in your sampling method it takes a lot uh a little longer. Takes a little longer, but if you can deal instead of like 1000 points with 500 points that still resemble your chain, your vessel and this transcomputation part would be much faster. Maybe the point cloud generation itself could also be we're working on developing different variants of point cloud generation that could be also more suitable for the That could be also more suitable for the distance that we the objective problem that we want to solve. Because I know that's a part that we didn't don't talk about here, but I think that's very interesting. Yeah, for some reason I thought the first figure was just randomly sampled. I actually used this figure to show how it converged. So if I just sample from this map and show the convergence, that we don't get a nice figure. That we don't get nice figure. Just for representation parameters. But I think you're right. When we sample and then we move the map for the gradient, the stochastic gradient algorithm, I think we can do a better job. Because right now it should be only sample. Actually, we can do a better job, but I think we can do something better so we don't care about this. Okay. Uh we try just simple checks, like multi applying method multi-scale. Sorry, I couldn't hear you. Have you ever tried to hear your registration done at a single scale, right? So you can also try multi-scale, so close to fine registration, which is which often for images. Now there's instead of SGD, you can try Adam optimizer. I couldn't understand putting I'm sorry. So it's still sarcastic. No words. Sorry, so instead of stochastic number one instead of like number instead of stochastic gradients descent, you could use second more like first order, momentum, second order, add them optimized. And the other one is you could try the cost to time registration. So often when you have a course, like which is equivalent to heavily smoothing that shape, you can get into that you can get already a large distance matching, right? And then you can s open them and then you can use force. You can use all time registration to make it and make optimization on a lot of it. So if I understand what you're saying correctly, for example, some people have suggested us match the PCA components of their point plot and then apply this further. But the hard part But the hard part is that you don't have the orientation. So you might end up with a rotation of 180, you might end up with something good. And our method is doing almost good for rotations like less than 70 degrees. So it's a you just need, what I mean is that you just need more initial impositions in this machine. This much. Anyways, no matter what you use. I think the suggestion is like you don't only have to have one set of points. You could, that is as high as you can go without being, while still being confident feasible. You could have a small amount, a medium amount, a large amount. You could have nested amounts and somehow use them all in a multi-scale approach where you have different amounts. So uh uh what this tool uh is doing, uh I uh we just let the practitioners uh use uh whatever uh number uh they can run. So yeah, I think your uh suggestion could improve it, but we haven't tried it. Do you actually need to really minimize the translation? Because I think it's close form, or will you just align the sector of mass? Uh yeah, exactly. Uh, so that's Exactly. So that's why in the anonymity method we didn't talk about translation at all. Our algorithm was completely dealing with rotation because in our paper we proved that we can just match central mass. But that assumption doesn't hold in the case that two density mass have partial D, which is the thing that I mentioned here. That I mentioned here. So, this is exactly one of the reasons that Alano T heavily relies on this assumption. So, as you can see in this example where this part is missing, Alano T just moved this upper map a little down and get us a weird alignment. So, for the partial method, we need to handle translation. For alignment, Translation for alarming Timo. To just unbalance of Timo transport, not in the form of a sub-tense city? Can you do it? We could do it. Actually, we had some preliminary results on that too. But that just makes the problem of being sensitive to initial imposition even worse. So you had to deal with the initial imposition with different translation. With different translations, and also one thing that happened is that, for example, when we had a larger map like here and a smaller map like here, this smaller map could move little by little here until it's reached here, and then it just stopped because it's connecting to points that are locally here, and the traffic. Here, and the translation doesn't. But for example, ground truth would maybe be something like here for any all right. Thanks again. So we have a coffee break, uh fifteen minutes. 