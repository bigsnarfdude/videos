And sorry to deprive you of coffee. We'll try to get this done quickly so we can get out there and have a coffee break. So let me talk about a project that is joint with Dave Gay and Peter Lambert Pohl. So here's the picture I submitted for my abstract. So as I understand it, the mission that I'm supposed to achieve in this talk is to explain what this picture means. We'll come back to this picture many times. And I'm going to explain it. There's kind of two levels of explanation. There's a surface level, which is like a very A surface level, which is like a very commentatorial explanation, and then there's a like a more greater context level. So we'll do surface level first and then we'll explore the greater context. So surface level. So definition, a triple grid diagram with grid number n is a diagram on a torus made up of n vertical, horizontal, and diagonal grid lines like so, with dots placed inside such that every row, column, and diagonal has exactly two or zero dots. Have exactly two or zero dots. Remembering that this square is a torus, so at first, it might look like these two dots are in there. Oh, I guess that's not super dark, but I've tried to highlight this here and this here, and those two dots really are in the same diagonal because it's wrapping around. Also, just a slight kind of like notational convenience, or cosmetic convenience, is that in each pink-blue. In each pink-blue square, like that, I'm only going to, there's kind of two triangles. The green is dividing this into two triangles. I'm only going to put dots in the lower triangles. And that's like, okay. It's just, it's a choice that I'm making that's going to make my diagrams look less terrible. And then, so the idea is this is kind of generalizing traditional grid diagrams. We've added this like extra diagonal thing. But one thing that's also different in this definition versus like traditional grid diagrams. Versus traditional grid diagrams is that I'm allowing for rows, columns, and diagonals to have zero dots. And the reason why this is is because in classic grid diagrams, if you have an empty row and column, you can just get rid of it and you're still representing the same dot. But here, if you just get rid of, if you just deleted, say, a row and a column, you're messing up what's happening with diagonals. So you're really changing your diagram. So that's why that isn't there. That's why that isn't there. So, okay, here's our example, or the picture again. I changed it slightly, so in the original picture, there were some X's and O's. We'll get to that much later. But here's our picture. And the idea is it's a triple grid diagram, so it's going to be a grid diagram for a link, but three times. So we're supposed to get three links, and that's what that second column is showing you: the three links that you get. So how do you get it? Really, this is three, this is encoded. Really, this is encoding three grids at once. So you have a pink-blue grid, that's kind of the obvious grid, you just ignore the green ones. And then you have a blue-green grid, and that one, you know, it's going to look slantier, but you can straighten it out and make the knot look more like that. And then there's a green-pink grid, and I guess just explicitly how you get a knot from this is in each grid. So first we're going to do the pink-blue grid. Ignore the other color, so forget about the green diagonal. So, forget about the green diagonals. Connect the dots within your grid lines. And you need an over-under convention for what happens when you run into yourself. And my convention is red, under blue, under green, under red. What that means is lines, like red lines, sorry, edges parallel to red will go under edges parallel to blue, et cetera. And there's a reason coming from the greater context that this is like the correct choice, but I won't go into that. So there's kind of the obvious. So there's kind of the obvious knot that you can see, and that's that gives our link, and that gives our top link there. The other two are harder to see the way I've drawn it, but I drew one. Here's one of them. Here's what the blue-green link looks like. So you forget about the red grid lines. You connect in the blue and the green grid lines. And then what I did, you kind of have to shift your viewfinder and maybe unslant the slanty parts if you want, and you get that picture. That picture. And then a similar story for red and blue. Sorry, red and green. And then what's going on in the last column of this picture is I haven't given you any context for why you would want to yet, but something you could do. No. You don't want to enter the books. Okay. Oh no. Spoiler. Okay, so something you could do then is take these and make them Legendre. Take these and make them Legendrean. So there's a lot of precedent for using grid diagrams to represent specifically Legendrean knots. You can get a Legendre in front from a grid diagram by taking the thing you get from the grid diagram, turn it 45 degrees. There's a debate on which way you want to turn it. I'm going to turn it clockwise and not mess with the crossings. And then you smooth and cuspify. So you smooth the top and bottom and you make cusps on the left and right. And there I drew the Legendre links you get. Yeah. So at the very surface level, this is what this diagram. But this is not super satisfying because it's completely devoid of context. So let's go there. Okay, so big surprise. The context is trisections. And I wasn't planning on defining trisections, but luckily all of my academic siblings that have gone before me have defined trisections, so that's great. So I guess we haven't talked a lot about. I guess we haven't talked a lot about just classical trisections or haven't seen examples of diagrams. But the setup is one zero trisection of CP2. What that is, is it's a decomposition of CP2 into three four balls. That's what the zero parameter is telling you. And the one parameter is telling you that the intersection of those, the triple intersection of those four balls, is a genus one surface like this. And so this is, I guess, yeah, Nick kind of showed us what diagram. Yeah, Nick kind of showed us what diagrams. This is much simpler than Nick's diagram because it's very close for manifold. But these curves, these red, blue, and green curves are telling you how to attach the solid handle bodies to recover your surface. So this is a trisection diagram for CP2. And this is this, when I said these diagrams live on a torus, I mean this torus specifically. And where this triple grid stuff comes from is you take these curves here and you make n copies of Curves here, and you make n copies of them. And if you drew it better than I drew there, it would actually look like a grid, a triple grid wrapped, you know, around your torus. So that's kind of where that's coming from. And then your dots are literally on your torus there. And actually, this describes a surface in CP2. So let's see how this works. This is going to be a smaller, this is our as mini example because the other one is for maybe too intense, and then we'll go back to the other one. Be too intense, and then we'll go back to the other one. But here's a smaller example: there's the three links that you get in each of the grids in this example. And if all three of these links are unlinks, you can cap off with disks, and then you get an embedded surface in CP2. And this is not like any kind of anything new. This whole setup is kind of due to Meyers. You can scrooge dissections, related luckily, and Terazel told us about that a bit. It and yeah, so really what these triple grid diagrams are are they're they're shadow diagrams, which if you don't know, don't worry about it, but they're like boxy shadow diagrams, basically. So that's cool. There's an additional thing that we really like about these things that we'll get to in a second. We'll seek this up. But going back to the X's and O's that I kind of ignored earlier, a triple grid diagram is orientable if X's and O's can be placed consistently. What I mean by that is if you can take each vertex and make each an X and O. Each vertex and make each an X and an O such that every row, column, and diagonal has exactly one X and one O, then that's what I mean by place consistently. And if you can do that, what it means is that you get orientations on the three knots that are compatible, that induces orientations on the disk that you kept off with, and you get an orientable stiveness. So, going back to our example here, what's going on here is that actually we have two components. So, this is describing two. So, this is describing two surfaces at once. So, the highlighted part is that's an orientable part. And so, those we can make X's and those. And those are only connected to each other. So, they're not connected to the other four dots. And so, in the diagram, if like over here at our three links, like these three squares are connected, and then these highlighted parts are connected. The highlighted part is going to give us an orientable surface. The non-highlighted part will give us a non-orientable surface. And what we get specifically. Surface, and what we get specifically is a Taurus and an RP2. And you can figure this out pretty easily with like an Euler calculation. Okay, so that's all and good. But now we're going to soup it up a little bit and see if we can encode some geometry. So going back to before, I was kind of saying you can use these things to describe Legendreans. So here are the three Legendrean knots that correspond to those knots there and are. Correspond to those knobs there in our mini example. And now I'm going to do the same thing, but I'm going to add, you know, put some, make some edits here. If all three links, when you think of them as Legendrean, are unlinks, but specifically I want TB minus one. So that's their synthetic number. I won't say what it is, but it's a classical invariant with Legendrean links. It's very easy to calculate from the diagram. Minus one is the maximal value, so it's somehow like the simplest version of the unknot you could have. Of the unknot you could have in the Lagendrian world. So, if that condition is true, then you can fill with Lagrangian disks, and what you get is an embedded Lagrangian surface in CP2. And that's kind of cool because this is like a very combinatorial construction or like diagram, and it's really encoding some kind of geometry, which is cool. And I realized when I was making my slides, I never wrote down a theorem. I was like, I should probably put, if I'm advertising my work, I should probably write a theorem somewhere, but this is the closest I'll get to. Theorem somewhere, but this is the closest I'll get to a theorem statement. It's not super precise, but it's good enough. We all kind of get the idea of it. So that's cool. And it kind of plays into, there's like this larger theme of a lot of people have been working on lately of like trying to see what the connections are between trisections and geometry, specifically symptomic geometry. And it seems like for some reason this very kind of counteratorial decomposition can be. Of countertorial decomposition can be used to encode geometry. That's really cool. This is maybe one little puzzle piece of that larger story. So, share this one way, is the other way like not? Yeah, that's on a slide that I'm going to get to in like 10 minutes called Future Work. Any other questions? If you have like maybe some other there's some Vennekin on and unlink. There's some bedneck in on an unlink and you fill it with Lagrangians, do you still get an embedded Lagrangian surface? So the reason I want TB minus one is because the only unlink that you can fill with a Lagrangian disk is TB minus one. So you could, one question I have gotten is like, well, so like you could fill it with like surfaces of genus, and it's like, why not do that? I mean, like, if you're following the kind of the motto of trisections, is you want your pieces to be simples, that's why you want discs. Want your pieces to be simple, so that's why you want disks. But it's like, I don't know, maybe that you do get something interesting if you said allow something else. It will make the uniqueness part harder, though. So one thing that's nice is that Ellie Asberg and Ulter Verish showed that this knot of like T V minus one filling is unique as well. I'm not sure what. Yeah, I'm not sure what big piece is for the part of that. All right, cool. Okay, right, so back to our example then. So I already told you that if all of your components are unlinks, you're describing a surface, and that was the case for us. And then I told you if additionally all of your unlinks have TB minus one, then you have a Lagrangian surface, and that is the case. That is the case. I didn't give you a definition for TB, but it's something you can calculate very straightforward from the diagram. And so that means that this torus and this RP2 that's being described by this diagram is Lagrangian. So that's cool. So I've now successfully, hopefully, described my picture, but I'll just tell you a few more things. And yeah, so one thing that I want to tell you about is just like, so for small group numbers, you can just brute force. Numbers, you can just like brute force figure out what services you could get. And I don't know, I just like telling people this because I think it's interesting and gets you a bit of an idea of like what's going on in these grid diagrams. So let me let's explain this table here. So this column is grid number. This is the number of vertices. Remember, because of this empty row possibility, your number of vertices might not be like the maximal number. But if you have the maximal number, I'm calling that full. And then these two columns are telling you the cost. These two columns are telling you the possible surface you can get. I guess I never said, I'm thinking in the smooth category. Possible smooth surfaces you can get. Where this category is surfaces you can get that are Lagrangian. So that means there are diagrams that satisfy the TB minus 1 condition. And these ones are not Lagrangian. And one thing, so I mean, like, I did this. This was one of the first things I did when I started thinking about this. So this gave me good evidence that the theorem that we have now proved is true. We have now proved is true because this column agrees behaves in accordance with what was already known about Lagrange NCP2. In particular, the only embedded orientable Lagrangian CP2 are tori, and you can see that's the case. We also have PARP2s, but that's fine. Those exist as well. You might think, if you're looking at this column, this table is a little misleading because you might think that you can't get any other orientable surfaces at all, even not within it. That's not true. I do have hydrogenous. Have higher genus orientable examples, you just need higher grid number, but they are not Lagrangian. Like, I wouldn't get any in this company. And grid numbers two and three give you unique diagrams. It gives you an RP2 and a T2 and up to translating on your torus. Those diagrams are the same, just because they're really small. There's only so many ways you can put a balance on it. And oh, sorry, I forgot. I had one more thing to say. One thing, I mean, I don't know, this is just. One thing, I mean, I don't know, this is just kind of interesting to be, but I haven't found any examples of spheres, and I think probably you can't represent spheres at all, even not like, well, there shouldn't be any Kronjin spheres, but even not in Granjian. And I've shown like for like specific sub-cases, if you put some restrictions, I've shown that you can't get spheres in those cases, but I don't know, in general, it might be harder. Maybe there's just some gross large diagram I haven't thought of, but I don't know. So that's a question. That's a question. But that's all outside of the Lagrangian world, so maybe not the most interesting question. But here are the two unique diagrams. So there's the RQ2, and there's the Taurus, and that Taurus is the same as the mini example I was showing you earlier. And these, maybe you should look a little familiar, because how I made this big diagram is I kind of just took the two of them and I stuck them in there. I was trying to, again, kind of early on, I was wondering if these, if you could only represent connected. These, if you could only represent connected stuff, and so this was me trying to find a way to represent two things at once, which I did. Yeah, I mean, this Taurus doesn't exactly look like that on the nose, but if you change her viewfinder a little bit, it's like missed that. Okay, great. The future. So, things I'm thinking about in the future. The first is, oh, I guess not Ramon's question. The second is Ramon's question. The first is uniqueness up to what. So, this is what. Up to what? So, this is what currently is thinking about. There's for Lagrangian surfaces, there's kind of two notions of equivalence or isotopy people like to think about. There's Lagrangian isotopy. Then there's also a bit stronger notion called Hamiltonian isotopy. This is nice because it preserves this nice property for exactness. Anyway, so the hope would be that we have a uniqueness statement accompanying our existence statement, that that is a work in progress. And then, yeah. I guess. And then, yeah, Vermont's question: Can every Lagrange in the CP2 be represented this way? That is a good question. And I don't know, it seems to me like this will be hard, but something that would be great to tackle, at least to try to think about. Another thing that I would like to think about, or in some undergrads, think about, is: are there moves on diagrams? So there's like for classical grid diagrams, there are moves that preserve, you know, that are necessary and supportive to preserve an app-type. So are there To preserve an app type, so are there moves on these things that like preserve what Lagrangian you have or something? And then last one, on these kind of like a simple or immediate question is, so all of this stuff that I've been so far I've only been thinking about embedded Lagrangian specifically. And one question is, can we think about immersed Lagrangian? Probably it should be possible to slightly tweak our proof to work, but that's something that we haven't thought about too much yet. But one, I'll just leave you with here's one kind of I'll just leave you with: here's one kind of example of a potential diagram for an immersed surface. So, this would be a Lagrangian S2 with a double point made out of a half link and then two unlinks there. The idea being that you cap off the Haflink with a disk that has a double point. But we have to kind of run through our argument and see and make sure that all of the results where we're using embeddedness also will when we have it first done instead. Oh, it first stops that. Um that is all, thank you. Questions? There are like proofs for like normal grid diagrams and I guess for rich stri-sections where you're not being as rigid with this type of thing, that you can get like every surface in those things. Do have you like looked through those and do you know like roughly why they don't like follow what you're doing? Follow for what you're doing or not. Like, so why, for instance, like, are you saying like why every surface can be put in bridge trisection? And, like, can you use that here? Yeah, I don't know. Like, some combination of the proofs for bridge trisections and the proof for like a dimension down grid diagrams. Yeah, I mean, that's where we would start. So, I have not really started thinking about that. Like, more we're currently writing up the theorem I stated for you and then thinking about the money. Yeah, yeah, yeah. Yeah. So, no, I don't know if there's any reason that would have been. Yeah, I don't know if there's any reason I would or would not just I don't think they should be because um none of the knots well waiting draw the knots aren't linked and I feel like then you can make the discs disjoint. Is it easy to like read off the homology clustering and stuff? Like Knowledge classroom instead of like what you're representing? Um yeah, I'm not a hundred percent sure. I think there should be Peter says yes. Yeah. For what yeah, Peter says yes. There we go. Yeah, some argument I'm cutting in half. I'm counting them. Yeah. But one one thing I so I don't know how you do this if you're not orientable for sure. That I don't I definitely don't but. No, I don't I don't want to jump on but the fact that you know what the intersection from what CB2 is, right? So if you draw another diagram, can I just count the diagrams instead? Wait, sorry, I think I heard that. Sorry. So if you draw the like the bridge diagram for CP1. Yeah, yeah, right. Yeah. And I think that's that's Peter's, that's the cutting app thing is, yeah. Wait, and so far you're just doing this for CB2? Oh yeah, that's a good question. So right, so the question that, well, I started heading it off in my talks and then I forgot to do it this time. So if if I don't address this in my talk, I always get a question which is like, can you do this in other manuals? And it's maybe not obvious that you can, because Obvious that you can because so the reason this works so well in CP2 is for two things: CP2 is symplectic, and CP2 has a genus 1 trisection, and that in particular is really special. So that's the only symplectic manifold that has a genus 1 trisection. So if you go higher genus, now you have grid diagrams on hyperbolic surfaces, and that's going to be a mess. But one thing that you could try to do is you could try to bump it up to multi-sections. And that is something that Shindra wrote, and my academic student diggs. And my economists and Laura from Aitland are thinking about it.