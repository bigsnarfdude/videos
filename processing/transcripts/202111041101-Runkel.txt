To have another discussion session, which continues the discussion we had yesterday at 1:30 Banff time. So, you should all be used to convert this to your time zone. It's the same time as yesterday, and it will be again shared by JÃ¶rg Teschner. And we will continue this discussion. But for the moment, let's continue with Ingo Runkel about non-semi-simple TQFT and manifold. QFT and manifold invariance. Okay, thank you very much. And thanks for the opportunity to give a presentation here. This, oh, firstly, if my microphone, it sometimes makes funny things, if that happens, stop me. So this is the first part of a two-part presentation. The second part will be given by Azad right afterwards. Right afterwards, and we will be reporting on a joint work. So, for me, it's joint work with Johannes Berger, Marco Terenci, Azad Ganutinov, Nathan Geer, and Bertrand Patrot Miron. And in this first part, I should first say that the setting I will speak in is always a finite ribbon category. So, we have seen in this conference already that it's important. Already, that it's important to also consider non-finite settings and that these appear naturally in questions arising from VOAs. But I will here restrict myself exclusively to the finite setting, and we will hopefully see that even here there are some interesting corners to be explored. And so, I will start very simply by speaking about invariance of ribbon graphs and. Of ribbon graphs and specifically invariants you can obtain from modified traces. And then we will use these to define invariants of three-manifolds with ribbon graphs, and then via the universal construction path to a 3D TQFT. And along this chain, we have to make the category we use more and more special. Most of this talk I'll, however, spend in this first slot here. Slot here. Good. And if there are questions, please ask. So I'll start by first recalling mostly to set conventions this notion of a Reshetikin-Turayev functor. So what this does, it takes the ribbon category and it builds, so one then looks at another ribbon category, which is constructed from R by looking at actual ribbons. By looking at actual ribbons. So the morphisms here are ribbons embedded in R2 times 0, 1 up to isotopy. And these ribbons are colored by the data from R. So morphisms by morphisms, so coupons by morphisms, and these ribbons by objects. So they're also actual ribbons or framed lines. I just didn't draw the framing here. And then the And then the Relikinturayo functor, what it does is it gives you a canonical functor, so by some conditions uniquely fixed, from this category of actual ribbon graphs into the ribbon category R you started from. And this existence of this functor is, in a way, the justification for the graphical calculus which you do with ribbons. And the functor, just as a slogan, is that you. Just as a slogan, is that you look at this and you make it into a string diagram, and that's the value of your functions. And then the non-trivial statement is that that makes sense. So here the ribbon category is still very, very general. But if this is like a linear category and the endomorphisms of the tensor unit are your fields, say the complex numbers, then if you have a closed tangle, so a closed ribbon tangle, not like here, it's just all closed. Angle, not like here, it's just all closed, then it would be a morphism from the unit to the unit. So that gives a number, and this number is then an invariant of this ribbon graph. Okay, so this is how this produces invariance of links, for example. Good. So now let's look at this in an example, at this functor in an example. And my running example is that of symplectic fermions. And I'll not here explain the relation. not here explain the relation to to the actual symplectic fermions and conformal field theory i just take this as a as a black box and i use the output which is a certain modular tensor category so modular tensor category for me means that it's a finite ribbon category it's not necessarily semi-simple and and the braiding satisfies a non-degeneracy condition so i'll call these categories sf they have two parameters one is SF, they have two parameters. One is n, which is a non, which is a positive integer. And so that is like the number of pairs of symplectic fermions. And the other one is a root of unity, satisfying this condition. So this category can be very easily described as a C linear category. And as a C linear category, it splits into two bits. The first, I'll call SFZ. The first I'll call SF0 is representations in supervector spaces of the algebra given by the Grassmann algebra in two and auto generators. So that's clearly not semi-simple as a representation theory. And then you just add on another component, which is super vector spaces, another copy of supervector spaces. And I call this SF0 and SF1. And there is a tensor product on this, which I'm And there is a tensor product on this, which I'm not telling you what it looks like, but it respects this gray, for example. And so, if you come from the VOA side, so this would be the twisted representations of the symplectic fermion VOAs, and these the untwisted ones. And so in the bosonic, so if you could just look at the even ones, and they're all representations. Anyway, so that's the category as a C-linear category. It's not semi-simple. And it does, however, And it does, however, have simple objects in it, and they are always four simple objects. Never mind what your n is. The number of simple objects stays constant in this family, and it's always four. And so here it's the two one-dimensional supervector spaces, and over here it's also the two one-dimensional supervector spaces, right? And so what happens as you increase n is that the projective covers get more complicated, but the number of simple objects stays the same. Now these Now, these two symbols are actually also projective. And to give an example of a tensor product, if I tensor T with itself, I land an SF0. And what I land on is the Grassmann algebra seen as a regular module over itself. So you see already that this tensor product doesn't respect the vector space dimension here. But it still, if you were to work out what the Frobenius-Perbon dimensions are, What are the Frobenius-Pervon dimensions for these objects from the fusion rules? You'd find that they are still integers. So you know that there is an algebraic object which you can use to represent this. So by a general theorem, there always has to be some quasi-Hopf algebra. And so this can be done explicitly. So one can just write down, and I'm not going to give the details, but I'm just telling you that there is a ribbon quasi-Hopf algebra in Vect. Algebra in vect such that this modular tensor category becomes representations of this ribbon quasi-Hopper algebra. Okay, so this fact is useful if you want to do computations in here. So at some point you might want to know what the co-end is, and then it's helpful to have this representation. Okay, so here I list some properties. So we have already met what n is. That determines the number of Grassmann generators, it's 2n. I haven't told you what beta is. Beta determines the associator and the braiding and also the twist. So I have listed these properties here. So recall we have four simple objects and I list here the twist and the quantum dimension. So the twists of these simple objects are always one, like in supervector spaces for these two. And then there's something involving beta for the other two. So that's where beta enters, for example. And then the dimensions, the quantum dimensions, are one and minus one. As for supervector spaces and for t, the quantum dimension is zero. And that's expected because I said these are projectives. And so the categorical quantum dimension in these cases comes out as zero. Good. So now we have a modular tensor category. Have a modular tensor category, and I want to use this to compute invariants of links colored by representations, so by objects in this category, and see if that's an interesting invariant of links. And the answer is it is very much not. The invariants are super boring, and I want to explain why that is. So, here's an example of a link. So there are no coupons, but there can be several components. So gamma is in this ribbon. So, gamma is in this ribbon category. I assume it's a link. So, it goes from empty to empty. And there are no coupons, still colored by representations in my category. And now one can just check that if this link contains one of these loops colored by t or pi t, these were two of my symbols, then the invariant is just zero. Just zero. So that's boring. So we can already forget these two colors because they'll just give us zero. Now, so therefore, we don't want to look at these colors. The pen died, wait, charge the pen. Therefore, we don't want to look at these colors. And if these two colors are not present, then we are only coloring in the grade zero part of the category, which is just representations of the Gaussmann algebra. Of the Gaussmann algebra. And there one can show that it doesn't actually matter precisely what representation you color such a ribbon by. It only matters up to the class in the Gordon Degring. If the classes in the Gordon Degring are the same, then the invariant is the same. So in this sense, it factors through the Gordon. That's terrible notation. That's Krasmann. That's Gordendieck. Fine. Which is just the group algebra of Z over 2. Just the group algebra of z over two, like for aspect. So, um, good or not good because it means that the invariants you produce are just the same invariants as you would have gotten for aspect, which is a symmetric category. So that's a bit disappointing. We started with a modular tensor category, which has a very non-degenerate braiding. So you'd hope you get something interesting, but you don't. You just get nothing. You just get nothing. You get the same invariance as you would have gotten for SFAC. So, what can one do? Well, to the rescue comes a theory of modified traces. So, I will briefly run through the definition. So, again, my setting is finite ribbon category, so I don't have to talk about left and right modified traces because. Write modified traces because of the braiding which is present. And the modified trace is defined on an ideal in this category. So I want to look at a tensor ideal. And again, it's automatically two-sided because of the braiding. And so a tensor ideal is basically what you think. But there are two points which I want to stress. Firstly, the tensor ideal here in this setting is always a full subcategory. Setting is always a full subcategory, so you don't take subsets of morphisms which close under tensoring in some sense. So it's always a full subcategory. So it's a question about the objects. And secondly, it closes under direct summons. So that's also important. So if you take the tensor product of something in C and something in the ideal, okay, you have to land in the ideal. But if this composes into a direct sum, you demand that each of the summons which appears here is also already in the ideal. Already in the ideal. So then that's the notion of ideal we are using here. Okay, and so there are two examples which are always there. One is you take the ideal to be the entire category, well, clearly. And secondly, you take the ideal to be all projective objects in your category. That conjects is also a tensor ideal. And this tensor ideal here is special in the sense that Special in the sense that all other ideals lie in between everything and the projective ideal. So if your ideal is not zero, it necessarily contains the tensor ideal. And that sort of comes out of this direct summoned observation, because you take a projective here and you tensor with anything, it's going to be projective and so on. There is no difference between left and right, ideas, because we upgrade it, yeah? Right. And so that's so this theory of modified traces is. This theory of modified traces is more general than what I'm presenting here, but I don't want to present the most general settings. So, what you say, Jorg, is right, it's because we are braided that I don't have to distinguish there. Good. So, okay, so that's an observation. And this observation tells us that if C is semi-simple, right, so then every object is projective. And so then there are no interesting ideals in that sense. Ideals in that sense. So, already, if you want to even start thinking about this setting of modified traces, you want to have something non-semi-simple, otherwise, you don't have interesting ideals in this sense. Good. So, let's now actually come to the properties which define the definition of a modified trace. So, we have this tensor ideal, and then the modified trace on this. And then the modified trace on this ideal is a collection of linear maps from the endomorphism spaces of objects in the ideal to whatever field you are working over. So for me, algebraically closed field. And so this family of linear maps has to satisfy two conditions, cyclic cyclicity and a partial trace property. And so cyclic means you can take means you can take, well, it's cyclic. You can take an H here and you move it through the trace so that it arrives at the bottom. So it links the trace on X and Y for X and Y in the ideal. And the partial trace, which I have now promptly drawn the wrong way around here, should have been the other way around. Can I fix this quickly? Let's see. So my ideals were acting on the other side. Will acting on the other side, so I admit you have the general object being here, and then what you can do is you can trace this with the categorical trace in C and so this then links the partial trace on u tensor X to the partial trace just on X, and you have this identity. Okay, and so there's a more general version of this where you work with modules. General version of this, where you work with module categories, and then I will not use this here. Okay, so that's the modified trace. Let's look at some properties. So I said already there is one example of an ideal is you take the entire category. And then because of this partial trace property, the modified trace is necessarily proportional to the categorical trace. So there you learn nothing new. So again, in the semi-simple case, but that's the only situation also modified. That's the only situation. Also, modified traces don't help you in finding new things. Now, if you are in this situation where you use the categorical trace, there is an observation which tells you why we got so many zeros previously. So, which is the first observation which tells you this, which is that the categorical trace necessarily vanishes on any non-trivial ideal. So, if you have a proper ideal, so one, an ideal which is not all of C, and remember that can. Is not all of C, and remember that can only happen if you're not semi-simple. Then, if you take any object of the ideal and any endomorphism of that object, if you compute the categorical trace, you do get zero. So in this sense, the categorical trace doesn't see anything which happens in these ideals. Right, then let's look at the other extreme ideal, the projective ideal. Be the projective ideal. So there is again a theorem by Guiller Kujava Paturumiron, which guarantees existence and uniqueness for the modified traces. So we have to be slightly more special. So we have to require our finite ribbon category to be unimodular. And so I have in this box written what unimodular means. So one way to define it is if you look at the projective cover of the tensor unit, then its soccer is also the tensor unit. Uh, soccle is also the tensor human. That's one way of saying it. So, unimodular. Then, in this situation, again, the theorem is more general than this, but it implies this. So, there exists an up-to-scale as unique modified trace on the projective ideal. And moreover, this modified trace gives non-degenerate pairings on homespaces. So, let me go back one slide to point at this. So, here we get two homespaces. Two we have two homespaces which are being paired. So they would all be home spaces in J, now projective in the situation we're in now. And so this non-degeneracy means that for any x and y, this gives a non-non-degenerate pairing from x to y with the space from y to x. Okay, so that's a very nice situation in the case where you have this projective ideal. And now we want to use, as has been done 10 years ago, we want to use these modified traces to get invariants of closed ribbon graphs. And so the setting is now again C finite ribbon category. We have chosen an ideal in C, and we've chosen a modified trace on this ideal. Now, Now we take a closed ribbon graph and now for this to work, we will need at least one edge to be colored in J. Otherwise we can't do anything with this phrase. So we call a ribbon graph admissible if it has at least one edge colored in j. So let x be that color, and so gamma is my ribbon graph. And I pull out this edge out of my This edge out of my gamma, and then I cut it. And so then I get something called a bottom tangle. So I have XX dual. And well, I take this X dual, I bend it up, and then I get a ribbon graph, which is an endomorphism of X. And now that is something, so to this, I can apply the Restikin to I functor. What happened now? Now, sorry, this got smaller. I don't know why. Okay, so to this, I can apply the Rishtig and Torayev functor. I didn't write that here. There should be an F in here. And then I get an endomorphism of X. And to this, I can apply the modified trace. And that's my invariant. So I call this F prime of gamma the renormalized invariant. And then there's a theorem to prove and the theorem. To prove, and the theorem states that this is indeed an isotopy invariant of the graph. Okay, so we defined a new invariant, which now depends on the modified trace. So let's state some general properties to see how much better or not this now actually is compared to the categorical trace. So let's again look at the situation where there are no. Let's again look at the situation where there are no coupons. So we have just this ribbon link, maybe with several components. And we need it to be, we want it to be admissible. So one of them has to be colored in the ideal, J. And suppose there is some other component, which is not the one we cut in order to compute the invariance. So this one we would cut and then take the modified trace. And so let's say this one here, we don't cut. So it may well be in. Cut. So it may well be in J, but this is not the one we cut. Then one can show that even with the modified trace, the invariant of this, so F prime of this lambda of W, even with the modified trace, it only depends on the Gordendie class of W. So if you replace W by W prime, you get the same invariant if the class in the Gordendie ring agrees. And the Gordon degring agrees. So, the sort of additional things, so the internal structure of modules, you will only be able to detect it if on things you're cutting and putting into the trace. Could you cut the W instead and use it to compute the moisture from there? So, if W is also in J, then you could cut W and that tells you something. Could cut W, and that tells you something that if you've got two things which are not connected and both in J, then you lose even more information in principle. You get something different if you cut W. But that's the theorem, right? So first of all, so by this, I mean it's an invariant of the original gamma here. So it doesn't matter which one. So if there are several of these link components colored in J. Components colored in J, you can, it doesn't matter which one you cut. Okay. You get the same invariant. Goody. So, okay, so I can't see such things. Fine. There's another thing which I want to point out, which is suppose you've got a family of non-isomorphic, mutually non-isomorphic objects. So, for simplicity, say they are parameter. So, for simplicity, say they are parametrized by one parameter, by one complex number. And so, this happens, right, even in finite. So, it clearly happens if you have these non-finite series, and they can all be simpled, for example, and you have these continuous families of simples. But this can even happen in the finite setting. Then these are indecomposable and not simple, but the internal structure sort of has a continuous parameter with which it can shift. And so this happens. So, this happens. And if you have this, but if you have this in a setting where the Grotendie class doesn't depend on the parameter, that's the typical situation. Something of the internal way, these are linked shifts, but once you say what is the composition series, it doesn't change. Then, if you look at renormalized invariants of this type, either for the whole category or for the production. Or for the projectives, then this will never be able to detect such a continuous parameter. And let me briefly say why that is so. So, if you are in this situation where you have the entire category, well, then it doesn't really matter what you cut. You can also put a little zero loop and cut this. And then you're just looking at the categorical trace, and everything factors through the Gordonigring from the start. So that's why this happens. And if you are in this situation, You are in this situation. Well, because your category is finite, this continuous family can never be projective. So this doesn't happen in projectives because there are only finitely many indicosable projectives. And so therefore, there must be some other component with this projective, and then you're in this situation. So, in these two extreme cases, you will not be able to detect such families. So, these are just general properties. Now, let's look. Now let's look at our example, symplectic fermions. So we take the case n is to 2, so we have two pairs of symplectic fermions. And it turns out that we don't have, so this firstly is work in preparation with Johannes Berger and this Azad. And it's sort of more a let's have a look and see what is there rather than trying to understand what is the general classification. So in this particular example, one So in this particular example, one can find an intermediate ideal, which properly sits in between the entire category and the projectors. And I explain a little bit how you get this. So remember that my category of symplectic fermions can be written as representations of a quasi-Hopf algebra. And as an algebra, it's generated by five generators, F1 plus minus, F2 plus minus. These are the two pairs of symplectic fermions and some k for. And some k for some grading. And now I just forget the generator F2. Then I clearly get a sub-algebra and I call this A. But it turns out I'm not going to tell you what the coproduct and all the structure is, but this A, which is now generated by F1 plus minus NK, is a Hopf sub-algebra. So it's compatible with the coproduct. And that means that if, so this is a sub-algebra, so there are four on representations, you get On representations, you get a functor in the other direction. So, a functor from representations of Q to representations of A. And this functor becomes monoidal because it's compatible with the coproduct. So let me call this functor R. And now what I can do is I can pull back things which are projective with respect to A. And by pullback, I mean I take the full subcategory of objects which land in, which become projective here. And that's my idea. Objective here. And that's my ideal. That's J1. And that sits properly between these two. And then one can show that you can also pull back the modified trace, which you're guaranteed to have on the projective ideal here to a modified trace on this ideal. So this is now also equipped with a modified trace via this construction. And now I want to go through some properties. Through some properties the invariants have in all of these three cases. Okay, and my example link is very simple. It's the unknot with n framing. And I just want to look at this and evaluate it in these three cases. So J0, the entire category, well, that's the categorical trace. We already had this, and nothing happens. And the next one I want to do is. And the next one I want to do is the projectives. So for the projectives, so these are the four indecomposable projectives. And you see something interesting does actually start to happen. Namely, if you evaluate this link, you get this number, and you see that the twist appears here, and it appears in a way which allows you. Appears in a way which allows you to distinguish up to the sign all possible twists. And that's something which cannot happen if you have a semi-simple category, because all the twists here are periodic. So you'll always come back to itself. But here you can actually tell them apart. So that's already something new, which happens with the theory of modified traces and in this non-semi-simple setting. Say um okay, so now let's go to the intermediate ideal, and there something even nicer happens. So, so remember this continuous parameter. So, it turns out that in this J1, in this intermediate ideal, you do have such families of indecomposable representations. So, there are, so never mind the details, so there is a family parametrized by two by two complex matrices. So, there is a family. Is a family. They all live in here, so I can color by them and compute the modified trace. And it gives me this answer. And you see that it can detect at least bits of this continuous parameter. And so this is, so I find this pretty. So it's like if you go to the two extreme cases, you can't actually see quite as much as if you look at the modified trace for such an intermediate idea. intermediate idea. So that at this point is just an observation. We have no general theory for this and it's sort of more of a general question now. So what is what if you do this systematically? How much can you tell about a representation from these invariants? So this sort of in a way is the opposite point of view. So if you can either use the algebra to learn something about lincoln variants, but you can do this conversely. You can ask the lincoln variants, I want to see them or the S invariants. Lincoln variants, I want to see them are the S invariants of algebraic objects, and how much do they tell me about the algebraic object? Right? And so, what this says is that if you do this, it can tell you at least something about the internal structure of these representations. But how much you can see and what you can't see, that's open. Okay, so that's this example. And now I slowly want to move on to get to, actually I want to probably quickly move on to get to invariance of three manifolds. To invariance of three manifolds, and I have to speed up and to three-dimensional TQFTs. So, to this, we need to go to co-ends and something called bichrone graphs. And we need, again, to make our category more special, it has to be unimodular. So, we have already seen this co-and many times. So, let me be brief. So, L is the co-ent in this category, comes with this universal panel. Dinatural transformation, and it's universal in the sense that if you have another dinatural family, it always factors through L in this sense. Now, this L turns out to be a Hopf algebra in C. And there's a general theory of integrals, and you can find a unique up-to-scalar integral for this Hopf algebra. And the fact that it maps out of the tensor unit is the reason why we had to do. Reason why we had to do this unimodula here. And for semi-simple C, this becomes this familiar sum over irreducibles, and the integral looks a bit like the surgery or curbicolor. Okay, then I have to introduce bichrome graphs, so bichrome for two colors. So there's a blue component of the graph. So we make this category of ribbon graphs. So we make this category of ribbon graphs which are embedded in R2 times 0, 1 bigger. So we think of the original one as blue, and that's just colored in the category C. And then we add some new building blocks for our graph. So they can be a red oriented, but unlabeled. And then there are some mixed colored coupons. And so now an element looks like this. Note, I don't change the objects. I don't change the objects, I only change the morphisms. So the red components never intersect the bottom or top here. That is just laziness. You can, I guess, we didn't do it, but you can extend the theory, but that's not done. Anyway, so we can evaluate these. And I want to explain how to evaluate now such a diagram. And so that's an extension of this functor. We want to extend the functor f to a new functor f lambda. To a new functor f lambda, which now depends on the integral from this extended category to the underlying ribbon category C. And to do this, we take, let me go back one slide. So we take this diagram and then we cut the red loops here. Then we get this picture. Now, because these were loops, this is already dinatural and the colored coupons we label by this universal binatural. We label by this universal dinatural transformation, then that becomes dinatural two. And then by the universal property, this factors through two copies of L. And then for each copy of L, we insert one of these co-integrals, and then we end up with a morphism in C. And the claim is that this produces a well-defined functor from here to here. Okay, well, that's the prescription. Description. So then there is a theorem. So this functor is also an isotopy invariant. And it has another nice property, which is that it's invariant under handled slides. So you get this. And so there's another question at this point to which I don't know the answer, which is, you know, so we have taken this Hopf algebra L and the integral, and it gives a solution to this condition, but there may be other solutions. So that's all. Other solutions. So that's already asked in Henning's paper. Here, are there other things you can do which allow you to have such a property? And I don't know the answer to this. Anyway, so in this situation, we have this handle-slide property, so it starts to look like it wants to be an invariant of three-manifolds defined by our surgery. But you need another property for this to work. So that comes here. So now our settings. Here. So now our setting again, unimodular finite ribbon. We have an ideal, we have a modified trace, and we need C to be a twist non-degenerate. So this means that if I take my an extended Richetikin Turayer functor and I evaluate it on a plus minus one framed red loop, I get a number and this number is not allowed to be zero. Right? And so that's because this is a way to write. That's because this is a way to write S3 via surgery, and I have to divide by this. And so this is not allowed to be zero. And then it's called twist non-degenerative. I have this. So now if I have a three-manifold, M closed, and an embedded ribbon graph, gamma, which has to be admissible with respect to the ideal J, so one edge has to be colored in J. Then I can define an invariant. I can define an invariant L prime for m and gamma, which is some pre-factor to make surgery work. And then you take this link invariant defined via the modified trace for the ribbon link for the bichrome graph you get from a surgery presentation of M, that's this L, and from the original graph gamma. And then a theorem. Theorem this defines a topological invariant of the pair. So let's look at some properties. So, in my examples, I assume C is not semi-simple and let P be some projective object. So, we have these two situations. The one is where the ideal is everything, and one is where it's projective. And if it's everything, that's a situation where this invariant is already defined by Lubashenko, now almost. Now, almost 30 years ago. But if you evaluate this invariant for S2 times S1, you do get zero. So that's not a good sign if you want to do a TFT. And if you want to evaluate it for the projective ideal, well, you're not allowed because it's not admissible, because there is no ribbon edge labeled by P. Okay, so there's a problem, but you got rid of it by saying, no, it disallows. By saying, no, I disallow this manifold. So that's cheating, but at another place, there's something which happens which is good. Now, this invariant stays zero if you run a projective ribbon along the S1 direction. But this one, if you take the projective ideal instead, it does not. Instead, it produces a dimension of a vector space. So you feel like, oh, maybe there is a TFT which sits behind this. And okay. And okay, so let's look at some properties of these invariants. Actually, maybe I skipped properties so that I can get to the TFT. So how do we define the TFT? So now we restrict our setting even further. We now want the ribbon category to be modular, non-degenerate braiding, and the ideal now is restricted to the projective ideal. Then we take the usual category of three-dimensional borders. The usual category of three-dimensional bordisms, as for Rostik and Turayev, and we need the central extension for the gluing anomaly. But we can't define the theory on all of this because of the admissibility condition. So we go to a non-full subcategory. It has the same objects, but the bordisms satisfy some condition, which is that some of the borders must have a projective ribbon in there. So I've written the full condition here, but I'm. Full condition here, but I'll explain it in an example on the next slide because I am sort of running short on time. So, here's an example. So, firstly, if you have a closed M, then it must contain a ribbon graph to be admissible and by colored by a projective. And what happens next is that no longer all objects in your Bodism category are dual. In your bodism category, are dualizable. So, in my convention, you always have these evaluation maps, but the co-evaluation map only exists if there are some projective thing in here. So, the objects which are dualizable are precisely those where every connected component has at least one label which is projective. So, that's, for example, an effect of this restriction. Good. So Good. So still, you get a functor then out of this category of admissible bordisms to vect. So you get a TQFT for your modular tensor category, and the construction goes via the universal construction of Blanchier et al. And this construction takes closed invariance and turns that into functors. Now, these are typically not monoidal. And so the difficult thing then is to check that you get something monoidal. And also Something monoidal. And also, here, typically, the vector spaces, the state spaces, are not finite-dimensional. So, again, you have to see that you get something finite-dimensional. And so, I want to maybe say two words, if I may, on how to evaluate the TQFT on objects and morphisms in the bordersome category. So, the states. So the state spaces, you take a surface. So here's an example. And the state space is a home space, gets mapped to a home space, which here is the home space in C from P1 into V. This label tends towards the end in this case, quotiented by an equivalence relation. And the equivalence relation is given by a pairing, namely, it's Namely, it's going to be a pairing with homes from the same object and the co-end into one. And so the pairing is obtained via Haggard splitting. So you get, say, you have your genus G handlebody, and then you do a Haggard splitting of X3 to get some dual one. And you place a morphism from here into a ribbon graph, which you embed into one handlebody. And the F, the F, sorry, let me go back one slide. Sorry, let me go back one slide. So the F out of this home space goes into this handlebody. That's what I've drawn here. And then you glue them together and then this and you evaluate this invariant for bichrone graphs and that gives a pairing between the homespaces. And it's going to be non-degenerate in this argument, but it has a kernel in the other one. And you kill this, and that's your state space. And then since And then, since you now have the pairing, it's very easy to at least define what it does to borders. That's just defined by this pairing. So, this linear map is defined by its matrix elements, and the matrix elements are enclosed invariants. Good. So, summary. So, we have done three things which we did while making our input finite ribbon category more and more special. We had this invariant. We had this invariant of bichrome, this functor for bichrome ribbon graphs into the ribbon category C. There we were working with unimodular categories. Then we made this into a three-manifold invariant. We need a twist non-degeneracy. And finally, we made this into a TQFT. Then we needed modular and a specific choice for the projective ideal. Okay, and that's what I wanted to say. Thank you very much. Very much. Okay, thank you very much. And we have time for further questions to the first part of this double talk. If there are no immediate questions, Ingo, could you very briefly comment in which way you were using modular? Right. So in this So, in the TFT construction, so the difficult thing to show in this construction is that your functor comes out monoidal, because that in the universal construction you don't expect. So, you need something. So at some point, you need to show that a certain thing factorizes in factorizes into a product of two things. product of two things and and so this uses a cutting lemma so this uses that if you have um if you have a picture which looks like this and you have a surgery uh link around it that this is basically this factors through some sum uh with only the the tensor unit passing so at some point in the computation when you check monoidality you need a property like this um and and this holds And this holds if you're a modular. So again. Sorry, there's another question by Christian. So my question is about the case, the very nice example of free fermions. If we connect to with the previous lecture, Michael, one question is: do you know Question: Is Do you know the full homology of the op algebra in this case? Right, so this is a no is the quick answer, but I can still flip back to the example. So, so no, maybe Azad knows he might have started to compute this, but I have not tried to compute this. Azad, do you know? Yeah, I mean, like it's a Hochschild homology of the Grassmann algebra, because the associative algebra, this quasi-Hoch algebra. Also algebra, this quasi-Hoc algebra is just direct sum of Grassmann algebra and Clifford algebra. And Clifford algebra does not contribute, so just matrix algebra. So we just have a Haussian homology of Grassmann algebra with student variables. That's known. And it's you have all degrees or is it finite? In which sense it's finite? No, it's infinite, right? Total homology is infinite. Yes, yes, yes. And a simpler question is: if you take the two simple, which are not which are. too simple which are not which are even which are not projective do you have a finite projective resolution or not oh infinite infinite okay it's always infinite yeah it's always infinite so it's same situation we it's like with a small quantum group yeah yeah yeah okay thank you okay then i suggest we have a one minute break to allow the change from ingo to other but before doing Ingor to Aza, but before doing this, let's thank Ingor again. Nice talk. I thought you yeah, right. Okay, good. Okay. The Quill screen? Yes, it looks looks very Okay, and do you see my cursor right also? If I point at something or not. Yes.