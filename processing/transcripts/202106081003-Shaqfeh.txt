which we've been doing for approximately the last three four years and this work was done by a bunch of great graduate students and most recently we've been doing experiments with Manu Prakash at Stanford. For those of you who don't know the field, there's quite a bit of interest, especially within the last five years, of how microorganisms swim in elastic fluids versus In elastic fluids versus how they swim in Newtonian fluids, and are there qualitative differences? And have organisms developed ways of swimming in elastic fluids vis-Ã -vis Newtonian fluids? Primarily because there are organisms which live in elastic fluids in mucus on a regular basis. I'm going to give you some highlights of these five papers, emphasizing the last two or three papers, particularly the effect of swirl and what we found in terms of Swirl and what we found in terms of micro swimmers that swirl in elastic fluids. I have now been talking a lot about our numerical method for a long time. We use a so-called immersed boundary method where there are no real particles. There are Lagrangian grids which are particles. The idea is you solve the fluid mechanics equations in the entire region and then the particle regions essentially. The particle regions essentially institute so-called constraint forces back on the Eulerian grid. And those constraint forces then make the particle behave like a particle. That is to say, make the stress relationship in the particle different from that of the fluid. Today, the fluid is going to be a polymeric fluid with this partition coefficient beta, which Arizu did a good job of introducing. Of introducing and sigma ijp is going to be the Giesicus fluid or the oldroid B fluid. So the idea is you solve the full equations, the fuel-fluid equations. The particle regions are originally filled with fluid with equal density. You then apply constraint forces, and those are additional forces to impose the internal stress relation for the particle. And you can do this, if you're clever, you can do this for rigid particles where the constrained forces. Particles where the constrained forces impose rigid body rotation, or flexible particles where you solve separately for the stress inside the particle, let's say for a neo-hookie and solid, and then you calculate those constraint forces. So we do both, actually, of those. In fact, we do membranes as well. As I mentioned today, for simplicity, the fluid is going to be the Giesicus fluid. I think we all know that now. It's a model for It's a model for polymer solutions with this added drag term. The added drag term gives you shear thinning and it also relieves the stress singularity and extensional flow. We actually solve multi-mode versions of this and multi-mode versions of the equivalent oldroid B with alpha equal to zero, but I'll only give you single mode calculations today. And this is just an example. This is a so-called Boger fluid, Boger fluid type 1. Boger fluid type 1, if you will. This is a dies fluid, for example, and you can use the parameters of the Giesagus model to fit essentially the nonlinear shear rheology of such fluids essentially exactly. The parameters you get out of that are different from those to fit linear viscoelasticity, but I won't deal with that right now. All right, so for rigid particles, what you do is you solve in the Eulerian grid with a current estimate of grid with a current estimate of the rigidity force you project force you project it back onto the Eulerian domain and then you correct the velocity in the domain and you do it again and again until you get convergence and then you move the particles that's what you do for rigid particles for flexible particles you need to solve for the so-called constraint Solve for these so-called constraint forces by solving the difference of the divergence of the stress in the solid minus the divergence of the fluid and again interpolate. We actually use a finite element code in this case to solve for the stress inside the particle and then do the same thing. So the great thing about immersed boundary is you can take your favorite solid solver and plug it in if your code is robust enough. We have a fully We have a fully 3D, unstructured, finite volume, massively parallel flow solver. So that's good. So we can do complex geometries. And for example, we've done suspensions, so with moving particles using this code. The polymer is six-coupled for a single mode. It's six-coupled scalars. We use the log confirmation for those of you who know what that is to maintain stability and positive definiteness. For rigid particles, For rigid particles, we impose zero stretch inside the rigid particle regions. That's the exact solution for rigid body rotation to prevent any unphysical stretching inside the particles. We do nothing in a flexible solid code and it works fine. There are, as we all know, I believe, stress boundary layers or sorry, regions of high polymer stress near the boundaries. You want to be a little bit careful. You want to be a little bit careful. If you want to calculate gradients near the particle surface, you better use points that aren't inside the particle. So we have to calculate gradients near the particle surface, we use only particles that are outside the particle, and that's an extra complication. Also, if you're going to do this kind of thing, you better have a good body-fitted code. We do. So when we do single particles, we have a body-fitted code, and that allows us to that test. That allows us to tell us for the IB code, the immersed boundary code, what kind of resolution we need to get good stress contours. So, for example, this is shear flow past a cylinder, top wall moving left to right, bottom wall moving right to left, and this is the trace of the confirmation tensor for a particular Gieskus fluid. And you see that we get a very good agreement between the two. And so I'm going to flip back and forth between IB calculations. And forth between IB calculations and body-fitted calculations because essentially we get the same thing if it's a single particle. All right, one last little hiccup is if you're going to do swimmers, you've got active forces. That is a forces that are exerted by the swimmer on the fluid. And there's at least two ways to simulate that. If you have a movie of how the swimmer goes, you can basically. Goes, you can basically impose forces that essentially reproduce the gait exactly. And the way we do that is we change the reference state of our solid swimmer, our flexible swimmer. So we essentially make the swimmer snap into the movies at every time step. If you don't have a movie, then you make up these forces. So you imagine what the swimmer is doing or what you know what its muscles are doing in order to create a motion. And so we do actually both. Emotion. And so we do actually both of these things, and I'll show you examples of both of those things. Okay, so here's two examples. Each are examples of the different ways of specifying the swimming motion. The top one is sea elegance. In this case, we have this movie, so we make the swimming. This is actually a neo-hookie and solid snap exactly to that gate. And that's how we calculate the active forces. And then we can see. Forces, and then we can see how this swims in an elastic fluid. The bottom one is an amoeba. This is actually a flexible fluid sac. Here we impose certain harmonic forces on the surface to create this amoeboid motion. We did this because it was already done in a Newtonian fluid by these researchers in 2016, and then we switched on the elasticity to find out what happened. Now, the bottom line, and Now, the bottom line is that in both of these cases, elasticity retards the motion. So, the top I'm showing you the amoeba, the bottom, I'm showing you the C-elegance, I'm showing you the normalized swim speed, U divided by U Newtonian, and Newtonian with the essentially at Deborah number equal to zero, so the exact same total viscosity. And for different values of this partition coefficient, the amoeba always swims slower. Amoeba always swims slower as you increase Deborah number. And the Debra number here is based on the center of mass motion. So it's center of mass motion divided by characteristic length times the relaxation time. And basically the reason for that is because as the amoeba swims, it stretches polymers and then it swims through the stretch. So it can't get out of the way. It creates tensions and it becomes difficult to swim through that stretched polymer. The C. elegant. Follow. The C. elegans does a little bit better. As you imagine, it wobbles, so it moves out of the way of most of its stretch, but it can't move out of the way, it turns out, of its head and its tail. So it creates stretch around its head and its tail. The tail actually helps. It gives it a little bit of a push, but the head hinders, and the net result is that it's again retarded. And this is the data, the blue squares over here by Shen and Polaradia. And Polaradia. And even though they didn't measure their beta, we conclude that we're right in the ballpark of their experiments with C. elegans. So we were happy with this. We essentially reproduced retardation. We have a physical mechanism for retardation, etc. So we actually moved on. Now, Becca Tomasis will tell you that there are some gates that go faster, and I believe there probably are, but we Are. But we moved on from this because there's another set of experiments that perhaps is more interesting of E. coli. This is in 2015, where E. coli actually swim faster in a polymer solution. Now, for those of you who don't know anything about E. coli, E. coli swims by swirling its tail, which are flagella, and then because of no torque, the head actually spins in the opposite direction more slowly. Spins in the opposite direction more slowly. And the hypothesis that Pattison et al. came up with was that the elasticity around the tail squeezes in the flagella and therefore E. coli swims in a straight line better. So therefore these results are a result of the E. coli swimming more in a straight line rather than wobbling. And that could be true. However, we were interested in perhaps a Interested in perhaps a different mechanism of speed enhancement. And if you look in the literature, there's a couple of already clues to methods of speed enhancement in elastic fluids that have nothing to do with the flagella being squeezed. For example, all the way back to Kenny Breuer, he spun a helix in an elastic fluid and found that the propulsion velocity of that helix was actually higher in an elastic fluid. Actually, higher in an elastic fluid than it was in a Newtonian fluid. We did some work with Roberto Zenit, where we spun magnetically a sphere and allowed it to sediment and found that it sediment faster when you spun it. And the mechanism for this last effect was pretty simple. You create hoop stresses around the sphere. Those are convected to the back of the sphere. They squeeze in and create a higher pressure. And so the pressure acts. Higher pressure, and so the pressure acts as a little bit of a propulsion. And so that's what created the extra propulsion. So there's already indications that swirl can do things. So we started to look at the, if you will, the simplest freely suspended swimmer, which is the squirmer. For those of you who don't know what a squirmer is, a squirmer is a sphere where on the surface you impose a particular velocity condition. It's as if all the It's as if all the cilia on the surface were moving, doing the breaststroke. If it's a neutral breaststroke, that is, it's the same stroke all the way, it's called a neutral swimmer. And in the reference frame moving with the swimmer, the streamlines look like this. So it's going from left to right. If it pushes, if it pulls in the front harder, then it's a puller. And if it pushes in the back harder, then it's a pusher. But nevertheless, it's doing the breaststroke. Doing the breaststroke. So we decided to do elastic calculations of these squirmers with the one caveat that we added swirl. So you can add swirl modes here, and we add the so-called second swirl mode as a model for the E. coli. So the second swirl mode has the head or the front of this squirmer spinning in one direction and the tail spinning in the other direction. And the swirl is now characterized relative. Is now characterized relative to the center of mass motion by this parameter zeta. All right, so we did numerical solutions with our codes on this swirling squirmer and found the following case. So this is the normalized swim speed again for this swirler. And for low values of swirl, indeed, you get a slowdown. That is the swirl parameter up to one. The swirl parameter zero is actually done by Luca Brand. zero was actually done by Luca Brandt, and so this agrees with their results. But if you go down to high swirl, sigma zeta equal to three to five, then indeed you get a speed up. And this is remarkable. It's another indication that swirl can speed you up. And if you calculate what the swirl parameter is for E. coli, you get about 4.2. So this made us happy because, and it didn't matter whether it was a pusher or puller, it always spanned. Or polar, it always sped up if you had enough swirl. Great. Now, in reality, these bodies, these microorganisms, E. coli, actually operate in the low Weisenberg number regime rather than the Weisenberg numbers up to five, which is what we originally did. So we focused on the low Weisenberg number regime. And this turns out from a numerical point of view to be kind of an awful problem. Why? The example I gave that is doing the Example: I gave that is doing the breaststroke. If you might imagine the north pole is now what biaxial extension, uniaxial compression, and the tail is uniaxial extension, biaxial compression. So therefore, this is a, if you will, a classic case of the high-Weisenberg number problem here. You've got extensional flow that you impose by the boundary condition. So it turns out that the Oldroid B equation breaks down. B equation breaks down at a finite value of Weisenberg number, but we worked through all this and did the numerics and did the extended perturbation theory. And sure enough, for low values of Weisenberg number characteristic of these animals, these microorganisms, indeed, you get enhanced propulsion for either the older B or the Giesagus parameter. And the mechanism is as follows. If I look over on the right-hand side here, Look over on the right-hand side here. Essentially, what happens is again for significant swirl, the pressure acts as a great propulsor. So, if you compare swirl to no swirl, the pressure propulsion is a factor of five larger. So, we're again getting pressure propulsion due to swirl. And if I look at pressure contours, the left is a no swirl, the right is swirl, you get this high swirl. You get this high swirl in the back, driven by hoop stresses that essentially creates propulsion of these microorganisms. All right, so that brings up even a more interesting question. Can a swimming motion propel a swimmer in an elastic fluid without propulsion in a Newtonian fluid? So, can normal stresses just propel a freely suspended swimmer? Now, there's indications that that's true if you look at a nature. True. If you look at a nature communications paper that appeared this year, these guys took a sphere, magnetically spun it, and at some swim speed, the sphere took off. It took off either left or right. So there's a bifurcation. They couldn't tell whether it was going left or right, but indeed it went left or right. And they had propulsion in an elastic flute. Back in 2012 and more recently in 2019, PAC, Ocean Pack. Pak, O'Shan Pak, and his co-workers did this thing called the snowman. The snowman is two spheres, and you rotate these two spheres again magnetically, and you find out that this in an elastic fluid will propel. It'll propel from the big sphere to the small sphere. So none of these are freely suspended, right? All of these have an imposed torque on them, but nevertheless, they suggest that squirrel could propel you if you're clever enough to figure out. If you're clever enough to figure out, so what did we do? We did the following swimmer that was now torque-free, and this is a model, if you will, for E. coli. We have a sphere that's rotating in one direction, that's the tail, and a sphere that's rotating in the opposite direction to satisfy no torque. And then we have a magic connection here between the two that has some separation. And we did the numerical calculations on this and to try to find out whether this could indeed. To try to find out whether this could indeed propel in an elastic fluid. And I wouldn't be talking about it if it isn't. It does. It propels. It actually propels in the direction of the larger sphere or the head, the exact opposite of what the snowman did. Why does it do that? Well, the tail now spins faster, creates hoop stresses, that pulls fluid in and creates a pressure, a high pressure in the back, and that creates. In the back, and that creates a push, and it basically pushes the thing along. And this thing will not propel in a Newtonian fluid, actually, from symmetry at zero Reynolds number. So there's no propulsion of this object. Now, the reason this is a little bit of a bare of a calculation is there's a pressure singularity in here between the two spheres. So you got to be a little careful to resolve that. So you can do it for thin gap, and then you can. It for thin gap, and then you can do the limit as the gap approaches zero. But it turns out the propulsion speed is not singular, the propulsion is actually an order one quantity. So we work through all that. And this is just indication what I said in words, that pressure force is actually dominating over the viscous and elastic forces, and that's what's creating the propulsion. All right, we did a ridiculously simple far-field theory that turns out to work well. out to work well. That's the dashed lines as a function now of Debra number. Debra number being the relaxation time times the rotation speed of the tail. And the far-field low Debra number theory works well up to Debra number somewhere in the neighborhood between one and two, depending on this partition coefficient. And of course, you get larger propulsions for smaller betas or higher polymer concentration. It takes about one or two. It takes about one or two revolutions of the tail to reach a steady state, according to our numerical calculations. The tail, the maximum propulsion you get is at 0.75 tail. At one from symmetry, you get no propulsion, and the propulsion grows as the tail grows. And so this is a non-monotonic speed curve. And again, the dashed line is this ridiculously simple theory, which does a Ridiculously simple theory, which does a qualitative job. The theory works best at large separation speeds, distances, as you'd expect, because it's a far-field theory. All right, now the final thing. We built the darn thing. This is, we call this Proteus 1. For those of you who are old timers, Proteus was the name of the robot in the Fantastic Voyage. So here's our robot. This is a Robot. This is a big head and a small tail. There's a motor in the head, and the head imposes a fixed relative rotation speed of the tail. That tail has a radius ratio of 0.43, and here it is in water. And as I promised you, it's really boring in water. You can sit there and watch it, and it's going nowhere in water. However, here it is in a Boger fluid. In a Boger fluid at 7,000 times as viscous as water. This has a longest relaxation time of 2.77 seconds and a mean relaxation times of 1.4. We actually did the multi-mode calculation, and it turns out it's the viscous mean time that matters. And there you see it propelling itself in an elastic fluid. Eric, sorry, apologize. Can you perhaps? Eric, sorry, apologies. Can you perhaps maybe summarize, not to summarize? I'm done. We have taken speed measurements. They are in the right ballpark, but we've only done this in an eyeball situation right now. So we're working hard to do image analysis to see whether we're getting the right propulsion speeds. I'm finished. We have developed this powerful code. We've used the code to understand. We've used the code to understand the speed reduction of undulatory and amoeboid microorganisms. Then we turned to swirl. We found that squirmers, you can get enhanced speed with swirl. But even more to the point, we found a class of swimming motions where you get propulsions only in elastic fluids essentially by swirling the tail. Thank you very much. I'd be happy to answer any questions. Okay, thank you very much. Okay, thank you very much, Eric, for the very nice presentation. We have perhaps time for. Okay, let's see. The first question is from Mike Graham. Maybe you want to formulate your question, Mike? Sure. Very cool talk, Eric. I just had one question about the squirmer model with the swirl on the two halves of the sphere. Just because the fluid's not Newtonian anymore, it's not obvious that that thing. It's not obvious that that thing will exert zero net torque. Yeah. So do you make sure that it does? Yes. By allowing it to rotate, for example? We do. So we calculate the quote-unquote net rotation of the object such that there's no torque. Okay. We have... That's right. Yeah, you're absolutely right. In a viscous fluid, you know it. In this, you don't. And so we have to impose no torque. And so we have to impose no torque. Cool, thank you. Okay, so Minua, I have a very, very quick question from Sujit Data. Maybe, Sujit, you want to ask him and then we will move to the next. Sure, thank you. Eric, that was super, super cool. I also just want to say those Proteus results were just really mind-blowing, and I love the name. Just a quick question. Is there a simple Question: Is there a simple, you know, order of magnitude way of estimating the magnitude of this pressure thrust for a giver swimmer in a given fluid? You know, if I want to kind of estimate how strong this effect will be, is there a simple way that I can do that from B or something? It's basically area. You know, let's see, velocity. How can I do this? So the velocity is simple. The velocity is simple. The velocity is simple. The velocity is simply the rotation speed of the tail times the radius of the head times the Devernum. And all of that is pressure propulsion. So if you essentially take the resistivity and say there's a delta P across the swimmer of that size, then you can basically take that, find the force from that. Right, but how do you get the delta P? Okay, maybe. Sorry for interrupting. Okay, maybe sorry for interrupting, but we are a little bit running out of time, so perhaps this is a good discussion during the next break. I think we are, I'm afraid we have to move on. Thank you again, Eric, for the nice presentation.