Thank you, Tina. First, I'd like to say that it's a really great pleasure to be here. Transport is a wonderful and beautiful place. I'm thinking about this yesterday, and the mountainous landscape is famous because it's part of the whole debate between the beautiful and the sublime. And I would like to say that doing mathematics here in the Rocky Mountains is really Here in the Rocky Mountains is really both beautiful. We've had many beautiful, beautiful talks, but also sublime in the sense of like awe-inspiring and like a little bit scary, but kind of actually kind of safe on the inside. So I'd like to say this has been a beautiful and sublime conference. And I think we should all thank the organizers for putting this together for us. You mean just Tina, right? I assume they're all watching live streaming, right? Yes. All right. So, as Tina said, I'm going to talk about Siegel and Waldhausen K-theory. And in particular, I'm going to give a multiplicative comparison of siegel and 12000 key theory. And I'd like to say that today's work that I'm discussing is joint with Helico Sorno. And if you want to read all of the nitty-gritty technical details, it's online at MathZ. All right, so another reason that I should really thank the organizers is because they conveniently scheduled Mona before me, and Mona gave a nice preview. And Mona gave a nice preview of what I'm going to tell you and one reason, one motivation for why you might care. But that was a bit ago, so I'm going to assume you don't remember Mona's statement of the theorem that I'm going to talk about today. And I'll state it myself. So, here we go. So, the main theorem I want to discuss is the following. So, there is a multi-natural transformation. Is a multi-natural transformation of multi-monitors just go all in between multi-categories. That fits into the following diagram. that fits into the following diagram. So here I have Volhausen categories, symmetric monoidal categories. So Vaulhausen categories and symmetric monoidal categories are two types of things you can take the K-theory of. And when you take their K-theory, you get spectra. Here's the thing that looks at the bottom of the diagram. And the claim is you can take K-theory and K-theory. There's a comparison functor here. There's a comparison functor here, and that is a natural transformation filling in this diagram that way. And of course, you don't have a really dumb natural transformation here. So to tell you that this is not a trivial transformation, everything to the point, for example, I should say that this extends Waldhausen's original comparison. Vauldhausen's K-theory, the S-DOC construction with Siegel's K-theory. So, Anne-Marie does. So Anne-Marie, does that mean that the K on the right is a left common extension of the K on the left? No. The K's are in time are, this one is basically the S dot construction, this one is basically Siegel's K-theory, and there's just a natural transformers. Right? Well, is there a left con extension? I mean, there's frequently left con extensions, but Frequently, left con extensions, but I don't know if there's any left con extensions in this diagram. Yeah. So, what I want to do today is: so, here's the theorem statement. I want to give you some of an idea about how to think about this statement in this kind of construction, this kind of comparison. And then I'm going to flush this theorem out a little bit more and give you a little bit of the idea of the proof here. Okay? So that's the plan. All right, so to Alright, so to begin with, I want to take a step back and think about what is K-theory and what are we doing in this picture? Why is this picture an interesting picture? So I'll start with one potential philosophy of K-theory. There are many approaches to K-theory, and this is sort of one way to think about it. But one way I'd like to think about it for today is that Is that what does K-theory do? It takes like categorical, aka algebraic data, and its job is to construct a spectrum. So we'll think of K-theory as a thing that eats category stuff, and it turns into spectral stuff. That's its role in life. I have in my notes here that I'm supposed to make an ironic comment. That I'm supposed to make an ironic comment because the last thing you, the last part of my work that you heard about in this forum, was when Clover was telling you about how great it is to turn spectra into algebra. And here I'm talking about how great it is to turn algebra into spectra. But I'd like to say it's all good. Everything is great. Yeah? Okay. And so, you know, as homotopy theorists, we enjoy having spectra most of the time. And I'm being pretty hand-wavy here. I'm just saying, like, oh, there's this K-theory is just a thing, and I'm really unspecific about what kind of categorical data I want. You know, maybe really significantly here, I should say, that these are like infinite loop spaces. But I'm kind of okay with the fact that I'm being very hand-wavy here because of things like the May-Thomason theorem. And the Nick-Harrison theorem, I want to say that what it tells me is that it doesn't really matter how I take K-theory, I always get the same spectrum, more or less. So let's make something, not the most precise statement, but a more precise statement than that, which is that any two infinite loop space machines construct the same thing. Construct equivalent spectra from equivalent cards or that up. So that's telling me that if I take my favorite infinite hook space machine, and I want to call that Infinite hook space machine, and I want to call that k, then any time I feed in like my favorite categorical data, like say the category of finite sets, right? That's a really nice category, and we really like to feed that to K-theory because it spits out the sphere spectrum. And the point is that it spits out the sphere spectrum no matter how I want to take my k-theory. No matter whether I take Siegel's construction or Volhausen's construction or if I, you know, take my favorite E-infinity operator, any sorts of things I can do. So, right, so. Can do. So, right, so example, the k-theory of finite sets. I said, always equal to the sphere spectrum, no matter what you mean by k-theory. So, with this theorem and other theorems, including Waldhausen's original comparison of the S-dot construction and Siegel's K-theory, I want to think of all of these as an additive comparison in the following sense. So we should think that what is, you know, what is the job of a spectrum? Well, in some sense, the job of a spectrum is to be a really highly coherent form of homotopy commutative operation. So a spectrum is, when I think about it, is some sort of like very, very, very wiggly Abelian group. What I want to think. So the May-Thomason theorem, related work. The May-Thomason theorem, related work, this says that K-theory is additively unique. So if we're comparing, we have the same spectrum, and we have the same sort of highly coherent form of commutative multiplication or commutative operation. So a spectrum is highly It's a highly coherent form of homotopy commutative operation. I put it in codes. The is is the wrong word here. And so if we have equivalent spectra, that's telling us that this underlying sort of Telling us that this underlying sort of homotopy commutative operation is the same. That's what that's up to high levels of homotopy coherence, right? So we think of this as like a wiggly ability group, and the same spectrum means the same thing. Community of operation here. And I want to think about that as like. And I want to think about that as like the addition. So if you're saying that you get the same spectrum out of two constructions, you're saying that effectively your addition is more or less the same. So it's an additive comparison. And of course, we don't like just spectra with their addition. We really are often quite fond of ring spectra. And so we want to be able to say, like, not just that we have a comparison of sort of this additive structure, but also that we want to. Additive structure, but also that we want to encode multiplicative comparisons and be able to say, like, if I have ring spectra that I've built out of categorical data in two different ways, say, I want to say that they're really giving me the same ring structure. Okay? And the point is that by, in our theorem, by making a comparison not just of K-theory functors, but of K-theory multifunctors. Functions, but of k-theory multifunctors, we get such a multiplicative comparison. Okay, so and this kind of multiplicative comparison is not at all part of the May Thomason theorem. This is it does not work that way. It does not work that way. And Baldhausen's original comparison, it also does not deal with this kind of multiplicative structure. So I want to say a little bit more about multifunctors and why you should think that some sort of multiplicative comparison is happening in the diagram that I've erased. So essentially, what does our comparison c? Let's do it to write it this way. Let's do it, let's write it this way. So, our comparison C is something like the following structure. So, if you have a pairing of categories in some sense, and I'll be more specific about what pairings look like in the cases that we're interested in, in the case of symmetric monoidal categories and in the case of Waldhausen categories. I'll make that more specific in a minute or two. Make that more specific in a minute or two. So, but I want to think of pairing of categories, like in general, what it should be is some sort of functor with properties, some that I will have to specify, from like C1 cross C2 to C3. So when I think about this as some sort of like bilinear thing that's telling me like if I have two things, I'm just another thing here. So our comparison, like multifunction, the fact that we're making a comparison of multi-component. That we're making a comparison of multifunctors, well, multifunctoriality will tell me that if this is a pairing of categories, I get an associated pairing of spectra. So let me know this right here. So K-theory will take this to a pairing of spectra, K1 smash K2, KC1 smash KC2 to KC3. So multifunctoriality tells us that Tells us that pairings of categories will go to maps of spectra of this form. So, this is the multifunctoriality of the K-theory functor. So if k is a multi-c is a multi-functor, then it takes pairings to pairings, instead of just taking like maps from one thing to another, to maps from one thing to another. And so for example, if all of these categories are the same, then a pairing of categories, like, you know, maybe we'll just call them all C here. So then Here. So then we have a map from C cross C to C. This is going to give us a map on K-theory spectra from K smash K of C smash K of C to K of C. And this could be like the multiplication of a ring spectrum. So a multifunctor, having a multifunctor version of K theory. Having a multifuncture version of k-theory tells me that if I have a pairing of categories, I'm entitled to get something that looks like a multiplication on the resulting spectrum. So that's one thing. So then this tells us that we can use multifunctoriality to build ring spectra. And you can build like strictly commutative ring spectra this way, but you can also build things like E infinity ring spectra. You don't have to have like on-the-nose commutativity or on-the-nose things here, but you do if you get them if you want. There's another thing you can do, though. So another way in which you can get this kind of pairing structure. This kind of pairing structure is that this also turns out to be the kind of structure you have on the HOM categories of categorically enriched categories. So I've just said the word category many, many times. So let's make it more precise. So pairings here, boostly, you should think of them. These are also the structure One gets on the hom categories of categorically enriched categories. Where here I mean like, maybe I'm going to mean something like symmetric when Maybe I'm going to mean something like symmetric monoidal categorically enriched, or like Volthhausen categorically enriched secretly rather than just generic. So some kind of. So let's be really explicit, right? So if I have, I'm supposed to have some categorically enriched category thing, and that's supposed to tell me that I have a composition map from C of mass from B to C cross C of mass from A to B to C of maps. To C of maps from A to Z called composition, right? And so, certainly, if C is a category enriched in categories, I have to have a functor like this. And for a correct encoding of something like a category enriched in symmetric remote categories, I'm going to want this functor to satisfy additional properties. It should play nice with the symmetric remote structure here and here and here. And what that will mean is really that it's going to be a parent. And so what this will do, right, so then this guy, K theory will take this to maps like K C, so the K C O A B. So from this mesh product to this, so from this spectrum, to match this spectrum, to this spectrum, and I realize should continue. This metrum, and I really should continue to call this like composition, and this will be the appropriate kind of structure to get a spectrally enriched category. If I have a category enriched in spectra, then I'm supposed to have a mapping spectrum here, and a mapping spectrum here, and a composition map that takes them to a mapping spectrum here. So this will let us build spectrally enriched categories. So the point is that if your k-theory functor is nice enough, if it's in particular a multi-functor, then you can use it to build these nice kinds of spectral objects out of it. So you can build ring spectra, or you can build spectrally enriched categories just by sort of finding that kind of structure you need at the level of categories and then whacking. And then whacking it with K-theory, and then you have the same structure you're looking for in this world of spectra. So, for example, this is precisely the thing that Mona was talking about on Monday, Tuesday, in which she was really interested in building a specially enriched version of the Bernstein ring, or the Bernstein category, sorry, out of Waldhausen categorical data or out of symmetric Moreover categorical data. So she wanted to say, I want something that looks like the Bernstein category. Want something that looks like the Burnside category, but it has mapping spectra, and how am I going to do that? Well, I'm going to do this at the category level, and then I'm going to apply K-theory. So, this is precisely the application that came up in Monath's talk. Right? So, essentially, what's a multicategory? A multicategory is the kind of structure that lets us encode things like these pairings. Things like these pairings, and in general, it lets us encode what we might mean by like multi-to-one max. So, a multi-category, I'm not really going to define it. So, this is gonna allow us to encode. This is a good framework for this multi to one maps, such as these parents. A multifunctor preserves these guys. And then a multinatural transformation. I mean, maybe like we should really just call it natural transformation of multifunctors. So this compares these multi-tool one maps. Basically, right, so I can think of a map like this, or a map like this, as being a 2 to 1 map. And my multifunctor will take a 2 to 1 map in category to a 2 to 1 map in spectrum. And so our theorem, like let's just look over here at the inverse category structure and like spell out what the having a multinational transformation by does. Multinatural transformation binds us. So, our theorem, this implies that a pairing of both has some categories. So let's say of the form, ah, well C1 plus C2 plus C3. So this yields. So this yields maps like this. So from say Waldhausen K-theory of, oh sorry, Siegel K-theory of C1, let's match the Siegel K-theory of C2 to the Siegel K-theory of C3. And then there's a map that's like eta slash eta, more or less, to the Volkhausen K3. So these are the components of our natural, multinational transformation, and that this diagram commutes, and so this means that if you try to like multiply here in the spectra that you got out of Siegel's K-theory, and then you go and change yourself over to Volhausen K-theory, it's the same as. Waldhausen K3, it's the same as making your comprehension in Waldhausen K3 and then multiplying there. That's giving you a multiplicative comparison. And of course, maybe a case that you would especially care about is when these maps are all equivalences, and then you're saying, like, really, it's the same multiplication. So this is especially nice when eta is an equivalence. And then you're really getting exactly the same multiplicative structure. So that's supposed to give you some sort of idea about what that initial triangle with the multinatural transformation is trying to tell you about. Any questions? So does this researcher say anything about like covirancy of the output as like if you computer first control? I don't think so. Other questions? So I'd like to sort of spell out how this theorem works a little more. How this theorem works a little more specifically and name names and give lots of attribution to the people who deserve lots and lots of credit for building many of the structures that go into making this theory go. Before that, I should say that there are a couple comparison points I'd like to mention of other Other exciting, maybe sublime, work on giving multiplicative comparisons of K3 printers. So work of, let's see, Barwick, Lumberg, and their catwater. Getner, Kross, Nieglaus. So all of these people have done really interesting work that's giving various kinds of uniqueness or multiplicative comparisons of infinite loop machines, infinite loop space machines. So done work giving giving comparisons of multiplicative infinite loose space machines in different contexts. All of this work is in various flavors of infinity categorical contexts. And then there are several types of infinity categorical contexts. So our result is not quite the same as either any of their results. One thing to say is that this is, it's not an infinity categorical result. And if you have like on-the-nose data in your category land, you get on-the-nose data in your spectral land. So it's possible to get on-the-nose constructions. And maybe that's sort of the same thing. And maybe that's sort of less likely to have things quite so strictly in the world of like ring structures on spectra. But in the world of enriched categories, that's not an unreasonable thing to ask for in some contexts. So you could get strictly enriched, things that are strictly enriched in spectral. So that's one point. And another thing to say is that we're really working with the classical constructions in their The classical constructions in their more or less their classical definition. So we compare our classical constructions. And so if you, you know, actually have your favorite Vauldhausen category and it's just a Vauldhausen category and not a stable infinity Vauldhausen category that's ideem bone complete or something like that. It really lives here. You can really convince it. Here, you can really get this to it. Okay? And we start with the original definition of Waldhausen categories. So sometimes that's also kind of fun. And in particular, our main motivation for making this kind of comparison was understanding precisely the case that Mona brought up on Monday, is that we were really interested in understanding spectral Bernstein categories. So, location. So location reminds you that this is the beautiful work that Mona talked about on Monday, comparing spectral Griffine categories constructed from symmetric minor categories or constructed from Vaulthauser categories. Or constructed from Valhauser categories. So that was the main motivation, and you can't quite get that comparison from any of these other things. Okay. So I'm going to go back to the name diagram in our theorem. And let me tell you what the names of all of the few players are. You, what the names of all of the players appearing in this diagram actually are. But I have to say, they're better than the erasers that we have at Vanderbilt, which are like foam and the chalk just a little bit. Which are like foam and the chalk just sort of like sits on the outside and you just smear it around your chalkboard for months because who can remember to tell people that you would like your chalkboard washed? And then you forget to tell them you want to wash it. Maybe no one else has this problem. All right, so back to this diagram. So what's our diagram? So we have all thousand categories. Categories, symmetric monoidal categories. Secretly notice I'm decorating. I'm going to tell you about those decorations in a second. Spectra. Okay, so let me tell you about my decorations. So let's start over here. This is the friendliest. So symmetric monoidal categories, star. This is really the category of strictly unidal. We have strictly unital symmetric monoidal categories. So of course if you have a symmetric monoidal category, you're allowed to like rigidify it to get what's called a permutative category, where the unit and the associativity are strict, but the symmetry may not be. So we want to just rectify, just to have a strict unit, and we don't care whether the associativity is strict. And we don't care whether the associativity is strict or not. And you should think, it might feel like kind of a weird world to live in where I've like strictified some, but not everything. But you should think about this as like a base point condition. The unit is going to act ultimately as a base point when we move over into topology land. And so we're just asking, this kind of condition that you have a strict unit is really just asking for some sort of based symmetric monoidal category. And as a topologist, I'm happy about based things. So don't feel too bad about that. So, this is supposed to be a diagram of multi-functors and multi-categories. So, this category, the symmetric number of categories, well, Elendorf and Mandel prove that permutative categories, so strict unit and strict associativity, give us a multi-category. And you just are a little bit stubborn and decide you're going to keep track of the associativities, and you just write down exactly what they did. Write down exactly what they did, and you see that you also get a multi-category of strictly unital symmetric categories. So, essentially, the work of Helmandorf Mandel shows this is a multi-category and what are the like multi-category? What are the like multi-to-one maps here? So a multi-to-one map, we'll just talk about the two-to-one maps, and then the more to one maps are like a fairly transported extension of this. So multi-more-to-one maps, the form like C1 across C2 to C3. So it's a functor F. So these are what are called bilinear functors. Functors. Right? And to get more, you replace by with your favorite Greek prefix. Right? So what does this mean? This means that it has to be, f has to be lax monoidal in each variable. I think I actually want symmetric monoidal. So what does that mean? Like, so being lactenoidal in this first variable, C1, that tells me that if I take, like, f of C1, C2, and then I add, that's the thing that lives in C3, and I add it in C3 to like F of C1 prime, C2. The C2s are the same, the C1s are not here. Tells me that there's a map. up here tells me that there's a map to f of c1 plus c1 prime comma c2, where this is adding in c1. Right, so this says I can, if one of my variables is constant, I can add in the other variable either before or after, I have a comparison map. And then the other thing that has to happen in order to be a bilinear functor is that I have to have a distributivity that tells me how to like Have a distributivity that tells me how to compare if I'm going to add angles. So I also need distributivity natural isomorphism. So why do you use the direct sum expression? That's just my note. This is my notation for arbitrary symmetric monodal products. Yeah. You could make your macro and then change it later. Macro and then change it later. Yeah. So, I mean, in some sense, one reason that I think about this as direct sum is because, as I was saying, I want to think about like the symmetric monitor structure that I have on my category. That's ultimately what's giving me my homotopy-commutative addition-y thing on my spectrum. So, I want to think of that this is like a shadow of some sort of additive structure. That's what my symmetric modal structure. That's what my symmetric nodal structure here does. It's because the reason a symmetric noidal category is supposed to give me a spectrum is because effectively my symmetric nodal product tells me how to add stuff up up to like lots of higher appearances. And so I think of that as like the additive structure. So like F might be tensor product, if like everybody was, you know, vector spaces or something. C1, C2, and C3 were all vector spaces. I could take tensor product. Okay? All right, and then this functor, which I'll, for the moment I'll call KEM, this is Elmendorf Mandel's refinement of Of COK theory to a multifunctor. Plus, you just have to keep track of the additional associativities that they strictify in their construction. Okay? Right, and we know what they show. They show that you have a You have a bilinear functor like this, then your bilinear functor, when you apply your version of k theory, because it's a multifunction, this is like kf, you get this kind of map of spectrum. All right, so that's like this side of this diagram. So now I'll talk about this side of this diagram, the left side. About this side of this diagram, the left side. So, one is this Waldhausen category with little B thing. So, this is what we call Waldhausen categories with choice of veggie with choice of wedges. We had a long t hard time finding a good name for this, and we probably didn't. Infinites, and we probably didn't. So, what are these guys? Really, it's just a Valhausen category, but you have to pick a specific thing to be your concrete co-product everywhere, just for concreteness. So these are, this is a multi-category. So, this means that x copot x So, this is a multicategory where the maps, like the from C1 across C2 to C3 here, my like two-to-one map is what's called a biexact functor. And so this is the fact that this is a multi-category. This is work of Bomberg Mandel and further fleshed out by Zachary Rabich. And what does by exact mean? Well, this Well, this means that it's an exact functor in each variable. So just like I could think about my bilinear functor F as being if I just fix what's happening in the second variable, I have a laximenoidal functor of the first variable. Here, if I fix what's happening in the second variable, say I have an exact functor in the first variable. It's a sensible thing. And And additionally, I need cubicle cofibrancy conditions for many, many, many dimensions of cubes, depending on whether you're bi-exact or tri-exact or how many to one you are. There's like a whole hand. Okay. And then And then Blumring and Mattel show that you have a multifunctor version of K-theory in this context. So that's our KBM. So this is like version of, this is, this is this multifunctorial version. Version of iterated as stop construction. And some of the ideas that go into making this iterative construction, you can also find them in Geisser and Hasselholt as well. Right, so what does this give us? This tells us that we have a multi-category here and a multi-category here. Category here and a multi-category here, and we have a multi-functor here and a multi-functor here. And Spectra gets to be a multi-functor where my multi-to-one maps are just maps from the smash product of my many, many source things to my target thing. So that's the multi-categorical structure here that allows me to talk about these as multi-functors. So I have one more thing I have to talk about in this diagram, and that's this guy, which I guess I'll call lambda, this map along the top. And lambda here, this is the. Along the top. And lambda here, this isn't a particularly tricky thing. This is really just that, right, so since Fallhausen categories have zero objects, we can take push out with a zero object. I mean, I think that's really what I mean by co-products here. So this gives a symmetrical neural structure. And so that's what this map across the top here is. And then we check that this is indeed a multifunction as well. Okay. Right, and so the point is that Is that there's an eta that lives in this diagram and compares these guys, and it's a comparison that respects all of this multifunctoriality structure that I have here. And so in particular, it takes going to take like bi exact functors. They're going to come along here and go to bi-linear functors. And then if I go down here, I'm going to get like a pairing of spectra. And here I'm going to get a pairing of spectra. And I have a map of pairings. So I want to say just one word. I'm not going to define this Ada because defining all of these functors explicitly is a little fiddly. But I want to give you the idea behind Ada. And it's really, the idea is really actually already coming in this original component. Already coming in this original comparison of Waldhausen. So let's just do this. We'll attribute it here. So the idea is, what does Siegel's K-theory do? Well, if you have a symmetric monodal category, you take a bunch of, the K-theory is built on taking a bunch of objects, like C1, C2, through CN, and you remember, like, And you remember, like, you take choices of all possible ways to add these. So you remember how to add, like, what's your sum of like C1 plus C2 plus C3, but also C1 plus C5 plus C17, and maybe like C seventeen plus C three plus C twelve, I don't know. So you remember all of the all of the possible ways you can add L these things up. So it's like a lot of remembering of like what your sums are. Lot of remembering of what your sums are. You're remembering specific choices of those direct sums. And so, and if you come down to Waldhausen's as dot instructions, what do you get? So your ANA map is really going to take this to you're going to remember C1, and you're going to remember how C1 adds with C2, how C1, C2, C3 adds, and so on and so forth. Two, C3 ads, and so on and so forth. And then you're going to remember, like, you know, these one flags, right? So. So Volhausen K-theory is going to be constructed out of these giant flags. And you want to think that more or less what you've done in coming from here to here, modulo keeping track of lots of things, of course, is you've remembered all the possible ways you could add these guys. And now over here, you just have to remember, you're really mostly just remembering how you. Remember, you're really mostly just remembering how you added them across the top in this nice order. So you're forgetting, you should think of it as kind of like you're forgetting some of the data of how you wanted to sum stuff up. And that's why this functor goes this way, that's why this transformation goes this way. Because when you went along here, you remembered more data. You remembered more ways of adding than when you went just down this way. So you remember, so you're just forgetting a bunch of stuff. And voltausing shows that this is a that this map, this construction, is an equivalence of spectra as long as, you know, not all the time, but as long as you have suitably nice split co-vibrations in your Volthausen category. Your Valdhausen category. Ah, so as an equivalence of spectra whenever C where C category to start with has suitably nice split cofibrations. And our comparison extends in the sense that whenever just the Voldhausen's original comparison wasn't equivalent, our natural transformation is also unequivalent. And so for example, this is what lets um This is what lets Malkovich and Merling show that they really do get the same spectral burn side category in the Vauldhausen construction case and the symmetric model construction case. So they're not in exactly the case that Vauldhausen considered, but they show that they're in a case where this still holds. So they can really compare with the they're building they're interested in building a Voldhausen categorical version of the spectral Bernstein category and they can compare it directly to the symmetric Compare it directly to the symmetric monoidal version that was the one that Gi Yu Mei were working with originally. So, all right, in the last like, you know, nine minutes, I want to say just a little bit more about the ideas of the proof. So So in particular, I want to draw my diagram again, but different tell you how we really construct such a thing. Really what happens is that we actually factor both Hellmendorf-Mandelke theory and Bloomberg-Mandelke theory. Theory and Bloomberg-Mando K-theory, you factor them both through an auxiliary category. Maybe I'll tell you precisely what it is, or we'll see how the time goes. So I'm going to call this like the EM construction. And this one I'm really going to call the iterated S dot. And then from the auxiliary category, I can naturally get myself down to symmetric spectra in simplicial categories. So that's the same. And the point here is that all of the categories appearing in this diagram, including this auxiliary category that I haven't told you about, all of these are categorically enriched. multi-categories. And what we really construct is we construct an eta here that is a categorically enriched multi-natural transformation. So we'll say eta is a categorically enriched multi-natural transformation. And they shifted to the category of the enriched world. This is crucial because this is really what's telling you that you actually are getting the right kind of topology on like maps in here and maps in here and the right kind of topology down here. Like keeping track of the categorical enrichment is really keeping track of like where your homotopy theory is going to live. So once you get this diagram, then you can just like whack everything with nerves many, many times and go over and land in some. Many, many times and go over and land in simplicial sets. And so you're going to end up in symmetric spectra in simplicial sets. And then you're like, okay, cool, we're happy about that. But you really do want to keep track of this categorically enriched construction because that's where any kind of homotopical data is going to live. You generally don't want to just have mapping sets. That would not suffice. Okay? So what does that mean? That means that if you want to prove that this thing exists, like there's really actually a fair amount of stuff to keep track of and check. Because you have to check that this is a multi, this is a multi-natural transformation, so it preserves the multifunctoriality structure. But you have to check that at the level of objects and then again at the level of morphism categories. So let me tell you just really quickly what is this auxiliary category. What is this auxiliary category? So basically, the point of the auxiliary category is that what it's going to allow me to keep track of is many interrelated kinds of multi-superficial structures. So this will be the auxiliary category. Encodes like lots of related multi-symplicial structures its name is E star categories and it's Categories, and it's you should compare it directly if you have read all the guts of Almendorf Vandel. They have a category called G-star category, but this is really very similar. So what's E here? Here, E is the Reef product of finite central ISO, and delta op to the however many number of things. So what are the objects here? The objects here. So an object is a set of n objects in delta off for varying n. So this is tuples of objects in delta op for varying tuple n. And the morphisms are just coming from the morphisms of finite sets with isomorphisms and the morphisms here. Oh, sorry, not isomers. I want injection. I was feeling unhappy about that. Because the injection of like n into n plus 1, ultimately that is what's going to buy me something like a suspension. What's going to happen? So maybe I'll tell you one more thing about it. I'll tell you about the E-star category, and then I'll tell you why this. I'll tell you about the E star category, and then I'll tell you why this is going to set me to spectra. So, E star categories, these are just based functors from E two categories. And so, what's happening is that inside of here, right, I have like one of the things I have is all of the families of tuples where they all have this particular fixed length, like the n. Particular fixed plane, like the n, and that gives me, when I look at a functor out of this, this is going to give me an n-fold simplicial structure. And the n-fold simplicial structure I get, ultimately, that's going to be the thing, that n-fold simplicial category, is going to give me my nth level of my spectrum. So the n-fold simplicial category that's encoded in That's encoded in this map, such a map from E star category like X, this gives me level N of the resulting spectrum. So, basically, this auxiliary category, because it's very categorically built, it has a nice categorical enrichment. And what And what it's doing is it's trying, it's encoding all of the pieces of your spectra, all of the different levels, sort of in one giant gadget. So it allows you to sort of keep track of everything all at once. All right, so if you want to, so this is where our auxiliary category is. Maybe I'll just fill it in here. And so what do we do? Well, what we have. Well, what we have to do is we have to take a Voldhausen category and send it here, and we really just have to build a natural transformation here. And so, what we actually have to build is a natural transformation, or really, you know, for every Vauldhausen category, we have to build a map in E star categories. So, for each C in Vauldhausen categories, we build a map. We build a map from the Hellman-Dorf-Vandel construction on C to the iterated F-dot construction on C. This is a map in E star categories. And let me just say in words like what that data actually is. So what does that mean? That means that for every object in E star, for every two. In E star for every tuple like this, I have to build a map between the resulting categories I get. Then I have to show that that's like natural with respect to the maps in E, so that it's actually giving me a functor in the store. It's actually giving me a natural transformation of functors like this, so I have to show some naturality there. And then I have to check a base point condition, that turns out to be straightforward. And then I have to show that these are actually multinatural, so that this is really a multinatural transformation. That this is really a multinatural transformation, which now means I'm going to have to think about what happens when I have many foldhousing categories. And then I have to show that it respects the categorical enrichment. So that ultimately, if you've played around with things like categories of functors between categories, you know that that's really checking something about modifications. That's what's going on here. But underlying, there's lots and lots of things to check. You sit down and write them down. You just like sit down and write them down. But the basic data of this map, you know, one component is going to be like on my EM of C at some tuple of objects in delta M. What I'm remembering is N sets of Mi objects of C. And all the ways to map to add them up in like their little clumps. And then when I map down here, I forget down and I have like n directions of Of flags. So, underlying, and when you boil it all the way down, your map is really just taking: like, I had a whole bunch of clumps of things that I can kind of add up in all possible ways, and I just forget many of them, and so I just sort of remember the flag adding data for each of those little clumps separately. When you check that, this satisfies all of the appropriate naturality, and so it really does give you this multinatural transformation of multifunctors. Thanks. Questions? So, um just so I understand right, um the the multi, this multi-categorical input is, you know, the purpose is to give, or like one purpose, or many purposes, but one purpose is to think that, you know, like if you have a suitable input from somebody Like if you have a suitable input from symmetric one of the categories or Waldhausen categories, it makes the associated Waldhausen K-theory or additive K-theory a ring, right? Yeah. And so then is that saying that the natural transformation when restricted to those kinds of inputs is a map of rings slash equivalence of rings? Yeah. I mean it's telling you that like, you know, if you have a map. Yeah. If you have you have a map that's like multiplication and multiplication, and you can do your Siegel to Boldhausen construct a comparison on the one side and on the other side and it commutes. Awesome. Cool. Thank you. Other questions? So have you thought about applications to like KR material algebraic? No. That's a good idea. Yeah, I'm just wondering if you would need to alter your construction or if maybe if you just are like maybe it follows for your construction if you work with these. Yeah, that's an interesting idea. We have not thought about that. Okay, let's thank Animal again. Um so we're gonna take a short coffee break, which we So we're going to take a short coffee break. There should be a cave out there. And the next talk will be at 10. Unfortunately, I'm late for the next talk. So on behalf of the organizers, I want to thank everybody for coming, and especially to the speakers, for a week of really beautiful and inspiring talks. So thank you all for being here and making this a great workshop. 