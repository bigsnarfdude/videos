This project I worked on with Nino Bashar and Park Rombach. So I started working on these types of edge-colored extremal problems when I was in Montana working on a quarry. So what we're going to start off with is looking at kind of some motivating examples. First, with the uncolored version of saturation. So we're going to say graph G. Graph G is H saturated, satisfies the following two properties. So contains no copy of H. And any non-edge that we add back into the graph is, then G plus E is going to contain a copy of H. So, just to see what's example here, this is going to be our, P4 is going to be a path on four vertices. Mention that for Corey and Anna, just a reminder. Reminder, different from different some other projects. But are some examples of P4 saturated graphs on six vertices. So again, none of these contain a P4, and any edge we add into any of these graphs is going to create a P4 sub graph. So if we then of this collection of graphs that we have, if we look at one with the largest number of edges. One with the largest number of edges in this collection is going to return the turret number, the stream remember. And if we look at the one with the smallest number of edges, that's going to return saturation. Okay, so just from our example, so we have to prove that any graph with seven or more edges on six vertices, that's going to fail the first condition, so it's going to have a P4 in it. And on the other end, Other end, our graphs with two or fewer edges on six vertices are going to fail. That second condition, so we'd always be able to find an edge to add into our graph that our graph, our G plus E, would then still be p4. And this is a long, long study. I mean, Corey mentioned, some of you mentioned some of these results for turon problems. For Turan problems, Mentel's theorem, Turan's theorem, Erdos Jonesmanovich. And then a couple of these saturation problems. I guess I'll mention some of the theorems a little bit later, but let's see, Erdos Heinel Moon, and I guess the only cheese up, but we'll pop up in a little bit. Okay, so from this, now we're going to look at edge colored version of Python. Colored version of saturation. So now what we're going to have is our graph G is going to be called rainbow H saturated if it satisfies similar two conditions here. So there's a proper edge coloring of G containing no rainbow copy of H, right? So proper edge copy, proper edge coloring of G, right? So no two adjacent edges are colored the same, and a rainbow copy of H. Color the same, and a rainbow copy of H means that all the edges are assigned different colors. Then our second condition is: anytime we add an edge into our graph, no matter how we properly color the edges of this new graph, it's going to force a rainbow copy of H. Okay? Yeah? So you said, can you just repeat it? A rainbow copy of H with H. Right, is a copy of H with a colour. Copy of H with a color assignment to the edges where no edges are given the same color. No edges mean. No edges at all. Okay, so it's not a property of colour. Well, it is. Well, it is a property of colour. Okay, we got some examples there. So from our examples, we kind of see: are any of these rainbow P4 saturated? So the first condition we're going to need is that we can provide a proper edge coloring of our graph with a With no rainbow P4 inside of here. So these don't have any P4, so this satisfies it pretty easily. But we can look at the second condition then. So these first two, I can find this edge, add it into my graph, and then find a proper edge coloring here. And now this copy of P4, these two edges have the same colors. These two edges have the same color, so it's, as you know, rainbow P4. So it's not rainbow P4 saturated. Similar kind of argument with this one. But now these two, now it's symmetric arguments here. So if I add in an edge, okay, and I assign a proper edge coloring to this graph, now this is just a sample where I just colored in the edges that we need to get our rainbow propagated. To get our rainbow cropping here. So if I look at this worst-case scenario, we repeat some colors here, I can go green, red, blue. Okay? Similarly, okay. So these two graphs are going to be rainbow P4s actually. So it's the, if I add an edge, it forces the P4 to be right all the colors. Yeah, so there has to be, no matter how I properly color. No matter how I properly color the edges of my graph, I'm going to be forced to have all the colors in a P4. Okay. Right? So there's even, I'm going to consider this graph as well. Because we can get more graphs that are rainbow P4 saturated. Okay, so this example is not P4 saturated. There's copies of P4 inside of you. But we can come up with... We can come up with a proper edge coloring. So, again, there's P4s in here, but they're not rainbow. Any edge I add is going to be a symmetric argument here. It looks something like this. And again, I'm going to get any proper edge coloring as soon as I get this little double star inside of here. I mean, these three edges are different, have to be different colors. Worst case scenarios, I repeat blue, so I find my rainbow peak. So the black edges I just left, they could be whatever color would be. So here's a collection that we have of three booking course actual work. Now, Now similar to what we did with the saturated graphs or saturation number, we can look at the maximum number of edges in a rainbow saturated graph. Rainbow H saturated graph, and that's going to return the rainbow Turon number. So here, again, we have to show that we can't have any bigger graphs, but this is going to give us. But this is going to give us rainbow to ride number of seven. Now, these types of problems were only introduced by Akibash, Mubai, Sudakov, and Straw in 2007, so fairly recently. And just to highlight a few of the results that they have, they sorted out that you have a chromatic number greater than 2. Your rainbow Turon number, maybe asymptotically equal to the Turon number. And conveniently, remembering the Erdo-Stone-Simonovich, if our kramatic number is greater than 2, this is going to give us the lead coefficient here. So where the problems are are in bipartite graphs. And one of the main bipartite graphs they were interested in. Bipartite graphs they were interested in, even cycles. In particular, they had an application of rainbow Turan numbers for even cycles to BK sets. So I found a lower bound. They matched it for a couple small values of K, but then just a couple years ago, Oliver's answer matched the asymptotic upper bound for this. A few other bipartite graphs have been studied. A few other bipartite graphs have been studied just to highlight something I was involved in. This is a project I worked on in Corey and I'm Test Sakar. We found values for these short paths. Anna sorted out the next one a few years later. And the best known bounds for this we have are lower bounds that I've worked on and ergonlids Gyori Methuku. Lids Gory Methuku game with an upper bound. Okay? So, okay. So what we're going to look at now is the corresponding rainbow saturation number that matches up with the saturation number we saw in the young colored version. Okay. So maybe just to mention two, so rainbow saturation does appear other places in the literature. Appear other places in the literature. So it's a slightly different problem than what we were looking at here. But if we go back to our collection of graphs, we have to show, again, that there's no smaller graphs, but this is going to be our rainbow saturation for P4 on six vertices. Okay? And so And so this is showing this lower bound in general for a general n. It's a pretty good example of what we need to do to prove the results for these types of facts. Do you go back to previously? Um so all right so we looked at uh remote saturation number for um uh p4 and got it separated away from the the normal saturation number. Um and again the just to think about how we show these results um we can go through this this We can go through this group without too much trouble. So, upper bound, we're going to need to construct a rainbow P4 saturated graph. And we're going to do that, telling us how to do it. We're mostly going to take copies of K14, copies of K4, with as many copies of the K14 as we can fit. Okay? And so, what that means is we're going to have We're going to have 0, 1, 2, 3, or 4 copies of this K4. Now, we have to show them that this satisfies the two conditions of being rainbow P4 saturated. So we have to come up with a proper edge coloring here. These are going to avoid rainbow P4s. These two, we have to be a little bit careful with their colors, but that's manageable. Manageable. There's no remote P4, so that's great. That's the first condition. The second condition is: right, if we add in an edge, we need to show that no matter how we properly color the edges of the graph, it's going to force us on the copy. So really, when we add in an edge, we're going to create one of these three subgraphs. So if one of the n vertices of our new edge is attached to a vertex of degree 2. Is attached to a vertex of degree two or more, we're going to do something like this. And there could be some more edges attached there. Or if they're both degree one, it can look something like this, right? But in any of these cases, as soon as we properly color the edges, we get some version of this. And again, we leave out the colors on the microphone, on the back edge. So That's going to force our rainbow B4 and gives us our upper bound of 4 fifths n plus C is going to be 0, 1, 2, 3, 4. So plus one number. Now, to get the lower bound, generally what we have to do is we start with our four-saturated thread. And we have to either make some arguments about the degree. Arguments about the degrees and rule out kind of small degree vertices or rule out small components from our graph. So we're going to start out with ask if any acyclic components of two or three edges can occur in our graph. Well, each of these components, okay, if they all have an edge that I can add. They all have an edge that I can add into that particular component. Three edges. That once I can find a proper edge coloring here that avoids my rainbow P4. So if this were a component in my graph and I add an edge to it, that's where my rainbow P4 is going to have to show up. So what I can say is that my graph doesn't contain any of these components. We can also ask about isolated vertices or copies of K2. Well, if it has two of those, we can connect those with an edge and we'll get a P2, a P3, or P4, all of which we can properly edge color without getting a rainbow pink color. So that means we can have at most two of those. So, what's left to be in our graph is we have at most one component or two or smaller, acyclic components with at least four edges. We kind of ruled out the smaller ones, and then cyclic components. Well, if you start counting up edges, we start with our acyclic components. Well, the edge density is going to be k minus 1 over 5, which means our edge density is going to have to be at least 4 fifths for that. Least four-fifths for that. Stickled components are all going to have edge density at least one. But then there's only three other cases to consider here. So we're going to get, if it has a K1, a K2, or neither of those, we're going to get somewhat of four-fifths and edges. So that gives our draft here. So this is maybe the easiest one to spell out, but the other One to spell out, but the other results are going to follow in a similar kind of manner. So we sorted out C4. Well, we sorted out bounds for C4. These are, you know, P4, we got just P4. We didn't get longer paths. It was pretty tricky. C4, even getting this bound was a little bit tricky. So we found upper bound construction. It's going to be a wheel graph. This is just on seven vertices here. On seven vertices here. But you can see the coloring on the wheel is going to take these two color these two edges the same, we kind of rotate that around. And we have to also consider a couple cases of what happens to satisfy the second condition of this being a rainbow P4 saturated graph of either adding an edge like this, so like this, but that gives us an upper bound of 2n minus. But that gives us an upper bound of 2n minus 1, or 2n minus 2. And the lower bound is something that rules out a bunch of small degree vertices. So if I have, if I let G be a rainbow C4 saturated graph with two vertices of degree one that are non-adjacent. So what happens is, again, every time I add in Again, every time I add in a non-edge, like this one, it has to create or cause a rainbow C4 to happen. So this, the only place it could create our C4 is if this is also an edge in our graph. But once we actually add in a proper edge coloring, even if we had, if we said we had a rainbow or a Had a rainbow or a proper edge coloring of this graph that forced a rainbow C4. Well, really, I could just replace this color with whatever I have right here, and that would avoid my rainbow C4. So what this is saying is I can't have these two non-adjacent vertices of degree one, and with a little more work, again, we could get it up or a lower bound of n. Okay? So, So, let's see, working up. So, we did kind of opposite order of where I listed the Turon results. So, we have paths, we have cycles, complete graphs. So, this is the first non-bipartite example that we have. If we remember for the rainbow-turon number, the extremal number and And the Turon number and the rainbow Turon number were asymptotically equal to one another. Here we create a separation between those two values. And it's not too tricky to see if we kind of remember what this saturation bound is here. If we think about it's kind of coming from this Kr minus 2, and then we have a bunch of 2, and then we have a bunch of independent vertices over here. We get n minus vertices over here, and so that if we add in an edge here, we kind of get our copy of Kr, right? So, in our situation, just to get the separation, well, if we start out Well, if we start out with two vertices and think about them being not adjacent here. So if I add in that edge, well, I know I'm going to need to create some sort of KR in my graph, right? So they're going to need at least, let's see, the neighborhood type on U and V U set on U and V. This has to be at least r minus 2 to create my kr here. The problem is if it's exactly r minus 2, well then I can just take, if I go to color and try to get, if I'm saying I force a rainbow KR, I could actually just take this color here. I could actually just take this color here that I had down in this piece of my graph and just color this edge with that same color, which would cause a problem. So it bumps up. Every pair of non-adjacent vertices have to have at least r minus 1 numbers and commas that wants to do. This, I'm not going to go through. This, I'm not going to go through. So, but even this, we found a special case of a linear upper bound here, but both Puck and then later Barnabas Janzer, brother of Oliver Janzer, mentioned earlier, found a nice way of applying Cassoni-Tuza. So we did that kind of following triangle steps, and we didn't get as strong a result, but you can apply. A stronger result, but you can apply this and just get a linear bound for everything. Okay, so questions? Extremal number is a lower bound for the rainbow extremal number, but don't know if that's true for the saturation number. Kind of seems like it's true. I think it's probably true, but if someone comes up with a counterexample, I'm not going to be shocked. It's a very weird. It's a very weird. Figure that out, let me know. That'd be great. And then figuring out different values. We only had a handful of results. And then, like the sample we started out with, for every m between these two values, can we find a graph that actually has them? That's it. Thank you very much. Any quick question?