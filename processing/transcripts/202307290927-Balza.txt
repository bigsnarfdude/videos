For the next talk, and hope you enjoy. Thanks. Well, thank you. I'm super excited to be here. Thank you again for the invitation. It's an honor to come here and share some of my work. I'm here on behalf of our new family-founded institute called GIM. And the running joke is that we go to the gym every day, but this gym stands for Geophysical Education Monitoring, which is led by Professor and Dr. Florin Wagner at Arba Teha in Aachen. Adventaha in Aachen. Yeah, so I'm here to present some of the work that I've been doing throughout my PhD, both in Aachen and in ETH Zurich, and how I'm trying to integrate the geology and multi-method geophysics into an integrated workflow. So the current project I'm working on is, oh, let me, sorry, cutting screen a bit. It's an EU-funded program called EasyGo, and the goal is to improve the efficiency and safety of geothermal operations. They hired 13 different PhDs that tackle the operations of geothermal or the applications of geothermal aberration in different aspects. So there are some PhDs working on the reservoir characterization, on geothermal exploration. There are some Geothermal exploration. There are some PhDs working on the turbine design, and some working on the geochemistry that goes into the production and injection wells. And so, yeah, this is the team down here and our last visit to Italy and Malarello and the associated universities, which are some of the top four universities in Europe. And we also have industry partners, which we work with during our second month, our industry second months. Industry cycle. I had the privilege to work with ETH Zurich and Arda Teha Aachen throughout my three years. So the main goal of my project is to make a better image of the geothermal properties based on integrating both geophysical or multi-method geophysics and implicit geologic models. And I divided these two because I think there are different approaches on how we image or what How we image or what we know as the subsurface. So, we have the geomodel-driven approach, which is really what we know as geology. And these are based on geologic observations. It's when we have a conceptual model based on all of the geologic informations we get from a geologist. There's a deductive approach where we start with a big idea, and then when we add more information, we deduct and have a better geo model in the end. Have a better geo-model in the end. And then there's the data-driven approach, which is a little more objective. It's based on geophysical measurements and infinite models to explain the data, but we are also limited to where we only have the observation, so where we only have the geophysical data. And the idea or the big question to tackle is how do we integrate both of these approaches so that they're weighted the same during our subset. During our subsurface imaging. And what we know, what we formally know in this bridge, is words like forward modeling, where you go from the geomodel to the data, and then inversion when you go from the data to the geomodel. And I think our big bold question is, how do we not only have a bridge, but sort of integrate both of them in the workflow where they're weighted equally? And why do we want to do this? Want to do this. So here we have a conventional inversion result of an ERT, and it's kind of a blurry image if you want to trace some interfaces there. And so if we already have interfaces in a geologic model, why not use them and integrate them? And then use geophysics to not only improve the interfaces, but also give us information about the physical properties within the layers. So that is the main motivation. The main motivation behind the structure-based inversion approach, which we are including. The ultimate goal is to have an open source algorithm that recovers realistic geologic models with these sharp boundaries and that also integrates the physical parameters within the layers and uses geophysical data to update the geologic model. The two main open source tools that I'm working with: this is the first one. I'm working with. This is the first one, JumpHy, and this tackles the geomodel problem. It's an implicit 3D structural that they create implicit 3D structural geologic models. It can have complex combinations of folds and faults. The inputs are these interface points or surface points. And there are some orientations that you take in the field that you can also input, or you have to input. Input, or you have to input. It's designed to enable probabilistic models. So because it's Python-based, you can run millions of models or iterations of a model. So it's really cool to also have a stochastic or probabilistic approach in geomodels. And yeah, the main developer is Megan the Lagariga, based in Arteha Aachen, and it's also maintained there in the Ha. And it's also maintained there. And they have all of these very cool features, like topology, where you see the relationships between the layers, and also some base cases of all very realistic and cool models that they have in their gallery, on their website. The next open source tool where I used to tackle the geophysics is PyGimli. They have also a geophysical inversion and modeling library where And modeling library where they have management of regular and irregular measures, both in 2D and 3D. Various geophysical forward operators also do joint and coupled inversion and specific or region-specific regularization. PyGummy has been featured in 80 publications. And yeah, the community or the team behind it is Thomas Hunther and Karsten Hooper from. Hunter and Karsten Ruper from Karsten is now within Thomas of East. So, this is the overall methodology behind the workflow and I'll walk you through it. And I put some logos here on how or the libraries that I'm currently using. But the way that we saw this is more modular, so more of like a plug-in, and yeah. And yeah, so that you can use any software that you like. So the first step would be to build a geomodel, and I'm using JumpHype for that. So you have an initial guess of a geologic model. Then the first bridge we cross is to discretize this model and create a mesh. So we use things like GMesh, and this little logo is from Subsurface. And Subsurface connects both Discretize from SimPed. Discretize from SimPed. It also uses the meshing software in Uni. And recently, also, yeah, I've integrated some of the GMesh part to that. And this doesn't look like a big step, but it is. Meshing, especially for this project, is a big challenge, I would say, and it really defines on how good of an opportunity. Defines on how good of an outcome, or yeah. And you can have very simple meshes, you can have very complex meshes, but one thing is that for every iteration, you always have to build a mesh. So you have to sort of pick your poison on how important you want that to be in your workflow. Then we assign the parameter distributions. So for every layer, you can have either homogeneous or one single value, or you can have Or one single value, or you can have several values of a physical parameter. For example, if you want to invert for your T, you can have resistivity values that change throughout the layer. And we control this by using pilot points. So pilot points are essentially points where you choose different regions of your layer to have the same value. So you have a low parameterization of your Of your mesh. So you don't have to assign a value to each part of the mesh. Then you perform board modeling. And for this, I've used Peggy as well as Simpeg, and I have some more examples coming up. And then I perform the deterministic inversion and update the geomodel both using PyGUMINE and GemPy. So I invert for the positions of the layers and the problems. Of the layers and the properties. And another big bridge is the visualization. So going from your sort of model parameters, building the geomodel and visualizing it for each step. We use PyVista for the 3D part. PyVuni also has, well, not Publib, ParaView, and when we have some UTK files to look at. And so, yeah. And so, yeah, I wanted to show some examples of the forward modeling that I've been doing. This is one project where it's also on geothermal exploration. So, in the top, we see a 2D seismic section that we used for the initial model or the structure of the initial model. Here we have the Arbateha 1 well, which is sitting right on campus. And as you can see, the seismic isn't great, and so we wanted to. And so we wanted to see if another method could help us understand the subsurface. And since we are looking for a conductive body, we thought let's try Megamerithmurics to see if before we model this, we're able to see a conductive body and look at the different levels of noise. Because in Germany, that's a huge thing. When doing magnetometurics, there's a lot of power lines and trains and everything. So the idea was to forward model. So, the idea was to forward the model and look at the different levels of malt. So, we start with a 2D size section that then gets built, that then we build a JumpHy model. We assign physical properties of the layers, looking at data from the Argo to HAL well, that they had some resistivity values. Then we placed some receivers, five receivers, in this. Five receivers in this section and fully modeled the response. And here we have for the receiver C and D both the apparent resistivities and apparent phase of that. Oh, there you go. Here is another example of another project that I'm working on for also geothermal exploration. This then became a master's thesis work by my master's student Tomas Krzinski. Tomas Krzinski. Here we're using gravity. We took a gravity survey across this Fearsenfault. So this is a fault that's located in the middle of Sprahle, which is a town where they want to develop geothermal heat. And the idea was to better characterize this vault using gravity. So yeah. So, yeah, we processed and imaged and graded the gravity data using Verve. Then we built the Jumpine model, assigned physical properties to it, and forward modeling using Fayimli, to then compare the observed data to the forward model data of our idea of what we think is the geomodel. So, those were all forward model examples, and this would be the first. And this would be the first synthetic study of how to go from the forward modeling back to the geo model or update it. And this is a synthetic study of a two-layer case where I have four interface points and constant resistivity in each layer. And I placed 49 electrodes of a dipole-dipole array. And here's the pseudosection that comes from that forward model. And so the true model that generated the data. True model that generated the data is here. This is a slice in the z direction. And this would be the starting model, and then the inversion result was able to almost reproduce the true model. And then we moved on to more of a case study. So this is my current project, and it's taking a lot of patience and time. So this is the monarch. This is the Monteri Underground Lab project. It's an underground lab in Switzerland where they're looking at CO2 injection. But we're looking at this data for other purposes. We know that there's a fault in the area. This is a cross-hole setup. And what we want to do is invert for the fault location. So we want to test the algorithm to see if we can recover the fault location just using the GIF physics. Just using the geophysics. And here's the field inversion results of the travel time data. Here we have the receivers, the sources of the two wells, and the fault location that was mapped by the geologist. And yeah, these are the velocities that the inversion resulted in. Then from that, I built a true model of looking at the geometry of Looking at the geometry of the field inversion result, then started, used the starting model for the inversion where the green points are the points that are moving around in the inversion. And you can see some iterations, both of the Jacobian calculations. So each point moves and calculates a sensitivity. And you can see initially that it's going in the right direction. So the bottom. Direction. So the bottom, so this is the top of the fault and the bottom of the fault. The bottom of the fault is moving in the right directions, but you can see that it's a little splack, right? And that has to do a little bit with the regularization and also the optimization method. So there's still a lot of things to tweak, and I'm excited to have some input on regularization and optimization methods because that's not my point. Methods because that's not my forte. As Lindsay was yesterday saying, that we each have our skills, so I'm open and I'm all ears for that. So this is one of the preliminary inversion results, and this is another one, just by changing a damping or smoothing riderization grammar. So yeah, that is what I've been working on so far. So far, the future work extends into having multiple geophysical methods in this framework. So, methods that are more for structural to be more focused on the interface points and then other methods to look at the physical properties within. Sort of a joint inversion approach. And yeah, I listed some of the chap the challenges, so dealing with data formats, the meshing we cannot emphasize enough. I cannot emphasize enough. Placing the surface points and creating the geomodel in the first place, that has a very important impact in this algorithm. Some optimization methods that I'm willing to explore. And yeah, I just wanted to thank the developers of these open source packages. They're the real MVPs. And especially Samu for inviting me. And yeah, this is. Inviting me. And yeah, this is part of the funding is thanks to the grant that our project manager used, Mar. And if you have any questions or if you want to check out our website, which is also powered by open source, feel free to, yeah, reach out. Thank you. Any questions? I have a question about the characterization, because in your geomodel, it's a function. Everything is a functional form. So at that point, you don't have to discretize an image, right? Like the fault, your layers. It's in functional form. Like the pilot point is coming in at the very later stage. So your functional form. Yes, yes. So we've got a functional form, and then speaking about the fault. Default. Then it looks like a discrete, right? Like if you think about a line, and then the fault is crossing the line, it's discrete. So I'm thinking about your deterministic approach, which takes the drone move. So I think that simple example that you have shown, you have a smooth interface, and then defined it to. And then define it to regions and then update using your deterministic report. That seems okay. But I think Earth is complex. So, like, there are certain, some of your functions may or may not continuous. Then, like, even if you use whatever, find it, like, a header, automatic difference, or whatever metaphor. It's always like this discry. Then, your update, whenever you have a discrete, it's. Update whenever you have a discrete, it's a tough problem, right? Yeah, to solve using a James approach. Have you encountered in such sort of challenges? Yeah. Especially when, like, not simple problem, but let's say a couple layers and they have fault. Yeah. And trying to invert this problem, it seems like a very challenging problem to solve looking at this problem. Yeah, when it comes to faults, yeah, I've already pictured. I haven't done it yet, but I know that's. I haven't done it yet, but I know that's coming. But for the fall, one thing that I would focus on would be to invert not for the actual location, but for the orientation. But yeah, because there's going to be different physical parameters on each side, it's going to be hard to find a method that is not that, yeah. Then my follow-up question is: if you know that already, then why would you actually want to use the deterministic approach? Because since you're reducing the parameters from millions of cells to tens of parameters or hundreds of parameters, then you are getting into the level of, okay, you need to use this stochastic approach, just simulating, because you're already about to set up. And have you kind of considered a switching sort of slightly different optimization approach? I'm not curious, why did you choose the approach over a custody? So for the deterministic approach, the main motivation was because if you start with a conceptual model, you have to have a good guess in the beginning. So that's more. So that's more for the deterministic. You just want to see if you have thickness and layers that are off or actual physical properties. But if you have really no idea of what your starting model should look like, then you would use a stochastic approach. And one thing that I'm bumping into, one of the challenges is that, yeah, the starting model is, I mean, you can just get to local minimum really, really quick. Minimum really, really quick if you don't have a correct starting model. So, yeah, I'm working on implementing other optimization methods because that's going to be useful. I heard the bell. So, Leo is asking on Zoom: when running this big inversion, how long does each step take? Do you pause and look at the model? Do you pause and look at the model achieve iteration? Lately, yeah. I and for small problems, yes. For big problems. So, for example, these little iterations, this was something that I, yeah, I would pause and look at each model update because I want to see where it's going. Each step is like the whole thing for this problem might take, I don't know, eight to nine minutes for twenty iterations. For 20 iterations. It's, yeah. Of course, the mesh, the amount of receivers, and like how complex the geometry is, it's always an issue. But yeah, for the simple problem, it just takes seven or eight minutes to do one round to see if the parameters are right. Forget it to me, okay? Um I was just really curious, you mentioned the regularization temporal of this. I'm just tired of thinking about that and approaching that because I imagine there's quite a number. Yeah, so far I've tried smoothing along like a vertical direction because I'm using layered models, but it, yeah, it would have to depend on the geomodel. So I've been using for So, I've been using first-order smoothing and damping. Another thing that I was thinking is some points are going to be more sensitive because of the location they are, because of where they're located with respect to the sensors. So, sort of weighting those down also versus the other ones. So, yeah, there's a lot of things. But right now, just moving along in the vertical direction or yeah, sorry, horizontal. Or, yeah, sorry, horizontal direction. And yeah, jumping. Thank you very much, Mulia. Really enjoyed the game. Again, if you have any questions that you want to make, just post it on Slack. You can ping her.