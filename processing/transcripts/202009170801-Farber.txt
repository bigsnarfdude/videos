Okay. First of all, thank you, organizers, Lucille and Jesus and Dan for making this possible and for inviting me. It is a very unusual time, as everybody knows. It is very important for us to keep our life going, and this event will be really hard. This event will be really helpful for this purpose. A little sign of normality, to have a conference mathematical meeting. I'm pleased to see many old friends, colleagues, and also pleased to see many new people here. And I also want to mention that I'm very pleased to see people from engineering. To see people from engineering, like Dan Kodicek and his young colleagues, so it's great. And this subject was initially motivated by problems of robotics and engineering, and it is important that it will eventually come back to engineering. Can you hear me well, Don? Yes. So this is my This is my title, Topology of Parametrized Motion Planning. So, my plan is to make a little introduction to the standard thing, just a reminder of well-known stuff so that people who are new to the subject could follow. And then I will describe the new results, which will be the main part of my talk. My talk. So, this workshop is about motion planning. Motion planning is a very important part of this dream to create autonomous robots, autonomous machines. Such a machine should decide by itself how to implement tasks of moving from one state to another. So, this will be implemented by This will be implemented by engaging robot motion planning algorithm, which takes as input pairs of two states, pairs of states, the initial state and the final state, and this algorithm produces a continuous motion of the system from A to B. So, mathematically, we can express this by Express this by saying that such algorithm is implemented by a map. And this map is the map which is described on this slide. So x is the configuration space of the system and i denotes the unit interval 0, 1. x to the i denotes the space of continuous paths in x. In X. And if we rephrase what I said on the previous slide, we can say that a motion planning algorithm is a function going from x cross x to x to the i, which satisfies this condition, this bottom line, bottom equation, which says that this path should start at A and end at B. And this condition we can express as follows. So if we just consider this map P going from motions to pairs, this P of gamma is a pair of initial and final configurations. This is a vibration. It's a nice map vibration in the sense of ser and a motion planning algorithm is a section. Algorithm is a section of this vibration. And now we, as usual, we first ask about continuity, and we observe that in this situation, continuous section exists if and only if our space is contractible. And therefore, but nevertheless, we want to create motion planning algorithms for arbitrary For arbitrary systems and not only for those which have contractible configuration space. So we need to deal, we need to leave with motion planning algorithms which are discontinuous. And we can measure the complexity of such algorithms in the way which is described here. So we introduce this notion of topological complexity. Complexity, which is denoted by Tc of X, and it is defined as a minimal number of domains covering X cross X, such that over each of these domains a continuous section exists. And yeah, and this is an integer which measures Which measures navigational complexity of the space X viewed as the configuration space of a system. And the main properties of this number are, well, are listed here. The first says that it is zero if and only if X is contractible. Second says that this Tcx depends only on Depends only on the homotopy type of X. And the third one says that it is bounded above by dimension of X cross X. And the last property says that T C X admits an effectively computable lower bound, which depends on the structure of the cohomology algebra of X. So, I mean, these four properties are very important, and I mean, many. Very important, and I mean manipulating with these properties, we can compute TCX in many examples. What I wanted to emphasize is property 2 says that Tcx is a homotopy invariant of X. So this means that it is a very kind of crude invariant of X and it should be computable effectively. And it is indeed the case. And it is indeed the case. So, here are a few examples of computation. So, TCX of spheres is one if n is odd and two is even if n is even. I mean, for graphs, graph is for connected graph, one-dimensional complex. TCX can be zero if the graph is contractible. It can Is contractible. It can be one if the graph has only one cycle, homotopy equivalent to the circle, and it is two if graph has at least two independent cycles. So we see that in this example and in many others, TCX admits its upper bound, which is twice dimension in majority of cases. In majority of cases, in majority of cases, or in a generic case. Here is another example: surfaces of orientable surfaces of genus G. Again, here Tc equals 2 for very small values, 0 and 1, and then it becomes twice dimension for any genus greater than 1. And for the group of orientation preserving isometries of R3, which is an important group of robotics. It is a group of motion of rigid body in R3. Tc equals 3 and more generally for any connected league group, Tc equals the category. For the robot arm, For the robot arm with n links, in the planner case it is n, the number of links, and in a special case it is 2n, twice the number of links. And this example actually will be relevant to the rest of my talk. So, this example, when we take for X the configuration space, X is this. X is a configuration space of n distinct points in Rd. So here a configuration is positions of n distinct points and the task of navigation is to move one configuration to another without collisions. And in this case the topological complexity is roughly 2n which is twice Which is twice the number of particles, but the answer is different for g equals 2 or g equals 3. And actually, g can be greater than 3. And the answer is the same for all even dimensions and also the same for all odd dimensions. And here is another example which we computed with Mark and Sergei Yuswinsky, and it again it will. And it again will be relevant to the rest of my talk. So, in this case, we take configurations in R3, but we remove some finite set of M obstacles. And these obstacles are kind of fixed somewhere. And in this case, the topological complexity, well, it is shown on the slide. I don't want to read. What I want to say is that it is 2n. Say that it is 2n is if the number of obstacles is at least 2, let's say. And it is a very surprising result because you see that this computation shows that this complexity does not increase with the number of obstacles. And that paper at the end, we wrote this sentence which I put here. Which I put here. In general, the notion of topological complexity is, I mean, part of my slide is covered by something, I can't see it. It is only a partial reflection of real difficulty of motion planning problem. So, I mean, this example shows that what treatment of obstacles like What treatment of obstacles like this is not, well, it doesn't refle is not reflected in the answer, which is surprising. It shouldn't be like this. So now I start this second part of my talk. And the title of this part is Parametrized Motion Planning. And this is a joint work with Don Cohen and Schmuel Weinberger. So I just want to say So, I just want to say from the very beginning that the title is parametrized is still can be changed. I'm not sure that it is the right term for this notion. And actually, I would like to hear views, especially of people from robotics, how do they feel? So, I mean, I know that there are different I know that there are different variations of Tc. There is this higher topological complexity, monoidal, equivariant, there is relative. Why do we need this parametrized motion planning? Well, let's see. So, I mean, in this, I mean, the motivation for this work comes from our intention to develop a theory of motion planning algorithms when. Algorithms when the configuration space is not fully known in advance. So we want to, in many situations, in particular some which we'll consider in this talk, later in this talk, I mean, the specific configuration space is not known. I mean, it is known something about it, but the space by itself is not known. And we would like to. Not known, and we would like to have such theory which we develop here, which we suggest here, applicable to these situations. So, we want to have kind of universal motion planning algorithm, so they will be applicable to a variety of situations involving various external conditions. Various external conditions, and these external conditions are characterized by different parameters. I mean, this will be clear from my talk. So, a typical situation of this kind arises when we are dealing with collision-free motion of many objects moving in free space, avoiding a set of obstacles. And positions of the obstacles are a priori. Are a priori unknown. So, this actually was the main motivation for us in this work. So, I just wanted to give you a very practical situation when this may become relevant, and it may appear to be funny or irrelevant. Or irrelevant to some real marines and I don't know, submarines, but I thought it can illustrate our approach. So suppose we have a commander who has to control a fleet of N submarines in waters where there are floating M mines. But positions of these mines change from time to time, which is realistic actually. And the commander would like to have a universal motion planning algorithm or universal rule of how to navigate the fleet which would work for all possible placement of the mines. So the positions of the mines will be a part of input of the algorithm. So this algorithm will be not like in my first part of the talk where you input only a Where you input only A and B, current position and final position, you also input something else. For example, in this case, it will be positions of the mines. Okay, so now how to formalize this mathematically? Well, one way of doing this is the following. So let's consider a map, which we will assume to be a vibration. Which we will assume to be a vibration, P from E to B. So B will be our base, and this base, the points of this base, will parametrize external conditions. So once you choose a point on the base, this means that you have chosen external conditions for the system, and our configuration space will be the Configuration space will be the pre-image of this point, xB, which is pre-image of this point B. So we want to introduce a numerical invariant which characterizes the complexity of such algorithms. And we call it TC. Well, I assume you can. Well, I assume you can see full my slide fully. Can you see it? Don, can you see full my slide? Because I can see only part of it. Yes, I can see it. So there's a notation for this is this T C brackets and then P from E to B, but we also will use this abbreviated notation, which is on the bottom: T C of X B over B. B over B twisted by B. So X is a fiber. So this complexity will be still related to the fiber. I mean, it will be kind of version of complexity of the fiber, twisted version of the fiber. So let's look at this example, which actually is the main example for this work. So we look at n pairwise distinct points in k-dimensional space. Space, which I'm moving in the complement of a set of M obstacles, O1, O2, OM. So you can think of these obstacles like mines. And so what we have here, our configuration space E is in this case configuration of particles, robots and Robots and the mines and obstacles. So it is configuration space of n plus m distinct points in Rk. But these n points and m points, they play different role because this last m points, they are obstacles and end points they are robots. Okay, so now what is our base of this vibration? Of this vibration, well, or what are the parameters of this in this situation? It is the positions of the mines, positions of the obstacles. So in this case, the space B is also a configuration space of M distinct points in Rk. And the map P, which was in the previous slide, the map P in this case is the projection. case is the projection. We have n plus m distinct points and we project it only to the positions of the obstacles. In this case this map is a well-known map and it is called the Fidel Norvit vibration. So the motion planning algorithm, so in this case we need to take two configurations of robots which leave Which live at the same with the same set of obstacles. So we have positions of robots Z1, Zn and O1 or M, and here Z1 prime, Zn prime, and the same set of obstacles here, O1 or M. And we want to connect these two configurations by a continuous collision free motion in the complement of the obstacles. Complement of the obstacles, avoiding the mines. Okay, so now we can translate what we have said now into the general setting. So in the general setting, we have a vibration P from E to B with fiber X. Fiber will play an important role. The fiber, let's call it X. And we will continue, sorry, we will consider We will consider paths which I denote here e to power i sub subscript b. So these are paths in E, which each of them lies in a single fiber, such that if you project it to the base, it is a constant path, which means that these are motions which live under the same external conditions. External conditions. The external condition doesn't change under these motions. And now we look also at a set of pairs which lie in the same fiber, which pairs of configurations living under the same external conditions. And this is called E cross B over E. So we have a map which is called this denoted by capital Par. Denoted by capital pi from such fiber-wise paths to this pairs lying in the same fiber, which is the same map like before, pair of initial final configuration. And again, it is a vibration, and the fiber of this vibration is omega x, a space of based loops in the fiber. Okay, and now. Okay, and now this is the main definition. So we can define the parametrized topological complexity of this vibration to be the sectional category of that map pi, this capital pi. And notation, I mean, there are two types of notation. One, kind of full notation, which Full notation which Don likes very much, and then there is an abbreviated version which I like better, which is this T C of X over B. Okay, just to remind people about sectional category, just a general notion of sectional category: it is minimal integer k such. minimal integer k such that the base can be covered by k plus one open sets and over each of the sets there is a continuous section and if we apply this to our situation so in this case we can just say that the parametrized topological complexity of this vibration is defined This vibration is defined as a sectional category of this. So, in other words, it is the minimal, the smallest integer k for which the space e cross E over B admits an open cover by K plus 1 open sets, and this map admits a continuous section for each eye over each of these open sets. Or concepts. I just want to mention, I don't want to go into this, but it is known that I mean, in good situations when spaces which appear here are A and R's, absolute neighborhood retracts, I mean, instead of open cover, you can actually look at arbitrary cover or arbitrary partition of the space E cross E. Space A cross A over B. And this is important for robotics. I mean, because I don't want to deal with open covers. I just want to illustrate this situation by this diagram. So this map pi with this capital map pi, which we want to compute sectional. Compute sectional category is on top. And all this spaces, both spaces which appear on the left and on the right, they are fibered over B. And the fiber of the space on the left is X to the I, so it is just path in the fiber. And the fiber of the space on the right is x cross x. Is x cross x, so the pairs of spaces, pairs of points in the fiber. So it, I mean, this map y is the same as kind of initial map, which we considered in the first part of my talk, but it is kind of twisted over B in some way. So it is many such maps like before, but they are twisted over the base. Over the base. So I know that Don told you not to ask questions, but if there are questions, I'm happy to answer. Don, is it possible to ask questions? If someone has a question, they'll let me know in the chat and then we'll deal with it. Okay. All right. Okay. Thanks. Okay. Okay. So now let's look at a few examples. So example one, which is a very kind of trivial example, if our vibration is just trivial vibration, then this parametrized TC is just the usual Tc. Not surprisingly. Second example is a little bit surprising. So if P is a principal bundle, Principal bundle with a connected group Li G, then this parametrized Tc of this fiber or this vibration is the same as the usual Tc of this fiber, which is G, and which is equal to the category of G. I'm not sure I want to go. I mean, the proof is very simple, but maybe I'll skip it. Simple, but maybe I'll skip it. I don't want to stop on it. In particular, if we take the Hof bundle, which is a principal bundle with the circle as a fiber, so in this case, this parametrized Tc of this is the usual Tc of the fiber, which is one. Okay, so I mean now, I mean, after these examples. Now, I mean, after these examples, I mean, people would be worried, maybe it is always true that this parameterized TC is the same as the usual Tc of the fiber. And the theorem shows that no, it's not the case. So this theorem says that if we look at n robots moving in three-dimensional space, Moving in three-dimensional space, in the presence of M-point obstacles, I mean there's m mines, then this parametrized topological complexity is 2n plus m minus 1. So you can see here, if you compare this with, actually I have a slide here. I'll come to this. Sorry, let's continue. I'll come to what I want to say. I want to say so, in other words, for k equals 3, and actually this is also for k equals 3 and for any odd k greater or equal than 3, the parametrized topological complexity of the Fatelle Novette vibration equals. Nova vibration equals 2n plus m minus 1. So, I mean, we see here, which is very important, that this version of TC depends on the number of mines, number of obstacles. And well, if you look at this slide, the usual Tc of the fiber was 2N, as I showed you before, and it didn't And it didn't depend on M. And in this theorem, we see that it involves M. And it shows that actually this number, this parameterized Tc can be arbitrarily higher than the usual T C So another theorem is an odd dimension, even dimensional case when we are in even We are in even dimensions. So, the parametrized topological complexity of the problem of collision-free motion of n robots in Rd, where D is even in the presence of m obstacles with unknown a priori positions, is 2n plus m minus 2. So, this number is by one smaller than the previous one. The previous one, and this is similar to the situation in the usual TC for the usual TC. So now I want to mention a few general facts about this parametrized Tc. So the first is an upper bound, which is the following, that The following: that if the fiber X is R connected, then this parametrized Tc is bounded above by homotopical dimension. So Hd stands for the homotopical dimension of E cross E over B plus 1 divided by R plus 1. And this is the upper bound. And there is Upper bound, and there is also a lower bound, which is the following. So we look at the diagonal map, delta, which maps E to E cross E over B. And this map induces a map in cohomology with some coefficients for arbitrary system of coefficients. Arbitrary system of coefficients and the kernel of this map is an ideal and we want to use products of elements of this kernel. So I just so the statement is that the parametrized topological complexity is greater than or equal to the couplings of the kernel of this diagonal map. No map where R is an arbitrary system of coefficients. So in the case of, so I want to apply this to the situation of robots and obstacles in three space. And the first non-trivial case is the case when we have two robots and sorry, we have one robot and two obstacles. So we have one robot and two We have one robot and two obstacles in three-dimensional space. So, in this case, the fiber of this Fidel Novit vibration is a motophilant to wedge of two spheres, and the base is motop equivalent to one two-dimensional sphere. So, the whole space is motop equivalent to something four-dimensional. Something four-dimensional, and we want to look at the cohomology of this corresponding spaces and this kernel of the diagonal map. So the cohomology of E itself has three two-dimensional generators, omega1, two, omega one, three, omega two, three. So here Omega 2, 3. So here 1 and 2 they correspond to obstacles and 3 corresponds to the robot. And so omega 1, 2 is interaction between obstacles. And omega 1, 3 is interaction between first obstacle and the robot. And omega 2, 3 is interaction between the second obstacle. Between the second obstacle and the rocket. I'm going here quite fast because I assume it is standard and familiar to most people in this audience. And this, because it is a standard configuration space. So in this three classes, such as two relations, well, one that square. Relations, well, one that square of each of these generators is zero. And the second relation, which is called the three-term relation, is the most important one. And additive basis of homology is given by this four, sorry, five classes, so three classes of degree two and two classes of degree four. Okay, and now we need actually a space, our space is different space. Our space is E cross E over B. So it's not standard configuration space from textbooks. So it's slightly different. So it is a space of configurations of four points in R3: O1, O2, Z, and O1, O2, Z, and Z prime. And this conditions are that these obstacles are distinct and points are distinct from obstacles, but there is no condition that we don't need that distinct from that prime. It is not required. It is not required. So it is slightly different, and nevertheless, it's easy to compute. Nevertheless, it's easy to compute cohomology of the space and it is actually done using Leroy-Hirsch theorem. Very simple, I mean very effectively. And so in this case, homology has five generators, and there are these relations which are written here. So if you look at generators, there is no generator omega 1, 2 prime. omega 1 to prime because obstacles they are the same. So prime means that we are looking at interaction between the second particle or second position of robot Z prime with obstacles. Okay, so these are the generators and these are the relations here and looking at this map. This map delta, we see that this delta of omega ij equals delta of omega ij prime. So there's differences between omega 1, 3 and omega 1, 3 prime and omega 2, 3 minus omega 2, 3 prime. They lie in the kernel. So now we want to. So now we want to play with this. I mean, people know this from past experience. We need to play with this kernel and make the longest possible non-trivial product. So in this case, we have this square of one difference times the second difference. We can show easily that it is non-zero, and this will give us. A lower bound that this parameterized TC is at least three, and the upper bound that it is below three, follows by usual upper bound estimate. And therefore, we compute that, we conclude that in this case, the parametrized Tc equals three, but the usual unparametrized Tc in this example is. Tc in this example is 2. So we see that in this specific case, we already have a higher parametrized Tc than the usual one. Okay, so I mean, I don't want to go into proof. I mean, we actually posted this paper in archive, it's available. I don't want to I don't want to discuss anything about the proof, but what I wanted to mention is this curious observation that if we have our vibration, if it satisfies the conditions of Le Recure theorem, which is the case in all our situations, well, in this configuration spaces examples, then this. Then this kernel of this diagonal map equals is isomorphic to isomorphic as model over chromology of the base to this tensor product where on one side you can see chromology of the base and on other side you can see the usual zero divisors. So this the usual zero divisors The usual zero divisors appear here in this isomorphism. And you can, looking at this, you can think that you can't get more than you will get from zero devices of the fiber. But actually, it's not true because this isomorphism is also only additive one. So the actual product structure is a deformation. Is a deformation of this tensor product structure of these two algebras and deformation using homology of the base. And therefore, classes, homology classes in the fiber, which so that their product in the fiber is zero, actually in the total space, they may become non-zero, and it happens in the And it happens in those examples. So, I mean, I want to finish by discussing a few future challenges. Of course, it would be great to have real applications in real robotics, let's say, for submarine. Let's say for submarines or whatever, doesn't need to be submarines. Any application in real-life engineering would be great, and it would be interesting to discuss it with people at this meeting if people have ideas. Secondly, we assumed in this setting in our paper, we assumed that this P is a vibration, but Vibration, but if in many situations it is not a vibration. For example, if we will allow robots to have certain positive size, robots and obstacles to be, let's say, balls of certain radius, then this map, what we had before, will not be a vibration because it will not be a vibration. At least when you restrict, when you create certain congestion for movement. So, I mean, this case when robots and obstacles have positive size is an interesting situation which may have relevance to real engineering. Another Another challenge is to describe an explicit motion planning, parametrized motion planning algorithm with the minimal complexity. And I know that such algorithms for usual TC were produced and developed by people from this meeting and they are known. So they can be generalized to Be generalized to the parametrized setting. Another very curious and a little bit mysterious question is about equivalence between configuration spaces in Rd and Rd plus 2. You see, in all these computations, I mean, the answer depends only on the parity of the dimension. On the parity of the dimension. So if you add to the dimension two, nothing happens. I mean, the answer is the same. Although, I mean, it's totally different geometrically. Motion planning problem is totally different. So I suspect that there must be a direct geometric connection between motion planning problem in this FRDN and FRDN. n and f r d plus 2n well as well the parametrized versions um i think my time is exactly uh up and i think this is everything i wanted to say thank you then thank you michael let's open it up for questions now are there Are there any questions from the audience? Everybody can now turn on the mic, say, or do you want to use it? Stefan, would you like to say that yourself? Yes, hello, thank you. Hi. Can you hear me? Okay. Yes, yes. Yeah. Okay. Hi, Michael. Good to see you. If you said the situations where this parameterizing map P is not. Where this parametrizing map P is not a vibration, this would be interesting. So far, in the construction that you carried out, if the map was not a vibration but just some surjective map, what would go wrong in the construction as far as you've carried it out? Well, it is a very good question. And well, you can reduce it to this sectional category of map like that. Well, there will be. Well, there will be complications with computation of this kernel. I mean, this kernel of this delta star, this Lehrer theorem. It's very, I mean, I just want to say, I mean, Le Reckir's theorem in this setting was amazing, was very effective. And it will fail there. But maybe there are different tools which could be used. And I mean. And I mean, it is a different game. It's a really different game. So when it is not a vibration, you will have some fibers will be different from other fibers, right? And it may be that you can reduce to some vibrations anyway. I don't know. I mean, it is all open. It is filled. Field which people didn't stop on it. Thank you. Thanks, Stefan. More questions? Go, Jesus. Hello, Mike. I have a question. Well, maybe too. So, in one of your examples, you said that in the case That in the case, in the parameterized case where the vibration is a principal bundle, the parameterized TC behaves like if the bundle was trivial because it only depends on the group. So it feels like something would be missing or some ingredient would be missing in order to see more of the geometry of the bundle. Metric of the bundle. Do you have some ideas about that? Well, I mean, are you disappointed by this? I was also disappointed. I was also disappointed. I mean, it was unexpected that for principal bundle TC, parametrized TC will be the usual TC. And the proof is very simple, actually. I mean, it is on this slide. Actually, I mean, it is on this slide. You saying that, I mean, do I understand you correctly? That you're saying that this result is disappointing and suggests that there could be a different version of parameterized CC, which is not trivial in this case. Maybe, but I don't know what will be the right, well, the right The right, well, the right. I don't know. I think this is the right version. And in my view, in my view, we should just accept this fact as it is, because it's yes, this is a fact that for principal bundle, it is. Carry on, Jesus. Here's my second question, Michael. This should be kind of very simple. Again, in the non-parametrized case, a local section is really a homotopy. What would be the, I suppose it would be very straightforward to work out, but what would be the analog in the parametrized case? Well, I think it will be homotopy, which kind of fiberwise homotopy. It will be homotopy between projections on two coordinates and it will be fiber ones preserving the beam. Staying in the same position over the bees. Okay, so this is like, yeah, I mean, this shape paths, which are, if we go back to this, let's say this diagram, in this corner, in the left upper corner, the space of paths, these are parts which are uh which each of them is in a single fibre. Is in a single fiber. They don't come out of the fiber. They stay always in the same fiber. So if we section of this will be kind of homotopy between two projections, but staying in the same fiber, always staying in the same fiber. I can see Alex. Hi, Alex. Maybe just one or two more questions before we go have our picture taken. Helen, you would like to go ahead? Yes, I was wondering if there is any relation or estimation with the fiber was category, I mean with the James fiber waste category? Yes, it's a very interesting question. I cannot, I don't think it is equivalent, I don't think it is equivalent, but there could be some connections and relationships between this and fiber-wise category. I mean, I would like to know more about this, but I think it's different notion, at least it is motivated by different. At least it is motivated by different situations. Last question, Jamie Scott, would you like to go ahead? Yeah. So more generally for like TC, we get of an H space is equal to cat of an H space. Those are the same. So since it holds for groups, if the fiber is a group, you have that. Group, you have that TCB of the that this parameterized category is the same as the TC of that fiber. Does that also work if the fiber is in H space is my question? Well, I don't know. I mean, for me, it is this analog of this statement that TC of a Lie group is the category. The category. The analog of this is this example with principal bundle. And our proof, which is here in this slide, it depends on group structure, in fact. But in fact, I don't know what is a generalization of, can you say you have a principal bundle with phi by H space? I have no idea what it means. I don't know. There could be. There could be an interesting generalization of this statement, of this example, to the case when instead of the group you have a H space, but then you have to explain what it means principal bundle for an H space, which I don't know. So I'm not very helpful in this case, in this case of this example. Thank you. Thank you. All right, let's thank Michael again. Thank you. Thanks, everyone.