So, this method is this talk is kind of going to initially want to talk about the unified transfer method. Focus developed the uniform transfer method in the 1990s, and many mathematicians have tailored it for a specific PDE or application. The unified transfer method provides an integral representation of a solution to a PDE in the complex. PDE in the complex Fourier plane. The transfer method developed by author, the transforms, the integral representation for other transforms from other methods oftentimes have issues with the uniform convergence of a boundary. So if you want to evaluate maybe a point on the boundary and you try to take a sequence approaching that point, sometimes you can get issues numerically. The uniform transfer method, on the other hand, provides integral. Integral representation for your solution that are uniformly convergent on the boundary. And so it makes this approach more numerically stable for computations. So in particular, the uniform, the unified transfer method provides a method for analyzing boundary value problems for linear and integrable non-linear PDEs. So there are a lot of examples. Focusing competitive. Focus and Kopev developed it for Laplace's equation in polygonal regions using methods such as spectral analysis and Riemann-Hilbert techniques, kind of related to this conference a little bit. Though this talk is maybe tangentially related to techniques like the Riemann-Hilbert stuff. And the unified transfer method has been extended to many PDEs, such as Laplacian and Humholds, and modified Hummel's equation, and bi-harmonic equation. The bi-harmonic equation. And one thing I do want to point out is that the uniform transfer method includes a global relation, and this kind of couples the function of these boundary values. And this oftentimes is used for numerical applications. And I will try to highlight those global relation later on as we actually use it for examples. Okay, so kind of connecting this to the Cauchy integral formula. Cauchy integral formula. In 2015, Darren Crowdy reformulated the uniform, the unified Chunform method for complex valued functions on polygonal and circular domains by discovering a certain spectral decomposition. So for the Cauchy kernel, before we jump into that, let's think about the Cauchy kernel again quick. So this is a formula that holds for any analytic function on a bounded convex domain omega. And what it says is that And what it says is that, of course, if we have a bounded convex, sorry, just a bounded domain omega, and we have some kind of function that is analytic and extends continuously to the boundary, then of course we have the following Cauchy integral formula. And perhaps the way the key part of the Cauchy integral formula is that we recover interior values of the function by just integrating along the boundary. So we only have to. So, we only have to know boundary values, and we can then get a picture of the interior values. One thing I will point out is that we see that the Cauchy kernel is one over zeta minus z, where zeta is along the boundary and z is interior value. We can see here that we kind of have a pole of order one as that interior value z approaches the boundary value. So, as z gets very closer to boundary, we have that one over zeta minus z kind of acts like a pole. So, this does has effects. A pole. So, this does have effects on the numerical ramifications of trying to use the Cauchy kernel for computations. So, we're going to briefly talk about what Crowdie did. So, Crowdie's method applies to both convex polygons in a plane and to circular domains in the plane. And by circular domains, I mean obviously circles, but also intersection of circles and other convex polygons. Convex polygons. So Crowley derived the following transform pair for analytic functions on a unit disk in the plane. And so we can see here that he had a transform pair where f is written using this integral representation. And the key part is that Crowdie did use the Cauchy integral formula to derive this integral transform. But he doesn't just use the Cauchy integral, the Cauchy kernel, because it's not going to be numerically stable enough to do the computations. Stable enough to do the computations, kind of mimicking what we want to do with the uniform transfer method. So, he found this following spectral decomposition at the bottom. So, it's one over z minus zeta is equal to those three integrals there. And I will show what the contours are, those L1, L2, and L3 contours. I will show those contours in the next slide. But the key part here is that we have the 1 minus e to the 2 pi ik in the first. k in the first and third integral. The k is always away from the points where e to the 2πi would equal 1. So we don't have the poles like we do in the Cauchy integral form. So again, let me switch the slides here. So on the left-hand side is just notice that Z is on the interior of the circle and Zeta's on the boundary. And over here are those contours that I mentioned, L1, L2, and L3. 1, L2, and L3. So that R parameter is a number between 0 and 1, and we want to pick it less than 1 so it stays away from where e to the 2π ik could equal positive 1. So that the integral representation and converges in a formula on the boundary, kind of mimicking the advantages gained by using the uniform transfer method. And of course, if anyone has any questions, just stop me quick. Just stop me quick. So, crowdies, transform pairs, are valid only on convex polygonal domains and circular domains. And again, by that, I mean like intersections of convex polygons with circles as well. In 2014, myself and my collaborators developed this kind of notion of a transformed quasi-pair. And our quasi-pair still has the same advantage of a more stable integral kernel, but it actually holds an any bound. It actually holds in any bound convex domain. However, with this other technique we used, the transformed pair is only valid on certain inscribed trapezoids on the interior of certain inscribed trapezoids in our domains. So we have the advantage of being able to kind of do some sort of numerical approximation, but it only holds on the interior of certain inscribed convex trapezoids. And additionally, this notion of this transformed quasi-pair also worked for a complex Hemalt equation. So I believe it was Crowdie and Haig developed this notion of kind of using that spectral decomposition to develop integral representation for solutions to the complex Hammond equation. And we also mimicked what they did there. They used Green's, the free space Green's function, and then Green's second identity to derive. Second identity to derive an integral representation for a solution to the complex Humholtz equation in that context. In our present work, what we're going to do is instead of using some sort of quasi-transform pair that only holds on the interior of certain convex polygons, we're going to use this object called the Zago kernel, which I'll explain coming up here soon, to develop a new transform pair from any. Transform pair from any domain in which we have some sort of understanding of the conformal map, at least enough of an understanding to approximate it as good as we need to approximate it. So that's kind of the goal of what this talk is going towards. So let's talk about the Z-Roll kernel quickly. So for omega is a bounded domain in the plane. H2 is going to denote the Hardy space. So without digging in too much into the technicalities of what the Hardy space is, is that we can think of it like this. It's simply the space of Alex. It's simply the space of analytic functions on omega that have an extension to boundary of omega that are square integrable. Meaning that if we integrate with respect to arc length and take the modulus square of the function, it's finite. So for example, functions that analytic and extend continuously to the boundary are in H2. So if you think, suppose like a circle, you think about a function that's analytic on interior, you think about this radial extension to the boundary. If it has a radial extension to the boundary and that Boundary and that the radial extension is square integrable along the boundary, then it's in the Hardney space. So, this H2 space is a Hilbert space, and it also comes with a Hilbert space reproducing kernel, and that kernel is called a Zago kernel. So, what this means basically is if you have a function that's in this Hardy space, then we can reproduce the interior values by simply integrating along the boundary and integrating against the Zago kernel. Against the Zago kernel. So here's the formula. It's somewhat similar to the Cauchy integral formula. One key difference is: well, we're using a different integral kernel, but another key difference is here we're interacting with respect to arc length, d sigma. But the Zagro kernel and the Cauchy kernel are different. Oftentimes, the Zagro kernel is very hard to compute. It's actually not known for many domains. What is known is that the Zagro kernel and the Cauchy kernel are going to be the same on a unit disk. So while in general, Disk. So while in general, the zero kernel is maybe extremely difficult to compute for general domains, we do know it on the unit disk, which is the same as the Koshi kernel. Okay, so the reason to use a Zagreb kernel is that it has a very powerful transformation under conformal maps, whereas the Cauchy kernel does not. So if we're trying to map some other domain to the unit disk in order to come up with a transform pair, the Cauchy kernel doesn't have a good wave really, doesn't have a Have a good way of really doesn't have a form where we can use a transformation, but the Zager kernel does. So Bell of Purdue University, back, I think, forget, maybe 1980s and 90s, worked a lot on the Zager kernel, and he came up with this transformation law. And so as you can see there, if we have some map phi, some conformal map phi from the domain omega to unit disk, and we say that the domain is simply connected. Domain is simply connected, which just means we have no holes, right? There are no punctures, no holes. The fundamental group is trivial. What we have is that the Zager kernel for that domain, omega, can be expressed in terms of the Zager kernel for the unit disk, which is the Cauchy kernel, perhaps up to some scalar multiple, but it's just the Cauchy kernel where we have to adjust by the conformal map fee. And so the point here is that if we have a good understanding. If we have a good understanding that conformal map from omega to the unit disk, if that's known explicitly, or at least explicitly enough to do computations with, then we can write the Zago kernel in terms of the Cauchy kernel, which is the Zago kernel for your disk, and that transformation, the conformal map phi, the phi. Okay. So, like I've kind of said a little bit, the Coaching Zago chronicle inside. And the reason that's good news is that Crowdie's work provides some sort of spectral. That Crowdie's work provides some sort of spectral decomposition for the Cauchy kernel. So, meaning that once we have mapped to the unit circle, we can use Crowdie's spectral decomposition for the Cauchy kernel to kind of come up with another spectral representation of the Zagreb kernel on a different domain. So, that is the notion. So, we are requiring for this talk, I'm talking about a transfer and payer for simply connected domains. Simply connected domains. And so this just puts some sort of restriction. We also, in our soon forthcoming paper, are going to talk about, we also come up with the transform pair for domains in which there's kind of puncture or some kind of point removed. So that's also something you can do because the Cauchy kernel or the Zeo kernel for the unit disk with the point removed is also known explicitly. But I'm not going to cover that case. It's just another application, a different payer. A different pair, a different transform pair, but it is in essence the same idea. So I'm going to avoid those details for now. Okay, so this is our new transform pair here. So again, we're going to let omega be a simply connected domain in C. Perhaps it should be bounded as well. And phi is a conformal map from omega to D. And we're going to let F be analytic on omega and continuous on the closure of omega. Then f has a following transformation. Then f has a following transform pair, where L1, L2, and L3 are previously mentioned, are those same contours in the complex plane. So we have f of z is equal to the following, and then we also have rho of k defined as integrating along the boundary of our of that domain omega. And you can see that this new transform pair kind of mirrors Crowdie's transform pair, because basically we simply pull, we map the domain to the unit circle. The coach to the unit circle, and then we use Crowdie's spectral decomposition, and we basically modify his transfer and pair to come up with this new transfer pair. And towards the beginning of the talk, I mentioned something called the global relation. And so we have that rho of k is defined as integral along the boundary of that integrand. And it turns out that if you plug in k being a negative integer, it's zero. The row of k is zero. So this K is zero. So, this fact is oftentimes useful for numerical computations. So, we're going to, I'm going to provide two examples or two main examples of what our transform pair can be used for and how it's useful. So, the first is an application, it's called a mixed boundary value problem for the ellipse. So, we have D is going to be the ellipse, and it's kind of just the standard ellipse centered at the origin with. Lip centered at the origin with major and minor axes A and B, depending on which one's larger. And we're going to consider the following incomplete boundary value problem for analytic functions. So this notation here, when I write like partial bar of f, that's just basically the Cauchy-Riemann equations. So d bar of f is equal to zero simply means the function is analytic on interior. So this kind of like incomplete Dierschley-like boundary value problem says I want my function to Problem says, I want my function to be analytic on the interior of the ellipse, and I want the real part of f to be equal to the real part of zeta, or sorry, of the power of m when zeta is on the right half of the ellipse. And I want the imaginary part of f to be equal to the imaginary part of zeta bar to the m when zeta is on the left, it's on the boundary of the ellipse, but the left half of the ellipse. So, again, the only the real part of f is specified on the Real part of f is specified on the right half of the boundary of the ellipse, and only the imaginary part of f is specified on the left half side of the ellipse. And so, why this is why we kind of call it incomplete. This problem was inspired by some of Shepard's work. Shepard did a kind of incomplete boundary value problem for a circle, and he used other totally different techniques to solve it precisely and exactly. I believing, I think he did a lot of, I forget exactly, but he did a lot of integral transforms. I forget exactly, but he did a lot of integral transforms to solve it exactly. Here we're going to solve it numerically, and obviously, we're going to work on an ellipse, so it's a different context, but that is the inspiration behind it. And so what we're going to do is we're going to paratramize the ellipse using polar coordinates. So this is just using polar coordinates and ellipse. And what we're going to do is we're going to write f, the unknown part of f on each half of the ellipse as a 2π periodic Fourier series. So on So on C1, which is the right half of the ellipse, the real part of f is known. It has to equal z bar to the m, yeah, z bar or zeta bar to the m, excuse me. And we're going to write the unknown imaginary part as a 2 pi Fourier series. And on C2, which is the left half of the ellipse, so on the boundary of the left half of the ellipse, we know that the imaginary part is the radius squared or rho of theta to the m times sine of. To the m times sine of m theta. And again, the unknown real part is written as that Fourier series. And so, of course, we have those coefficients a n and b n, and those are unknown, but those are the values we're going to try to recover. So, the idea here is that we have this Fourier series representation for our function on the boundary. On the boundary, and we have a global relation there, which is rho of k0 for k being a negative integer or zero. So, what we're going to do is we're going to truncate the series for now, say n, capital N, and we're going to substitute our new integral representation, or sorry, our new Fourier representation for f into our global relation and generate a bunch of systems of equations. So, a bunch of equations. So, a bunch of equations. And then, of course, we have as many equations. We can generate as many equations as we want because the global relation holds for all negative integers. So, by eventually just taking enough of these equations and taking their conjugates, we can generate an over-determined system of equations. And then we can solve this system of equations using a least squared algorithm for the truncated Fourier series. And then, once we do that, once we've completed numerically the Fourier series, now we have a complete. Series. Now we have a complete boundary description of the data. We know what the function is numerically on the boundary. So now we can use the integral representation for f to recover interior values of our function. So we don't know what f is on the interior at the beginning, and we only have partial data on the boundary. But by using our global relation, we can generate a bunch of equations and then solve for the coefficients, and then we can recover. Coefficients, and then we can recover the interior values of f via a transform pair. We found that the coefficients decayed rather quickly, and so we chose just to do the first 16 coefficients. So here's kind of a graph of our data. So the real imaginary part of F along the boundary. So the solid lines are the solutions computed via the numerical scheme of our previous study, and those have been verified against the exact. And those have been verified against the exact solution. And the circle denotes the solution computed via our new transform pair. And you can see that they're basically identical, right? The circles lie in lines. So you can see that our transform pair, or yeah, our transform pair is very accurate and it's kind of producing the expected values along the boundary of the ellipse. And this particular ellipse is where A is 2, so I guess that's a major axis, and B is 1. That's a major axis, and B is one. So that is for specific ellipse there. And we did it again. This time we did it for A being three and B being one. And again, we get the same numerical behavior. We get that our new transform pair basically generates the correct values for this partial, for this incomplete Dier-Schleigh boundary value. Okay, so next, we're going to talk about a second set of We're going to talk about a second set of applications that we're using our transform pair for. So, we're going to consider two-dimensional, inviscid, incompressible, and irrotational steady flow. So, we're going to let there be a point vortex on the interior of our domain. And in the interior of the domain, we're going to try to compute the fluid flow when we impose some sort of impermutable boundary value condition. So, again, we're going to let Z0 be the point vertex, and we're going to. Point vertex, and we're going to let the circulation be constant, just be gamma. We're going to write the complex potential function as h, where h is f sub s plus f. f sub s is just the expression I have there. It's log is z minus zeta. So the log represents the point vortex, and f is analytic. And we're going to impose the following condition that says that u, which is the two-dimensional velocity field dotted with the outward normal vector, the boundary is zero. The boundary is zero. So that's kind of the condition we place. And this can be expressed in terms of the complex potential. It's just the imaginary part of H of Zeta being zero. So when I say the imaginary part of H of Zeta being zero, I mean along the boundary. So this is along the boundary of the domain, that that third bullet point there is not all zeta and interior, but just along the boundary. So basically, we're going to try to compute the complex potential. The complex potential, or given that the boundary value restriction in the complex potential, we're going to try to compute the fluid flow along the interior of the ellipse. And again, Crowdie's transfer method worked for convex polygons and circles, but it wouldn't work in this context. For example, it wouldn't work for ellipses, because ellipse is not circular and it's not a polygon or some intersection of those two domains. So here's kind of a picture of what I'm trying to describe. Here's kind of a picture of what I'm trying to describe. So, again, here on the left-hand side, we have some ellipse, and the right-hand side, we have the circle. And the key, remember, with our transform pairs, that we need that map to be explicit. So, we need the map phi from the ellipse to the unit circle to be known. And of course, that the map is. It's your Jacobi elliptical functions. And so, knowing that function, we can now map the circle to, or the ellipse, excuse me, to the circle and then apply our transform pair. And then apply our transform pair as we wish. So, and another example of what you could do is you could pick some kind of non-convex quadrilateral, for example. So, you know, Crowdie only works for convex polygons. So here's an example of non-convex polygon in which our transform pair provides a solution. And this is the map is known, right? It would be some kind of Schwartz-Christoffel transformation that would map that non-convex quality. Quadrilateral to the unit circle. And again, same setup. We pick some Z naught in interior, which is just the point for a text. So yeah, hopefully that's as clear on the picture. So, and the method's going to be similar for how we're going to go about this. We're going to express F using on the ellipse and non-teffects quadrilateral using a Fourier expansion. Using a Fourier expansion, kind of mirroring what we did in the previous application. So, um, we do that, and then we're going to use again our method to kind of numerically do everything. So, I'm going to maybe rush through this slide a little bit because I'm running out of time, but the idea is the same. We're going to use our global relation to generate as many equations as we need, to generate an over-determined system of equations, solve it using the least squared algorithm. And we found that the coefficients take it quickly again, and so we chose n to be 16. So, again, all we do is plug into the Fourier series representation for f, because we need to solve for those coefficients into our global relation and then come up with a system of equations and solve it. So, here are the streamlines we get for the point vertex for the ellipse. So, here are just four examples. We move around the point vertex from zero, and the other one we do is. point vertex some zero and the other one we do is one half e to the i pi over eight so that's some small angle in the first quadrant and we kind of mess around with the parameters so that is what we do there um yeah and these are just four different examples and we don't have the streamlines quite yet for that non-convex quadrilateral but we do have some streamlines for that kind of uh square we have here and again we here we use the uh swarz christoffel transfer uh Schwartz-Christoffel transfer, the appropriate Schwartz-Christoffel transformation from the square to unit square. So, here are the stream lines for that type of example. And I think that should be it. So, yeah, so that's my talk. Thanks, everyone, for listening.