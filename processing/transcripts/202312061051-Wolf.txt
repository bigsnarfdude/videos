So I'm here to introduce you. Thanks. We'll need two again. Welcome back. Life type of introduction to Mona Wolf, who is going to be talking about PDF symbols on double-blood masters. Yes, thanks very much. And also, thank you very much for the organizers for inviting me. It's amazing to be here in Ben. And yes, I will be talking about computing F symbols. Symbols. So when Dave sent me an email and asked me if I would like to talk, the first reaction was like, I have nothing to talk. Because now I'm a physicist and now I'm working mostly in quantum cryptography and not so much in fusion categories. That's what I did in my PhD and in my postdoc, I switched fields a bit, but I still have this project on categories that I'm still doing, which is very close to my heart because I really love this kind of map. So then I had. Of math. So then I thought about: well, maybe I don't talk about results that I have, but I talk about problems that I have in the hope that some of you guys can help me figure it out. Because now that I'm not so involved in the field anymore, sometimes it's difficult to figure out where to get the information that would help me to solve my problems. So I'm taking this as an opportunity to throw those problems in the hope that someone has an idea of how to solve them. Okay. So let me start with like I'm talking about fusion categories mostly and I will not give the definition again here, but I'll just tell you the most important bits that are needed for my talk. So for me when I talk about fusion categories I'm thinking about it in terms of diagrams. Everything I do is in terms of diagrams I draw. So for a fusion category what I need is like these vertices that represent These majesties that represent the two worlds. And usually I work with multiplicity uh multiplicity-free fusion categories. So these uh fusion multiplicities here, they're either zero or one. 0 or 1. Multiplicities will appear later in the talk, but I will draw all the diagrams without multiplicities because it gets really messy. But just if you have multiplicities, then here there would be some label on this vertex and you would have multiple vertices for the same combination of objects. Okay, and then most importantly, the associators in the fusion category. So the F symbols that appear in the sign. These relate diagrams of the form that when I've joined two of these fusion vertices, which I can do in two different ways. So this is one way of drawing this diagram. I can draw it, also I could combine this the other way around, like this. And these are related by the f C. So here at So here I get the corresponding estimates. And these are the estimates from the title that I'm interested in. So what I want is really like the explicit data. I want to be able to write down these matrices in order to do physics with that. And what I mean with that is that I would like to study lattice models in one or two dimensions and study their physical properties. And study their physical properties, like do numerical simulations with them. So, what I usually like to do is study these one-dimensional lettuce moments. So, the lettuce of this form goes on, and I would put uh like you can see this as a a diagram in the category, and I would put the same label everywhere on the outside. Everywhere on the outside, and these intermediate labels would be determined by the fusion rules of the category. This would be one of the fusion vertices. And to do, like to study it as a physical system, we need some dynamic. A physical system, we need some dynamics on it. So, you want to define a Hamiltonian for this. And one way to do this is to look at interactions between nearest neighbors. And the Hamiltonian we like to study is just this kind of diagram that you can stick on top of the chain. So, this will have these A labels and it would project them onto one. Project them onto one other simple object in the category. We call these projectors. And for each object you can put here in the middle, you can define one of these projectors. And now the reason why I need these epsilon is because these projectors, when you write them out, then they have this like they you can write them out in terms of the f symbol. So this would be something like this intermediate. These intermediate labels here, these A's and so on. Okay. So if I like I can then define a homotopy projectors. Fine Hamiltonian projectors, and I can do some, I can study the properties of this physical system. So I can do numerical simulations with that. I can see if the system exhibits a phase transition, if there's a conformal field theory connected to it. And in this way, I can study the connection between fusion categories and conformal field theories. This is what I did a lot in my pitch. But the crucial thing is that if I want to do it, I need this data from the fusion category. I need to have the F symbols as Where you need to have the F symbols as numbers. And actually, I don't care if there's like analytical solutions or numerical solutions, because when you do this analysis, this study of the physical system, you anyway do it numerically. It's hopeless to do it analytically. So I would already be fine with getting numerical solutions to the F symbols. But even that is really hard because to get these F symbols, they have to fulfill a condition called the Pentagon equation. And this is a polynomial, there's a set of polynomial equations. There's a set of polynomial equations up to third order, and it's like a lot of them. And if you don't have any additional information about your category, or if your category is large and you have more of the equations, then it's basically hopeless to try and find the solution to these. Okay, so it's generally hard. It gets even harder if you have multiplicities here. But I was really. Here. But I was really interested in having an example of a category with multiplicities to do this study. Because we've mostly focused on these systems without multiplicities, but I wanted to see, like, can I do it? What happens if I add multiplicities? Can I still do similar numerical techniques? And it seemed like everything would go through straightforwardly, but I needed examples to test it. And there are so few categories, fusion categories with multiplicities where the epsilons are known. Is unknown. So, what happened? There was this AIM workshop in 2021, which was an online version of the AIM workshop. And at that occasion, I got in contact with Daniel Barter and Jacob Woodruff, and I told them my problem, that I would like to have an example, especially like interesting fusion categories. One of them does have multiplicities. And so I told them, like, I would really like to have these. And I was complaining to them, and they were like, hmm, we think we can actually. Hmm, we think we can actually do it. So we started the project together and we're actually able to do it using two algebraics. That's what I will talk to you about first before I come to the quantum double time. So for those categories, like I was interested in the Hagroup fusion categories, so there's two fusion categories, H1, H2 that come from the Hagroup subfactor. And H1, this is And H1, this is the one that has multiplicity. So this is really like bad. This one is nice, it doesn't have multiplicities. And then in the same Morita equivalence class, there's a third one, which is also nice. This is the Morita equivalence class. And like getting the F symbols for these two categories. The F-symbols for these two categories, that was something we could do. And then there was the question: Can we use the information we have here to get the F-symbols for the nasty category? Because this is a rank 4 category with some multiplicities, but small numbers of multiplicities. So it's actually a really nice starting example for category of multiplicities. And then it's like the answer is yes, we can use this, the connection that they are in the same region equivalence class to actually get Reach equivalence class to actually get to the F symbols of H1 when we have the others. So, what you need is a biomodule category that connects two of these. So, we focus on H3 and H1. Something so then if you have this bimodal category, the module category, the representations of the tube algebra of the module category. This gives you H1. But what you need is you need all the data from the H3, the starting fusion category, and you need the data from the module category. But the good thing is, like both of these categories were nice. So none of these had multiplicities and it was possible It was possible to get the F symbols or the however you call it in the module category, the symbol, the associated here. You were able to compute those. And then what you can do with this, you can reduce the equations to get the epsymbals to linear equations, which is super nice. And I will tell you a bit more about how this goes and how these tubes look like that we're going to do. Okay, so the tubes that appear here they are half tubes. So you can think of this like as a tube with it which you have cut in half and But then you have cut in half and trying to draw that. So here the tube has been cut and on the outside here you would put objects from the module category. In this part here you put an object from the original category. So x. So x would be in an example h. For example, H three. Here you have N M P and Q and P there will be objects from the module actually. Okay, drawing these kind of 3D diagrams is pretty nasty, so it's easier to think about them as planar diagrams. So the diagrams were So, the diagrams we're actually looking at, they have X zero if you like take this tube and you smash it to one uh to two dimensions, then you get this kind of diagram. Okay, so these diagrams um will form uh Will form, so we want to have an algebra with these kind of diagrams. So these are objects in that algebra. And the composition of these diagrams is defined as putting another diagrams outside of this diagram. I'm not going to draw the names of the objects, that's not important. And you see one diagram, and then you just put another one on the outside. And importantly, like here where you connect them, the objects need to match in order for you to be able to do that. And this, these diagrams together. The like these diagrams together with this composition will give you an algebra, and you can construct like you can calculate the structure constants for this algebra because for this one you can relate it to such a diagram using the data from these categories, the F symbols and the associata in the in the module category. Okay, and then you can also uh define a tensor product with these diagrams. Product of these diagrams, which corresponds to just stacking two of them on top of each other. You see here again the at the point where they join, there's a not air you cannot stack. You cannot stack arbitrary diagrams. They have to agree on this label here in order for you to be able to stack them. Very good. Okay, so this is the object that we're working with, and this will allow us to construct this H1 category. Okay, so the way it works is the following steps. So you have this tube algebra now, and the first thing you do is you find irreducible representations of the tube algebra. So these call them V alpha. Alpha is the index for the error. And this will give you the simple objects in your target. And in principle, like you can do like you can do it. You can do it with whatever your favorite way is to find these irrelevants. We did it using the Artun-Wedderburn isomorphism, and Daniel Bartha wrote some really nice code that just spits out these irreducible representations, which works very nicely. So this gives you these simple objects. And what you can do, like, because you have all the structure of the tube algebra, you know how to compute things with these diagrams. So you can write down a So you can write down the basis for these irreps, these basis vectors. And you can write this down as a linear combination of tube pictures. So functions and alpha i as tubes. You can write it down in the forms of tubes, and you know how to calculate things. Tubes and we know how to calculate things with tubes. So, this is really nice. This allows us then to calculate the fusion rules just from the pictures. So, the next step, and this is that you calculate the fusion rules. Calculate the tensor product of the irreducible representations. Yes, and to be able to do this, you need to be able to form tensor products of tubes. And this is something that we have defined and we can do with these features. But one point I want to emphasize, because it will come up in the questions I have about the quantum double build of this later, is that you Version of this later is that you need a basis for this tensor product. What you can do is you like you have these basis vectors, so you take the basis of alpha, you take Vector. So you take the basis of alpha, you take the basis of beta, and just combine, like take all the combinations. So we have this basis, this basis vectors of alpha, tens of beta. So you just form your new tens of product basis using all combinations of these. And you see that in general, the dimension of In general, the dimension of your tensor product space, it can be smaller than the product of the dimension of the IREPS individual ones. So dimension of the alpha tensor beta space smaller or equal to dimension of alpha times the dimension of beta. Because for the tensor product, we have these restrictions here. Not all of these basis vectors can be tensored together. So we might end up with the smaller numbers of basis vectors. Might end up with the smaller numbers of basis vectors here than the product of the net. Okay. But then, with using the tubes and everything, you can calculate the field modes and you can calculate an embedding matrices that embeds this irreducible representation into the tensor product space of this. We also call that V, which is a bit of unfortunate choice of notation. I don't know what I can't remember. It's like this is embedding matrix. And in terms of pictures, this is basically something like this. It's a vertex that maps this, invests this alpha irrp into the Alpha evap into the tensor product space here. And then if we're like, these are now objects in H1. So these are basically our fusion vertices that we had before. But now we have, like, this is not just a fusion vertex in an abstract way. Like, we actually can write down a matrix for this. And this will help us greatly in calculating the estimates now. Because once you have these embedding matrices, you can turn to the last step and calculate. I can't lay F symbols because the F symbols, unfortunately, all my diagrams are now like lying down before I've written them upwards, but somewhat different people have different favorite notations. So the epsilon will now look like this. Here we have our names or simple objects, our errors here steps. And this for each of these vertices, we now have a zero. For each of these vertices, we now have a matrix that we can write down. So, what this actually is, is that here we have a matrix that embeds mu into alpha tensor beta and one that embeds delta into mu tensor gamma. And here we have two other matrices. We can just write this down and have it, then we get the linear equation for the epsilon. Get a linear equation for the epsilon. So, more precisely, what you do is like these embedding matrices, you recast them as three tensors, and then you contract them via this flag that joins them. But this is like you have, if you have calculated the embedding matrices, then these are just numbers you put together, and you have a linear equation for the absolute. And the really nice thing about this is that if your target category has multiplicities, that's completely fine. Like you would have all these additional labels here. Additional labels here. So you have more labels in the F symbol somewhere. You sum over more things. But it's just more equations. It's not that the, like, it's not quadratic equations or anything. It's still linear equations. It's just more. So this makes it, like, in this way you can get the epsilon of a category with multiplicities from linear equations, which is pretty nice. So this is what we did in the project with Daniel and Jacob. By Daniel and Jacob, and we were able to successfully get the estimates of the H1. Then I could start doing numerical calculations for this spin chain with that, which is not finished yet. Then a whole other bunch of problems with computational things arise, but at least I had the epsilon, so it could start to work. Yes. Are you expecting that your numerical simulations will reflect the back then your numerical simulations? That's something I wanted to see. Yeah, if I can see that, like if they give similar things in the H3 category. But so far I'm still really struggling with just the computation because, of course, because of the multiplicities, all the dimensions get much larger and I need to be more clever about my numbers. Okay, but then we successfully did this. And then Jacob mentioned to me that actually you can like. Mentioned to me that actually you can use a similar algorithm to get f-symbols for the quantum double, the center of those categories. And that would be really cool. And I was very enthusiastic in doing that because this worked very nicely. So I thought, I mean, if you can calculate the epsymbals just by linear equations, that would be amazing. But of course, you have to do a lot of work before you get to that. But you have to get the embedding matrices. And there are some problems biased. So I will now tell you about the problems I'm currently. The problems I'm currently dealing with if you want to get the do a simpler thing but for to get the quantum double out of it, then you do need a different kind of tube um to to start with. So the now we we don't use these half tubes, but we use full tubes. Full tubes. Tubes now look like and now all these labels come from the same category. So I can say I just choose all of them. I use H three for my construction, I choose all the labels from the same category. All the labels from the same category. Okay, now I can define, like I start with these pictures, I can define a composition on these pictures, but I just take one and I put another one on the outside. Like I would just this. Then I can use the epsilon rules from this category to get it back to the To get it back to the previous picture. And with this, I get the structure constants for the algebra, and I can start doing the same algorithm like that. So the first step works very well with this. I just, I can define an algebra and I can get the irreducible representations using Daniel's decode. That works still very nicely. I can write down the spaces. But then I need to calculate the fusion rules. And for this, I need to define the tensor problem. And this is where things where I'm currently... Things where I'm currently stuck because I'm not understanding the tensor product very well. So, what we're doing for the tensor product, just as follows, you take two of these pictures and you write them next to each other. And then you join them. Like, you need to have a tensor product that allows you to put a Allows you to put another picture on the outside event to act with the original category again on the tensor product. So this seems like a natural choice. But now the like before I said here, when you do this and you get a basis for the sensor product space, you end up with something that's smaller or equal to that. Here we have the opposite situation. So, because here you fuse. A and B, which infused to C. But of course, there are now different choices of C because like in your function rules, you could have several terms in the sum. So for each of the C's that appear in the sum, you have a new diagram. And the question is, what do you do with these different choices? Because you start with the same basis vector in your error, like basis vector in your error like this would be the alpha arrow I choose one basis vector this is the the other irrep beta and for two basis vectors in these original irreps we get multiple basis vectors in your tensor product space. So this is so in general you have your dimension of alpha tensor beta is now larger or equal to the dimension of alpha tensor beta. The dimension of alpha cancels the dimension of β. And I'm not sure what to do with that. I'm not sure how to understand this properly. What I did is I just said, okay, I treat each, for each choice of C, I treat this as an independent basis vector, and I see what happens. And I use the Fibonacci category as a test case because it's small, but it has, there are different choices of C here. So for this, the tensor product space. So for this, the tensor product space is a larger dimension than the product. And I could retrieve the correct fusion rules out of that. So that seems that it's kind of okay that your dimension of the tensor product space is larger now. But I have no, like, I don't understand the mathematical foundation behind that. Why is that okay? Why should I expect this to happen? So this is like, I'm looking for some hints on what mathematical foundation this is based on. Mathematical foundation, this is based on what to expect and how to justify that this happens. So, this is the main problem I'm currently stuck with. Also, another problem is at some point when we want to talk about unitarity of all this, we need to define an inner product on the tensor product space. This is also something I'm confused how to do it for. So, these are the the problems I have and I'm perfectly fine with time. So, this is all I wanted to show you. What did you show you how to do that? So thank you for that talk. So I'm not so familiar with this pictorial way of looking at it. For the examples like the Hoggruff category, these quadratic examples, there's this other method to Azumi where the two algebra has this very explicit model and where the elements of the two algebra belong to an algebra and the multiplication two algebra is described at certain The multiplication development is described with certain explicit endomorphisms. This is this Kuntz? Kuntzal, yeah. So in that model, the tensor product is sort of manifests essentially just composition of endomorphisms. So there's sort of nothing to think about. In fact, we are able to compute, so with David Addis, we can compute many of the 6J symbols of these hygiene. But I know I'd be interested in seeing that tutorial and how that translates. But with David, it is possible to compute them. Yeah, at some point I tried to understand this Kuntz algebra method as well, but As well, but I haven't properly succeeded yet. But it would be cool to see the connection. It's a bit restricted to the specific class of examples, like the ones that have this group symmetry, like Neurogroup and the Hugo Rock series. But for those, it works quite well. You can actually use this. Yeah. Can you ask what sort of things are you looking for in your simulations? And what are you simulating? Are you in or computing bias states? Yes, so what I'm looking for is So what I'm looking for is the getting an estimate for the central chart of the conformal field theory. So do you have critical parameters that give you critical states or is that like first find critical states, then look for central charge? Yes, yeah. Yeah, yeah. Yeah, I haven't done those computations in a while now because I'm stuck with this stuff. I wanted to ask about, at some point you do this isomorphism using Hartenvetter and decomposition too. Is that algorithm deterministic? Because I've heard of algorithms to do this, but I don't know. Good one, I guess. I'm not so sure about that. Daniel's algorithm? Yeah. Yeah, so it uses probability to like make a guess, but then it it's deterministic in the in the sense that it gives it more precise. Yeah, the sense that it gives you more precise. It works quite well for all the examples we have thrown it on.