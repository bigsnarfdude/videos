Thanks everyone. Good morning, I suppose. It's still kind of morning there. So thanks for inviting me to join and present in this interesting workshop. I have been able to follow some of the talks. Looks very, very interesting. Seems that some of the speakers already set the stage for my talk, but I try to, let's say, avoid some of the overlap. Some of the overlap. And my talk is about MTC, machine-type communications, related access design, both. Well, I'll tell a little bit more in a second what I mean by access design. And here, the particular focus is somehow on considering correlated channels in the MIMOS regime, meaning spatial correlation in the Spatial correlation in the provocation environment, what are its impacts. And also, some of the work we have done considers device activity correlation so that in addition to the spatial correlation of the propagation, there may be some phenomena which are spatially correlated. And we merge in parts of the work both of these two fields. This is mainly work of two of my doctoral Of two of my doctoral researchers, Hamza Dielot and Lucas Shibeiro. Both of them are in the final stages of the research and they both will have their defense in April. So it's kind of good time to report some of the work. And in addition, there have been other collaborators like Markus Leinolen, who unfortunately passed away. He was a postdoc and senior researcher with us. And senior researcher with us. And then, in the very recent work, also Miko Silamba, who is a math professor, of course, statistics professor at OLU, has been collaborating. And some of the work is joint work with Hanan Autos and Ula Tirkonen from Malta. And I suppose Ulav is there, and he can probably have more offline discussions with some of you, at least on the parts where he was involved in, I suppose. Okay, let me see. Okay, okay, this was there already. So, I think at least two presentations today already had the 60 circles. So, I think I don't need to explain it. But what I have here in addition is this where the 5G started from. So, we had this triangle and our focus. And our focus when we started this research was more like 5G, and we were interested in this massive machine-type communications, massive connectivity of IoT devices, the rates of which are typically low and the traffic is sporadic, so that we have indeed the problems of the sporadic communications easily taking significant portion of the bandwidth. The bandwidth, or alternatively, if we apply grant-free access, then we have the problems of the channel estimation, user identification, and all that, as we will discuss here. And then, what I foresee, but and will not discuss much more as an interesting future work with six G and this circle, is that how we can use such massive connections also with this integrated Also, with this integrated AI and communication and integrated sensing and communications, which were some of the new features of 6G to come. But maybe that's the next talk, next year, or something like that. And one slide about the 6G flagship, which you may have heard about. This is part of that, but it's, let's say, small item of that. So the overall flagship covers topics beyond connect. Topics beyond connectivity, distributed intelligence devices, and hardware technologies, and it's almost 400 researchers. So somehow we have been paving way for 6G with this work, although our motivation was already on the 5G era. Okay, so going a little bit more or closer to the scope of our work. Of our work. So it's quite similar compared to the two earlier talks today. So, at least what Chandra was just talking, we have rather similar problems set up. We have a large number of devices served by single-cell scenario where we have one base station serving large numbers. Large numbers of potential users, and only a fraction of them, maybe 10%, 5%, is active at the time. And the majority is inactive. And then we assumed also mostly unscheduled access, although some of the work we will do and present can be applied, of course, for scheduled access as well. And as was mentioned earlier. And as was mentioned earlier, the big problem is that we need to not only recover which users, which devices are active, but also to estimate the channels of those active users if we want to perform coherent demodulation of the data packets. And even if we would do non-coherent combining, we would still need some level of channel. Some level of channel knowledge, at least on some power levels, even if the phase synchronization would not be necessary. So we have several problems: how to detect, recover, which users are active at the time, how to estimate the channel, how to detect the data, and then one more, how to allocate pilot sequences. Most of the work I address here. Of the work I address here focuses on user activity detection and channel estimation, but we touch also a bit the data detection, which was not maybe our main focus, but it's of course part of the framework anyways. And then we also consider pilot sequence allocation. So two main topics here: one, joint activity detection, channel estimation to come, and then pilot allocation in correlated. Pilot allocation in correlated channels. And in the pilot allocation, we assume that we have estimated the correlation, we know it somehow. Practically, we need to estimate it. In this first work, we also consider the case that the general correlation is actually not known, but it's estimated as part of the activity detection and channel estimation process. Process. Okay, here is still one more summary of the framework. And as said, maybe I'll just trace the fact that most of our focus here is on this RAD-free access, where we assume that the users activate whenever they have a packet to send. They have a packet to send, and then they don't request particular permission, so we use some carrier sense, multiple access, or something like that. We didn't really go into details of the access schemes, which of course is important topic on its own. The scheduled access, I said, would benefit also from the pilot allocation ideas, which I come. Which I come to which I focus on later. So that word is applicable for both schemes. Okay, so let's first have a look on this joint activity detection, channel estimation. And we have done some works already a few years back. So there is a paper in. So, there is a paper in trans wireless communications appeared in 2020, so already like one and a half years ago, came out. And there we did something which I presented here in a little bit more limited setting. There, we assumed that the channel correlation is known and we formulated the problem which I was describing as a multiple. As a multiple measurement vector spas recovery problem. And now, in this work, which has been presented in two conferences, and there is a journal paper in the review, we explain that a bit. We use different recovery algorithms, and then more importantly, we consider different activity statistics. Activity statistical activity model for the devices. And in particular, we focus on examples which could fit, for example, to some area surveillance or some industrial control so that we assume that the devices are graphically spread so that they form clusters and some of the clusters and some of the devices sorry wrong drive um okay yes some of the devices are active at the time and they form in practice some clusters so that when a device is active then the probability that the neighboring devices are active as well increases and with this framework we Framework: We apply bias and recovery. We try different models for the priors to promote the sparsity and to enhance the support recovery rate and the channel estimation. And usually, we get actually quite good performance, as you will see. And we can use several solutions, several selections for the prior function selection, and there we can. And there we can trade off complexity versus the efficiency. Okay, so our model here: we have some n devices, and being typically large in some cell area. When a device activates, it sends a pilot sequence and then uplink data. And we assume that base station has capital M antennas so that we can capitalize. So, that we can capitalize also the spatial correlation structures in the radio channel. And the number of users is large, and here we just assume that each of them has unique pilot sequence. We don't try to allocate and optimize them. We could use, for example, random pilots as we do in the numerical examples. So, the pilot allocation, pilot optimization work is then the next topic. Is then the next topic. But here we just assume non-autogonal pilots, so there is pilot contamination. And with that, we try to do our best for joint activity detection and channel estimation problem, which we call as judgkir. I don't know how common acronym this is, but that's what we coined. The signal model is basically the same which was already presented. This was already presented today. So we have when we consider what the base station observes, we have the channels, which are H is the radio channel, then we have V, which is the pilot sequence of ith user, and then gamma is an indicator function of the activity. So if gamma is one, the user is active, if it's zero, it's inactive, and the It's inactive, and there is a component in the received signal depending on the activate, or is not depending on the activate. W is the added noise, which we assume white and Gaussian in this case. And then by x, we denote the product of the activity indicator. Activity indicator and the instantaneous radio channel. And then, when we represent this matrix model as a matrix equation, so we collect the observations of different antennas averaging over different times. We eventually have a sparse recovery problem. Recovery problem, more precisely, the multiple measurement vector problem, as known in the sparse recovery discussion. And in our earlier work, which I mentioned is already available in the journal, we applied basic sparse recovery algorithms for this case so that we were able to perform both the support recovery and estimation of the channels, which boils down. Channels which boils down estimation of X once the indicate activity indicator is known. And there we applied OMP and AMP and other sparse recovery algorithms. And here we want to now extend it a bit more so that I said we have spatially correlated channels, so there is row correlation in X. In X in the channel vectors, and in addition, there is correlation in these activity indicators. So it's kind of a double correlation model. And here is the kind of graphical illustration of our cluster correlation model. So, assuming that an event takes place here, then Here, then maybe to be half of the or some portion of the devices get active, but not necessarily all of them. Then there may be other clusters where the activity is even higher or lower, and some clusters may on the average remain completely inactive. And then for the channels, we assume. Gaussian assumption here we assume Rayleigh fading also Raisian would be possible and the correlation model of this Rayleigh fading or complex theorem in Gaussian model is assumed to be unknown a priori so we need to estimate that as part of our learning process and the activity button as said is pass correlated and hierarchical Hierarchical meaning that if the cluster is active, there is a certain probability that the cluster activates, and if that happens, then the probability of individual users to become active is larger. While in the other case, if the cluster is not active, the users, okay, we can consider that they are if the cluster is inactive, all the users, all the devices are inactive, or we can still set. Or we can still set small probability also for activity in such a case, but that's how it becomes hierarchical, anyways. And this is now a modified version of the multiple measurement vector sparse recovery problem. So basically it's to some level it's the same problem, but now there is this inherent correlation structure. Correlation structure hidden into this matrix X, and we assume that it's event recurred somehow. So, X is Ross pass, and the support has the correlation structure. Still, the problem we consider is the same. We want to recover X from the received signal Y. And as said, Asset these channels and thereby X is given the activity are conditioned on the activity are Gaussian. And what we want to do is joint maximum aposteriary probability estimation. So we want to estimate X, that is the channel, gamma, that is the activity, so that we recover the. The activity so that we recover the support and also the correlation matrix. So we wish to maximize the joint probability density function given the data we observe. Of course, that's quite complex to implement, as we know. So we do some simplifications and approximations. So first we multiply so that Multiply so that we take the priors that is the prior for the activity and prior for the channel correlation. And then we condition X on those, and then we have the conditional probability of Y given X. And then we can apply the fact that we assume that the noise is Gaussian. That we assume that the noise is Gaussian, we also assume that the channel is Gaussian, as mentioned earlier. And then we can represent this so that we have the priors for the correlation and prior for the user activity. Those are now the correlation structures we consider here. And practically, we now do the common kind of Pi SC and trick that we try to apply some, let's say, useful assumptions of the prior distributions. So we have now a set hierarchical structures. Set hierarchical structures so we have the sparsity prior for the intra-cluster sparsity. So if the cluster is active, then each individual element assumes the prior which is relative to the block of comma i, the indicator function, so that that is the now, that's now a variable, it's not the country. They come true. And then for the clusters, we apply similar, but now we sum it over all the variables within the cluster, activity variables within that cluster. And for the covariance, we use the Bishard distribution as prior, which is kind of com common prior in the Gaussian context when you want to have a prior for the covariance. Prior for the covariance. And here, this Bi is some positive, semi-definite matrix, and it's kind of prior, I guess, on R sub I. So, the more we know based on the propagation model, Chanel models, or whatever is the source on the true covariance vector our prior. Whether our prior will be. And thereby, we will have the effective channel, which is Gaussian for the actual radio channel, and then kind of indicator-based for the user activity. Okay, I think I need to speed up a little bit maybe, but then we substitute the priors to the model. To the model, and then they want to find out the map estimate by calculating the maximum of the PDF, which boils down, minimizing the function depending on the different terms, as was here. We substitute all the priors, not going through all the steps here. This is non-convex, it's hard to optimize. It's hard to optimize. So, we do some relaxation or approximation. So, we relax the prior on the activity so that we actually use the norm of x as the instead of x, and that simplifies it. And then we estimate only portion of the covariance matrices, those for. The covariance matrices, those for which the activity indicator exceeds certain threshold. And then we iteratively estimate using ADMM the adaptive method of multipliers algorithm. And in practice, what we end up doing is the cluster level detects. The cluster level detection: we try to recover which of the clusters are active, and then once that is done, for those clusters which are declared as active, we do the user-level activity detection. And then for those, we do the HNL estimates. So we have the cluster level. To sum up, we have the cluster level sparsity. Cluster level sparsity, intra-cluster sparsity, and then the channel sparsy spatial correlation prior, which is the visual distribution. And in practice, for this intra-cluster sparsity, we apply Laplace distribution that seems to be performing quite well in the realistic simulations, as we will see. And that. And that then ends up in a structured so-called spike and slap prior, which depends on the channel correlation and the activity model of the users. This is still quite complex, so we apply expectation propagation approximation, which simplifies. which simplifies it. It's not super simple yet, but basically we approximate the posterior with a simpler function. We try to find a factorization with respect to all these priors. So this is the channel. This is the cluster level and this is then the individual device level. Device level factor of the of the probability PDF and then we end up in the expectation propagation algorithm where we approximate these all these factors and then we have the global approximation for approximation for for this q which is related to the p d f of the joint probability of x and c x being the channel times the activity and then we eventually also get the estimates of these covariance matrices then we repeat this until until the it it converges and it seems to converge And it seems to converge reasonably well. So, let me show a couple of numerical examples. So, our performance metrics are similar, which was discussed already earlier. There is the support recovery rate, which tells us the probability that we recover the correct set of active devices. And then the other metric is the mean-squared error. And here we fixed the And here we fix the SNR to 15 dp. We have M20 antennas. Total number of devices is 200. Out of them, 10% is act. Sorry, 16 is active in reality. And we'll simulate this with respect to the varying pilot lengths. And our proposed. And our proposed scheme is this expectation maximization, expectation provocation. So it gives the best recovery rate. We also consider this map ADMM, which is actually in some sense not simpler, not simpler, it's actually about the same same complexity and it performs. And it performs not equally well. The DSBL is an early, earlier version which has been proposed in the in the early, earlier work, so we can improve Whitepell over that. And the same is true for the MSE. We also considered the case that actually we have mismatch in the activity pattern. So Activity pattern. So if it happens that our cluster model is not valid, but all the users in the cell are equally likely active. Still, the scheme works reasonably well. Of course, it suffers some penalty compared to some some schemes which don't make this clustered assumption, but but still it's relatively robust. It's it's relatively robust to that. And there is the convergence, it doesn't take that large number of iterations, some 10-20 iterations with these numbers of active users and antennas. So this correlated device activity seems to work. It's not exactly simple yet, so some further work is needed to make it really practical and scalable. To make it really practical and scalable for fully large systems, but it shows quite good potential. And it has, of course, the complexity efficiency trade-off inherently built in the Bias CN framework. And then, I think I don't have that much time, but a couple of words about what happens if we then try to optimize the use of pilot sequences. Use of pilot sequences. So, if we try to use autoconal pilot sequences and try to minimize somehow the contamination, now we don't consider here the user activity, we are just focusing on channel estimation. So, this could, in that sense, as I mentioned earlier, be applied also to scheduled access. And our aim here is to use channel charting to optimize the spectral. To optimize the spectral efficiency and MSC of the channel estimation. So we have basically similar spatial correlation model as earlier. We formulate it a little bit differently, but in essence, it's the same Gaussian correlation model. And here we assume as well that we send uplink pilots, estimate the channel and the Pilots estimate the channel and then we send uplink data. We allow also the downlink transmission, so in that sense, it as set could fit to the scheduled access equally well. Then we create the pilot contamination model, which is somehow similar to what has been done in the massive MIMO literature. And what we now wish to do is that we use this channel correlation information. Correlation information either directly from the correlation matrices or some of these channel charts which capture the essence of the correlation structure and allocate the pilot sequences to users, which are the same pilot sequences to users, which are spatially very much uncorrelated. For example, they could physically. For example, they could physically be in different directions, and here is an example of that. We have users spread around this place station here. The colors are showing somehow what is the angle, so how well we could separate them in the angular domain. And then we can create these channel charts which capture the correlation. Correlation information can be done in several dimensions. One dimension typically captures somehow only the angle, two dimensions, three dimensions can capture also the impact of the distances and other metrics hidden in the complex channel gain matrices. And then to summarize it kind of briefly, here comes Multi-MTC. Here comes more the MTC access case. We assume that we have a large number of potential users and only a subset of them is active at a time. And then we try to allocate the pilot sequences so that we use autoconal pilots for those whose channels are the second order channel statistics somehow is very similar to each other, and then use reuse the non-orthogonal. Reuse the non-orthogonal pilots or reuse the same pilots for users, which are well separated by the statistical properties. And we can do adaptive channel chart-based interference map and then do, for example, greedy allocation. So we try to always allocate the users creedily to the user which is giving, for example, the worst. Giving, for example, the worst interference, so for that we allocate the autoconno pilot. And here we assume kind of small macrocell, one square kilometer or moderate size macrocell scenario, 512 users, out of which 64 is active, three seconds. Is active three sectors. This is low frequency, six gigahertz bandwidth carrier frequency. And then we assume semi-realistic channel model with quite large number of parts, maybe even somehow too large, with angular standard deviation 10 degrees, which determines the level of correlation. And then we evaluate the performance with the rate, penalized by pilot overhead, and the mean squared error of the general estimate. And again, saying the long story short, so if we know the real position so that we can really minimize the interference. Interference in the angular domain that gives typically the best mean squared error and also the best. Well, this is mean squared error, but we will see it gives the best rate often. But still, that is often a bit too complex, also in the sense that we don't necessarily know the positions. So, if we can estimate just the second order Second order statistics, the correlation covariance structures, and use channel chart, we typically with different schemes outperform the random pilot allocation quite significantly. And as said, here we see the same for the sum rate. So that carries over to put that set up as well. Set up as well. Okay, I think I used all my time and a little bit more. So, I think the second area of work, we worked on the pilot contamination, minimization, and mitigation by channel charting. And if we try to summarize what we learned from here is that this joint activity detection channel estimation, even with unknown statistical correlation. Unknown statistical correlation seems to be doable. There is evidence that you benefit from using the correlation structure, both the activity and the channels. And we might consider merging the pilot allocation in the same framework that we didn't do yet. And even not necessarily that complex. Necessarily, that complex genetic charting could work quite efficiently in that context. Although, of course, the optimum pilot allocation is still quite complex and difficult. Okay, thanks for your attention. So