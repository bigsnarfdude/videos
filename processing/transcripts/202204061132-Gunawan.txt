And Emile Defrett, who's going to talk about what is a connection between cluster algebras and freezes. Please take it away. Hello, everyone. My name is Emina Yudram. And I am Emily Gunawan. So first of all, we would like to thank Chelsea and the other organizers for making Winard 3 happen. Emine and I are very happy to be part of WinArt. Um, so this past June, um, Emine and I attended a summer school in algebraic combinatorics where Christina Serienko and Gordana Totorov gave these wonderful lecture series, Christina on phrases and cluster algebras and Gordana on cluster categories. And so we took these two beautiful pictures from Gordana's lecture. Pictures from Gordon's lectures, and we want to try to explain what the pictures mean. So, Emine, do you think we can explain these in the next 17 minutes? I think so. So, here is a simplified version. So, what we are doing is really in the land of representation theory of algebras, surfaces, and combinatorics. More specifically, we are working with freezes on the. We are working with freezes on the combinatoric side, cluster algebras on the algebra side, and cluster categories in the representation theory of algebras. And for surfaces, we look at triangulations. So we will give you a glimpse of these topics with examples. Actually, the previous talk was excellent. Actually, right before she did A2, we will be going through A3 example and we will give. Example, and we will give you examples to give you a glimpse of each topic. So, we would like to start with a freeze. Emily, what is a freeze? Well, it depends what you mean by a freeze, but in the 1970s, Conway and Coxeter defined these arrays of positive integers where the rules are the top rows are all ones, and the bottom rows are all ones. The bottom rows are all ones. And we have this SL2 condition where every time you see a diamond, for example, like this, you think of it as a two by two matrix and you say that the determinant has to be one. So A times D minus B times C is equal to one. And Conway and Cossitter prove that these freezes are in bijection with triangulation. Are in bijection with triangulations of a polygon. So they are Catalan objects. And one way to see the bijection is visualized in this slide. So if you have never seen this before, try to guess what these numbers mean. So here I have four, one, two. In fact, these numbers are counting the number of triangles adjacent to the vertices. So here we have. So here we have one, two, three, four, and one triangle, and then two triangles, two triangles, two, and one. And that's how the bijection goes. Now, fast forward to the year 2000, Fomin and Zalovinsky define this wonderful cluster algebras. And for type A, we can actually define Define them using the Conway-Coxeter phrases. So, a cluster algebra is a subring of the field of rational functions, and it has a distinguished set of generators called cluster variables. So, in type A3, what you can do is first write down the top row of ones and bottom row of ones, and then write down three. ones and then write down three initial cluster variables x1 x2 x3 and then to to fill in the rest of the entries we can apply that determinant condition so we can fill in this entry here by making sure that x1 times the new entry minus x2 times one is equal to one. times one is equal to one and and then from from there i can compute this entry this entry and and so on and eventually i will get back to the initial cluster variables x1 x2 and x3 so in fact there are exactly nine cluster variables for a3 and this generates my cluster algebra and what what happens is And what happens is that if we set the x1, x2, x3 to 1, we get the freeze that we saw in the earlier slide. So one way to think about the Conway-Coxeter freeze is that they're just counting the number of terms in a cluster variable. But the usual way. But the usual way to think about a type A cluster algebra is to think of them as coming from a triangulated polygon or from a type A Dinkin quiver. So the way to connect the triangulation to the quiver is whenever you see two internal diagonals in a triangulation in this way, you draw this arrow in your quiver. Draw this arrow in your quiver. And that is why we have here 3 to 2 and 2 to 1. So this gives us this A3 quiver. And in general, one can take a quiver and define a cluster algebra that way. So, Emine, we just saw that we can make a cluster algebra from this. We can make a cluster algebra from this A3 quiver. Can we make a different algebra from the same quiver? Yes, we can create a path algebra from this keyword. Here again, like we can start with any keyword and we can define the path algebras, but we are concentrating on this example A3. So we take this A3 in general, we can take A and the algebra V right now is the algebra. We write now is the algebra generated by all the paths in the skewer. So we also have trivial paths for each vertices. Basically, for your algebra, you're taking your generator as the paths. And the multiplication is given by the concatenation of the paths. And then, as we saw in the previous talk, the representation category of A2. Here is the representation category of A3. We have six objects. We have six objects. Now, we want to show somehow the interaction between these fields, cluster algebras, phrases, and representation theory. We started with 8D and we got six objects, but we expect to have nine. So what do we do? We extend, we want to go to a bigger category, which is again from the previous talk. It's the DB red Q in this case. Rep q in this case, so the bounded drive category of this representation category, as in the previous case, again it's the this infinite strip. We have the copy of the module category with its shift. So this is an infinite strip on both way. Now, okay, we go to a bigger category, but now it's too big. There are infinitely many objects here. So we want to take a quotient. So we want to take a quotient, which will give us what we want. What do we do? There is a nice functor, a composition of serve functor with the shift functor. This could be the inverse, but there is a nice functor. We can take the quotient and the orbit category will give us what we want. So the fundamental domain. Fundamental domain of this quotient category will be this copy here. We have the module category plus these three extra objects. So there is a beautiful quotient which will give us these nine elements in the fundamental domain. We call this quotient category, cluster category. Here, more explicitly, you can take this piece as well. You can take this piece as well, or again, the module categories. Here, here is the if you're familiar with the notation, the shifted projectives. We have the module category plus the shift of each projective. And now we have nine object. That's very nice. So, going back to the cluster algebras, now we got this nine object in our cluster category. There is a beautiful map. There is a beautiful map which takes each object to a cluster variable. So now we establish the correspondence between this category we created and the cluster algebra. And it's quite natural. It's type AN. Of course, things works very beautifully. Even in this example, if we look closely, we will be able to gather a lot of information. So we noted So, we noted the modules with these numbers. Basically, they show where this module is supported. For instance, 1, 2, 3 is the module supported over 1, 2, and 3. And you see it, this thing corresponds to this cluster variable. And in the denominator, we have x1, x2, x3. So there are very beautiful things happening in this correspondence. And very naturally, again, we can see. Very naturally, again, we can see the connection to the triangulation. So we have this module representation one, two, three. And we can actually visualize this as an arc on this certain triangulation. So we have to fix some stuff as in the cluster algebra, we start with some initial setup. If we set it as these blue objects, they are this the initial. There, this initial triangulation, and in this case, one, two, three will be this arc, which crosses the arc one, two, and three. So these bijections, we are seeing them in this example, but they are quite natural and generalize to the whole type A story. And also, like it goes beyond type A. So, this machinery works very well in. Machinery works very well in the finite case. So I now wonder: can we go further, Emily? Well, so before we were talking about the Conway Caucuses, there freezes, but and one of the requirements is that you have to be bounded below by a row of ones. And if we remove that requirement, we get Requirement: We get what we're calling here infinite freezes. So there are again different definitions of infinite freezes, but we're going to use with this one. So it was shown that if you start with an infinite freeze, so basically an array of numbers with these ones at the top row, and you again apply the SL2 determinant condition. It's always possible to model this by either a triangulated annulus or a triangulation of a one-sponsored disk. And one way to see this connection is similar as before. So here I have an annulus that is triangulated. And as before, I count the number of triangles adjacent to each vertex. Adjacent to each vertex. So here, two, two, four. And I write down the two to four and I write that on the second row of my array. And I then fill in the rest of the entries by using the determinant rule. And I will get an infinite freeze of positive. Infinite freeze of positive integers. And instead of looking at this one boundary of the annulus, I can look at the other boundary and again count the number of triangles adjacent to each vertex. So here I have one, two, three, four, five. So there's five and then there's two. And I write down the two, five on the second row. Then again, compute the rest of the entries using the detergent. Compute the rest of the entries using the determinant rule, and that gives me an infinite trees that is different from the previous one. And from the triangulated annulus, I can also get a quiver using the same rule as before. So, here, because I see that two internal diagonals form this angle, I have this arrow from two to one, and then also from three to one. One, and then also from three to two and five to three. So notice here that we have three arrows going clockwise. So that's where this three is coming from. And then we also have two arrows going counterclockwise. And that's where this two is coming from. So from this quiver, we can again create a cluster algebra of type of type A tilde three comma two and also a cluster category. All right so the idea is similar to to before. So to make the cluster category for FINAA3, we take the module category and add the shift of the The shift of the projectives. And then we again have this CC map where, so before we would get like all of the objects in the cluster category of type A would give us all of the would give us cluster variables. So in this case, we get cluster algebra elements, but not all. But not all of them give us cluster variables. But if we were to remove these and then everything in these tubes, except at the very near the bottom, we would again get the cluster variables of this cluster algebra. And I think we will stop. We will stop here and let the in-person participants go to lunch. And for people who are interested, who are interested in this topic, here is a link to the lectures from the summer school last June. Thank you. Thank you. Any questions or comments or focus on? Any questions or comments from folks online? Boxes and scene claps. Compliment. Fine, I will do it. Okay, heart, that's good. The hearts are good. Party emotions are good. It goes very, very clear. Very, very clear. I guess I can start things off with the person. It's like certain things a lot of papers. So we discussed everything in type A, yes. So we couldn't hear the question because the connection got lost, I guess. Can you type in also maybe it's easier? Because there is something that we cannot hear very well. Sorry, just chime in. I think you're in a poor situation. I think you're in a poor spot in the room. I think if you move maybe to the other side or to the front, can you hear me? Can you hear me? Yes. Okay. Is there any other work done in type D or E? Type D? Yeah. Yeah, I mean the finite types, the A D E, the cluster category is defined. These correspondence, they work perfectly fine. Everything is. Fine, everything is everything works very well. Oh, nice. Thoughts? I have a question about the picture that where you got this triangulation of an annulus, it gives you two quite different trees. And so when you look at the trees, it's not clear that they're related by just looking at them and you don't know anything. But in a sense, these are sort of dual to each other because one, you're looking at an outer garden. One, you're looking at an outer boundary, and then you change your perspective and look at the same feature at an inner boundary. So, is there a way if you look at two infinite freezes of using some duality or function to know when they're coming from the same picture? Or is this, did I like I might have not paid attention to something you said earlier that talked about that? I think this is a great question, and people answer this in minar too. All right. Yeah. Other questions, comments? You cannot answer this is super hard, but like I remember, you know, nice pictures about the mutations on the mavers. What happens when you do mutations on the capital? Like, how do the arrows change? Nice. Oh, um, you're you're asking. Oh, you're asking if I were to mutate the quiver, what happens to the triangulation? If you click on a fit, right, and I do the mutation, what happens in the category? Do the arrows change in mutation or that's not? Oh, I see. So you're saying that I start with an orientation and I create my cluster category from. My cluster category from this orientation of the keyword. So if we go here, so when you go to bounded drive category, then your orientation doesn't matter, right? You could start with this, your bounded drive category will have this orientation. So the one good thing, I mean, we heard about good things about bounded drive category, but the other good thing about the boundary drive category, then Drive category, then whatever the orientation you start with, it doesn't care about it. It always includes either this or you can consider this part as your module category. So it has all the module categories from any orientation. And then you can do the quotient respectively. Thank you. All right, let's thank them again. So sitting on the other end of the room, but just as a reminder, we have 10-minute group presentations on Thursday and Friday. This is for us to swap ideas for our research projects. So that will be the next time we'll be all together. We have three of these tomorrow. Okay? Y'all have a good lunch, dinner, coffee, go to bed. I don't know. Yeah, that's okay. I'll look for it. Yeah. Everything is probably good. I'm working on the focus.