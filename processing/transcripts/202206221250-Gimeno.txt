Maria manifolds in triple mechanics. So, you want whenever you want. Thank you. Okay, so thank you so much for the organizers, for the organization of this workshop and also for giving me the opportunity to give a talk. So, I'm going to start with the motivation of this project. The motivation starts with a The motivation starts with a first preliminary result that was done in 2009 by Estriga Omedo and Angel Jorva, where they publish a method to compute high-dimensional durae in a parallel way. And in the thesis of Omeado, they apply this method for the model that was introduced by Gomez, Mazdamon, and Mondelo. For solar system model with some set of frequencies that I'm going to introduce at the end as an experiment of this project. So in this Almedo's thesis, she used a distributed computed parallel approach that nowadays is all style from a programming point of view because the software that they were using now it's not in use anymore. Not in use anymore. On the other hand, recent results by Nicolas and Jorva show that it is possible to extend tools to compute invariant manifolds of Tori. And then the motivation of the project was to combine the results of Omedo with the results of Nicolas to have To have kind of to update the software that Almedo used and also to compute the invariant manifolds as well. So for this, first I need to introduce what's a reducible invariant torus. And for that, I need to fix the setup of the problem and to specify what is the kind of systems that we are dealing with. That we are dealing with in this project. So we consider that we have a quasi-periodically forced discrete system in Rn and Td. This D is the number of frequencies and the idea is that with this method this D can be large and the torus that we compute and the invariant manifolds associated to this torus are effectively possible to be computed by computer. By a computer program. So we consider that this F that appears here in this discrete system is a smooth diffeomorphism. We can think that this F can be a Poincar√© map coming from a flow of an OD, for instance. And the other consideration is that this omega, which is a frequency, we consider that it's linearly independent over the rationals, and it will verify some Diophantine conditions in order to. In order to ensure that we have torus and also invariant manifolds. So, the first observation is that due to these dynamics in the angle setter, it's impossible to have fixed points or periodic corbids. And then the simplest invariant set in this context, in this kind of system, is a totoof. And that's the object that we are interested in in completing. In computing. So, what Jatodos in this system is a smooth map that takes values from d angles to Rn, such that when we apply the torus by this diffeomorphism F, we get the same map, but with just some translation in a frequency omega. This omega is going to be known and it's going to be fixed in this work. fixed in in this work but it can have well it can be also an unknown in other contexts but in these other contexts possibly f does not depend on theta so the unknown in this system in in this equation is going to be u and it might be unique up to a shift when the f does not depend on theta um what are the contexts where we have this kind of systems for instance um Systems, for instance, the classical one is when we apply a periodic perturbation or a quasi-periodic perturbation of an autonomous or a non-autonomous system with some set of frequencies. And in this case, we can consider a point-correct section if we imagine that this F, as I said, it follows from a flow map. In astrodynamics, these kind of perturbations that I was mentioning come perturbations that I was mentioning come naturally from adding new information in the model. So the classical starting point of view when we have these objects is to consider the linearized behavior of this object. That is, if we take H as a small displacement around this torus, that for the moment is an unknown. Is an unknown, and we consider this displayment in the F and we apply Taylor functional to first order. This first order is going to be the linearization around the torus, and it gives us another discrete system that is a linear skew product. So we say that this linear skew product is reducible if and only if there is a change of coordinate such that in this new Such that in this new coordinate, this matrix A of zeta, it becomes independently on theta, that means a constant in theta. Where this B, that is going to be the floquet matrix, and it's in general is not unique, it related with this original one, A of zeta, by the change of coordinate that we assume that exists. Assume that exists. This change of coordinate is going to be a flouquet transformation, or it's called a flouquet transformation, and it's also generically not unique. Because we can apply change of coordinates again and change in the basis, and we have other floquet transformations. So the third remark is that the dynamics of the torus now is reduced to study the eigenvalues of this. To study the eigenvalues of this locate matrix V. We know that these reducible torus exists for sure in some situations. And it's, for instance, when we have a KM Torai of maximal dimensions, this torus is going to be always reducible. There are also other cases where it's not the maximal. It's not the maximal dimension case where we also have the irreducible torus. And we also have reducible tora in astrodynamics, but we are not covering all the cases. And it is possible to construct or to find torus that are not reducible. They are not quite common, but there are explicit examples where the torus are not reducible. So far, for the moment, we are not assuming any. So far, for the moment, we are not assuming any Hamiltonian structure for this talk. So, we are not going to take any advantage in any Hamiltonian context for the results that I'm going to present here. So, the sketch of the method consists in two steps. The first one is the torus step, that is the work that was done by Olmedo in her thesis, where we consider U of Zeta, which is the torus that. Theta, which is the torus that is represented by Fourier series. So, somehow we are assuming some smooth, some smoothness. And we are going to compute these Fourier coefficients by a newsletter method that I'm going to summarize in the next slide. And then, when we implement the code and we use some profilers to see or to report in which parts of the code we are spending more time, we see that. Code, we are spending more time. We see that those parts are essentially independent to each other, and that gives us a method that is almost fully parallelized. The output of this step is going to be the torus, the propriet change, and the flucket matrix, because we are assuming that we have or we are in a reducible context. The manifold step is going to be order by order. We are going to use a jet transfer. We are going to use jet transport to update and to compute these orders, and we are going to distinguish between stable and unstable manifolds for numerical reasons. And again, if we use a profiler, we see that almost all the computability effort is independent to each other and it's going to be parallelized as well. The algorithms that Olmedo present, it consists in 10 points that are Consist in 10 points that are summarized here. The first one is just to compute the error of the totals. Then we solve so cohomologic equations, which is that we know this G of zeta, we have this B sub zero, and we want to compute this U of Zeta. Once this U of Zeta is compute, we update the value of the torus, then we compute the error in the floquet transformation and the flowette change. We solve another. change, we solve another cohomology equation and then we correct the well, first the floquet matrix and then the floquet transformation and we iterate until we have convergence in the torus and in the floquet transformation. So let me mention some things about these two cohomology equations. The first one is that as I said if we know this G and we know this V, we and We know this v, we and the frequency omega is fixed. We want to know this u of zeta. We assume that we are that we are in a real case. And as I said, we are going to consider that this u of zeta meets a Fourier series. So that means that we have some alpha sub k and beta sub k, where this k is a multi-index in the number of frequencies that we have to compute. If we We plug all these Fourier coefficients, we end up to a set of linear systems that we need to solve. And this BK matrix that is given here explicitly in terms of the matrix V and the frequency omega is invertible if and only if the spectrum of this matrix V does not intersect this other set. Similarly, we can do Similarly, we can do it for the second cohomology equation, but in this case we have an n-square linear system for each multi-index k that we must to solve. And then with this, we reach two conditions that we call the Diophantine conditions that are related with the eigenvalues of the matrix V, that, as I said, is Is related with the stability of the torus. So, the first one, the first diophantine condition, is related with the existence of the torus, and the second one is related with the existence of the floquet transformation and the floquet matrix. The first observation is that if all the eigenvalues of the matrix V in modulus are different from one, then this equation two is going to be always Two is going to be always true. So we are going to have the torus. The second observation is that if all the eigenvalues are different to each other in modulus, the equation three is going to be true. So that means that we are going to have the flowquet transformation and the flowette matrix. And if equation two fails, we have or we can distinguish in two cases if we are in a conservative case. If we are in a conservative case, then the torus generically means that it's destroyed. And in the dissipative case, if equation 2 fails generically, the torus may suffer some differentiability loss. And nearly the failure, this can be detected numerically because the number of Fourier modes that we need to represent the object is going to increase. On the other hand, if the failure of equation 3 is generally Of equation three is generically affected or related with kind of some phenomenon that related with the normal behavior of the torus. I'm going to use the pilot shooting for one of the experiments, the one in astrodynamics. So in that experiment, we are going to have a torus that is going to be very unstable. It's going to be very unstable, and a classical tool to solve that is to use a parallel shooting. That I'm just summarizing here some of the ideas and how the parallel shooting is affected to the algorithms that I presented before. So, without parallel shooting, we consider in the case of a flow or in the case of an ODE system that we have a section, sigma, that A section, sigma, that fix one of the angles, and in and we consider the Poincar√© map in this section, and it's going to be the two pi time flow map. If we want to use parallel shooting, instead of considering just this section, we are going to consider sections that are in the trajectory time. Okay, so we are going to split this two-pipe-time flow map in several ways. This two-pi-time flow map in several ones. And in particular, we are going to consider that each of these ones go from one section, sigma sub J to the next one. So explicitly, that means that we are going to consider other maps, phi subj. And the invariance equation that I presented before for the systems of the torus, now it's going to be similarly, but not exactly the same. One of the differences that the frequency. the difference is that the frequency is going to be omega divided by r where this r is the number of sections that we are considering and the first remark in this new invariance set of equations is that they are related with the with the original one just by composition of translation of translations that are interest late of this Of these other ones, f sub j's, which is this equation number four. This equation number four gives the relation for the differential of x, of f sub j's and f. So in particular, that gives us also the relation for the flouquet transformations and the flouquet matrices in the case of the parallel shooting. So the observation is that if we consider that we have We consider that we have earth parallel shootings. We can see this as a single shooting with a higher phase space. If we consider these A tildes and these B tildes and these C tildes that have this matrix block shape where all the things that they don't appear at are zeros. So then that means that the previous arguments. Then that means that the previous arguments that I showed before can apply directly using these big matrices if we consider that the memory is not a problem and we keep track of all these zeros in these extra matrices. Or we can optimize going just block by block that is not zero and updating all this information. So it's just essentially adding another loop in the number of sections in each of the steps that I The steps that I show in the previous algorithm. So, with this, now we can connect it with the computation of invariant manifolds. So, to compute an invariant manifold using this flowquette transformation and this flowette matrix, we are going to pick an eigenvalue that is different from one. Here, we are going to have plenty of cases. So, I mean, plenty of cases in the same I mean, plenty of cases in the sense of the different eigenvalues and the center manifold and stable and stable manifolds. In this world, we only consider the stable and unstable ones, which are the easy ones. And for the experiment that I'm going to show later, I'm just going to consider that the manifold is one-dimensional. If we want to work with more than one-dimensional, and here where we have this sigma, we should have different sigmas for each of the dimensions. For each of the dimensions of the manifold. But in any case, we consider that we want to compute this W that takes values in the D-dimensional torus and an interval, such that when we apply the map F to this W, it gives us the same W shifted in the angle theta and with a scaling lambda in the second coordinate. In the second coordinate. So, this W is going to be unique up to one scaling. And the idea is that we assume, because we are also considering that this F is smooth, that this W can be expressed in a formal expansion in sigma. And the thing that we are going to compute are these W sub j's. And we are going to use the Flouquet transformation and the Flouquet matrix. And the floquet matrix that we compute in the previous argument. We have to distinguish two different cases for numerical reasons. Mathematically, they are the same, but numerically, if we consider that this F comes from a flow, if we go forward or backward in the case that we want to compute the stable or the unstable, it can give us some problems in the sense that the numerical computations will be more or less. Numerical computations will be more or less unstable. So, for instance, to compute the unstable one, which is this red line, we are going to consider that we use the forward flow. And for the stable manifold, we are going to use the backward flow. So, in these two cases, the invariance equations are slightly different, but they are equivalent. And the algorithms are this one. The input are the torus, the flow kit change and the floquet transformation. And also the eigenvalue and the eigenvector that we want to compute the manifold. And then the output are going to be this W sub j's such that the previous equation five, which is Equation 5, which is this one, is satisfied. So the first two elements of this WJ is for the order 0 is just the torus, and for the order 1, it's just to apply the floquet transformation to the eigenvector. And then for the other ones, it consists just in these four steps. In this first step, the thing that we need to do is that. The thing that we need to do is that for each value of zeta, we use the jet transport in this flow, in this smooth map, in such a way that instead of integrating just trajectories, we are integrating polynomials in sigma up to order j. So that means that the order j that is not appearing here, it's going to have coefficient zero at the beginning. To have coefficient zero at the beginning, but after the integration with polynomials in sigma, we are going to have a polynomial, well, a coefficient depending on theta that it's going to be the one that we need to use to solve this other Kokomorge equation. So, here we solve a similar Kokomorge equation that we A similar Kokomonoj equation that we solved before, which is that we know this G, we know this V, and we know this lambda. The J is in this loop, and the thing that we want to compute is this U of Zeta. Once this U of Zeta is compute, we can use the Floquet transformation to recover the W sub J. And we do this for each of the ordered J's. Similarly, for the stable manifold, the process is similar. The only difference is similar. The only difference is that now the output instead of being the W sub j of zeta is going to be the W sub J Zeta plus omega because we are considering F minus one, which is the backward integration in time. This Eg also changed a little bit with respect to the previous one and then in this other step, the third step, instead of getting the U of Zeta as an unknown, the thing that As an unknown, the thing that we get is the u of zeta plus omega. That we can get the u of zeta and then we apply the shift, which is equivalent, because it's numerically more efficient to do it in this way because when we have to integrate backward in time, we use this shift in omega. So, just some remarks for this equation three for this. equation three for this coherence equation of this third type similarly as i did before is the same strategy we consider that this u of zeta has some fourier coefficients of a sub case where this k is a multi-index and we have to solve this these linear systems but now the extra condition that we know in order to know That we know in order to know the existence of these W sub J is that the spectrum of P does not intersect with this oversect. So, here we have another index J that it's just another condition for the cohomology equation for the Diophantine condition that we need for omega that in somehow is the first Diophantine condition that I consider. The first diophantine condition that I considered, somehow it covers diesel one. So it's not very strong or new diophantine condition, but it's something that it must be considered. The other observation is that for the parallel shooting, instead of having just lambda and b, where I remember that lambda is the eigenvalue of the matrix V, and this other V is the A grand. Saw that V is the eigenvector associated to the eigenvalue lambda. When we are in a parallel shooting, instead of considering this lambda, we consider a root of this lambda. So we are going to have different submanifolds. And the eigen the eigen the eigenvector v tilde. The eigenvector B tilde is going to be just another one that has our coordinates, and each of these coordinates has n dimension, such that it verifies the recurrence here. So essentially, this means that if we consider this matrix to be tilde with all the zeros, these are going to be essentially the eigenvalues. Essentially, the eigenvector and eigenvalue. To solve the co-homology equation that we need to solve, now instead of considering just one of zeta, we are going to have our other blocks, but they are kind of independent to each other in somehow, and it's not a big deal just to add another loop. So now I'm going to mention about these two experiments. The first experiment is going to be just a kind of toy model, but it's going to illustrate the results and the computations using these algorithms that I present before. So I consider just a pendulum, which is very simple in this case. Is very simple in this case. I fix one value for the parameter, which is 0.8, and then I add this perturbation. This part here, it's just a perturbation that with this inverse, it forces to have a lot of Fourier modes in order to have a good representation. To have a good representation, this d is going to be equal to four. So we are adding four frequencies and we are going to compute torus and the manifold associated to this torus in three dimensions. So these are the frequencies, these omegas, which are linearly independent over the rationals. Independent over the rationals. And then the discrete system that I consider is the two pi-time flow map. And the omega, it's just this vector, which is explicit and it's given. For epsilon zero, we have an hyperbolic equilibrium point at P0, and we can compute the And we can compute the linear behavior. So, with this information, we can provide the initial guesses. For the torus, the initial guess is going to be just the Clipping point. For the flocket transformation, it's going to be the identity. And for the floquet metric, it's going to be just this linear behavior of the Clipping point. We consider a mesh for the Fourier modes of 31. The Fourier modes of 31 for each of the angles. So, in total, we are going to have these 5 million unknowns. And the final floquet eigenvalues that we compute at the torus, which is the eigenvalues of the final floquet matrix, are just this one. So, we have a stable eigenvalue. we have a stable eigenvalue and another one which is the unstable for the numerical computation we use a parallel scheme that instead of using the PVM that Estrella Olmedo used in her work we use an OpenMP which is used nowadays more frequently and then we And then we also use a TLO integrator for the pendulum. And as we can see, if we just run using one CPU, it's eight minutes of computation for the torus flowette matrix and flowette change. And when we use more, we have a speed up over there 12 times faster. For the stable and unstable, the speedups are the same. The speed ups are the same. In this case, we compute the manifold up to order 10. And as we can see, there is no big difference for the speed up if we consider the stable or the unstable. Of course, for the stable, we use the inverse of the flow map. And now I'm going to present the other one, the other experiment. The other one, the other experiment, which is the simplified solar system model that it comes from a result or from a model that it was presented by first time in 2002. So in this model, they start with the restricted free body problem in the Earth's moon. And it has been already said in this workshop. Workshop. We have five equilibrium points in the system. The L1, L2, and L3 are collinear and they have a stability kind of center-center saddle. And we are interested in the L1 and L2 that they have unstable directions that are 10 power 8 and 10 power 6. And because of this strong instability, it's Instability is where we use the parallel shooting, and that's the reason because I was giving some notes or some remarks of how we can use the algorithms that I present in a parallel shooting scenario. So the simplified solar system model, it's a kind of perturbation of the restricted C-body problem where they are adding more information, which Information, which are essentially perturbations that include the mean longitude of the moon, the mean elongation of the moon, the mean longitude of the PDG, etc. This gives us some frequencies that are these omegas that I'm showing here that are linear combination of these other perturbations with these etas. So So the process to compute each of these simplified solar system models is that we start with the restricted three-body problem and then we add a perturbation that includes each of these eta's and in particular each of these omegas. In this case for these perturbations we use a Runi-Puta A9 using an adaptive Using an adaptive step of following Berners instead of filbert. And the idea is that we start first with the restricted 3-body problem and we add an artificial parameter alpha that when the value is zero, we have the equilibrium point L1 and L2. And then we include we include And then we increase alpha to reach the first simplified solar system model with just one frequency. And then from there, we are adding new frequencies until we reach two or three frequencies. We have to say that the continuation of these totals has some disadvantages that it can be managed numerically, but Be managed numerically, but we must be aware that it's that the second Diophantine condition is not continuous, so we can have jumps in the continuation that they can be solved. And this was solved in this case, adding artificial dissipation, which is we add a dissipation here in this J sub I and then we do the continuation. We do the continuation in this alpha, and then we do another continuation to remove the dissipation, and then we are in the case that we want. This is kind of tricky, but it can be done. So, in this case, we compute the manifolds up to order 10 for this simplified solar system with three extra perturbations. Perturbations of the L1 and L2. Using for the L1, we use four parallel sections, and for the L2, we use three parallel sections. The number of unknowns for the L2 was around 17 million unknowns. And the final eigenvalues that were unstable with around 10. were unstable with around 10 power 2 and these are the values of course we took the eigenvalue that was real we could have other take the other ones that are complex but in somehow they are kind of related with the real ones and as we can see in this case the speed up is also around 12 or 13 times faster than Than without using any parallel approach. So, the conclusion for my talk is that in these methods, we are not assuming any structure. Somehow it's good because it's more generic and it can be applied in a general setting, but we are not using any Using any advantage that we can have if we just consider that we are in a Hamiltonian system or in a dissipative system. There are other results in our papers that take advantage of this. We illustrate with a couple of experiments that the high-dimensional tornado and the manifolds are numerically feasible if we use parallel and Parallel and parallel approach, and the results are quite competitive. And there are other cases that we didn't cover, and maybe we may start a project on that in the future. That is the case of the center manifolds and these things using or taking advantage of these floquet transformations. But for the moment, we didn't cover that. Finally, we applied the results of Finally, we apply the results to an astrodynamical system. And that's it. Thank you so much. Thanks, Joanne. So is there any question or comment? I think there's something in the chat. So there's a question in the chat. There's a question in the chat. I don't know if you can see it by Luis Benet, who says, You described some aspects of the parallel implementation of the algorithms, stating that a large percentage is parallelizable. It is not clear to me if the polymer expansions are parallelizable, are they? No, at least for implementation that I did, they are not. But it was not... Oh, sorry. was not oh sorry it was not so um i mean the major time that we expend that we spend in the in the computation is uh when we have to do let me show you uh essentially this step here in this step we have to do this for each value of zeta and this uh zeta the discretization of zeta give us the fourier coefficients or the fourier modes that That we need in order to solve this other step. So, when we run the profiler in a non-parallel version, we see that the most time that we need is in this step, in the evaluation of this F. But we didn't parallelize because the output that we want in this step is the coefficient with respect to zeta. So we did the parallelization in Zeta, not in the polynomials in sigma. Okay, thank you. So are there more questions or comments? So Luis is asking again, so the evaluation of that F includes a tilt expansion, right? Yes. Well, it depends. It depends. I mean, in the experiment, it depends on the integrator. In this pendulum, for instance, since we use a Taylor expansion, a Taylor integrator, yes, it involves a Taylor expansion. But in the other example, we use Arom Ecuta, and in that one, they don't require any Taylor expansion in time. Okay, thank you. So, is there any other question or remark? So, he's also asking Renato. So, in the computation of this solar system model, do you know what percentage of the time is consumed in the integration and how much is in the rest? Well, it's it's kind of the same. I mean, in the sense that the profiler, okay, for the profiler, the output of the profiler is the time that it used in each of the functions in the code. So, and it gives us the percentage that it in time that it was needed. In time that it was needed in order to receive the output. So, the 10% that we need in the function that involves the integration was essentially the 99%. So, to solve these cohomology equations in the algorithms, it's kind of nothing in comparison to evaluate this F for all the different values of zeta. So, if it's kind of independent on the model of the SSM or if we have a pendulum or whatever system. I mean, if this F is the defined in terms of a flow map, I have the impression that most of the time it's going to be in the integration. So, if the model is more complicated, I mean, the time it's going to be most of the time in the integration. be most of the time in the integration but we don't compare different different models i mean we didn't compare the time that it was needed to to solve for the pendulum and to come and we didn't compare it with the other model because they are kind of the the comparison is not fair we compare in in order to know the speed up we we did we did it with the same model We did it with the same model to know if we would have really an advantage to use a parallel approach or not. Is there any other question or remark? Well, if not, first then Joanne again. And we continue tomorrow at nine in the morning here. Nine in the morning here. Bye. Thank you so much.