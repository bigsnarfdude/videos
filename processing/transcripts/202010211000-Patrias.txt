About promotion webs and Quebs. That's right. Hold on, let me share my screen. Okay. Great. All right. So, Oliver gave us a nice introduction to kind of what's going on. Nice introduction to kind of what's going on in the background for everything I'm going to talk about. But basically, I'm going to pick up with wanting to talk about the orbit sizes of promotion on three-row increasing Tableau. And we're going to use webs to talk about that. So I'm going to talk a lot about webs are and talk a lot about what webs are and talk about how things work for standard young tableau. And then we'll see how we hope they're going to work for these increasing tableau. Okay, that's not my first slide. There we go. So, what is a web? Well, roughly, these are webs. So, for the purposes of this talk, just having some kind of picture in your mind is going to be okay. Here's a nice definition. So, this definition is from Cooperberg, Greg Cooperberg. An irreducible web is a planar directed graph with no multiple edges embedded in a disk satisfying the following conditions. So, firstly, our web is So, firstly, our web is bipartite, and in particular, we fixed a bipartite coloring of the vertices with black and white. All of our boundary vertices have degree one, our internal vertices all have degree three, and the internal faces have at least six sides. So since we're bipartite, that basically just means we can't have any internal four cycles. Edges are directed, so we can think of them as being directed, like bicolored and directed are basically the same. So we could think of them as always being. Basically the same. So we could think of them as always being directed toward the black vertices. Okay. So for each web, we can get a polynomial that's called a web invariant. So I'm just going to show you a couple examples of how that works. So let me start with this pretty basic web that we call a tripod. It's kind of the building block of. It's kind of the building block of all of our other webs. So we're going to label our boundary vertices cyclically, clockwise. So I'll call this vertex one, vertex two, vertex three. And at each boundary vertex, I'm going to put a vector of variables of length three. So at vertex one, I'm going to put the variables x11, x0, 1, x negative 1, 1. one one here i'll put x one two x zero two x negative one two and here i'll put x one three x zero three x negative one three um and now to find the monomials in our polynomial we're going to sum over proper edge colorings sum over proper Some over proper edge colorings with three colors. Our colors are going to be one, zero, and negative one. So for example, I could do one, zero, negative one, like that. So proper just means that each internal vertex has all three colors showing up around it. All right, so to get the monomial that goes with this particular coloring. That goes with this particular coloring. We're going to read through all the internal vertices and look at the permutation that I get if I read clockwise around that vertex. So around our internal vertex, I'm getting the permutation 1, 0, negative 1. We're going to consider that permutation to have a positive sign. So we get a positive sign for our monomial. Then we look at the colors of the edges adjacent to the boundary vertices. So here, my boundary vertex one. So here, my boundary vertex one is colored with a one. And so I take the variable that's associated with that color one. So I take x11. My boundary edge, my boundary vertex two has color zero. So I'll take the variable that's associated with zero. And my boundary vertex three is colored with negative one. So I'll take the I'll take the variable associated with negative one. Let's do one more example here. So I could have, instead of using the red coloring, wow, to index my colorings by colors is maybe a little complicated, but that's what we're going to do. So I could also have this green coloring one, negative one, and zero. So again, to get the monomial for that coloring, I'm going to read around my internal vertex. going to read around my internal vertex. This time I get permutation one, negative one, zero, which we're going to say has negative sign. My boundary edge one has color one, so I'll take that variable. My boundary vertex two has color negative one and my boundary vertex three has color zero. Okay, and I'm going to do that for each proper coloring of this web. So you may be able to see at this point, maybe not, that if we do that for this particular web, what we're going to get is the determinant of our matrix of variables here. So that's pretty nice, and that will be. So that's pretty nice, and that'll be an important example to keep in mind for what's to come. I want to do one more term of a web that also has some white boundary vertices because we're going to do just something slightly different there. So let's start with this web. We'll again label our boundary vertices one, two, three, four. 1, 2, 3, 4. Our black vertices will get a vector just like before. Here I have x1 4, x0, 4, x negative 1, 4. Our white vertices are going to get a co-vector of y variables. So I'll have y 21, y2, 0, y2, negative 1, and y 3, 1. y31, y30, y3, negative 1. And now we're going to do the exact same thing as before. I might as well just finish with one term here. So we can make a proper edge coloring. So I could have like 1, 0, negative 1, 1, negative 1. Again, we read around all of the internal vertices. Internal vertices. So this internal vertex is going to contribute a positive sign because we see the permutation 1, 0, negative 1. We consider that to have positive sign. This internal vertex, I see 1, negative 1, 0. So that contributes a negative sign. Sorry. A negative sign. And then I look at the colors. So here I take the first color. Here I take the color. The first color. Here I take the first color, the negative one color, and the negative one color. Okay, and I do this for all of the proper colorings that we have for our edges. Okay, so for each of these webs, I now have an associated polynomial. All right, so they're called web invariants because they're invariant under some action. So they're invariant under some SL3 action. So in particular, I can consider the matrices of the variables, the matrices of the Y's, and the matrices of the X's. And if I multiply those matrices by any element of SL3, the Webb invariant isn't going to change. So if you recall our nice tripod. Recall our nice tripod example had Webb invariant that was the determinant of the Xij. So we can see that if I multiply that by any element of SL3, that determinant is not going to change. So these web invariants are invariant under this SL3 action. More than that, they are actually going to give us a boundary or a basis for. Or a basis for this ring of invariance. So, this theorem of Greg Kuberberg tells us: let V be a three-dimensional complex vector space, then webb invariants with a fixed boundary pattern with A white vertices and B black vertices form a basis in this ring of SLB invariants. So, I just pick my A black vertices, my A white vertices, pick the pattern they're going to make, take all of the webs that I can make with that boundary pattern, and that gives me a basic. That boundary pattern, and that gives me a basis for this random invariance. Okay. So these webs have gained some popularity amongst the combinatorial crowd lately, I think, because fairly recently, Sergei Fomin and Pasha Pilyovsky constructed a cluster algebra structure on this rig of invariance that works well with the web basis most of the time. So I think that's kind of ignited some. So, I think this kind of ignited some study of webs amongst our people. So, that's kind of what webs are. Let me tell you what they have to do with tableau and promotion. So, there is a bijection between webs with n cyclically labeled all-black boundary vertices and three-row rectangular standard young tableau with n boxes. So, webbs. So, webs are matching up with our three-row standard Young Tableau. This is originally due to Krofanov and Cooperberg. I'm going to tell you a bijection that's different than the one that they said that I came up with with Hugh and Emi Ney and Veronique, Jaum, and Al Garfer. So, let me show you how this works. It's pretty slick, I think. So, here I have a web. I want to associate that with a three-row. Want to associate that with a three-row standard Young Tableau. So, what I'm going to do is again make a proper edge coloring of my web. But my boundary vertices have preferences for what their edge color is going to be. So, my black boundary vertices would all really like to have edge color one. If they can't have a one, they'll settle for zero. If they can't have a zero, they'll settle for a negative one. So, if I look at this web here, this red box is telling me that's my first boundary vertex. So let's go through and make this proper coloring. So I'm going to start with my first vertex here, and I'm going to label the edge adjacent to it. And that edge is going to prefer to have label one if it can. So right now we have no restrictions, so that edge can get a label of one. Of one. Next, we move on to our boundary vertex two. The edge adjacent to that vertex would also like to have label one, but it can't because we need to have a proper coloring. So it will settle for a label of zero. And now we've forced that third edge to have a label of negative one. Okay, and we're just going to go through the whole thing in that way. The edge adjacent to this boundary where it's The edge adjacent to this boundary vertex 3 would like to have a label of 1. It looks like there's no reason that it can't. We've now forced this edge here to have a label of 0, which forces this edge here to have a label of negative 1. Oops. Well, that's the last slide of the talk. Where are we? There we are. That forces are at. That forces our edge here to have a label of one. Okay, maybe let's do just a couple more here. This edge adjacent to five would like to have a label of one. That looks like that's okay. There's nothing to prevent that. So let's give that label one. Edge six would like to have label one. It can't have a label one because we need a proper coloring. So it's going to settle for a zero. That forces this edge here to have. That forces this edge here to have a negative one, which forces this edge here to have a zero, which forces this edge here to have a negative one, et cetera, et cetera. So we can continue in this way, keeping in mind these preferences, and we're going to get a unique, proper edge coloring of our web. Now, to make our Tableau, all we need to do is look at the colors that are adjacent to the boundary vertices. So here I see the first boundary vertex. First boundary vertex has color one. That means that one is going to go in the top row of my tableau. My second boundary vertex has color zero. Zero means the second row. My third boundary vertex has color one. So that's going to put the three in the top row. My fourth boundary vertex has color negative one. Negative one means the bottom row. Five goes in the top row. Six goes in the middle row. Six goes in the middle row, et cetera. And I can fill this out with all of the boundary vertices. So this will give you the same result as Juliana's bijection, I think. It's just a different way to think about it. Yeah, there's different ways to do this map. Okay, so we have this bijection between these black boundary vertex webs and three row standard young tableau. And 3U Row Standard Young Tableau. Of course, our bijection goes in the other way. So let me just show you a quick example of that. So if I start with a Tableau, what do I do to get the web? Well, the first thing I'm going to do is look in my Tableau, look in the second row from left to right, and I'm going to connect each entry with the largest entry above it that's less than or equal to it. So this entry. So, this entry 3, the largest thing that's less than it in the row above is 2. This entry 5, the largest thing that's less than it in the row above is 4. And now the 7 is forced to take the 1 because the 2 and the 4 are already taken. And I can do the same thing with the 6. The largest thing above the 6 that's less than it is the 5. The largest thing above the eight that's less than it is the seven, and the nine is forced to take that three. So I've made three sets of triples here. I have the triple two, three, nine, the triple one, seven, eight, and the triple four, five, six. I'm going to make my web. And I'm going to make tripods with each of these triples. So I'll make the tripod with vertices 2, 3, and 9. 1, 7, and 8. Um, one, seven, and eight, and four, five, and six. And now we see that I have this crossing here. Our webs were supposed to be planar, so we just have some rule to resolve that crossing. And our rule will tell us that we should just Replace that crossing with something like that. So we can easily get this web from our three-row tableau. So hopefully, you have some feel for how these bijections work. They're super nice by my standards. Okay. So Kyle Peterson, Pasha Piliowski, and Brendan Rhodes showed that this bijection works really nicely with promotion and web rotation. Nicely with promotion and web rotation. So, if D is a web with our cyclically labeled boundary vertices and all black boundary vertices, and I get the corresponding standard Young tableau, then if I rotate the web, that's going to correspond to promotion of that tableau. So, here I have a picture. So, we start with some web. Our bijection gives us some standard young tableau. Standard Young Tableau. We can promote that standard Young Tableau to get a new Standard Young Tableau. We can look at the bijection again between Standard Young Tableau and Webs. And what we're seeing over here is just web rotation counterclockwise. So in this web, my first vertex was this one in red. In this web, my first vertex was this one in red. First vertex. So this one in red. This has a lot of symmetry, but in general, we're just clicking one click counterclockwise. So our promotion is corresponding to our counterclockwise rotation. So as a corollary, this tells us something about the orbit sizes of promotion. So if I say that P of T is the promotion of a rectangular three-row standard Young Tableau with N boxes. Standard young tableau with n boxes, in other words, the kind that is in bijection with the web, then I know that if I do promotion n times, I'm going to get t back. Because if I rotate a web with n vertices and clicks, I'm exactly back where I started. So it's giving me this nice information about the order of promotion. This is a little bit of a tangent here, but I wanted to mention it. Of a tangent here, but I wanted to mention it. So, this Peterson-Pilyovsky Rose result is for webs with all black boundary vertices. A similar result is known for webs with both black and white boundary vertices. So I think it was first proved by Heather Russell, and she was using some semi-standard Tableau. I also proved it using some generalized oscillating tableau. But for general webs, we still have this promotion rotation result. Okay. So recall from Oliver's talk, what we will, so in Oliver's talk, he talked about we want to know about promotion orbit sizes of increasing Tableau. In particular, in this talk, we're looking at three row increasing Tableau and hoping that we can use the same web technique with increasing Tableau. So recall that an increasing Tableau has strictly increasing rows and columns. Strictly increasing rows and columns. And we can recall what K promotion is. So I'm going to start with an increasing tableau. I'm going to take this one and turn it into a bullet. I'm doing this very slightly differently than Oliver did, but hopefully that won't be confusing. The bullet looks to see first if it has twos adjacent to it, and it's just going to swap places. So everywhere that there was a two, there will now be a bullet. A two, there will now be a bullet. Everywhere that there was a bullet, there will now be the two. Next, the bullet looks for threes. And the bullet looks for fours adjacent to it. There aren't any adjacent, so nothing's going to happen. It looks for fives, so it'll swap with the fives. It looks for sixes, and it will swap places with all the sixes. With all the sixes. It looks for sevens. We don't see any. It looks for eights. And lastly, it looks for nines. Okay, so we want to know what the promotion orbits look like for this kind of promotion. So what, oh, okay, I forgot about this slide. So what are the Okay, I forgot about this slide. So, what are the orbit sizes of increasing rectangular increasing Tableau under K-promotion? This is just a reminder of what Oliver just told us. Basically, we know that it can't be relatively primed to the size of the largest entry. We think that if our Tableau has three rows, that it's especially nice. In particular, we think that the orbit sizes all divide whatever that largest entry is in our table. Entry is in our Tableau. So just like the case for a standard Young Tableau, basically. So wouldn't it be nice if we could make some webs that correspond to these three row increasing Tableau, and then we could do the same game where web rotation would correspond to this Tableau promotion. And then we would have the same setup as we did for the standard Young Tableau. So this is what we're currently working on with, here we go, me and Oliver, Jessica Stryker, and Juliana Tomato. For Jessica Stryker and Juliana Tomatsko. This is our current work. So, we have some ideas given an increasing tableau how to make a K-theoretic analog of a web, which we didn't exactly vote on this terminology, but I'm calling them Quebs. Hopefully, my group is okay with that. And they look something like this. You can see it looks like a reasonable analog of a web. My boundary vertices have degree one. I have these funny hyper edges, but if we're okay with that, we see. But if we're okay with that, we see our internal vertices still have degree 3, and things are looking promising, but as always, more complicated in this k-theoretic version than in the regular version. So we're very much still like in the dirt with this problem now working to figure it out, but that's kind of the state of things. So thank you. All right, let's thank Becky. Very nice talk. Does anyone have questions? Sure. Can anything be done if rather than looking at regular of degree three, you look at graphs regular of degree four or higher? Or is that just doesn't seem to lead it anywhere? For this purpose, I don't know if it leads anywhere. Maybe is Chris here? Chris Fraser, maybe you could answer that question better for the purpose of webs, but. Purpose of webs. But from the invariant theory, it would make sense to look at other type webs, right? Maybe that would be giving you other degrees. Right. That was the thought. And I was wondering whether anything was known. Yeah, the rank two, the rank two weapons, maybe. The G2, the B2. And what did they look like? Oh, Brendan, go ahead. Oh, sorry. I was just saying, kind of like Sam was saying, that you could look like S. But Sam was saying that you could look like SLK for higher K, right? You have this three-dimensional complex vector space in the background, but if you increase the dimension, so type A for K bigger than two, three. So are there any theorems about such things, or is this just where you would look? Yeah, so people are putting references in the chat, but I think like people can draw some webs, but they don't maybe have a Awesome webs, but they don't maybe have a nice web basis for those cases. That's my understanding. Gotcha. Gotcha. Okay, thanks. Okay, great question. Other questions? If not, let's thank Becky again. And next up will be Emily Gunwin. And we have a few minutes, I guess, to chat amongst ourselves. Don't all talk at once.