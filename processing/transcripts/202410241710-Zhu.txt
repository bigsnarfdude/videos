Okay, thanks for introduction. Today I'm going to talk about AI-ed fourth-order Ada method for solving incompressible navstock equations with moving boundaries. And this work is joined with my advisor, Professor Zhang. Okay, let's talk about the incompressible fluid with moving boundaries that has many movement boundaries that have many applications such as the career swimming, the ocean internal waves. The typical challenges include the treatment of the multiple phases, multiple length scales and time scales, the logic deformation and the potential topological change in the interface and so on. So our goal here is to Our goal here is to introduce the theoretical framework for modeling and analysis, and to introduce the false and the high-order algorithms for simulation. Okay, this picture shows a simple yet general model for multi-phase flow problems with such interface. In the domain, there are multiple phases. There are multiple phases, each with irregular or moving boundaries, and each phase it has a governing equations. So, we are interested in the follow questions. The first is about how to model the irregular domain for each phase. This part has been discussed by Dr. Zhuqie and Professor Zhang. Now, I'm going to continue to discuss the follow-up question. Continue to discuss the following questions: how to discretize the spatial derivatives near the irregular boundaries, and how to simulate the flows with the movement boundaries. Okay, mathematic model. The model here is the incompatible number stocks equations. The permit mean omega t is changing over time, and we assume that the boundary velocity will be known as. Velocity will be known a priori. Okay, the traditional finite difference and the finite volume method based on the Cartesian grids are simple and are simple and effective, but they are maybe they are not well suited for the complex geometry. So this Geometry. So, this work we aim to remove these advantages and we want to achieve false and high-order convergence. And we also want to preserve the simplicity of this finite volume and the finite difference method. Okay, just okay, just like the professor talk on the first day, it is generally not a good idea to discretize the INIC. It critizes the INSE due to the diverging spring constraint. In the other words, maybe it is not friendly. Maybe it is not friendly to the original it is not friendly. Okay, we we reformulate the ion. We reformulate the INSE to IN equivalent form called the GPAP-E formulation. And based on the GPAP-E formulations, we apply the special discretization to obtain a system of ODEs. And then we apply the time integrations to solve these ODEs. In this approach, In this approach, the time discretization and the spatial discretization and the time integration are fully discovered. Okay, let's talk about the G-PARP-E formulations. By applying a generic projection, we obtained a system of equations in which W is the single evolutional variable and U is a function. and u is a function of w and q is a function of u. Another advantages of this formulation is that the divergence of w satisfies a head equation and therefore decrease exponentially over time, which help us to enhance our numerical stabilities. This this formulation is inspired by the UPPE UPPE formulation. UPDE formulation, which is proposed by Professor Jing Wooliu. Okay, our numerical method based on the Cartesian method. Its basic idea is to embed the boundaries into a background Cartesian grid. For high-order numerical method, we use the bracket to denote the signal averages and the base averages. Base averages. If we apply the spatial discretizations for the pop B formulations, we get a system of ODEs like this. The first line is the evolutional equations, and the second line is the projection. The third line is the pressure-pozing equations. For the ODE with the irregular or movement boundaries, we want to discretize the To discretize these operators, such as the Laplacian operator, the operator, and the convection operator. And the projection and the pressure extraction is incentivally solved a positive equation. So I will certainly discuss it. Okay, the rest of my talk has four parts. My talk has four parts. First, we design unpoised lattice generation algorithms for the high-order spatial disagreement, and then we apply the PLG algorithm to solve the elliptic equation. And then we solved the INSE with both stationary regular boundaries or the moving boundaries. Okay, the first. Our first work is to apply the finite difference or finite volume method to a simple elliptic equations like this. For the Cartesian method, we first embedded the probable domain into a background Cartesian grade, and then we classified the cell centers and discretized the PDE for each FD node. And at last, we solved. And at last we solved the linear system. Okay, here is how we classify the cell centers. If a simple center doesn't below this problem, the mean, we call it an exterior node. And if a serial center is not an exterior node, but a fast network of an exterior. Of an exterior node, we call it a boundary point, boundary nodes. Otherwise, we call it interior, we call it an interior nodes. We further divide them into two types, such as the regular nodes and the irregular nodes. For the regular nodes, we usually use the traditional one-dimensional finite difference or finite difference. Finite difference or finite form finite volume formulas or the attention production. And for the irregular nodes, we first select a set of nearby nodes and then we fit polynomials and derive the finite difference formulas according to the objects. And for a boundary node, we will enforce the boundary conditions. The boundary conditions. So, the first question is that for each irregular node, how to select a set of nearby nodes? The first method is by boot force, but it is not a good idea because of the huge number of the possibilities. And there are many other methods in the current. Many other methods in the current classical method. For example, for second-order method, the author selects six randomly points near the boundaries. And for a fourth-order method, the author selects a large number of points is included in the box and then perform a weighted list square. Least square. However, these problems have some issues, such as first, there is no strict proof to guarantee that such a selection is always solvable. And then, if we use the weighted list squares, the condition number of the sample matrix will grow rapidly as the sensor grows. So, we need an algorithm to We need an algorithm to select these nodes and ensure such a selection is always solved. We formulate this problem as post-lattice generation. If a finite set of feedback nodes K in Z D, a starting point Q, and a degree N, the PLG problem is to choose a line. Problem is to choose a lattice T belongs to K such that Q belongs to T and T is poised in pi D. Here, the Q is always the F nodes at which the special derivatives are discretized, and the set key of and the set key gives a flexible to the difference physics. This slide shows a common strategy to determine the set key. For example, for the diffusion operators, we usually prefer a center-based box. And for the advection operator, we know the physical information is from the upwind directions. And we prefer upwind best box. Okay. Okay, back to these slides. We also designed an AR search algorithm to solve these PLG problems. And I will give a quick introduction and omit the details. First, we find a special type of lattice called the triangular lattice, and we can prove that the triangular lattice are always the triangular lattice are always poised in the D. Then, by the principal lattice and the formation and the restoration operator, we can convert this process of enumerating triangular lattice to enumerate deep permutations. To avoid this root force, we use AR search algorithms. Such algorithms. This is our major result that couples the group theory to AR search algorithms. Essentially, it says that the orbital structure of the dynamical solution space can be exploited such that the search algorithm has the optimal. Has the optimal complexity. Based on the central results, we achieve the optimal pruning with the backtracking. Here is the test for the PLG problem in 2D. The left one is a concave boundary, and the middle one is a boundary, is a convex. Is the boundary is a convex boundary. The left one is a boundary with only C0 continuity. For our case, our PLG can generate a point lattice. This is the test for three dimensions. Okay, next. Okay, next, I'm going to show how to I'm going to show how to apply how to apply the K-L G algorithm to solve the elliptic equations for the discrete Lagrangian operator. Now that we have the stanzos generated by the PL geography near the boundaries, and we want to get the discrete Laplace as a linear combined. As a linear combination of the C averages and the boundary averages. The idea is to locally reconstruct a polynomial F. To determine F, we will solve a weighted least square problems like this. And then we apply the Laplacian object to X and obtained the F and obtain the coefficient vector C. The last step is about solving the discrete linear system back in 17. We split the unknowns into two parts, where UE, where U1 belongs to the regular parts, and paths and we can use a standard standard finite volume or standard finite difference formulas on it and the u2 belongs to the irregular part which is from the plg discreditation a bad news is when we apply the traditional solver like the geometric multi-grade and the query of subspace And the creation of subspace over, we have the poor convergence. Maybe the question is the loss of the symptom of the PRG disqualification. So we design a modified geometry multi-grade method. By reusing the traditional multi-grade method, we modify the method, we modify the smoother, which includes two steps. The first step is update L11, update U1 to apply a Jacobi iteration. And the second step is to update U2 by directly solving this equation. A potential issue here is that the time Here is that the time complexity of the LU composition for the L22 might be dominant at the smaller on L11. To resolve this problems, we reordering the unknowns of L22 in two dimensions. We order the irregular cells along the boundary. Irregular cells along the boundaries, and we can prove that the bandwidth of the reordering matrix is a constant, and thus, we have the linear complexity for this reordering matrix. In 3D, we use the nested dissection ordering. Here is the test for the elliptic equations. Consider these linear equations on a rotated square. We use fourth-order discretizations and our modified multiplayers, and we can obtain the fourth-order convergence in both L infinity, L1, and L2 norms. So this slide shows the So this slide shows the reductions of the residuals and the time consumptions. From these pictures, we can see that our modified geometry algorithms reduce the residuals and errors similar to the traditional one. Okay, next step, I'm going to show how to solve the incompressible nav stocks with both stationary regular boundaries and the movement boundaries. Now that we have the PLG disquiet relations for high order spatial disquiet relations and we apply it to the GPAP formulation and get a system of equation. Get a system of equations. And then we can apply the time integrator, such as the ERC or the IMX scheme. Here is the test for the incompressible nervous stocks. The first one is the little fremont cavities. Okay. Okay, from table we can find that our method has fourth-order converging threads for both velocity and the pressures. The second test is about a fluent path cylinder with randomness number equals 1. With random number equals one hundred. Okay. Okay, the last test is about the single vertex packaging. The render sample equals one thousand. Okay. The last step is to simulate influence with mobile monitors. And this work is joint with another student, Kaelia and Julio. Okay, the first thing is about the representation and tracking of the moving boundary. And tracking of the moving boundaries. Recall that this inferred checking is done by the MASH framework introduced by Dr. Jiqi and Professor Zhang. The MASH is a theoretical and computational framework for fluid modeling and interface tracking. The philosophy here is to tackle geometric and topological problems. And topological problems with tools in geometry and topology. In the mass framework, the boundary of the phase is approximated by a supply fitted through a sequence of the interface marks. And the phase is driven by a flow map, which is known a priori, and we can use our force order. Use our false order algorithm to track it. Another strategy for the mass framework is that you add and remove marks on the interface to ensure the qualities of the interface. Okay, we apply the finite volume discretizations with moving boundaries. The key difference here is true. difference here is true near the moving boundaries the cut steel is moving the cut steel is changing over time the idea to the idea is to use the Reynolds transport theorem to derive a correction to a correction form that counts for the movement readings in 21 In 21, the time derivative or the time derivative the time derivative of an integral over a movement rating equals the integral of the time derivatives plus an addition term of the integral over the over the boundary of the moving region by twenty and twenty-one We have a more general finite volume forms based on the movie regions. We consider two special cases. The first is the MT is time independent. Then we have the VB equals zero and this and this lead to the forms like the stationary regular boundary. For if MT is For if mt is a fluid puzzle, then we b equals u on the boundaries, and this leads to a pure Lagrangian method. Okay, for these formulations, if we apply the special discrete. We apply the special disconnection on it. We will find a potential issue that the time discontinuity for this term. For example, for the still i at time t, it is empty zero, and while at the next time step, it is interface zero. This will lead to the time. The time discontinuity. The time discontinuity in the second term is terrible for design the high-order numerical measures. So we design steel modeling algorithms to handle these problems, give the flow positions at two instances. To instance, the cell merging algorithm outputs a partition J key and such that the mover-merged cell and its face remain homomorphic over the time interval. For example, in these pictures, we can merge high to its to the control volume below it and merge the the COJ. Merge the COJ to its left control volume. Okay, now that we have the merged card cells and which remains both homomorphic and homotopic. We apply the spatial discretizations over this module over this mode. Over this merged cut sales and obtained system ODEC 25. The key difference between the stationary irregular boundaries and the moving boundaries are the 24B, 24E, and the addition term F in 245. Okay, in the end, I will test some numerical tests. First is about the advection diffusion equations. The piglet number is equal to 10. We simulate these problems on the following moving regions. The first is about a ball translation, the second is about contraction, and the third is about the ball expansion. Is about the ball expansion. For all of this case, our method has false order convergence. The last text is about the incompatible nervous stocks equations with moving boundaries considered uh for alternating in uh in the inner flu. Here are some pictures. Here are some pictures for the streamline. This slide shows the convergence and errors unless it has a false order range. Okay. Let me summarize my work. Let me summarize my talk. We have We have proposed a theology algorithms for selecting poised lattice in V D and we have developed a geometric multi-grade method for solving elliptic equations. And we also developed a fourth-order cartial method for solving encompassable narrative with both the stationary regular boundaries and the movement boundaries. Our plan is to. Our plan is to apply the algorithm to study the multiplied fluids such as the fluid surface, the contact line problems, and the fluid structure interaction problems. That's all of my talks. Thanks for your attention.