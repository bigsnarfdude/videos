Just a moment. Can you see my screen? Yes. Oh, thank you. Okay, so this meeting is being recorded. Yes, I'm fine with the recording. Yes, I'm fine with the recording. Thank you very much. My name is Kat Sasanuma. I would like to talk about the analysis of Markov-modulated Markov chains. I'm from Stony Rook University, State University of New York. This work is joint work with Alan Shela Wu and Robert Hampshire. Last year at CanQ, I could present the Could present the service system with multiple reneging rates. This is about reneging models, but instead of having one constant reneging rate, what happens if we have multiple reneging rates? And we analyze it using amount of chain decomposition method. But in that talk, I focused on the expectations of the amount of chain. So the important property that Property that my Malkovschen decoration method has is that the sum of all expectations of sub-chains are the same as the full expectation of the full Markov chain. We can just add up, and if there is a duplication, we can eliminate the duplicated part. So the calculation becomes simple. Calculation becomes simple. But the problem is that the decomposition scheme itself was a simple truncation. So I may not be able to convince some of you because it's a simple truncation. So I want to focus on another application that requires a non-trivial decomposition scheme this year. And that is this Markov modulated single server queue. And I want to explain the detail later. To explain the detail later on, I don't explain it now, but this is suitable for Markov chain decomposition. And the reason is if we look at each queue, like each subchain, each subchain is just a simple MM1 queue and they are just stacked. So this is easy to solve if we have a good Markov change decomposition. A good Markov chain decomposition method. Before we talk the detail of the decomposition method, I want to explain the benefit of Markov chain decomposition. First of all, it is efficient to decompose Mankov chain into pieces and then do numerical calculations. So this is computational efficiency, and we know it. But secondly, I think this is an important part. Important part, we can understand, we can gain understanding about the Malkov chain itself. A large Malkov chain is composed of many different parts, and we may want to know how each part affects the other. And that kind of understanding, we can only gain that understanding using an analytical approach. So, the second part I think is important in this case. Important in this case. And this is the outline of my talk. I first use a simple Markov chain to explain the method. And then I want to explain the key idea, I mean key property, partial flow conservation. And then I explain the model, Malkov modulated Malkov chain, and then analyze the model and I give a summary and then references. Okay, the first Malkochne chain. Okay, the first Malkov chain, this is a simple four-state continuous time Markov chain. And I want to divide this Malkov chain into two pieces. So how can I divide? The top two states are subchain Q pi, I name Q pi, and the bottom two states are subchain Qp. I want to split these four state markers. To split this four-state Markov chain into two sub-chains, and I call the distribution, stationary distribution of the top two states, pi zero and pi one, and the stationary distribution of the bottom two states as p0, p1. So these stationary probabilities are stationary distribution of sub-chains, so they are normalized. subchains so they are normalized pi 0 plus pi 1 is 1 and p 0 plus p 1 is 1 i want to find subchains distributions p0 p 1 and pi 0 pi 1 and that is my goal of my decomposition method now before i introduce my method i want to explain the standard decomposition approach so this includes a famous sensored markov chain Um, sensored Malkov chain technique that is developed by Professor Yichen Cao and others. And there are many other decomposition methods, and most of them, many of them share the same properties, and that is this. So let me explain toy model to explain the idea. Check how a visit to the other chain returns to the starting chain given it lands at a certain stage. Given it lands at a certain state of the other chain. So suppose that I know from state 0P, two blue people, possibly Democrats, they move to the other state, subchain QPI. And then I know that four people, red people, move up from state 1P to the other. P to the other subchain. So two people and four people. And I want to know how they come back. And after a careful investigation, I can find that two blue people comes back to state zero P. And in addition, one red person comes back to zero P. P and three red people come back to state 1P. So this is what I found. I know how people move around and I know how to trace them. So if I can do this investigation, then what can I do? Can I re-dilect flows and decompose the Mulkov chain? Uh, mark of chain of the two states, bottom two states. How can I redirect flows? Because I know how people move around, I can redirect flows as this. So two blue people go out and come back. And out of four, one red person moves from one P to zero P. From 1p to 0p and then 3 goes out and then come back. So, this is the redirection I come up with after careful investigation of contact tracing. And this is the standard method. I need to know how people move around. But I want to find an alternative redirection procedure, which I hope is simpler. So, what can I do? What is the key idea here? What is the key idea here? So, the key idea is: okay, I want to tell you the answer: the proportion. I know that three people come back to 0p and 3 people come back to 1p. I don't need to know who is blue or who is red. All I need to know is how many come back to each state. To each state. And at the end, what I want to satisfy is partial flow. So, what is partial flow? This is basically, this is just net inflow or net outflow. So, let's take a look at the state 0p. 2 move out and 3 move in. So, net inflow is 1, 3 minus 2. And how about 1p? And how about 1p? 4 move out and 3 move in. So net outflow is 4 minus 3, 1. I just need to maintain this net inflow or net outflow after decomposition. As long as I maintain this partial flow, as long as I conserve this partial flow condition at each cut, then the distribution of the bottom two states. The bottom two states don't change. So that's the key idea I want to implement. And what I need to know is: I don't need to know who is blue or who is red. I just need to know 3 and 3. Moreover, I don't need to know the total number. I just need to know the proportion. Because the total number is obvious. Because of the global flow balance condition, if I know that 2 plus 4 people move Plus, four people move from bottom to top, then I know that six people should come back. So all I need to know is the proportion: 50% to 0p and 50% to 1P. And that is what I need to know. So using this information, can I take advantage of this information to come up with a possible redirection method? I want to give you three possible methods. Give you three possible redirection schemes. The first is standard method. After careful investigation of contact tracing, I come up with A. But B and C also satisfy partial flow conservation. So B and C should be fine as well because net inflow and net outflow at each Outflow at each state are conserved. So, which one do I want to choose? I would choose B. The reason is this is simple. I just multiply 50%, 50% return flow proportion to the transition rate going out from each state. So, So I think this is an important part. So let me explain again. I know that two people move out from state 0p and 50% comes back. 50% moves to 1p. So 50% times 2 is 1. 1 comes back and 1 moves out to 1p. Likewise, out of four red people, 50% of the people are going to be able to get 50% goes to 0p and 50% goes to 1p. I just multiply 50%, 50% to the outflow rate. So that's what I do. And I think B is simpler than C or maybe other possible schemes. But regardless, there are infinitely many redirection schemes, and anything should be found. And anything should be fine as long as we conserve partial flows at each every cut. So we can just choose whatever method that is suitable for our analysis. And then I chose this B because I think it's easier than the others, than others. Okay, so let's solve the actual four-state Markov chain problem. Axel four-state mark of chain problem. And I, rather than calling redirection, I call termination, I just wanted to use a slightly fancier name. I call it termination. But basically, this is just redirection of flows, transition rate transitions. Now, I want to split into two subchains: subchains qÏ€ and qp. What is the What is the termination scheme? All I need to know is the proportion inflow to 0p from upper chain and inflow to 1p from upper chain. And this proportion is easy to obtain given that I know the stationary distribution of upper chain. And that is this. So, red circle, if you take. Circle. If you take a look at the red circle, this is the proportion of inflow to 1p from upper subchain. Alpha 1 pi 1 divided by alpha 0 pi 0 plus alpha 1 pi 1. This is a proportion. Similarly, the proportion of inflow to 0p is this bottom red circle. Alpha 0. circle alpha zero pi zero divided by alpha zero pi zero plus alpha one pi one this is the proportion of inflow to zero p from upper sub chain all i need to know is multiplication of outflow rate gamma and this proportion so i just multiply now what happens i have two self transitions and cell two Transitions and the cell to redirection. Now, self-transitions, I can just drop it. So, what I end up having is this simple two-state Markov chain, which is very easy to solve, but this is insightful. Let's take a look at the detail. We see pi in the transition rate. It means that this transition from zero This transition from 0p to 1p is affected by the stationary distribution of the upper subchain. If pi is different, then the stationary distribution of 0p1p must be different as well. So consider a simple case. When is Qp's stationary distribution independent from QP? independent from qÏ€. q pi is the stationary distribution of the upper subchain. So if we take a look, we can easily guess if alpha 0 or alpha 1 is 0, if either one of them is 0, then we can make transition rates independent from the upper chain. Now I can't make both Now, I can't make both equal to zero, but then it becomes like, I mean, we assume ergodic mark of change, so we can't assume both are zero. One of them can be zero, and then transition rates become independent. So I think that's interesting because if there is a traffic flow through one channel, then the stationary distribution of the upper sub-chain doesn't affect. The upper subchain doesn't affect the bottom two states. So, because of that, I can, for example, think about three possible cases I call trichotomy of the decomposition analysis. Case one, if all parameters connecting two subchains are positive, then we have a dependency. So, one So, one is dependent on the other, and then I need to solve both at the same time. So, analytically, it may be possible, or if it is not possible, we can numerically solve it. It's a recursive analysis. And then the second case, it's possible that one can be solved independently, and then the other is dependent on the one we just solved. On the one we just solved. So, this is the second case. And in many, like many Markov-Cheni examples, we see this case. Sometimes we can solve one and then everything is dependent on that. And the third case, everything, all sub-chains can be solved independently. And this is the nicest case. And the first scenario. And the first scenario is truncation. And the second case is redirection. So for both of these, we can solve these two amount of change independently. And Professor Jose congestion-based starting model, I believe that we can solve it analytically using closed forms. Analytically is in closed form. Sorry, analytically, because we can solve each sub-chain independently. Okay, so the benefit of the decomposition method is that we can always decompose Markov chain because termination is always possible given that we know other sub-chain distributions. Change distributions and dependency becomes apparent if we set up an equation or if we come up with a termination method. Of course, sometimes the answer is pretty complicated, but in other cases, it may be simple. Okay, so I'm running out of time, so I want to go quickly and explain about the Malcolm modulated server. Malcolm modulated server single server queue. So I assume several typical assumptions: CTMC, single server MM1 queue, pass-on arrival, exponential service time. Some of the key property here is process starts over at some point. So when, for example, this is considered a machine, machine deteriorates, and then at some point we need to replace. So there is a Need to replace. So there is a start of a point. So this is the amount of chain we want to solve, and then we decompose it. Now, to solve this, I just pick two subchains, subchain Q pi and then subchain Qp that are connected with each other. And I want to solve a general model. So I assume alpha 0, alpha 1, state-dependent transition rate. Transition rate. And when we go out from the bottom subchain q pi, qp, then it goes back to subchain q pi eventually. So let's solve this problem. Basically, what we need to know is proportion. So let's find the proportion, but we already did it in four-state Markov chain case. This is exactly. Chain case. This is exactly the same. I just changed the number of states to infinity. So the proportion of inflow into state k is basically this. And I call it pi k hat. So this is the proportion. And this is proportion. This is normalized. And similarly, I define proportion of outflow from state k and I call it p. And I call it PK hat. So this is the proportion of outflow at state K. And because this proportion and stationary distribution are both normalized, it is convenient to use Z transform of everything. And this is the termination scheme. So this looks complicated, but essentially this is exactly the same. This is exactly the same. For example, let's take a look at gamma k pi zero hat transition rate. So, um, gamma k is the outflow. I just multiply pi zero hat because this is the redirection to state zero. I only need to multiply outflow rate and proportion. So, this is the termination that can maintain the That can maintain the partial flow. Now, let's solve this problem. Again, it is convenient to use Z transform, and then I skip the detail, and this is what I have. Z transform of the stationary distribution of the subchain QP, which I am focusing on, is dependent on the Z transform of the proportion of outflow and the proportion of inflow. Of inflow. Very simple result. I need to determine P0, but I mean, this is Z transform and then I omit the detail. There is a standard procedure to find P0. So anyway, Z transform can be found and then it is dependent on the Z transform of proportion. All I need to do. All I need to do is plug in several parameters in order to find the Z transform of proportion. And Z transform of proportion, when we consider the Markov modulated single server queue that I showed, we have a very simple result. Z transform of proportion is either one. Is either one or equal to the stationary distributions transform. So I'm running out of time. So I just plug in these two to get the result. So let's do it. I want to skip this special case. I want to analyze Q1. Let's take a look at Q1. What is the inflow? What is the inflow? I have a single inflow, single channel inflow to state zero and multiple multi-channel outflow from state subchain Q1. So all I need to do is plug in proportion, no, Z transform of proportion equal to one and the transform of proportion of outflow. Of proportion of outflow is equal to the Z transform of stationary probability. I plug in, I just plug into the general result and then I get the result. Basically, so the key here is that it is not dependent on the previous chain. The previous chain does not matter. I can solve this Q1 independently, and that's the key. And I can get the termination. And I can get the termination. And q2 to qn minus 1, all I need to know is z-score of proportion. And then I plug in to the general result. And then I get the z-transform of the stationary probability of the sub-chain I'm focusing on. And the key here is it is dependent on the previous chain. On the previous chain. So after I find Q1, based on Q1, I can obtain Q2 and Q3 and so on. And down to Qn. Qn, multiple flow into subchain Qn, but single outflow. And based on that information, I can come up with Z transform of proportions I plug in and get the Z transform of the And get the transform of the stationary distribution. So, what did I get? I can solve Q1 independently, and based on that, I can solve Q2, Q3, down to Qn minus 1, and based on the information of Qn minus 1, I can solve Qn analytically. And this is the end. So, I believe that analytically, this is very strong. That analytically, this is very straightforward. But computation may be complicated, but analytically, it is straightforward. So, summary, I showed a termination scheme this time that is non-trivial. And the key idea is to maintain partial flow. And this does not rely on return rates, so the analysis is quite simple. Is quite simple. And our method reveals how sub-chains are dependent on each other based on how sub-chains are connected with each other. In other words, structural information is utilized to come up with this dependency. And it is easy to implement both numerically and analytically. I did numerical work as well, and this is very efficient as well. And references, the first one is the References: The first one is the famous Markov chain decomposition technique, sensored Markov chain technique that is developed and worked by Professor Ichen Zhao. And the second one is the famous textbook by Stuart. Professor Stuart Nelson's textbook, we found that one of the examples is exactly the same as the model we solved this time. And Shawin's paper. And Shaw Wing's paper, he discussed the general class of the model that I discussed today using a different approach. And state-dependent MG1Q, this is about general service times, Markov gender composition technique. The next one, this is congestion-based staffing policy model. I believe that this is an interesting model to work on using decomposition. Decomposition technique. And then the bottom two are papers that I submitted, and then I need to resubmit. Okay, thank you so much. If you have any questions, I appreciate. Any questions?