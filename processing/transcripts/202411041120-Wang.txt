So, first, I want to give some examples of a fluid structure interaction in life science because of audience in this workshop. And then I will talk about how do we set up this framework? It's a computational modeling framework. We heard about people talking about AOE in the previous talk. And here we wanted using a slightly different approach. We want to cheat. We want to cheat. We want to use some cheaper, but it's less expensive, but easier to implement computationally. It's called the phase field. And then I will skip the numerical part because I know this is a more physical-oriented audience. Actually, this is one of our motivation to derive models based on non-Kubernetes thermodynamic principles so that we have energy dissipation. Energy dissipation. And then, when we design numerical schemes, we have to respect those energy dissipation properties at the digitized level. I will skip that and I will show you some examples. So, those are the well-known fluid structure interaction in life science. You have a cilia beating in your airways, or you have a semen, you know, swimming in the very viscous environment. And also, there's some cartoon. Can you play? There's some cartoon. Can you play the one on the right? Oh, nobody's there. I don't know if I can play this. So this is the cartoon where you have a chemo attractant in the middle, and then all the bacterias or other life cells will be attracted. And then they form this kind of a run and a tumble motions like that. So there are many, many tools competitionally people are dealing with. Computationally, people are dealing with this kind of fluid structure interactions. This is only a short list. There are so many, but I couldn't list all the references because they're biodendable papers in this area. The first one is the ALE, which was mentioned in the previous talk. And then there's a level set. Math people love that. And face field, we like this. It's easier. And then front checking. Front checking, you can have a 2D. Have a 2D done very accurately, but in 3D is very complicated. And then volume fluid, engineers love it, right? We have then the immersed boundary method, which was mentioned in Professor Lang's talk. And also there's a lattice postman method, which is another cheaper alternative people have embraced. And then there's a DPD, there's smooth particle hydrodynamics, and there's added mass partitioned algorithms. Partitioned algorithms. And lastly, the fluid particle methods, which was developed by Tanaka in Japan, has been used to study the polymer chains very successfully. However, the problem with this, this is one of our motivation. The fluid particle methods does not satisfy the second law of thermodynamics. In other words, it's not a thermodynamic consistent. We want to insist our model. To insist, our model should have a thermodynamic consistency, right? So, traditional people study this kind of a fluid-structure interaction. They write down the equations, fluid in one domain, in the fluid domain, and whatever structure, for example, here, I wrote down the elastic equation for the solid elastic material in another. And then you try to glue these two equations at the boundary to make sure you have energy dissipation. Okay, so that's very important because otherwise, Okay, so that's very important because otherwise you lose thermodynamic consistency, which is not good. And for us, we want to cheat. Well, cheat means we want to develop a cheaper computational model where we can implement without spending too much effort on dealing with the geometries, moving boundaries, okay? Because the moving boundary issue is very complicated. Even in ALE, you have to track where they are. You have to track where they are. We don't want to track that. We want to forget about where we are. We want to track that automatically. So, therefore, we want to use face field. Face field method is, you can think that as a labeling method, where you can track whatever face by label that face, by introducing a labeling function. But, labeling function in mathematics is discontinuous, right? You have in this area, we label it one, outside we label. As one outside, we label as zero, but it's not easy to deal with this discontinuity. So, therefore, we allow a diffuse interface between this zero and one value so that we can have a smooth function. So, that's called the phase field. So, this phase field method has been applied in many, many fields, in materials, in fluid, as long as you don't require very accurate interfacial. Interfacial resolution. Phase field is a very useful tool, in particular in life science. Because if you look at the cell membrane, it's not a surface. Wherever your surface is cheating, okay? Because the cell membrane is a highly folded structure. So when cell moves, is the membrane unfold and therefore it moves. So if you count the total surface area. The total surface area of the membrane versus the actual volume includes is huge, at least five to one, or even six to one. Okay, so therefore, whatever you do using surface to represent a membrane is not a reality. So, you have already cheated over there. So, instead of doing that cheating, why don't we consider that as a diffuse interface with certain thickness? So, that's our argument. So that's our argument. So we use the phase field to describe whatever interface we have in the system we are trying to model. And then we, it's like religion. We insist we need to have thermodynamic consistency because there are not many principles over there people can embrace when they derive equations, models. This is one of them. Why don't you use that? You gave an equation which doesn't satisfy energy dissipation law. Energy dissipation law. Where is wrong? Your equation has some problems, right? Why don't we fix that in the first place? So that's our belief. We need to have equations which respect thermodynamic consistency, okay? And also, we want to include whatever physics we can include for each phase in this model. For example, when we have a fluid phase, solid phase, you need to impose whatever constant equation you have for each phase. Constant equation you have for each phases. And therefore, our talk in this talk is: we need to have a novel computational modeling framework for multi-materials, multi-physics system. So, this is still open-ended project. You can do whatever you like, but then you have to make sure you exist thermodynamic consistency. And also, we want to focus on the algorithm side. We want to develop a numerical algorithm which is accurate, efficient. Is accurate and efficient, right? And again, I want to warn everybody: our target application is going to be the area where the interfacial resolution requirement is low. Okay, if you want to have air liquid interface, please don't use this approach because the interface is going to be very sharp. However, in biological applications, no problem. So, first, I want to start with. So, first, I want to start with introducing the idea. How do we use this idea? So, imagine we have a particles. Particles, you can here, particles' structures are interchangeable. You can have structures or particles. I use particles throughout this talk. So, you have particles which have different phase versus the matrix area. Matrix, for example, is fluid. You can have matrix like a basic lexico fluid or jails or whatever. Okay, so let's assume. Whatever. Okay. So let's assume it's a viscous fluid, and I have different phases. For each phase, for each particle, you use, you gave a label. So we use labels. So for example, first one, I labeled that as phi one. So phi one within this particle is one and outside is zero. Okay. And then this function is smooth. So therefore, there is a fast, very narrow transition layer near the interface. So we can label each one differently. Okay, and somebody asked: Can you use one labeling function to label all the particles if they have the same material properties? It's very difficult to do because we're going to use free energy, but we don't know how to propose that free energy system. And then here, we also want to deal with the situation where the particle size is relatively small compared to the geometry we are going to study. So, therefore, we don't need to try. So, therefore, we don't need to track all the details for the particle. We can simply just look at the center mass of the particle. So, therefore, we can derive the center mass by averaging over the labeling function versus the coordinate. So, therefore, that will be the center mass for R. And then we can derive the velocity of the center mass. And all this can be done consistently. Consistently. And finally, for each particle and their interactions, we want to introduce a free energy. So, this is the very physical part. And how well you do the model depends on how well you can invent or develop this free energy system. And then we can impose certain so-called incompressibility conditions, where, for example, the labeling functions, they all sum. Labeling functions, they all sum into one so that you have no overlapping situations. Okay, so all the particles are non-overlapping. Okay. And the next, for example, you can impose physical properties for your particles. Here, for example, we began with a rigid body. For rigid body, how do we describe a rigid body? Well, rigid body within rigid body is no deformation. So if there's no deformation, the time derivative of that will mean your rate of stream tensor. mean your rate of string tensor is going to be zero. Okay. So we say within the rigid particle, we have rate of string tensor to be zero. Therefore, we impose that as a constraint locally. But how do we generalize local constraint to global domain? We multiply by the labeling function. So multiply by phi i, then you extend this globally. So therefore, if you have n particles, you can have n. Have n particles, you can have n global constraint now. So now you have a system where you have constraint in addition to the traditional governing equations where you have all the conservation laws plus considering loss. Now you have constraint. Okay. So how do we deal with the constraint? So this can be done systematically using what I call the on-site girl. Basically, using what I call the Anzeiger's principle or Anzeiger's linear response theory or second law of thermodynamics. So, it's equivalent. So, here I have no time to tell you how to derive that, but you can derive systematically, and then you can identify the it doesn't show that. So, there is a constraining stress, which is given in the second term of. Which is given in the second term of a tau, we have phi i times sigma i. So that constraining stress is Lagrangian multiplier corresponding to your constraining stress, constraining rate of strain tensor. For each constraint, you have a corresponding Lagrangian multiplier, and that shows up in the stress. And therefore, we can write down the total conservation law for only one velocity. So, this velocity is mass average velocity. Is mass average velocity. And now we don't need to know where is the particle, where is the fluid. Those locations are tracked by the phase field now. And of course, we need to derive the transport equation for the phase field. So this is like a traditional treatment for phase fields. So we transport phase field based on some kind of a conservation law. Some kind of a conservation law as well, but the right-hand side actually is a so-called excess flux. Okay, and then we need to find what that form is given through the generalized Ansager's principle. And all this has been published in the HACT paper in 2004. So I don't want to go through the details, and then we can systematically derive the excessive flux. Flux dj and also some interfacial forces from this derivation. So in the end, we have a single momentum balance equation, and we have the stress equations. Also, we have the incompressibility condition because we assume we impose everything, every constant, not constant. But if the interior and exterior have Interior and exterior have different density, we end up with so-called quasi-incompressible model. And of course, there is a transfer equation for each phase, and then there's constraining equations. So, of course, if you say I'm not going to do a, well, here, here is the energy, total energy, where we have the kinetic energy. Somehow, this pointer doesn't work on the screen. On the screen is very fainted. Okay, so kinetic energy: this is the free energy for the faces, and then this is the penalizing term because we have all the faces adding up to be one. And then there could be excluded volume interfact, or there could be excluded volume interface at the interaction between the particles and the boundaries. You can all add them here, and then you can write. And then you can write down the time rate of change of your total energy. And then you can clearly identify what is in the bulk and what is at the boundary. So the bulk term, this is only our choice. We can make this choice. So we have a energy dissipation if the mobility matrix is positive definite. And then there's a boundary. Okay. So the boundary term is quite nasty. And actually, how do you choose? And actually, how do you choose your boundary condition? Math people don't care, and physicists cared, but somehow they make their choices. So, that was a question I asked Jimmy earlier. Because you look at this, if you rearrange terms based on their physical units, it's a quadratic form. So, now you have two groups. One group is the generalized force, the other group is the generalized flux. Now, they have an inner product over there. Now, if you postulate Now, if you postulate your non-dissipative property, you have infinitely choices. How do you choose your boundary mobility operator? That's really, I don't know. I mean, maybe we have audience who can give some good suggestions. So, for example, here, you can consider adiabatic boundary conditions. This is the boundary condition where you assume there's no motion, you know, there's no flux. Motion, you know, there's no flux on the boundary, and then the boundary the energy dissipative term will vanish. Okay, so this is the case most people adopted in their study. And of course, you can also choose other boundary conditions. Okay, so in this case, all the boundary terms drop, so therefore, your energy dissipation is given by the bulk. And now we can say, okay, we can. Can say, okay, we can consider the particle of viscoelastic. Then you can postulate your viscoelastic consideration equation. Here, I just wrote down the O draw B type. You can have all the other types as long as they are energy-based. Then you can postulate. And then there's no problem. You're going to have energy dissipation in the bulk. Of course, at the boundary, you have to worry about how do you impose your boundary condition? How do you choose your boundary mobility operators? Mobility operators. And here you can look at the energy, total energy, and then there's also energy dissipation properties. So everything will look similar, but except now the equation for your materials in the particle now is replaced by this O-draw B type. If you drop everything on the left, you recover the rigid body equation. The rigid body equations. And here is the energy dissipation functional for the adiabatic boundary conditions. So you have energy, you have elastic decay over here. And then this equation can include all the other equations, for example, the rigid body or elastic particles, you name it. You can take different limits, then you can recover different equations. Equations. And then active particles. So active particles, there are all kinds of activities you can add it on. For example, if you have a man-made material, you put a motor inside, then this is one way you can add activities, right? So you can think the motor is added at the center mass, and then the particle motion is given by the fluid velocity plus a cell-propelled velocity. And with this, you can modify this equation a little bit. You can modify this equation a little bit by adding the drag term because the cell propelled the velocity is going to create a drag. And with this, and we also lose energy dissipation because active particle, active matter system is not closed. It's not closed system. So, therefore, if you look at the energy dissipation and then we have this added term with the drag, which is causing a problem, we don't know whether. Is causing problems. We don't know whether or not it's a dissipated energy or is adding energy back to the system. It depends on the direction of the cell-propelled velocity with the actual moving velocity. And finally, we can also add the activity using force couple. So this is like you have a swimmer where the swimmer is a Swimmer, where the swimming doing different types of swimming styles, freestyle versus bright stroke, then that corresponding to two different type of first couples. So the first couple, you know, you can schematically written like this, but when you actually implement, it's a different matter. So how do we implement it in this model? Well, first one, this is the push. First one, this is the pusher. So imagine pusher is pushing this particle forward. So therefore, you have a force couple behind this particle. And this is the puller, and the puller is going to drag this forward. Therefore, you have the force couple in the front. And then there's some technical ways. How do we choose this direction? How do we measure the location on the particle? And I don't want to give all the details. And I don't want to give all the details. This can be done. All right, so I will skip this numerical part because the basic idea here is we want to design our numerical scheme so the scheme will respect whatever property you have in the continuum model. If you have energy dissipation, the numerical model will respect energy dissipation. If you lose that, no problem. The numerical method. No problem. The numerical method will respect whatever energy dissipation rate you gave over there, either increase or decrease. Okay, so that's, I think, is required because otherwise, when you digitize the system, you're changing the model. Okay, you're creating something which is not in the original model. So that's why we have to do that. So I will skip this and then just show you some numerical results. Else. Can you play this? Thank you. Yeah. So here we put the three active particles where they all have excluded volume effect included, including the extreme volume with the boundary. So therefore, when they bump into the boundary, they're going to bounce back. And then you can see, we don't need to track where they are. Their location is described by these three phase variables. By the three phase variables, phi one, phi two, phi three. So when we discretize the velocity field, it's only one equation. Okay, so locations are tracked by the three equations for the three particles. So next page. And here you can show the in this system, even though you have activity, but the total energy is still decaying. Okay. And the other one is a volume. Other one is a volume, volume for each particles, which you can see is under machine precision. It's almost unchanged. And then we can do 3D with two different particles with different sizes. Can you play this movie? So this is a pusher in viscous fluid with force couple. And because the material we implemented is elastic material, so therefore you can see a slight. Material. So, therefore, you can see a slight fluctuation with the velocity field during this simulation. Yeah. Can you move to the next slide? Yeah. And here show you, excuse me, how the center mass moves during this motion. But basically, it moves in nearly a straight line, but it's not exactly a straight line. There's a little bit of curve. So, here's a better. So here is a better resolution you can see for single particles, then you see the oscillation of the fluid field. And then here you can examine the composition of your total energy. So in this case, the total energy first decay and then gradually increase, right? And you can look at the decomposition of the total energy. First part is Of the total energy, first part is free energy, the second part is elastic energy. So, this activity-induced elastic energy actually increases all the time. And also, you can see a little bit the fluctuation in the velocity on the right picture. So, this is another one, but with a softer softer television. Particle, where actually we assume this particle has viscosity ratio versus the matrix is five to one. Okay, so this is not our model. This model has been used by other people in the past. No, the other one, I guess, right? This is the weird eye. Yeah. So this one has a slightly larger aspect, the viscosity ratio. Okay, so the one inside. Can you play this one on the right? The one inside has viscosity 10 versus one in the matrix. Okay. All right. Okay, all right. Next page. Okay, so basically, this shows you we can systematically derive a two-phase or even multi-phase because each particle can have different properties. But we only showed you, you know, each particle exhibit the same material property. Okay. And this computational framework is cheaper in terms of competition. Cheaper in terms of computational efforts because when you develop your numerical scheme, your digitization is simpler. And also, you don't need to track the interface where they are. And also, we may be able to consider more complicated geometry for this case. For example, we showed you the disk case or a ball case. We could have ellipsoidal phase. We could have ellipsoidal cases, okay, or even more complex cases if we can have the free energy to maintain the morphology of that particle. So that's the big if. And also, this is very easy to implement. So when you write the code, basically you can extend whatever software you have for number stokes equation and by adding additional digitization for your concentric equations for the phase field. Equations for the phase field and also for the materials, either elastic or others. Okay. All right. So that's basically what I want to show you. Thank you.