I'm going to talk about one of the issues I'm personally quite interested in and that is how to integrate blockchain or more generally distributed ledger technology into systems. And I'm going to do this in the context of IoT. That's the environment I work with. So my name is Rav Dieters. I'm from the University of Saskatchewan. And I always like to remind everyone. To remind everyone that Saskatchewan exists, it's the square in the middle. And I also like to point out the city is Saskatoon. We've got the Saskatchewan River going through. You can see the university is a large part of the city. Here are some pictures. This is summer. And here is some very basic information about the size. So what I will do is assuming that nearly everyone is relatively familiar with Everyone is relatively familiar with blockchain technology. I'm not going to go over the basics. I'm just throwing some slides, probably go very fast over this. And then focus on deployment issues, which I think is a really important issue how to integrate blockchain into existing system. It is one thing of you saying I can write something else in the smart contract, I can build a tic-tac-toe game in Solidity Grade. So what does In solidity grades, so what does it do, right? So, I think the big issue is how to connect. So, talk about that, talk a little bit about the idea of using smart contracts as forms of policies that govern the behavior of other systems. And then talk about our current work. I always like to go at the very beginning to explain where I actually try to bring people. So, what is the main idea? So, I view The main idea. So I view blockchains as middleware and digital ecologies, digital ecologies. So large systems, a lot of changes in the functional relationships, evolving systems. This is kind of a blockchain layer. We have smart contracts and we have data and we have then other components using the blockchain to interact with the data layer and have smart contracts to monitor the behavior. Smart contracts to monitor the behavior. I also will argue that we need a lot of external components to analyze what is suspicious, what is not suspicious. This is very hard to achieve with smart contracts. And then, of course, there's the whole issue of policing, enforcing certain rules. And I will go with smart contracts as a tool for enforcing policies in system. What is correct behaviour, what is not correct behaviour. Is this process allowed? You. Is this process allowed to access certain data? Is this process allowed to pass certain results on? So that's where it will actually go. But of course, I always want to play it safe. And so I go over the four generations of blockchains. We identify roughly now, you can pick whatever number of generations you want. We start with the fictitious Satoshi Nakamoto. Beautiful system with Bitcoin. Takes peer-to-peer technology, puts some nice Puts some nice protocols on top, uses a proof of work. So it's really a beautiful system, and ever since, people have tried to use this and adapt it, and it's quite, quite tricky. We can typically say this first generation system, the ones without smart contracts, that means real smart contracts, not just fourth code, is one class of systems, and there are many, many clones there. And then we have the There and then we have the Ethereum system emerging, which is the which claims to be the general purpose platform. This work is primarily tied to crypto currencies. Then we can see the third generation of systems which are being rolled out. They try to offer the to overcome certain performance issues. So Hadera, HashGraph, and IOTA, whatever you can put there. They are trying. You can put there, they are trying to be fast and go for certain domains. And then, this is now up to everyone's opinion. I think the fourth generation are the system, so interesting, named Skynet. These are special hardware software solutions targeting specific verticals, like for example supply chains. So, there's a big interest, special chips optimized for certain things. So, we're probably in two, three, four. Probably in two, three, four is going on. So are these separate systems or are they building on Ethereum? These are generations of blockchain distributed ledger technology. Skynet is falling into a fourth generation system. It uses different consensus algorithms. It is highly specific to a task. We see this already with hyperledger. So you have different hyperledger is a big term, and then there Hyperledger is a big term, and then there are so many different versions. So, Sawtooth is also for certain supply chain scenarios. And I think the fourth generation, they add certain hardware. So, it is not like before it doesn't really matter. So, they think it through to the end, to the IoT device, to all the other components, how they can work. Does that help? Yeah. So, this is evolving. Skynet is a very odd choice of name. Anyone heard about Skynet? Anyone heard about Skynet? Yeah, it's an age thing. No, you haven't heard that. Well, before the Terminator and Evil Skynet, it's a different one. So here's the usual spiel with central ledgers. And of course, we have the distributed ledger technology. And I always love to point out, at least for me, these systems they have consensus algorithms, consensus algorithms are continuously evolving, being developed all the time. All the time, and we have systems with very often. Well, it's difficult depending on which generation you go. If everything is fully replicated, it means every node has a full copy of the ledger or subset of the ledger. But in general, you have only one writer and end reader, so only one can actually change an account or do things. And you have, you know, this signature scheme built inside. Yeah, so I think pretty important. Yeah, so I think pretty pretty pretty common and so people begin to to play around in order to get certain performance features so for example going back here to optimizing you know if you want to have fantastic performance you of course go to a little bit more centralized consensus things right so practical Byzantine fault tolerance when you look at it and say well there's a couple of machines which do a task which otherwise is spread over a large amount Is spread over a large amount of miners. You can obviously see that there's potential for performance benefits at the risk of resilience towards certain attacks. So there are lots of things you can change. So yeah, I'll skip this. This is just directed acyclical graphs. That's then probably more the distributed ledger approach which offer better transactions per graph. Bit of transactions per second, which is a big, big issue. There were many, many research directions in the space of blockchain and distributed ledger technology. There's always which I call not very nice, one more application. You can do this and that. And here's already my criticism of just having another application. The question is, you know, is this just a demonstration what else you can do in a scripting language, or does that In a scripting language, or does that solve a problem you couldn't solve with other technology? Scale is absolutely still a major issue in terms of transactions and data. How do we scale these systems? We've got lots of active research and verification of smart contracts, very open-ended thing, you know, how do you make sure that the contract behaves like it's supposed to behave. Also, interesting things is how do you actually deal with Is how do you actually deal with violations of these contracts? So, if you don't do transactions, it's very clear that you have to have mechanisms. If a transaction fails, you can just say it fails, boom, nothing happens. Or, of course, you can have compensation handlers that you say, I want to deal with it, like the sagas there. So, we have, of course, all the time consensus, message protocols, new incentive mechanisms. There's a lot of research coming out of multi-agent systems where people look at Systems where people look at ways to incentivize nodes to show a certain behavior, and of course, encryption signatures. Very briefly on what we did, I always think it's important to say where I come from so some of my thinking process and my assumptions and biases become clear. So I come out of middleware, so therefore I see everywhere middleware. That's not surprising, right? I did a lot of work in mobile, cloud, edge. I work in mobile, cloud edge, and IoT was really great, fun internet of things. And that's actually what then brought me to blockchain when I was dealing with management stuff. So since 2015, we've been looking deeper and deeper into blockchain. Here are some of my PhD students. They focus on smart contracts and access control. How can we use smart contracts for access control? It's the most common use in the IoT case for blockchain and it typically For blockchain, and it typically is capability-based access control. That is a fancy way of saying, I'm going to give you a token, and think of this token as a key. And this key allows you to open and interact with certain data. And now these keys are transferable. And that's extremely interesting in an IoT scenario because I can give you a key and you can then pass that key or maybe a modified version to someone else. So it's a very, very attractive thing, and large amounts. Attractive thing and large amounts of research has gone there. Myra, she's looking also at IoT, blockchain, and all suspicious transactions. Yeah? Yeah, I actually think that last thing you said was very interesting. Can you dig into that a little bit? Yeah, okay. So capability-based access control. There are many different access control schemes. So what you typically have is role-based access control, RBAC. Role-based access control is kind of the standard. You define roles, and based on the roles, Roles and based on the roles, the one who is in this role has certain access privileges to interact with data. So, for example, I cannot approve my travel grant or travel request, but someone in the role of approver, it can be the department head or someone approved by the department head, has read-right access to my travel request. RBAC has historically been extended with attributes. People said that roles aren't enough, time, location. Aren't enough. Time, location. Think about whatever you want. That is then RBAC X. That X means anything else. That now is called attribute-based access control. That is a nice, nice approach. Anything can be used to define a role, location. I'm very close to something, therefore I can have access. Only if I'm in this room, I'm allowed to press these buttons. The problem with some of those things is that they are actually designed for That they are actually designed for enterprise. They have an inherent assumption of a boundary, an in and an out, and they are very, very centralized. Capability-based access control is a very old approach. Nothing really new with it is now being discovered in IoT and blockchain, and it is based on that I, in the easiest case, define a token. And the holder of this token, so I can now create a token, let's say I have some account. Say, I have some account, and I can just say the holder of this token, I pass this token to you in the application program. We all agree that this token means you can read and write to the database. Or more practical, everyone who has that token can go to the database, show to the database you see there in the blockchain. Ralph has given me this token, therefore I can read everything about him. So, it is the token is very nice. Now, the key feature in the token is that the Feature in the token is that the token is transferable. We can have any kind of behavior. We can have a token like a bus ticket. I'm pretty sure I can buy a bus ticket in Calgary, assume there's public transport, and then I can give it to you. It's a transferable token. It will still work. With airline tickets, it's a tough, sensitive topic right now, I guess. It's not so easy. Just because I have a trip to Europe, I have, let's say, Have, let's say, I want I think London is a safe city right now. You can come back, right? And so you can, you can, I can, I can't give it to you because there are rules attached to it. It's a non-transferable one. You can have anything in between. I'll talk about ticket systems or others. You buy tickets to concerts. You can just transfer a ticket. That allows you access to the physical venue, but then as there are rules attached, you can only transfer it twice or whatever. twice or whatever move on so does that sense that make things always think of a magic key you can you can add so that's the access control thing suspicious transactions a favorite topic of mine because I always think it's very useful to think about how people cheat everyone is interested in a cocktail party to hear about or any kind of social gathering ah so how can you cheat right and I believe it's very easy a system that be is just based A system that is just based on private key, having a private key unlocks everything. There are problems. I have the applications, they have access to this private key, maybe they can be hacked, whatever. So we have to have mechanisms to monitor, does it make sense? So there are certain things I'll do and certain things I won't do. And if there's a user model, I can use that to detect that. That goes a little bit into management of blockchains. Blockchains. Sarah's work, she loves deep learning. And I told her, well, you can do a PhD in deep learning, but you have to add some blockchain to it. So it's about management of access. How do we deal with the owners of data? It's always nice to learn, but that data is not laying around. I can't just go and say, oh, there's a really nice car over there, and nobody seems to have it. I'll take it. Or there's a house, no one is inside. House, no one is inside. I just found the house. This is not how it works in the real world. The one is called stealing, and the other is breaking and entering. So there is access control, and then Tanvi is in performance improvements. Now, one other last thing before I actually go quickly about the little stuff I have to present is that I am radical or fanatic, whatever, that I really view blockchain technology and distributed ledgers. And distributed ledgers as a pattern, as a way to design a system. I am not so personally interested in the evolution of version X, whatever, point Y, point Z of a platform. Platforms are interesting, you can use them. That's how we do projects with companies. We do a lot of experiments with blockchain. Personally, I would say doing experiments is very, very tricky business. It's very hard to replicate results. You have these ten. To replicate results, you have these test nets which tell you nothing according to my belief. And I use a lot of simulations and I use the language Erlang. Does anyone use Erlang? You like Erlang? No, I have a question about the previous point. I thought you finished. Simulation? No, I was going to ask about suspicious transactions. Yes? You wanted to ask now or later? Whenever you have time, can you? I have some examples. As long as the organizer of the event gives me time, I have it. Gives me time, I have a so suspicious transactions for me absolutely essential. So, that's obviously something which is of great interest in all environments. So, like you monitor credit cards if you're a bank, right? You just don't say, well, the number makes sense. What is it, this three-digit CV, whatever this number thing is called. No, you ask, is this right? And suspicious transactions, this I was interested, I'm mainly in the IoT space, I'm mainly in the smartphone. I'm mainly in the smart home, smart city scenarios. I just say just because the signature makes sense, someone has signed and has the authority to manipulate an account, if that action has never happened or it doesn't really make sense with a model of how this actor should behave, there is something suspicious, we flag this, we do not let this go forward, and we require clearance from somewhere else. We may require a more appropriate signal. A more more appropriate signature. So I that's does that make sense? Yes, however, in that case it is uh against the fundamental tenets of blockchain, like you need another verifier to have your transaction. Yeah, you can argue in this way, and I would say I'm totally fine with that violating the rule. The system can run, but and it could be it depends now how you set up the detection. But I think in every other system we do this, and it seems to be in many financial applications that we just Applications that we just say, yeah, account everything works out fine, but we've never seen this pattern before. We're going to hold these transactions. If you suddenly receive lots of money coming from somewhere else, the bank will call you and ask for clarification what's going on, right? So I think it's the same thing here. We can define criteria as what is suspicious, right? That's a different story, but I think looking into this is worthwhile. At least I suspect you can. At least I think. I suspect you could have a network where all the parts could voluntarily agree to enforce certain rules, right? Well, so we do it for per account. So, you as an account holder can set up functions that you say whenever a certain action appears, I want to be informed on my mobile phone and I want to clear this action goes through or not. I think detection is very valuable. Like, I want to know if something funny is happening on blockchain. So, I can be a minor or an ordinary user that will be affected by the current. For all your accounts you have this already, right? So there are lots of tools that can alert you when something is happening with your your your account. So how is your work different compared to what credit card companies do? I think the big difference is if the, like if I understand credit cards correctly and the approaches, it's anomaly detection, you have normal behavior patterns, you have very large data sets, and you can say these are normal transactions in general, these are the transactions of this company. These are the transactions of this customer. What I'm very interested is in the context of IoT to look into this, where you have short-lived interactions. Very often they are never going to be the same because the system is evolving. So I don't have answers. We're just looking at how can we do it. We know it's not a machine learning challenge, right? It's not like having so and so many terabytes of information number crunching because you don't have that. I'm just interested in ways like users can define. In ways like users can define these are my patterns, this is a finite state machine, this is when I'm in this state or that. If I'm alone, if I have left my home, the temperature shouldn't be changed, right? Because I'm not there. I don't care if all the signatures were correct. One condition for me is to be in this house or around the city, only then should it be changed. Does that make sense? So it's a very, very rudimentary. Very, very rudimentary. We just started. I'm not talking too much about this. So, here's where is actually the problem I'm really puzzled with. Over five years, there's an abundance of prototypes. At every conference I go, there's gazillions of prototypes, highly enthusiastic things, and I don't want to go too many into many details, so I'll talk about the work we did ourselves. So, I think it's always okay to criticize one's own work, doesn't harm anyone. We looked at payments in industry. We looked at payments in industry, so like with Orchard, that's owned by Sony. So, when you listen to some music channel, we had a project, MyTax project, with a company in BC about how to speed up payments because someone pays for playing that song that goes to a big organization that now collects some fees, then goes to sub-organization, and at the end is the agent, and at the very bottom is the artist. So, the question was: can we automate and make Was can we automate and make the financial transactions faster if we have smart contracts? So we move the smart contract agreed upon by everyone, and then the money should go through. Beautiful prototype. I have great doubts that that system is working. We did it for ticket systems. So tickets for events, forgery and people cheating and lying. I I never imagined anyone faking a ticket for a a concert or so, but apparently that's a big problem. But apparently, that's a big problem. People do this all the time. So, once you go to electronic tickets, you can then just say, How do I prevent people from buying tickets and then reselling them with profits? So, you can use blockchain for that. Ubiquitous tracking items in the supply chain, IoT, access control, nearly all blockchain scenarios for IoT are essentially about access control. We did something manual. We did something managing survey data. The idea was it was coming with a student from psychology, if he was a psychologist, and they collect these, they make these surveys, and then you can use the data for a specific purpose, and it's all ethical approval and whatever. And I raised the question: so, what happens if I want to withdraw my support or change something? So, I wanted to explore how. Wanted to explore how we can deal with that, then data management linked to machine learning. My fundamental question is I always look, I couldn't find a unisex character, so I just took a man in blue, not necessarily IBM. How actually to integrate blockchain distributed ledgers to our family of IT systems we have? Because one of the key problems I see with many of these systems, they're beautiful. I see with many of these systems. They're beautiful prototypes, but it's very hard to connect those systems to the existing IT infrastructure. How to manage this? When I go to some events and talk to people, one of their first questions is governance. So what's the governance structure? So I'm going to have stuff which runs on multiple nodes and multiple places. So what are the responsibilities? Who's in charge? Who's in control? I'm going to give my I'm going to give my financial data, and it's the community. That's getting very tricky, right? If you look at governance structures, you know, the wonderful, nice chief developer makes the guru decisions, a consortium makes it. That's very, very tricky. The whole issue of managing even a blockchain, how do you ensure certain performance character features is still a big issue. So there are lots of issues. Issues. So there are lots of issues which I think hinder progress or make it hard for blockchain. Does anyone remember Betamax? Yeah? So I always love to talk about Betamax because technically I believe it was superior to VHS when it was developed. I think Betamax came from Sony, around Sony. It was a superior videotape and it failed to an inferior product called VHS because VHS had the strategic backing of Hollywood and when you buy videotape And when you buy videotapes, yeah, well, you do like at that time wanted to have a film, a Hollywood film on it. So by connecting to the infrastructure, the inferior product could succeed, and the better product didn't have the backing of Hollywood. And I think this was one of the main motivation that Sony afterwards made the strategic decision to buy into Hollywood that from now on, all the platforms they support, they can also provide content. So I think it's important to look at technology and ask how does it fit Technology and ask how does it fit with the rest of the ecosystem. And what I always like to do is go back to say what is the big strength of blockchain systems and where are their weaknesses and then try to figure out what I want. And of course, you already know I'm going to argue for monitoring behavior. That's down the road. And so that's, of course, not so linked to performance. So the key thing is, of course, token exchange. And we have the ability with... And we have the ability with smart contracts to define behavior. Smart contracts are very tricky because there's only so much computation I can do. Lots of challenges. For example, interaction with third-party services is very, very tricky. You don't want every node to do a right operation on some external data source. So it's tricky. You have solutions like Oracles. You have provenance, it's relatively resistant. Provenance, it's relatively resilient, but it's of course slow and, as I said, tricky with third-party systems. The unknown governments and the management approaches, how do you manage these systems, the blockchain itself is a problem, right? So, and to discuss the solution I want to talk about, I'll go to a safe place, IoT, where I've worked. So, IoT, Internet of Things, is always considered one very, very attractive scenario. Very, very attractive scenario for blockchain distributed ledgers because IoT scenarios are very, very large systems, very, very heterogeneous, huge amounts of data, and also huge risks. IBM Adapt was the first system which worked in this space. It was again a prototype, an advanced prototype, but then it was stopped. It was essentially based on how do I get updates to fridges and other consumer products. Products, and after the Sony hack, no one anymore wants to have a huge database where all the information of all the fridges worldwide is, and where every country code, and how you have to update the software of your, because many modern fridges are connected to the network. That's common knowledge, right? Yeah. So how do you roll out updates to how the compressor pumps have to run and what have you? So people began to realize we have to change it. IBM coined the phrase device demand. IBM coined the phrase device democracy so that it shouldn't be centralized. Typically, it's configuration and access control, and it typically focuses on devices. It looks good on the surface, and in any case, I know, but doesn't mean that it's the truth, it's a good idea, but it's extremely hard to do anything. Because many of these systems are designed by the manufacturers to have total control over them. Have total control over them. And so to slide in the blockchain, they will smile and say, Thank you very much. We do it the way we like to do it. That's the problem. We have many prototypes, typically a handcrafted device with a Raspberry Pi or something attached to it. Focus on the things, ignores cloud things, doesn't focus on data. You typically have a closed system like Google Home. Like Google Home, you know, HubSpoke architectures, which are very tricky. And in general, people fail to address the scale of transactions. There is no way you're going to have a blockchain and smart contracts, and they decide on every single interaction with an IoT device, thumbs up or thumbs down. It's the volume kills, the transactions per second are nowhere near. I need to be convinced on that thing. On that slide thick. With the IoT, I just want to bring how many people have worked in IoT or no IoT? Internet of Things, you take some anything, you strap a sensor under the chair to see if someone is sitting, you do all kinds of things, you connect everyday sensors, actuators over the Internet and therefore third-party services. There are two slightly different views. There's a more cloud-centric view and there is David Rose. I always loved David Rose. That's when he was younger. Was younger. He was a researcher at MIT, very good in marketing. He focused on the human interaction with IoT. It's very interesting because there he looks at everyday things. His favorite example is the umbrella. You want to go out of your house and the umbrella talks to you and says, take me with you, take me with you. And you say, because it's going to rain. So David Rose coined the phrase, look at fairy tales. At fairy tales and see the deeper desires people have, and use internet connectivity and IoT to make everyday objects smarter. He had his orb. This is what he would call the one-bit browser. That orb would, for example, tell you your health. Let's say green is good, or pick whatever color. Or his other example was the stock market. I'm not sure if that's a good example right now because it's probably flickering all the time. So you would translate this. Which translates the state of something to good or bad. So that says time's epic. And so he's very interesting. And here, right away, in order to make this sense, you need enormous amount of information about people. So there are huge issues with privacy. All this stuff looks good on surface. Smart living, I think I stole this from Samsung. I always love smart living. I've got tons of sensors in my... I've got tons of sensors in my own home. Is how do we deal with all the privacy and interaction issues? There again, blockchain seems to offer us some solutions. So always remember, it's an evolving system and changing relationships in IoT. And the key issue, what I believe after working in this space, is not the access to devices. This is always seen, you know, how you can access something. You know how you can access something. I think it's the data streams. It's the poorest and most important thing here. How do we control the usage of data? Access of data is one thing, but you need to know it's accessed with which purpose. So you need to have rules in place. Yes, you can use certain information, but only for that and that. And how do we do that in an IoT scenario? Particularly interesting is derived data, essentially what all the machine learning companies What all the machine learning companies are slowly beginning to discover that the data belongs to someone, and you know, when you now did the machine learning, you know, what is the stake of the original data owners in this? And of course, the sharing of benefits. So, these are key features where I think IoT can fit very well in enforcing policies and enforcing behaviors and then providing an infrastructure that you can enforce the system to make sure. The system to make sure something goes wrong. So you have your various participants. You can use the smart contracts to support choreography. So if you look at web services, you have got orchestration, a single point, like a conductor who tells everyone what to do. And you can have choreography where you say every participant can engage in this way. The classical example is a dance between two people. Between two people, and the people have roles, and they can respond to the other one's move. I'm not going to dance. So, you can define expected protocols that people have to follow. You can monitor and track, you have automatic provenance, and you can report if someone is using data in a wrong way. The provenance is, in my eyes, what I always love. I want to have in the same way as there are conflict diamonds and conflict jewels where people have to. Conflict jewels, where people have to prove where does actually this jewel come from, where does that diamond or whatever, and if it is not has doesn't have provenance, it cannot be sold in Canada or somewhere else. You need to make sure it has been ethically produced, whatever that now precisely means. The same thing I want that with machine learning or others. If you've got something, you have to prove, you have to have this provenance that your data was legit. I would also like to point out that I view you have external programs. Programs which do the pattern recognition. Is there a suspicious pattern which we already know? Is there an unusual usage? And of course, that's outside the blockchain. And you have to have mechanisms to enforce certain rules. I will ban you from access to my research data. Your university no longer can access our data store. So we moved from behaviors to orchestrate curtails. Behaviors to orchestrate to choreography, and I think it's the compliance with policies, which will be the most interesting thing. I see it everywhere in IoT. How do I control how far my data travels? That's nothing to do with an access. It has to be I have to monitor how different component services use the data. So, my current projects where I use these things are essentially in usual In usual agriculture things, water management in the prairies is a big issue. Soil management in Canada and the prairies. It's a very interesting thing because in both cases you need data, relevant data from farmers. And farmers are very cooperative, at least in our province. They will give to the university. But other decision makers need this information. So how can we control and how can the farmers monitor how their data is used so that there's So that there's no harm to it. OCAP is ownership, control, access, and possession. That's a principle which emerged out of indigenous communities to deal with data. As most of us know, tri-council rules require that when we interact with First Nations, we must make sure we're dealing with sovereign First Nations so they have rights that they can say, no, we don't want this or that. I see huge potential for blockchain, similar to your talk. Similar to your talk for managing the data, and I can then say no, we do not allow this or we withdraw. So, ensuring end-party control, we're moving away from a centralized to a distributed model. I do this in a project supporting marginalized groups in Saskatoon. So, these are mainly inner-city kids who face, let's say, certain challenges. And the other area which I'm very also interested, which I started, is smart climate solutions. Solutions. I think, you know, for in order to meet certain climate goals, I'm not debating in Alberta one way or other how that is there, but I think there is a need for collecting information at one point. And that is highly sensitive information. How do I heat? What do I do? And I believe there will be a shift when we realize we have privacy rules, but we also have an obligation, like we pay tax for society so that we have certain services. We also need Certain services, we also need to provide data to decision makers, elected officials, so that certain policies can be enacted. And then the way that data is used, applications are behaving in a certain way, I believe in these huge ecosystems. It's needed that we have these smart contracts which continuously track and observe and flag potential problems. Because the key challenge is always privacy, confidentiality. Privacy, confidentiality, and the need for decision makers. In any project I work now, it's always the following question: where is my data? Who has my farm data? Who has my water consumption? Who knows how much energy is? They want to know where is it? Where is it located? Where is it copied? What is it? Blockchain can help us with these approaches. It can say, well, it has been duplicated. It's now there. These are the compound parties that have accessed it. Access this. They want to be able to control it. I can say, no, I don't want that government agency to have my data, right? So that might be something. How is it actually used? This is the purpose and how it is used is so essential and to enforce that it is only used for that purpose. And what is also, especially in the farming, is interested, okay, you have my data, so what's in it for me? I know there's something for you. You data mine, you come up, you tell some tool. How am I going to get it? And writes in. And rights in derived data, sharing the rights is a huge key. And again, by tracking it with blockchain, I think it is a potential thing. So now I'm coming to the long end. I strongly believe that blockchains, if we want to connect it with other systems, the thing at least in the IoT space I see as most promising is to view it as a middleware. And that middleware is there to enable sharing, it will control. Sharing, it will control and enforce behavior rules. So, who is allowed to do what and to copy or not to copy and how to report where they have it? That are policies that are defined in the smart contracts, which then do this monitoring. And as soon as we detect violations or non-compliance, that's of course outside that can only be triggered. So, that's the end of the talk. End of the talk, and thank you for your patience. So, I can ensure that the data doesn't get caught here. You can say it's illegal. I cannot ensure that someone goes into a cinema, pulls out his phone, and tapes the movie. I cannot ensure that. I cannot ensure that. But I can say later: if that movie appears, you don't have the rights for this, right? Or you violated something. So it is more on tracking and saying, you know, everyone has to play by the rules. I cannot ensure that nobody breaks into my house, but I have mechanisms to detect it. Doesn't that make a difference definitely that right now the state is that there's some data on a disk, right? And the question is, what rights do we have? I have no idea it's not attached. I mean, it's not attached. The rights are not attached to that data. This is an improvement because you can need OK, right? For us, it's primarily OCAP, it's for the indigenous communities. How else do we deal with this? They must be able to track where it is. I'll shut up. No, we have time, because after Nina can present next, for Kaivans, Kaivan couldn't come because his wife was showing symptoms. He sent slides, ideas. I think