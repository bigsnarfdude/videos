No worries. Well, hello, Canada. I'm extremely jealous that I'm not there with you. I hope you have a nice time. Can you hear my lamp buzzing next to me, by the way? Or is it only bothering me? Okay, great. No, it's all right. I think it's all right. I think that's where we're coming from. I can turn it off, but then I kind of go a bit pale blue. But then I kind of go a bit pale blue, but oh no, I go completely dark. I'll leave it. I think maybe it's only brother. I think it's all right. We don't hear it really. So, yeah, very good. And I hope my internet holds up. My internet has been terrible the past week, but today it seems to be a bit better. So let's just hope that it holds up for an hour. If I drop off, it's not because, you know, I got fed up of giving the talk and I wanted to stop. Yeah, I had a lovely time in Banff a few years ago. Few years ago, it's such lovely to be up in the mountains. There was one incident. I mean, you kind of, it surprised me a bit because you think of Canada as this very sort of polite, peaceful place. So I was quite surprised one morning to see campus security having to like throw off this intruder off the campus before they got violent. I mean, it was a moose, but um. Yeah, watch out for them. Okay, all right, maybe I should give a talk instead of waffling. I'm going to talk about the Mackay correspondence via VGIT, and this is something that I've been working on with Tara Gabdal Ghadia. It's still very much in progress, but we've definitely finished bits of it. And so I haven't talked about this work before. About this work before, and I'm not completely sure that it is a good subject for a talk, but I'll explain why in a minute. So when I said Mackay correspondence, I really do mean the classical Mackay correspondence in two dimensions, right? So nothing, any, no sort of fancy generalizations of it. So what's the Mackay correspondence? I'm sure everybody knows, but the Mackay correspondence is about certain kinds of surface singularities. Certain kinds of surface singularities. So things called Kleinian surface singularities. Kleinian surface. Oh, hang on, I'm not actually sharing my notes yet, am I? That's definitely not helpful. How's that? Is that visible? You can see that. Yep. See that? Screen. Climbing and surfacing. Kleinian surface singularity, so they're quotient singularities, right? So you start with a vector space V, which is C2, and you quotient it by a finite group G, and the quotient is some singularity X. And you want your finite group to be in SL2 because that way the singularity is Gorenstein and sort of reasonably well behaved. And there aren't that many finite subgroups of SL2. Finite subgroups of SL2. They're all classified. They have an EDE classification. Okay, so this very nice, well-behaved collection of surface singularities. And each of these guys has a minimal resolution. Minimal resolution, which I'm going to call x tilde. So that guy's smooth. And that x tilde is going to keep showing up throughout the whole talk. To keep showing up throughout the whole talk. And if you look at the exceptional locus of this resolution, so the bit that actually gets contracted to the singularity, so the exceptional locus is a tree of P1s, a tree of rational curves. And so, to some extent, you can understand what's going on just by sort of the common autorics of, you know. You know what this collection of P1s looks like. And what Mackay's original observation was was that this sort of structure of this collection of rational curves can be kind of read off just from the representation theory of the finite group G. This was a long time ago, and sort of then it got improved in various ways. And I think the modern way of saying it. And I think the modern way of saying it would be something like this. Sorry, Ed, can I need to pick a little bit? Sorry, say again? Sorry, can I need to pick a little bit? Please. Because in his original note, the statement Mackay actually makes is that the representation graph of a Lie algebra of AD type is in correspondence, well, Cogster graph is in correspondence with. Cogster graph is in correspondence with essentially the Mackay quiver of the corresponding group, subgroup of SL2. And then, in one of the examples, he makes a statement that look, actually, it's the same graph minus one vertex if you take the minimal resolution. And then people sort of chucked out the Lie algebra part, which John McKay was actually interested in and called it Mackay correspondence. Okay. So, sorry, this is a very curious historical thing that I dug out of by reading original Mackay's paper on the subject. So, sorry, a bit of nitpicking. Sorry, bit of nitpicking. You're correct in spirit, of course. Oh, well, you're you're uh you're a better historian than me. I have never read Mackay's original paper on the subject. Um, yeah, I mean, I'm yeah, I mean, in some ways, the Lielder story, I guess, is an important part of it. Not what I'm going to talk about today. Um, okay, so the way that I would formulate this, um, I mean, not that it's due to me in any way, but what I would call a modern formulation of this result. Call a modern formulation of this result is something like this: that we have this singularity x, which is v mod g, and we've resolved it by some variety x tilde. But there is maybe a more obvious way that we could have resolved it, which is just to replace the singular variety with the orbifold quotient. So, maybe a modern formulation is that x can be resolved. X can be resolved by the orbifold V mod Gym which I mean the Delime Mumford stack V mod G, which is a perfectly nicely behaved smooth object. Smooth object and certainly lives over V mod G and is isomorphic to it on an open set. And so, therefore, what you have is two nice resolutions of this same singularity, and they're birational. Right, now you know, maybe you people. You know, maybe people aren't happy with me referring to orbit folds as being birational to varieties, but you know, they are isomorphic on an open set. And this is a nice birational transformation because it's a flop, by which I mean the canonical bundle doesn't change. Both sides are CY2. So, yeah, I mean, I mean, I So, yeah, I mean, I abuse the word flop all over the place. For me, a flop is a very general thing, a birational transformation that preserves the canonical bundle. I think some people use the word flop more specifically. So if you're unhappy that I'm abusing the word of flop, then I apologize, but I'm going to keep doing it. So yeah, so now we have this singularity and it has two resolutions, and they're just related by a flop. And one of the things about flops is they're supposed to give equivalences as a derived category. Give equivalences as derived categories, and this is absolutely the case here. We have an equivalence between the derived category of coherent sheaves on the orbifold and the derived category of coherent sheaves on the variety. This is sort of one of the things which people upgraded the Mackay correspondence into. I just had a look at the literature today, actually. Apparently, this is this is. Literature today, actually. Apparently, this is due to Kapranov Vasare. But maybe, and again, I'm not a good historian, I haven't read any of the papers, but I get the impression that a lot of people knew this was one way of writing, one way of saying the Mackay correspondence, and that Caprano Fasre just happened to write a proof down, which other people didn't. So maybe that was sort of folklore. Okay, so this. So, this is my perspective on Mackay correspondence: that you have this orbifold resolution and then this minimal resolution, and it gives you a derived equivalence. But actually, this is not a talk about derived categories at all. This is a talk about a completely different question, which is where would you get a birational equivalence from? And maybe a natural place to get birational equivalences from is VGIT, right? So, if you have some GIT problems, Right, so if you have some GIT problem, some group acting on a variety, reductive group acting on a variety, then you're going to have different GIT quotients. And unless you've sort of set it up wrong, they're all going to be birational. So VGIT gives you birational equivalences. And so it's a sort of natural question now to say, well, is there a GIT problem that interpolates between these two different resolutions? So is there some VGIT problem? Problem giving this birational equivalence that we have, this flop between the orbit fold and the minimal resolution. So that is actually the question I want to talk about. And it's an incredibly simple question, right? About a very classical topic. And it's somewhat surprising to me that it hasn't been solved previously. So it has in type-based. So, it has in type A. So, in type A, it's really easy, and everything is toric. And it's perfectly well known what the construction is to it. I mean, it's well known to anyone who's ever thought about it. But in the non-abelian cases, so in type D and E, the answer to this question seems to be not until now. No one has ever written down or constructed the GIT problem which flips between the minimal resolution and the orbifold resolution. And that is what that is the result that Tarig and I have. I mean, it's not really Tarig and I, it's really Tarig, right? Tarig told me this construction, which is very nice, and I've been sort of helping him to kind of develop the proofs of it. So this is Tarig Abdul Gadir, which I read at the top, but has disappeared now. At the top of the topic, the problem with explaining this to you is that the construction is a little bit complicated. I can't just sort of give it in one line. It involves some really like nasty, well, not horribly nasty equations, but quite a lot of equations. So that doesn't make a good talk, right? That's boring. Make a good talk, right? That's boring to sit there and listen to some complicated construction. But having said that, there is an actual kind of one key idea in there, the thing that gets you off the ground, which is to use Tanaka duality in a way which I will explain. I think this is a really pretty idea. Again, I learned this from Tarig. Idea again, I learned this from Tarig. I idly thought over the years about how you might construct orbifolds via GIT, and this idea sort of really gives you a good way into it. But it's a pretty simple idea, and I can explain it pretty quickly. Sorry, can I say a quick, a very good one. So, I mean, it's been known for a while that you can just take moduli spaces of representation. Moduli spaces of representations of Macai quiver, and that's perfectly possible to do in D and E case as well. And it was just as well known that you get the same resolution, but with sort of different families. So in what sense what you propose is new, sort of for doing a different GT problem, not right. Okay, just to make sure I'm done completely. You're on the right track. I'm doing completely different. You're on the right track. Yeah, yeah, yeah. I'll get to all of that. Okay. Yeah, so basically this is the content of this talk, right? There is one nice idea, which I can explain in five or ten minutes. And then there is a rather tedious technical construction, which no one wants to listen to. So I can either give a short talk or a boring talk. So I've tried to find some sort of compromise. So I'm going to give a long and boring talk instead. Boring talk instead. Okay, let me tell you my plan. This is, let's see, let's see how this works out. This talk is a little bit experimental. So the first plan is to give you a little bit more background. You see, one of the solutions giving a talk that's too short is to pad it out with loads of background material that no one really needs, but there may be a bit of that going on. So, part one is supposed to be more background. Supposed to be more background on the Mackay correspondence. And specifically, in fact, to answer Timothy's question that he just asked now, which is, you know, there are all sorts of GIT constructions understood in this context, and why don't they work? Right? So, so why don't the existing approaches solve this problem? I mean, I can't say they don't work. No one was trying to solve this problem, but I can tell you why the previous things don't solve this problem. And then part two is I want to explain this key idea, this Tanaka thing. I hope I'm spelling Tanaka correctly. And then part three, we'll see how we do, but I'm going to try and explain the D4 case in more or less context. In more or less completely. So, D4 is the first non-abelian example. It's the first one that's not type A. And it's small enough that I think I can, and I've kind of got it down to a form where I think I can explain it without it being too unpleasant. So I'm going to do that case for that reason. And the other reason is that it's the only case we've actually proved. I've written down what I think is a complete proof in the case of D4. In the case of D4, Tarik has a construction that works, apparently works in all types D and E. And I just haven't, we haven't got the proof down yet. But D4, I'm pretty confident we've nailed down. And then if I have time at the end, I will discuss some potential applications. You know, what could one do if one had solved this problem? But to be completely honest, the applications are not really the motivation for me. I mean, firstly, I just thought this Tanakin thing is really cute. But secondly, just the opportunity to say something new about the Mackay correspondence, I can't pass that up, right? It's just such an old, well-trodden path. To actually say something genuinely new about it is kind of cool. That's my opinion. I don't know. Depends on how nice you find the construction, I guess. Okay. Great. Great. Let's see how we get on. Right, I've waffled Andre speaking. Since we're, hello. Sorry, I apologize. I got here a minute late. I just wanted to understand exactly the context. Are you working on vector space mode group or hypercaler mode group? And is it always the surface case? it's just it's just the surface case it's just a vector it's just c2 mod of finite group subgroup of sl2 that's all oh great all right thank you very much the simplest the simplest thing it could be excellent thank you um okay right part one so yeah just just to reiterate what i said Yeah, just to reiterate what I said, it's the simplest thing it could be, right? It's surface singularities. Okay, so there are these things called Kleinian or Duval or simple singularities, surface singularities. And they are singularities of the form x equals v mod g, where v is c2 and g is a finite subgroup of sl2. Two. And as I said, there aren't that many finite subgroups of SL2. This is a very classical problem to write down all the finite subgroups of SL2. And the reason it's so classical, of course, is that SL2 is a double cover of SO3, right? So now you're going back to like, you know, ancient Greek geometry or something. So what finite subgroups have you got? What finite subgroups have you got? Well, there's the ones of type A, which are the cyclic groups. So you take a cyclic group inside SO3, and then you double cover it, and you get another cyclic group. You've got type D, which is when you take a dihedral group inside SO3, and that's double-covered by some group which is called a binary dihedral group, which just means it's a double cover of a dihedral group. And then after that, you've got the exceptional one. And then after that, you've got the exceptional ones, and they're the things that arise as double covers of the symmetry groups of the platonic solids. So, you know, like I say, how much more classical could it get? So I'm covering this only because I want to do D4 later, and personally, I didn't know what a binary dihedral group actually was. Okay, so we're in. We're interested in this orbifold, this DM stack, V mod G, which, as I've said, you should think of as a resolution of the singularity. And then we're going to be interested in coherent sheaves on this orbit fold. So, if I look at coherent sheaves on this orbifold, that just means the same thing as the equivariant coherent sheaves. Coherent sheaves on C2, on V. And I claim that you can think of this abelian category as the category of modules over an algebra for a non-commutative quiver algebra A. And there's kind of two ways you can get that algebra. So, the first way is kind of tilting. So, what you have to do is you observe that whenever you have a representation of your finite group G, you get a vector bundle on the orb of. You get a vector bundle on the orber fold. So, any representation of g gives a vector bundle on the orber fold. What you do is you just take the trivial vector bundle with that rank, and then you decide how g is going to act, and that's where you use the representation structure. So, the vector bundle that you want to take is the direct sum of all the irreps. Irps. So you set T to be the vector bundle obtained by summing over all of the irps of g, which is obviously a finite list. And then A is the endomorphism algebra of D. And it's pretty obvious, really, that this vector bundle T generates the entire category of coherent sheaves on the orbifold. Of coherent sheaves on the orbifold. So, by some sort of general tilting theory, you can see that you get an equivalence. Can I write up there? I'll write up this. You get an equivalence between coherent sheaves on the orbifold to the category of A modules just by taking homs from this vector bundle T. And the other way you can get this algebra A if you press And the other way you can get this algebra A if you prefer, if you want to make it look even more tautological, is to observe that, well, you know, what is a coherent sheaf on the orbifold? It's a G-equivariant coherent sheaf on V, and a coherent sheaf on V is just a module over the ring of polynomials and two variables. And if I want it to be G equivariant, it needs to be a G representation. So it also needs to be a module over the group. Also, it needs to be a module over the group ring. So, you want something that's a module over both of these rings together, and you want the action, the group action, to be intertwined with the group action on the ring, and you can just build that into the algebra structure. So, there is a thing called the twisted group ring, which is built specifically so that modules over the twisted group ring are the same thing as equivariant modules on V, just totally tautologically. Just totally tautologically. So I need to put the word modules in. This is not quite the algebra A. The only subtlety is that if you look in the regular representation of G, then you'll have some irreps which occur with multiplicity. And you probably just want to throw the repeated ones away. So remove the repeated irreps. And you get this algebra A, and A is just Maritra equivalence, the twisted group ring, just because you know that's what Marita equivalence is. The word is basic, by the way, if you're into non-cumminative algebras. You can take any algebra, you can throw away the repeated, sort of the repeated sum and you get down to a basic algebra, and that's what this thing is. Okay. Yeah, maybe I should, maybe I should do a really easy example, just for people that aren't super familiar with this, which is, I imagine, a minority of the audience. So, EG, if I go to type A1, then G is just the cyclic group of order two. And it's acting on C2 in the obvious way. And of course, there are two irreps of Z2: the trivial character and the non-trivial character. So this tilting bundle has two summons, the trivial line bundle and then the trivial line bundle with the non-trivial Z mod 2 action. And then the algebra A, which are the endomorphisms of T, well, you can draw it as a quiver algebra, right? Can draw it as a quiver algebra, right? Because it's the endomorphism of the sum of two things. So you should think of A as being a quiver algebra. So you have a vertex corresponding to O and another vertex corresponding to O1. And then the morphisms are basically going to be X and Y, right? X and Y are both ring elements which have weight one under this Z2 action. So X and Y both map in that direction. And they also map back again. So, maybe you should call the top ones x0, y0, and the bottom ones x1 and y1. So, this is something called a quiver algebra. And then there are some relations. So, there's a free quiver algebra, but then the actual A has relations as well. And the relations are just things like x naught, y1, y naught equals y naught, y1, x naught, and things like that. Like that. This is a very, very well-known non-commutative algebra. It's called a pre-projective algebra of type A1. And this is exactly the same story in all the types, A, B, and E. You compute what this algebra is. It's a quiver algebra. Its vertices correspond to the irreps of the group G, and the relations are something called a pre-projective algebra. Are something called a pre-projective algebra. I mean, I guess that is the definition of the word pre-projective algebra. A pre-projective algebra is this algebra. So they come in these types ADA. Great. Okay. So I claim, and this is basically what Timothy said: that given the knowledge of this algebra A. You can reconstruct the minimal resolution x tilde of the singularity. Okay, so I started with the orbifold. I've just done some essentially tautological nonsense turning the orbifold into a non-cumminative algebra. And then I claim from there, you can reconstruct the actual geometric thing, which was the minimal resolution. So, how do you do it? Well, you first of all remember that. You remember that the orbifold is birational to x tilde, right? So you just have to take out the origin and they look the same. So if you take C2 minus the origin and mod out by G, the G action is free. That's exactly the same as the singularity without the origin. And that's the same thing as X tilde minus its exceptional set. Okay. So So that at least gives you some hope. Most of the points in X tilde are something to do with the orbifold. So let's say points in X tilde, at least away from the exceptional locus, they have something to do with points in X, which have something to do with not exactly points in the orbit fold, but orbits. In V without zero, like g orbits in V without zero. And now you pass from points to sheaves. So points in X tilde are the same thing as point sheaves. So torsion sheaves supported at points. Skyscraper sheaves at points. And if you have an orbit in V, then you can take all of the torsion sheaves, all the points in the orbit, and you add them all up together. So orbits in V tilde correspond to sheaves of the form sum over skyscraper sheaf for the point, but now let all the elements of the group act on that point. Okay, so at least most of the points in X tilde correspond to some set of coherent sheaves on my orbifold, therefore they correspond to certain A modules. And so somehow you want to say that these sheaves carry a unique possible G equivariant structure? Maybe a natural one rather than a unique possible one. But The one I've just written down is naturally gequivariant, right? Right, no, but I think you also are trying to say because it's a one-to-one correspondence. You now want to say these are coherent sheaves on V so far. You haven't said anything about their G structure. So I think that if you fix length of the shift and if you fix the set theoretic support, then what makes pre-orbit special is that there is only one Jeep variant shift. Is that there is only one jip variant shift of with the right sort of uh regular representation structure on the on that set theoretic support? The story will be different at zero. Maybe this is what you mean, Andre. I'm not sure. Yeah, I think, okay, so I think you want to, yeah, sorry, I didn't say what I wanted to say. Yeah, but indeed, this must have the representation type of the regular representation. Yeah, yeah, and that fixes it given the support of the orbit and the regular representation restriction fixes the ship uniquely. Restriction fixes the ship uniquely. Yeah, that's right. But yeah, so far I'm sort of playing fast and loose. Points in X, you can see that some points in X tilde correspond to some G-Aquarium sheaves on the orbifold, right? That's somehow as much as I've said so far, which means that they correspond to some A modules. And which A modules should you get? Know which A modules should you get? Well, somehow the right thing to do is ask what's their dimension vector. So an A module, you know, if I look at this picture here, for this A, an A module is the same thing as a representation of this quiver, which obeys the relations that it has to obey. And a representation of the quiver is you stick a vector space at each vertex. So the fundamental thing you ask is, you know, what's the dimension of the vector spaces? You know, what's the dimension of the vector spaces that you stick at the vertices? So, a modules or quiver representations with a dimension vector di, where di is the dimension of the irrep UI. So remember that the vertices in this quiver correspond to irreps of the group. To irreps of the group, and what I want to do is take a representation whose dimension vector just matches the dimensions of the corresponding irreps. And you can figure that out very quickly from this tilting description. You take your point, you apply hom T, and you ask what sort of module have I got, and that exactly looks like okay. So having gone through So, having gone through this, you've now built yourself a GIT problem. What you want to do is set up the GIT problem for these A modules. So, you You consider the set of all representations of the quiver, the set of Q representations with this dimension vector. That's just going to be a vector space. And inside it is the sub-variety of representations where the relations actually hold. Maybe I should call that R. And then you have a group acting, which is the product of all the general. Which is the product of all the general linear groups for each of these di. This is acted on by what I want to call GLD, which is the product for all of the GLDIs. Because without that, you're looking at A modules with a fixed choice of basis, and then modding out by G is just changing basis. It's taking them up to isomorphism. Okay, so from what I sketched above, you can see that away from the exceptional locus, you have a set which is the set of points in x tilde, and I've translated it into a set of A modules. It's going to be a subset of R mod this GLD. Right? That's automatic. And then the thing which is not automatic, but which is Then, the thing which is not automatic, but which is true, is that if you actually take a GIT quotient of R mod GLD, you get the minimal resolution if you've chosen the right stability condition. So it's sort of obvious this GIT quotient, ARM or GLD, it should be something that's probably should be birational to X tilde, but it turns out you get something that's exactly X tilde if you set up everything exactly right. Okay, so I think that was what Timothy was alluding to in his question at the beginning. So all of this is super well known and appears in dozens of papers on the Makai correspondent. You start with your G. You start with your G, you set up this quiver problem, you look at the moduli space of modules of this algebra or she's on the quiver, or it's something that's called the G-Hilbert space, and you can recover x tilde, and you can recover other partial resolutions and things like this. However, you will never recover the orbifold. This is the point. V mod G. V mod G cannot ever arise as one of these GIT problems, one of these GIT questions. Okay, why not? Well, the problem isn't that it's an orbifold, okay? I mean, very classically, GIT quotients are varieties. Classically, GIT quotients are varieties, but if you do it slightly more carefully, GIT quotients can be all the folds, right? You just take the semi-stable locus, you take the stack theoretic quotient, you get a quotient stack, and it can be an all the fold. The problem is that modules don't have finite stabilizer groups. So, if you're building a GIT problem, which is giving you spaces of modules, which is what this one is doing, it's never going to give you an orbifold. Modules never have finite stabilizers. Because as soon as you have a stabilizer, you have a whole, you can multiply it by scalars, right? You get infinitely many stabilizers. So, so I don't know, Timothy, does that, I mean, is that satisfy you? Well, except that you're sort of uh That you're sort of, I mean, it is well known that if you look at the semi-stable walls in the GAT problem, for example, a wall between two chambers, that will give you the sort of tar corresponding to the contraction, essentially. It will give you sort of the orbifold contraction. So, how does that correspond to you saying that we don't? It won't give you the orbifold, it will give you an art in stack. Well, it will give you an. Well, it will give you, yeah, I remember now. It gives you an artist whose course moduli space is a contracted space, but it doesn't give you the nice clean, clean Delay Mumford sort of exactly. Precisely. You can recover the singularity as a GIT quotient in the sort of classical sense, as the underlying space of the quotient stack. But the actual quotient stack will always be either a variety or an artin stack. And this is where you wave your Tanaka Diamond. And this is where you wave your tanaka diamond image for Android. Yeah, so that's that's that's what I want to that's why this is all of this was to try and motivate why this is still a still an unsolved question rather than something that's very well known. Okay, so this GIT problem, which is the one that everybody thinks about, is never going to give the answer. Okay, so is there another GIT problem? And that's the whole point. And so maybe I should just tell you what happens. And so, maybe I should just tell you what happens in type A very quickly. So, for example, if you look at, maybe I'll just do type A1, absolute simplicity. So, in type A1, this minimal resolution is actually just the total space of the canonical bundle of P1. The exceptional locus is just a single P1, it just collapses, right, to the ordinary double point. Double point X is the ordinary double point. And you know, that is a Tauric variety, which is not immediately obvious if you start from the quiver construction that the result is going to be Tauric, but that obviously is a Tauric variety. And if you're going to think that way, then there's an obvious way to get it as a GIT construction, which is to start with C. Which is to start with C3 and quotient by C star acting with weights 1, 1, minus 2. And if you choose the right stability condition, then the GIT quotient will indeed be O minus 2 on P1. But there are two stability conditions for C star, the positive one and the negative one. And here the other quotient is exactly the orbit fold. So the other quotient is C2 mod Z2, which is what you wanted. What you wanted. Am I doing for time? Okay, I was going to do A2, but maybe I won't. You can do A2 as well. It's very, very easy. I mean, I'm not saying anything clever. These are toric varieties, and if you just do a little tiny bit of elementary toric geometry, you can solve the problem. And nobody will be impressed with you. Okay, so what about the other types? So, what about the other types? What about D and E, right? Because they're not toric. The finite group is not abelian, and the minimal resolution is not toric, and suddenly you're into a different world. Right, so now let me see if I can wave some Tanakian stuff at it. Okay, so what do we know? We have this minimal resolution, and we know from And we know from that quiver moduli space construction that it's a GIT quotient of some variety Z by a quotient group of the form GLD, right? Some product over general linear groups. So the question is. The question is: Could V mod G arise in a similar way? Can it arise from a GIT problem where the group acting is like a product of general linear groups? And maybe that problem is not the easiest one to start with. Why don't we start instead of V mod G with just like a point mod G, which is called B G, right? Which is called BG, right? So, how would you do it? How would you build BG as a GIT quotient? And you're not allowed to use G as your group, right? It's a point mod G. Now that is a GIT quotient. Fine. But I don't mean that. I mean, the group acting has to be a product of general linear groups. And then the result has to be BG. So there's something. So, there's something which I'm going to call a Tanaka Anzat, right? This is not by any, I'm not claiming this is going to work in general. It's an idea to get you off the ground, right? So the idea is to think about the representation ring of G. Think about the representation ring of the group G. And what I want you to do is to write down generators and relations for this representation ring. So, find some generators. So, that's just a list of irreps of the group. Now, you can probably get away with just actually picking one single irrep and using that as a generator, but you might not want to do that for reasons you'll see in a minute. But just pick some irreps, enough of them, you've generated the representation ring. Okay, so these are these are irreps of the group G, and they have some dimension which I G and they have some dimension, which I guess I should record. Now that's not going to tell you the representation ring because there might be relations between them. So as well as finding generators, you have to find relations. So, for example, maybe it's true that when you take the symmetric square of U1, it decomposes into U2 plus U3. Plus u3. That might be the sort of thing that would hold in the representation ring. And I want you to find all the relations in the set. Well, not all the relations. I want you to find enough relations. So a finite list of such identities, which are enough to determine the structure of the representation ring. Okay, which is straightforward. Okay, which is straightforward. The hard bit is step three. These relations that you've spotted, so for example, maybe if I call that guy E1, you're going to have these different isomorphisms between different combinations of these era. Combinations of these iraqs, those isomorphisms are not going to be independent of each other. They're going to be relations between them. So, to sort of give you like a stupid example, suppose you decided that you need to say that sim2 U1 is isomorphic to U2 plus U3, and you decide for some reason you also want the reverse isomorphism. So you have a B1 and a B2 in your list of relations, which is legitimate, stupid, but completely legitimate. Then. Then you'd have to know as well that B1, B2 was the identity. And so was B2B1, right? So what you need to do is find the relations between these BIs. Now, the example I just gave you was stupid. The example I just gave you was stupid, but in general, it's quite hard, right? You write down your isomorphism, you know, it's very the first two steps are pretty straightforward. And then you think, well, actually, now I've got this isomorphism and these other isomorphisms, and how are they related? What's the compatibility between these isomorphisms? And it's something you have to sort of stare at for a while. But it is determined by the representation theory of G in a way that's slightly non-obvious. It's slightly more like too categorical, right? More like too categorical, right? Okay, but let's suppose that you've done all of that hard work and you've really understood the representation theory of ring and representation theory of G in this deep way. Now I can set up a GIT problem. So, what I do is I pick vector spaces corresponding to my irreps. So, I pick vector spaces. So I pick vector spaces V1 up to Vk of corresponding dimensions. And now what I do is I form the vector space corresponding to all of my BIs. So my relations that I got in part two, they give me a vector space. Space and form the vector space corresponding to relations. So what do I mean? Well, this particular relation, this sim2u1, u2 plus u3 thing, that's an element of hom sim2u1. Sorry, these should be v, shouldn't they? These should be v, shouldn't they? Sim2 V1 V2 direct sum V3. Right, this vector space corresponds to this relation B1, and you'll have a whole list of different relations, so you'll have different factors in your vector space. Okay, so Okay, so now I have some gigantic vector space. I don't know what I should call it. Maybe I'll call it M. And then inside M, there's a sub-variety where the necessary relations hold, where I mean the relations that you found in step three. So inside M, there's a Z is the set where the relations that you found in part three at That you found in part three actually hold. Okay. I assume somewhere you also want to say that these are isomorphisms. No, right? That is supposed to be taken care of by GIT stability. Right? You're trying to set up a GIT problem such that for the right stability condition, you get out the orbit file. You get out the orbifold, right? If you just put in the condition that there are isomorphisms, you get it out immediately, right? But the aim is to be able to do VGIT so that you're not forced to get the orbit fold, but you can instead vary it and get something else. But then what would have happened? I mean, if you had put, for example, the relation B1, B2 equals to the identity equals. B1 B2 equals to the identity equals to B2B1 that would force B1 and B2 to B, I assume. Yes, it would. Yeah, but that would be a poor choice. Oh, so you're not choosing all the relations that you could possibly find. You have to do some wise choice of relations. Yes, exactly. Yeah, and somehow this is the whole problem that you have to. You have to make some sensible choices, and it's not really clear what is sensible until you've hacked out the entire example. Okay, so I've got this ambient vector space, I've got this sub-variety, and it's acted on, of course, by its construction, by this group GLD. And the point of And the point of why I'm calling this Tanaka duality is that Tanaka's observation, more or less, I mean, the way he said it was much more elegant and general and whatever. But basically, Tanaka's observation is that you pick a generic point in Z, its stabilizer is going to be G. The finite group G. Right, because we've built all of this out of the representation theory of the finite group G. So if we just act by an element of G, it's going to preserve everything, right? It's going to stabilize everything. So basically, G is in the stabilizer group everywhere. And as long as things are isomorphisms, then that is actually going to be the state. Then that is actually going to be the stabilizer group, right? There's not going to be anything else. G is the only thing that can stabilize them. Okay, so if you're lucky, addressing Andre's point, GIT stability exactly picks out these guys. So this is just a hope that in the sentence above, generic equals stable. Right, of course, that's not exactly what you want to do because you didn't want to get VG. What you really wanted to do was, oh, I've kind of zoomed past where I wanted to. There you go. What you really wanted to do was get V mod G. So what you should really do is take Z cross, well, Well, G, the original finite group G was acting on C2, and that's some representation, probably an IREP, most likely. So you should really cross Z cross Vi, where Vi is the two-dimensional IREP that you wanted to build. The 2D IREP we started with. And now, if you're lucky, the GIT quotient Z cross VI mod this GLD is going to be, well, stability, if you're lucky, stability just cuts out all of the genericness that you want, and you're just left with V mod G. So it's an AMSATS, right? It might work, it might not work. We claim that we can get it to work in the ADE cases. You know, what are the problems? So the big problem is stability, which is really challenging to analyze. Challenging to analyze in general. And then the other problem is actually it's not really clear if GLD is going to act transitively, whether GLD is going to have a single orbit on Z. So, you know, is GLD acting transitively on generic points? Okay. I haven't really got a lot of time left, but I should at least show you what happens in the type A case, even though it is a little bit vacuous. And then maybe I'll just give you a very quick sketch of the D4. Okay. So let me do type an so type a n, I just have a cyclic group of order n plus one. And the representation ring of this thing is very simple. Of course, it has n plus one characters, one-dimensional representations. So the representation ring, you can generate it just from the first one. You just take a primitive root, you just take a generating character. Generating character and it has a relation, so I guess that was step one. It has a relation which is that its n plus one power is trivial. What's nice about this example is that there are no relations in part three. You only need that one relation in part two, so there can't be anything. Okay, so now I can set up my GIT problem. I just need to take a one-dimensional vector space, which I'm going to call L, and then I form the vector space corresponding to this relation, which is hom L to the n. HON L to the n plus 1 to C. And this is acted on by the general linear group of L. Oops. Remember that? And of course, GLL is just C star. This is just a representation of C star. It's n plus one dimensional. So this is really just C n plus one being acted on by C star. C star and the weights here. Oh, hang on. What am I talking about? This is one dimensional. Sorry. This is one dimensional, and C star is acting on it with weight minus n plus one. And lo and behold, um and lo and behold being state there are two stability conditions and one of them one of the stability conditions says that you can't be zero right so for one stability condition you you really do get b zn because the stabilizer or bzn plus one um now i really i guess i wanted to take uh the i wanted to cross this thing with c2 cross this thing with C2. So I consider hom L to the n plus 1 C, and then I add on this other factor, which is the two-dimensional representation, which is L plus L inverse. That was my original V, my original C2. And this is C3. C3 being acted on by C star with weights one. Let me get my numbers right here. One n minus one, one minus n n plus, I can't remember. Minus n, sorry, that's what it should be. Minus n. There we go. 1n, there we go. 1n and minus n minus 1. And minus 10 minus 1. Okay, so this has two GIT quotients, and one of them is the orbifold. One quotient is exactly C2 mod shop. Excuse me. Shouldn't I wait for L B in minus? L B inverse minus the weight for L inverse? Yeah, well, that's what I was stumbling over for a second. I think that's because I shouldn't have taken, I should have actually have taken L to the N, not L inverse. That was an error. Yeah, thank you. Okay, so One of the questions is the orbifold that I wanted. So I sort of solved that problem of constructing the orbifold. But it didn't solve the original problem, which was interpolating between the orbifold and the minimal resolution. Because this then has two GIG quotations. One of them is the orbifold, but the other is also still an orbifold. It's like the total space of the canonical bundle of some weighted P1. So, the problem is that I haven't given myself a big enough GIT problem. I need a bigger GIT problem with more stuff in it so I can have different stability conditions and get different quotients. And how do I get a bigger GIT problem? Well, I just take more IREPs at the beginning. So I only pick one IREP, but more IREPs give a bigger GIT problem. And if you take all the IREPs and you If you take all the irreps and you run it through, you can get the minimal resolution. And in fact, all you're doing at that point is just the Toric, the same old Toric construction that you could have done at the beginning. Sorry, can I just ask a quick question? Please. So in this case, you've taken this home ln plus one to see the thing that gives you the b b z n plus one and you sort of added the uh And you sort of added the tautological representation. So, when you take all your reps, what do you add? What's the space that you sort of add to what gives you the well then it would be L, you'd have L1 and Ln right? You'd have all your F, L1 up to Ln and the trivial one. And you take two copies, well, you take L and Well, you take L and L to the power of L for each irrep of each irrep of G R. No, no, you'd have so what you have to do is you have to write down all the relations in the representation first. Right? You know, so in the A2 case, I mean, as I say, this really just recovers the toric geometry. It doesn't give you anything clever. But in the A2 case, you would have L1. You would have L1 and you'd have L2, and then you'd have to say, well, actually, L1 squared is isomorphic to L2, and L2 squared is isomorphic to L1. So those give you the two relations, the first two factors. So what you'd want is hom L1 squared L2 direct sum, hom L2 squared L1 direct. 2 squared L1 direct sum L1 direct sum L2. And it's modded out by GL L1 cross GLL2. The whole reason I'm asking is that I'm wondering if it's possible to find that because you are in the end you are quoting out by the same group, GL of the dimension of the group. Whether it's possible to find the original, the sort of Makai equivalent. Original, the sort of Mackay Quiver representation space in what you have. Is there any conclusion? So in Tariq's construction, you do all of this, and absolutely, as you say, you take all the irreps, and so it's the same group as you would do in the quiver representation. And then what you observe is there's a map from this GIT problem to the quiver GIT problem. Aha, so it's the other way around. Problem, uh-huh. So, it's the other way around. It's from this problem. So, this is somehow a refinement of the GLAT problem. Yeah, exactly. Not inclusion refinement, cool. It's a refinement, exactly. And then, and then what you have to do is prove that for the right choices of stability condition, that becomes an isomorphism. Yeah, so and thus you get all the usual sort of minimal resolution and sort of, I see, cool. Does this work in dimension greater than two conceptually? To conceptually, I mean, the ANZATs in principle, you could try. The construction, character construction, is actually specific to dimension two, I think. It does some stuff in it, which I can't see how to generalize. He's a bit more optimistic. I don't know if he's here. I'm not confident we could go up and damage. Go up and down. Yeah, it's five past five, isn't it? So five past nine for you guys. I should stop because I'm sure you'd all like to go and get coffee. Okay, I'll stop talking. Thank you very much. Okay, yeah, thanks for the talk, Ed. Does anyone have questions? Could you quickly tell us what happens in the case of B4 then? Or is that going to take. Yeah, I mean. So who asked the question? Is that Jesse? No, that was me. Nitin. Nitin. Oh, hi. Sorry. Oh, you appeared to be muted. Maybe you have to. I haven't figured out how to set up my windows so that I can see more people. Anyway, I should probably figure that out. More people. Anyway, I should probably figure that out by now. Yeah, I mean, with the understanding, right, that if people want to go and get coffee, then they absolutely should, rather than sitting here listening to me. So yeah, so what happens in D4? So what is D4, right? It's a binary dihedral group. And in fact, it's a binary version of D2. So it's a double cover. It's a double cover or bd2, right? It's a double cover of the dihedral group D2, and the dihedral group D2 is Z2 cross Z2, it's the symmetry group of a two gon. And if you don't believe me, you just write down the relations for, you write down the presentation for the dihedral group and say n equals two, and you get zg squared. So bd2 is this extension, and it is the Caternian group. Right, so it's a non-abelian group of order eight. So you think it's D4, but it isn't D4. It's the other one. So it has four 1D irreps and it has two, sorry, it has one 2D irrep, which is the one that you start with, the defining one. So, what you need to do is you need to pick. So, there's three non-trivial characters. So, you need to pick L1, L2, and L3. These are one-dimensional. And then you need to pick one more vector space, which is two-dimensional. And then you need to figure out what all the relationships. And then you need to figure out what all the relations are that hold between these guys. Yeah, so I mean, I could write them down, but maybe that maybe I should let someone else ask another question or I can follow up with more details. So, Jeff, you have a hand up. What was your question? Hi, thanks for the talk, Chris. That was a lot of fun. I was just wondering if you thought of how this might generalize. How this might generalize if you have, say, non-finite, like infinite groups. Like if you, say, may have to work with perverse sheets instead of coherent sheets or something like that. I have no idea, actually, about what line of thought you might be thinking about. Yeah, so what some sort of space that arises as a quotient. Space that arises as a quotient of something by an infinite group. Yeah, like you were. Do you mean like an infinite discrete group or like a reductive group? Just something like, say, GM or some reductive infinite algebraic group, something like that. Yeah, I mean, you can resolve. I mean, I think maybe one answer is this sort of leads into the area of non-commutative resolution. Leads into the area of non-cumulative resolutions, because if you have a space modulo, something like GLN, then you have a singular quotient, and then you have the RN stack, which in some sense is a resolution, but it actually doesn't really behave like a resolution because it's sort of infinite over the base. You know, because the representation theory is infinite. And normally what people do is they try and pick out an appropriate finite subset of representations and build a non-cumminative resolution out of it. And build a non-commutative resolution out of it. Okay, thank you. Does that make sense? Yeah. So can I just follow up on the on the well, not necessarily D4, but I'm just wondering, like, what relations are you supposed to pick in among? Yeah, no, I'm happy to keep going with D4. I'm going to keep going with D4. I've thought about it a huge amount. Yeah, okay, great. Yeah, let's keep going with D4. And as I say, it could get tedious, so please leave. Right, so the first relations you need to look at are scalars, so the things that show up in the character ring.