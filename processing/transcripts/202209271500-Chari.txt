On something that I have to not really say. Okay, thank you. Perfect. Okay, so I'm very happy to be speaking here at this conference. Thank you, Alfredo, for all the work you did and all the organizers for inviting me. And of course, I've Inviting me. And of course, I've known Bernard for most of my professional life, which is now rather long. And it's always been a great pleasure to meet him and to learn mathematics from him. And much of today's talk is really inspired by his work with David and their approach through cluster algebras really revived my interest in quantum affine algebras and their representations. Okay, so. Okay, so let's talk about Snakes and Ladders first. So, Snakes and Ladders is an Indian game which I played as a child, and I realized at some point that this wasn't so well known in the West. And then I looked up Wikipedia. Now, is this what will how do I point? No, I want to open that. Yeah, yeah, exactly. It's pep, yeah. Yeah, so allow, yeah. Yeah, okay. Okay, so it's an Indian game which we played as children, and later it was, of course, appropriated by the West, and it's now played in the United States as a Bible story, and it's a morality game. But anyway, it's a book. Morality game, but anyway, it's a board game that you play and you roll dice and you go up when you reach a snake on the board, you go down the snake. When you reach a ladder, you go up a ladder. So it's a fun game, and I actually really enjoyed reading the history of it, which I didn't know. And now how do I. Oh, it's a mouse, yeah. Sorry, I had no idea it would be this complicated. Okay, so I want to explain how this game of snakes and ladders shows up in the representation theory of quantum affine algebras, okay, and the representation theory of periodic groups. So the connection between these two subjects has been known for a long time. It goes through an affine-schurwald duality, and this was proved in 96 in joint work with Presley and also independently by Ginzburg, Kapranov. By Ginzburg, Kapranov, and Vassarov, although we had very different approaches to the subject. And the Schurwal duality is between quantum affine algebras and affine Hecke algebras. But actually, there are really many parallels in the subject which developed in both subjects, and they just develop completely independently of each other. So I thought it would be interesting to look at some of this as we go along. So, and I wonder why that happened. I wonder what that happened. So, since 2009, I also want to explain the connection with cluster algebras. So, there are these bridges which go from quantum affine to GLNQP, and then also to cluster algebra. So, I want to describe all these connections. Okay, so what's a ladder? So, this is an idea that was introduced by Lapid and Minguez and Tadich in their study of GLNQP representations. So, a ladder is just a collection of the language. So, a ladder is just a collection of segments. They call multi-segments. And what you want is that the initial points are always increasing and the end points are always increasing as well. So that's a ladder. It's a very rickety ladder, of course. And then there's the notion of a snake. So a snake is just a collection of points, I1, C1. So IKCK, and I1 up to IK will vary over some. Vary over some nodes of a Dinkin diagram. And C1, CK are parameters, and you require that Cj minus ij is odd, okay? And that the difference between Cj and Cj minus one is this number. Okay, so this is somewhat less intuitive than ladders, but if you do a little calculation, you'll see that they're exactly the same. So, that they're exactly the same. But before I do that calculation for you, so Mukin and Young took a collection, took a snake and associated to it a quantum affine module for the quantum affine algebra. Okay, so the correspondence between a ladder and a snake is given very simply. It's on if you just take a single segment AB, then it just maps to this node that you want to pick up, the eyes that I had on the previous slide. That I had on the previous slide, the node that you want to pick up is B minus A plus one, and the C's that I had on the previous slide is A plus B. So there's exactly a one-to-one correspondence between ladders and snakes. And what affin wild duality does for you is take a ladder module for GLN and give you a spit out an SL snake module for AN, where N is sufficiently large. Little N is sufficiently large compared to capital N. Large compared to capital. Okay, so I'm not sure. So I'm still learning all these parallels, but so I'm not sure what the module corresponding to a single segment is called for GLN. But in the case of quantum affine algebras, the module associated to just one node and one parameter is called a fundamental module. We heard about fundamental modules yesterday in Michelle Gecken's talk. Okay. And then, and these amazing similarities continue. Amazing similarities continue and they were studied completely independently. So, in both cases, we have a notion of a standard module or a wild module, as I call them, for quantum affine algebras. And there they occur as a tensor product of fundamental representations. If you're working in the piadic case, then what you get, the standard module is roughly obtained by taking some parabolic induction of a representation of a affine Hecke algebra. And they have the same tensor product decomposition property. You can write the representation. But you can write the representation associated to a ladder as a tensor product of these things. Okay. So they come from parabolic induction. So the Kirillov-Rashetikin modules were introduced in 1987. And they were introduced by Kirilov and Rashetikin in the context of integral systems. And these modules are indexed by all our modules are always going to be indexed by a node and by a parameter. And in this case, And by a parameter, and in this case, you choose the parap the nodes are the same, and you take the parameters to differ by two. Okay, so a a plus two, a plus two r. All right. In terms of ladders, what do you do? You take the multi-segments a b and then you increase each of them by one. So a plus one, b plus one, and sorry, that's a typo. It's a plus r, b plus r. Well, now if you look at the difference, you'll see that b minus a is always constant, right? That was the node. Right, that was the node, and that is precisely i. And if you look at the sum of the yeah, if you look at a plus b, then the difference is exactly two, okay? And these modules were also studied. They were introduced by Bridget Spey in 1981 in the context of discrete series representations, and they're now known as spay representations. And in both theories, and in both theories, these modules, the Kirill of Russian modules and the speaker. The Kirill-Ruschrigan modules and the spare modules have been very important, although the subjects develop more or less independently. So it's really quite beautiful the way that thing goes on. So let's look at the important properties of KR modules. So for the purposes of this talk, what are the important and relevant properties? They're prime. That means you cannot write them in a non-trivial way as tensor product of representations of the quantum affine algebra. Representations of the quantum affine algebra. The real, the tensor square of a Kiriel-Russia-taken module, is irreducible. Now, this is a question again, which is studied in the world of periodic groups. They call them square irreducible representations, and it was proved that the spay modules are square irreducible. Probably they were the first examples of those things. Now, the KR modules, so to make the connection with cluster algebras, the KR modules. The connection with cluster algebras, the KR modules satisfy what is known as an exchange relation, which I so you take a tensor product of two Kirillo-Rashitikin modules, and you can write them as a sum of they have a it has a Jordan-Holder series of length two, and you can write them as a sum of Kirillo-Rashitikin modules in their tensor products. That's called a T system, and that was studied, I guess, in the simply laced case by Nakajima and in the other cases by And in the other cases, by David Hernandez. And so they call the T-system, or you could choose to now call them also a cluster mutation group. So of course, I talk very fast as my students never fail to remind me. So feel free to interrupt at any time. Okay. And so these ideas led Hernandez and Leclerc to the notion of monoidal categorification of cluster algebras, as far as I understand. Far as I understand. Okay. So, what do I want to do in this talk? So, I want to explain the definition that the definition of KR modules is a limited one. It only sort of encodes information coming from SL2. Okay, this difference of two reflects the Coxster number of SL2, for instance. So, it's a limited thing that you can do. Then I want to explain how. Then I want to explain how prime snake modules in type AN, so these were introduced by Mukin and Young, and they reflect information coming from higher ranks. And I'll make all this precise in the case of AN. Snake modules are not defined outside AN and BN, and we'll also see there's a good reason why it's very hard to do outside that. And then I want to tell you that these are interesting definitions, that they lead to real, they lead to, they give you. Real, they lead, they give you real modules, they give you new monoidal categorifications. Inflations, I'm not going to get to this business of inflations because what I want to focus on are the two new directions that interest me. So, one is that they lead to a classification of families of prime modules. So, now the point here is that one knows examples of prime modules, but one has no idea of how to write them all down. You know, any kind of parametrization of these things is unknown. Of these things is unknown. And this is why the connection with cluster algebras is so interesting, because they give you new examples. So you could hope to get something from that information. And they lead to defining infinite families of imaginary modules. Okay, so an imaginary module is one that's not real. That means it's one whose tensor square is reducible. Okay. And the original example of The original example of imaginary modules goes back to Leclerc. And it arose. So I'm sure everyone here knows this, but it arose in the context of dual canonical bases. And the question was, when is the product of two dual canonical elements again in the dual canonical basis up to a power of Q? So in particular, you'll see the point about You'll see the point about squares. So, if you take an element of the dual canonical basis, you want to know when is q squared in q to the zb. So Leclerc showed that this was false. So, originally, Berenstein and Zelovinsky had conjectured that such a statement was true, and then it was actually shown to be false. So, he constructed a specific example of the dual canonical basis such that the square of it was not. Such that the square of it was not in the qz of V star. And he called such elements imaginary. And he proved that such elements existed in A5, B3, sorry, and G2, and hence in all higher rank algebras, because you can just do an embedding. I don't know if you needed to do C3, C2 separately. Yes, I think. You did B3 and C2. You did B3 and C3. Okay, yeah. Okay. And then once he constructed these elements, again, you use Shurwell duality and go back to quantum affine algebras and you get an example of irreducible representation of the quantum affine algebra whose tensor square is reducible. And the example is in A5. Either A5 or A4. I didn't look that up. But so we'll come back to this. So we'll come back to this. I'm making this point because actually we'll see that it's true in lower ranks. Okay, so this is the point that I want to make that Shurwald duality is great for going back and forth, but it changes the rank of the algebra you're working with. So if you want to use Schurwal duality for GLN, then you actually get a quantum affine algebra of much higher rank. So, and this is relevant because reducibility in higher ranks does not imply reducibility. Ranks does not imply reducibility in all lower ranks. I mean, it's almost trivial to construct such examples. It's very basic. So there is a limitation to using Schurwal duality in that sense. Now, examples of imaginary modules. I mean, after Bernard's example, I think there was almost nothing known about these modules. Okay, because quantum alpha. Because quantum alpha and algebra modules are generically real, so we'll see that in a minute. But then it then the input came from peadic groups. When Lepid and Mingas in 2018, they studied a similar problem. They wanted to know when modules were not square reducible. No. Well, they answered the affirmative question, which is to give a condition for modules to be square irreducible. Okay. And they gave a combinatorial crisis. And they gave a combinatorial criterion for this representation to be square irreducible. And I think I, yeah, so I think I don't want to go into the combinatorial criterion, but it's basically you have a collection of segments and then you have a notion of something being regular, and then you have to put it in the correct order, avoiding certain kinds of permutations. So avoiding certain patterns in permutations. Permutations. Okay, so then one has modules for the quantum affine algebra. But their work is, you know, their work is, I mean, the limitations that they have are quite a lot. And it's also limited to AM because the duality is only with GLN and GLN is all that they study. And so, for instance, and because of the Schurwal duality limitations, it's not clear that their examples would give imaginary modules in type A. Would give imaginary modules in type A2 in the quantum affine case. They don't only, so I mean, Lapid and Minguez have examples in GL3, but they will not give you modules for UQA2 hat. Okay, so I want to talk about a direct construction of an infinite family of imaginary modules. So, now what does all this mean at the level of categorification of cluster monoidal categorification of cluster algebras? So, what it'll mean for us is So, what it'll mean for us is that we're going to find infinite pairs of cluster variables whose product is not in the span of cluster monomials. So it's sort of a very explicit way to produce examples which are not in the span to show that cluster monomials don't span the whole thing, even if this is very well known to everybody. And our methods will also allow us to do the same thing in the end, for instance. For instance, and so Bernard's example examples in DN all come from the A5 example, from an embedding of A5 in DN, as I understand it. But this is not going to be of that nature. The module is in fact going to be a snake module if you think of it as an AN minus one module, but it's going to be imaginary. Okay, so after this rather long introduction, so here's the basic plan. So I just, I'm going to review quantum mpha and algebras at lightning speed. And algebras at lightning speed. I'm going to tell you a bit about quantum alpha and SL2, because that's sort of relevant for the rest of my talk and Kirilov-Rashetikin modules. Discuss the reducibility of tensor products. And then talk about higher rank Kirilov Reshitikin modules. The connection with the work of Mukin and Jung. I mean, their work is really important for what we do, and the classification theorem. And then monoidal categorification and imaginary notices. And imaginary markets. Okay, so if you've never seen a quantum math and algebra, this slide won't make any sense to you. And if you have, you don't need to see it. But basically, it's an algebra defined over CQ by certain generators and relations. And it's a Huff algebra. So you can take tensor products and do. This is all we're really going to be using about it. Okay. This is known as the Drunfeld-Ser, no, Jimbo Drunfeld presentation. And then there's another presentation which is really. And then there's another presentation which is really better adapted to the study of finite dimensional representations of quantum alpha and algebras, and that's the Drinfeld presentation, which is even more horrible to write down the relations of, but so I'm not going to do that. The only important thing that I do want to say is that there is a huge sub-algebra. Sorry. There's a huge sub-algebra which is A huge sub-algebra which is commutative, okay? So it's generated by so you have one for every node of your Dinkin diagram, and then this should have been an R, one for every non-negative, for every integer. And so you have a huge commutative algebra, which plays the role of the Cartan-Sub algebra. So it gives you a set of eigenvalues. Okay, so the category that we're going to work with is the category of finite dimensional representations of quantum affine algebras. It's a category with extremely rich structure. And one of the reasons is this is an algebra defined over the complex numbers, but it has indecomposable representations in it. Not every finite dimensional representation is a sum of irreducible representations. So it really is a lot of structure. It has uncountably many irreducible representations. So let me tell you how they're indexed. So this is sort of a bit uncomfortable. This is sort of a bit unorthodox, but this is how I like to do it. So they're going to be indexed by a certain monoid, which I call Pn. And this monoid is generated by infinitely many elements omega ia, where i will vary over the nodes of the Dinkin diagram, and a is a non-zero complex number. So it's an absolutely ginormous monoid, and Pn is the multiplicative free abelian, corresponding multiplicative free abelian. And an old result. And an old result due to Presley and myself is that there's a bijective correspondence between P plus and the isomorphism classes of simple objects in Fq. Okay, so as I've already said, the irreducible module associated to a generator is called a fundamental module. And fundamental modules are very well understood. You know everything you want about them. Well, in all classical cases. Classical cases, I think. So, why are they called fundamental? It's if you've done an elementary course in Lie theory, you know that for a semi-simple Lie algebra, fundamental modules are such that if you take a tensor product of them, then any irreducible finite dimensional module occurs inside as a sum and because there you're working with a decomposable semi-simple category. A similar statement remains true here, but it's a multiplicative statement. So, if you take any element of my monoid. Take any element of my monoid and you write it out as a product, then v omega occurs in the tensor product not as a sum end but as a Jordan-Holder constituent of this tensor product. Okay, so that's why they're called fundamental. Okay, and such tensor products are generically irreducible, and in fact, and they're irreducible unless you have some integrality property. So every parameter has How I've written this. Yes. Yeah. So they're irreducible unless some parameter. So yeah. So I've got the statement mixed up, but there's an integrality property, which is the ratio of the parameters mustn't be a Q power of an integer. Okay, as soon as you have that condition, the module becomes reducible. So in effect, although you have all these infinitely many things over the complex. things over the complex numbers you can reduce your study to just working with these parameters varying over q power z. If you understand those then you really understand the whole category. They're up to shifts and things like. Anyway, you really do understand. This is the important thing to figure out. Okay. But this condition is far from sufficient. I mean, you have lots of reducibility even when the ratios are powers of q, integer powers of q. And the model Of Q and the module is irreducible. That module, that tensor product is irreducible, except for a finite set of values for these ratios. So these ratios are obviously rather important. And these were determined. Well, let me tell you what the answer is for SL2 first. So for SL2, the ratios are just that they shouldn't vary by a power of q squared, q squared or q to the plus of. q squared or q to the plus or minus 2. And then if you, so if you take all the parameters to where, you know, so this is like the Kirilov-Reshetikin module, right? So you're taking a1, a1q squared, a1q to the 4, and so on. And then what you get is the so-called evaluation module. This is just an S, this has dimension k plus 1. So you see I have k factors, and so that's the integer k, and the SL2 module of with highest weight k is. Highest weight k is has dimension k plus one, so that's what you're picking up over here. Okay, so the Kirilov Rashitakin module in SL2 is just the evaluation module. It's just you can think of it just as the SL2 module of that correct dimension. Okay, and then you know, I've always subscribed to the belief that if something is true in FL2, it's got to be true always, but for all simple Lie algebras, but here is an example where it's completely false. here is an example where it's completely false so in the case of sl2 all irreducible modules are real they're uh you can classify you can claim all the you can classify all the prime modules and any irreducible representation is a tensor product of the prime modules which are all Kirillo-Rashitikin modules okay everything is everything is not known in the higher rank case or is false so imaginary modules exist as soon as n is greater than or equal to two Greater than or equal to two. You have no idea of how to describe any of these imaginary modules. You don't know how to describe prime objects in this category. So I want to try and answer some of these questions. I'm still very far from answering them all in any complete generality, but we're getting there. Now, interesting families of prime real representations have been known, and these are exactly the Kirillo-Rashitikin modules. Okay, and I mean, you could do an exact identical slide for periodic groups. Okay, okay, so here, so we go back to this question. So this is my Kirillo-Russia chicken module. So now I'm reformulating Kirillo-Russia chicken modules not as snakes, but in terms of my index set P. Okay, and so it's a product. So the IA, and then it's IAQ squared and IAQ. it's IAQ squared and IAQ to the 2k minus 2. Earlier on, I'd have written it as IA, IA plus 2, and so on. And then, so these are the Kirilov Rashidakin modules. The proof that it's prime is not difficult. The proof that it's real was established by me in 2001. And there are sort of related results in the work of Akasaka Kashiwara and Vasarovana Anylo, but my paper is the most explicit formulae for these. Formula for these. Okay. Yeah. So Hernandez and Leclerc, they did something very interesting. They put KR modules in the context of cluster algebras. So what they did was to define an infinite quiver, which we'll see on the next slide. And the initial seed was a collection of Kirill-Rashitikin modules. It was not all Kirill-Rashitikin modules, but some of them. And then by mutations, you could get all the Kirilla-Rashitikin modules. All the Killa Rashidican modules as cluster variables, or at least the Q characters. So, this is the quiver, it's supposed to go all the way down. This is a quiver in, what's this? This is a quiver in A3. So, this is the Kirillo-Rashitikin module where you just take one thing, which is zero. And then here, also, you have only one parameter, and then the number of parameters grows. So, you're taking products of elements in your group. So, this is so, and it's always a difference of two. And so, you see, there was a parallel. Two. And so you see, there was a parity condition that I put in my definitions, and this parity is showing up. The even things come with even parameters, odd things come with odd parameters. Okay. One can then take finite slices of this quiver in some smart way. And then the cluster associated cluster algebra is isomorphic to the Growden Dick ring of a suitable subcategory of the class of fundamental representations. So, So, I meant calligraphic R. So, in fact, for every integer R, you can define a full subcategory FR, which consists of objects whose irreducible constituents are indexed by elements of this finite subgroup. So, you take omega i A, but you limit the values that A can take. Remember, I'm only allowed to work with q power integer powers, and you limit it to absolute value of s less than or equal to r. So then the result of Hernandez Leclerc, well, another, so let me just say. So once you have this map from cluster algebras to this growth and decaying, what they proved was that the cluster variables map to prime representations and cluster monomials to irreducible representations. And so Hernandez and Leclerc did this for quantum algebras of type a n and d4. In the case r equal to one, I think Nakajima did it in all simply list types. Did it in all simplest types for r equal to one, and then Shin did it for Lie algebras of type A D E and all R greater than one. So this was a really beautiful connection. But except when the slice is equivalent of finite type, actually, this is also not quite a correct state. Yeah, no, this is a correct statement, finite type, as opposed to finite rank. One doesn't know what prime representations you pick up. So you know a cluster variable goes. You pick up. So you know a cluster variable goes to a prime representation, but you really don't know what the prime representation is. So at the level of quantum affine algebras, you don't know much. Okay, so what do we know? We know that the KR modules appear as cluster variables. And then Bing Duan and Jianrang Li and so on proved that prime snake modules of Mukin and Young also occur as cluster variables. And then Mukin and Young proved that the snake module is isomorphic to a tensor product of prime snake. To a tensor product of prime snake modules. And this is a very, very simple, very canonical way to describe this tensor product. And so the only observation you need to make is that the snake, any snake, is a concatenation of prime snakes. And then you just cut your snakes and take the tensor product. And a similar result was proved by Max Gurevich in the Piedic case. So here also there is this, it's kind of very interesting that timeframe Mukin and Young did this in 2010. Young did theirs in 2010. And then I think Minguez Lapid introduced the ladder representations in 2014. And it all just went more or less in parallel, the development. Okay, so what you can conclude then is that snake modules give cluster monomials. Okay, so now I want to talk about my what I'm doing, which is the higher rank Kiriel of Russia module. Okay, so what did the KR modules do? They took the representations of SL2. The representations of SL2, and they somehow lifted it up to a representative. You know, they took the element of P plus for SL2, and then they just lifted it up to a higher rank case by concentrating everything at one node. Okay, so that's the only difference between, as far as the classification is concerned. But then, of course, that begs the question, if you've done it, if you can lift from SL two to SL three and so on, why can't you take a prime module in SL three and try to lift it to higher ranks? And try to lift it to higher ranks. Take the same Drinfeld polynomial, and they're also known as Drinfeld polynomials. You take the same element and you lift it. And you ask yourself, what do you get? Do you still get prime representation? Do you get anything interesting? So that was the basic idea that we started with. But for that, you need to know interesting examples to begin with. So SL2 is hopeless. SL3 was also hopeless. But if you look in SL4, there you find. Oops. Oof. Oh, sorry. Yeah. So there you find that you can have interesting points of reducibility. Okay. So this module is like a Kiriel of Rashidigian module, but the difference is four now. And this reflects a feature which shows up only in SL4. This number doesn't show up before that. And this goes to my original statement that something which is reducible in higher ranks is not reducible, may not be reducible in lower ranks. May not be reducible in lower ranks. And here, this is another example, which is also funky. I take a difference of two, and then I take a difference of four. And one can prove that these are all prime representations. These are snake modules, actually. Prime snake modules. Okay, so what this example is telling me is that I should be looking at points of reducibility of the tensor products of the form omega ia, tensor omega ib. In this case, I'm taking, I'm not, yeah, I'm going to talk about Terra-Russian module, so I'm going to keep the same node here. And these points of reducibility were computed in 2000 by me for G-classical, and I'll just tell you the answer in two cases. So, in the case of AN, this module here is reducible if and only if the ratio of these parameters lies in this set. Okay, so this set is. The set. So this set is really an interval going from one to the minimum of i n plus one minus i. Okay. And what are these peculiar numbers, 2j? Well, these are just the dual Coxter numbers of SL2j. And so this is something that's kind of very helpful to keep in mind in trying to understand these representations. And if you look at DN, it's much more complicated to write down the answer in DN, although one can, but the answer for node one is this. node one is this, there's a two and there's a two n minus two. And it's the existence of this gap here, which makes life so unpleasant in Dn. And that's why you don't have snake modules in Dn, because this gap makes your life really terrible. Okay. And that 2n minus 2 is again the Coxton number. Right. So higher rank low ration models. Now we. Now we sort of know how to define them. We want to take products omega ia1, omega i ar, where you want these ratios to be in that set, which was the interval that I defined. So SI is supposed to be, no, SI is supposed to be SI is supposed to be this interval here. So you want the ratios to live there. Ratios to live there. And yeah, so I don't know how to glue all these things together in the case of DN as yet to say anything intelligent about them. It just seems really hard. Okay. So a higher rank Kirilla ratio module in type AN is the irreducible finite dimensional module indexed by elements of that form where you control your ratios, but you don't control them. So as rigidly as you did in for Kirilla ratio. As you did in for Kiriolarastic in models. So your ladder, if you're thinking of it as segments, you're taking segments, but the distance, the sum of the parameters can vary over a fixed set. They no longer have to be b plus a plus two. Okay. So, okay. So, yeah, so I mean, of course, when we first did this, we didn't think about looking up what Muchen and Jung did, but then we realized that these were really special examples of prime snake modules. Are prime snake modules, but the snake modules are you know they're a vast and sort of unmanageable thing in some sense, and so this narrowed our focus a lot. It's very helpful, okay. And then, so you can say all kinds of interesting things about these snake modules, and this they have all properties very similar to Kirilo-Rashitikin modules. Okay, and Mooken's student Jean-Rong Li and his collaborators proved that snake modules are real, that the tensor square of a snake module is, and again, this is. Snake module is. And again, this is known in periodic groups. The tensor squared of a ladder representation is real. Okay, so now I want to state my main theorem, at least one version of my main theorem. So what is my goal doing representation theory? I want to understand all irreducible representations. One way to understand it is to at least understand the prime representations. Then I know I can write anything as a tensor product of these things, and then I reduce my problem a bit. But this is very far off. So, the result that I could do with Brito is the following. I can prove, so supposing I take G of type an and I take omega with the same node and different parameters, then I can prove that V omega isomorphic to a unique up to permutation tensor product of higher rank Kirillo-Rashitikin modules concentrated in node I. It's concentrated in node I. So, this is a unique factorization theorem. Okay, and it's, but obviously, this is a somewhat abstract thing. I'm not telling you what the prime factors are, right? So, if I wanted to give you a complete answer, I should tell you what the prime factors of this representation are, right? So, if you thought of this as a cluster monomial, no, you don't think of it, you think of this as a product of something, and then you want to describe what cluster variable. Then you want to describe what cluster variables. Yeah, if you think of this as a cluster monomer, you want to say what exactly how to get all the cluster variables out of it. I'm botching that a bit. Okay, so let me tell you how to find the prime factors. It's simplest to do it first in an example. So let's take A3 and let's consider the following element. So at node 2, I'm taking Q to the 0, node 2, Q to the 0. Taking q to the zero, node two, q to the four. Then I've got this power. This comes twice with q to the six, this comes twice with q to the eight, and this is q to the ten. Okay, this is not a snake module. In a snake module, you cannot have powers showing up. It has to be strictly increasing. So it absolutely doesn't fit into the language of snake modules. Okay, and the ratio here is four because I'm working in A3. I'm allowed to take four. These ratios are two, which is also allowed. Two, which is also allowed in A3, and so I'm happy with that. Okay, so now what so now you just do a little bit of combinatorics. You write out this multi-set and you partition it by picking out the longest strings which have the property of the difference being in S2. And S2 here is 2, 4. So when you do this partitioning, you get 0, 4, 6, 8, 10. There's nothing else you can do. And the other one is 6, 8, because that's. One is six, eight, because that's what's left over. The difference is two, so they form one segment. Okay, the prime factors. So, if you now, if you now ask me what is this v omega, it's it's going to be a tensor product of sort of the things associated with this and the things associated with this. Okay, so let's make this precise. So, to make it precise, you have to develop some notation. So, you fix a node and you define what you mean by an IN segment. Define what you mean by an i n segment. So this dependences on both i and n. And so you mean a collection of integers such that the difference lies in your favorite interval, where it goes from i to n plus 1 minus i. But it's not differing by 2. You just need that 2 of J m lives in that interval. The Kiriel of Rashidakin modules correspond to taking Jm equal to 1 for all m. Right. Then you need to know, so what was this partitioning? Oh, so what was this partitioning that I did? I sort of took out the maximum possible string and then I partitioned the rest of it, right? So, for that, you need a language. And so, if you're given two segments, you say that they're in general position if the multi-set does not contain an in segment of length bigger than r, if r is greater than or equal to, bigger than both of them. And otherwise, you say they're in special position. So, with some effort, you can prove that any mind. Effort, you can prove that any multi-subset of integers can be written uniquely as a collection of i and segments in general position. Okay, the general i and general. And then the theorem, so the more precise version of the theorem is the following. So you given an i and segment B, you write it out as a product of ion segments. Sorry, so given a collection of ion segments, in general position, the tensor product is irreducible. The tensor product is irreducible. And if they're not in general position, then the tensor product is reducible. Any irreducible representation with that property can be written as a tensor product of modules of this form. So this theorem, I mean, so this is exactly the theorem Presley and I proved in 1990, right? So it's been 32 years since then to do this generalization, and that's just to a node I. But really, it has depended on the way the subject is. Has depended on the way the subject has advanced since then, and particularly, so it uses what I did in 2000, and it uses the work of Mookin and Jung in 2010. And so, it's been slow progress, but we got that. So, okay. Okay, so here's a question that I have. So, if you think of in terms of monoidal categorification, what does it mean? We know that, so if you, so the result of Duan, Li, and so on tell us that if you take an ion segment, As that, if you take an ion segment, that's a prime snake, so you get a cluster variable. Fanci proves that cluster monomials map to irreducible modules inside a suitable category, right? Okay, so the tensor product theorem that I stated tells you that the cluster monomials, that this that the cluster monom tells you that this element maps to a cluster monomial if and only if the segments are in general position. So I have no idea what general position would be. So I have no idea what general position would mean in the language of, what that kind of combinatorics would mean in the language of cluster variables. Also, in the language of representation theory, what the problem I've done is completely obvious. It's a completely natural thing to do. Focus your attention on a single node and ask yourself, what do the representations look like? Well, what does this mean in the language of cluster algebra is focusing on a node and then talking about the cluster monomials? What kind of cluster monomials are we picking up from this description? From this description, I mean, it might be a naive question, but it's an obvious question and one that, well, so this seems like a reasonable place to ask that question. Okay. Okay, so imaginary modules. So in five minutes. So this tensor product omega ib tensor omega ia is reducible if it's not in general position or if they're in special position, as it's called. Okay, so, but because of all this work of Fan Chi and so on that have been. Of all this work of Fan Shi and so on, that I've been talking about, this is a product of cluster variables. And I want to know: is it in the span of cluster monomials? And then I want to say that the answer is no. And in fact, we think that as long as the segment has at least length two, there is always a segment with which you will go when you take the product, you're going to get a reducible representation. And in the Jordan-Hole, the series of that reducible representation. Of that reducible representation, he'll have an imaginary module, and therefore it's not going to be in the span. So, let me just focus on the example of Leclerc. So, the example of Leclerc, now that we have the language, is an example, is this, is the following. 2, 6, 1, 3, 3, 3. And so this is an example in A3. Well, this is an example of an element in A3, which will give you a representation in A3. And this is what gave us. This is what gave us an imaginary module. So, let me tell you how we think of it and give a direct proof that it gives you an imaginary module. So, we take two segments. So, this was really motivated by some discussions I had with David in Riverside. So, you take two segments. So, this is 6, 4 and 2, 0. These are dual segments. I'm working in a half algebra, so I can take dual representations. So I have an inclusion of the trivial module in the stensor product. And using a result of KKKO in 2015, you know that this is the sokal of this module. The trivial module is the sokal, maximal semi-simple submodule. Okay, the simple head of this module is also known, and it's known to be just the, and in fact, in this case, it's just the Kirilo retrospective. Fact, in this case, it's just the kirylo-resheti kid module. So, this is a little technical, but anyway, so you have to understand. So, what we have to do is to understand what we have to do is to understand what dominant weights, let's just talk of dominant weights, live in this tensor product. Classically, you have to understand L dominant weights, but okay. Dominant weights, but okay. And the thing is that there are very few of them. And you can prove that they're only, so there's one, and then there is, oh, I'm missing a letter there. So it's omega. There's one, there's the Kirillo-Rushikin module, and there's one more, which is precisely the module that Bernard defined. Okay. And so this last one, so the module that Bernard defined, the element that Bernard defined, doesn't live in either the trivial, because it's a non-trivial element, right? Non-trivial element, right? And it doesn't live in the Kirill-Rush-Thekin module because one knows that in the Kirill-Rush-Techin modules, you don't have any dominant weight. Therefore, it gives you a Jordan-Older component, or it at least gives you a submodule. So, what it tells you is that there is a submodule, which is L highest weight, so it's a highest weight vector, which has a Jordan holder series of length two. And the irreducible module is the one Bernard defined, and the so-called, because, and it must, this is a non-split short. And it must be a non-split short exact sequence because the module has simple so called, and so I have the trivial here. So, we're really using the full strength of Kashivara's result that if you take a tensor product, you have a of a real module with another module, then you always have a simple circle. And now you, so now you play this game, which Katerina, which I learned from Katerina Stroppel, which is to take cups and caps. So, so what did I do over here? Here, I noticed that I had the trivial sitting. Here, I noticed that I had the trivial sitting inside. And here, what you have is a map to the trivial. Okay? And so you combine those. So now what I do over here is I take the, what would you call it? I don't know. You take the map down to, you project down to the trivial, and then you get a map back to your original module. So you scrub the two together. So you have to do a bit of work, but you can show that the module M tensor M maps to something non-zero over here. And the only thing zero over here and the only thing it can map to it can prove is actually this module and this is exactly what david told me that the that in bernard's example you had a map from v tensor from the irreducible tensor irreducible uh to this one and since it's and since it has a different value from the product anyway so this is a bit technical but you can okay so this is the example of the imaginary module and And now it's clear what you do in general. You take your module, you take a segment, you take its dual, you play this game, and you work awfully hard in general. This is a very simple example, and you get all kinds of nice imaginary modules. So we have a conjecture that if you take any I n segment and its dual segment, then the tensor product will always have an Jordan-Holder constituent, which is imaginary. And you can write down, and we can write down the explicit. Can write down, and we can write down the explicit omega in that in those cases. And we can prove the conjecture in the case of what you might want to call regular Kirilov, higher-ranked Kirilov modules, where the difference between any two is independent of the J. So Bj minus Bj1, Bj minus one is independent of J. Okay. Oh, this one. And actually, I mean, we also believe that the conjectures. And actually, I mean, we also believe that the conjecture is true for snake modules. And there's in both cases, there's a single hitch holding us back, but we certainly believe it. Okay, all right. Case of D4, we can play a similar game and we know how to construct imaginary modules over there, but it's really very hard. And outside AN, it looks, yeah, it's really not easy to do. We rely a lot on results of Muken and Young. That's not known. And young. That's not known, and no definition of snake modules are known. And I don't even know how to begin to define snake modules in any intelligent way in these algebras. Okay, so with that, thank you for your attention. And I'm looking forward to seeing Bernard a lot more meetings and continuing to learn new things from him. So thank you, Bernard. So, are there questions from the online participants? Apparently, not for the moment. So, maybe for the participants in the room. So, now what would be the minimal So, now what would be the minimal example of imaginary module from your perspective? What do you mean by the minimum of the example? Well, for example, arising in the small in SL3 or in UQ. Yeah, SL3 is difficult because you have, you can't do it, it won't be a second module. So, it's much more complicated than SOC. But I can certainly, I mean, I would have to look at my notes, but I do know an example in Metsoft Basis method? Yeah. But it can't be just supported on, you sort of have to go forward and back. You have to, there's some interaction between one and two. And when you say dual segment, you mean dual with respect to the two? Yeah, so I mean the representation that that segment defines is dual to the so just the shift by the topic. But at the end, it means you go from no to i, as you said. Go from no i as you still to the n plus one minus i, yeah, right, yeah. So, if you're working in two i, which I'm secretly assuming here, but you don't have to do that. So, from yeah, other questions yes, uh in your unique factorization theorem, did I understand it right that you you can explicitly construct a factorization? Explicitly construct the factorization, yeah. And how do you prove uniqueness? You construct the factorization, and you prove that if you have, I mean, so what you do is you take this collection of integers, and then you prove first that you can put them into a collection of segments in general position, and then you prove that if you have another such thing, then it is the same. It doesn't go through Q characters or something. It's a purely common. So, if you have one imaginary module and like another one that's real, and you multiply them, tensor them, is there anything one can? Is there anything one can say in general, like examples that this sometimes could be imaginary? Like what are there, what are the procedures to produce more imaginary out of a single one? Yeah, well, if I give the answers, so I don't know. I mean, one knows so little about imaginary modules, right? And or any efficient way. So, I mean, there is this approach of Mingez and Lapeete, which doesn't tell you what to do in the quantum affine case, right? You can just pull their examples back. So, but I don't, yeah. So, I would. But I don't, yeah. So I would say that this is the first sort of systematic way to construct families of examples. But I would. Is there a single example that people know, real and imaginary, where you can answer them and go get again and imaginary impossible? Is there such a thing? Or even, or it's impossible. I don't know. No, I don't know. We don't know. Nothing. I mean, those questions are very advanced. If you don't have any examples to work with, it's a bit hard. Have any examples to work with? It's a bit hard. I mean, the definition of an imaginary module is not a positive thing, right? It's the tensor square is reducible, so it's a bit I think, but I don't know what the numbers. I mean, do you have any choice? Other questions? Maybe I have a question. Maybe I have a question. Did you try to construct some new monoidal categories who would have some finite type cluster structure? Yes, so we did what we called. So this is also interesting because it comes this connection with categories. So we did what we called inflation of categories, right? So you have this P plus, right? And then you can, so let's suppose. So let's suppose, let's give ourselves indices. So this is P i bar, let's say. And then we take here n, and you have some restriction that i bar plus one divides n plus one. So then you can define a canonical map, which you just take any k over here, omega k a, right, and you send it to omega i k i a and this i is n plus one is equal to i into is n plus one is equal to i into i bar plus one. Then you take, so then you take your category. Let's say how did I answer than or equal to zero? Less than equal to zero, something like that. Yeah. Yeah. You take your category and over here you take a slightly different category. So this is Ci N, C i bar n and And here, what you're taking are modules whose Jordan-Holder series are only have to line the image of this map. Jordan-Holder series are of the form omega i k i. So you have to prove that this is a monoidal tensor category. This requires all this machinery of Mooken and Young. Okay, it's quite it's quite I mean because you're going very far down the lattice to prove that it's a monoidal tensor category. To prove that it's a monero tensor category, but you can prove that. And then, and under this map, for instance, you can prove that what I would call, let me just make the statement that you can prove that snake modules map to snake modules. Irreducible snakes. And again, we certainly believe that it will take us irreducible to irreducible. So now, this is a monorial categorification for you. The monoidal categorification for you. Well, now you take slices of this, right? Supposing you take your slice C1, right? Then this is a monoidal categorification of some type, AN, right? If you're working in AN, no, it's a monoidal categorification of the cluster algebra associated to AI power, right? Because I'm in I power. And this is, but this is living inside UQ N, right? So it's living inside. So it's living inside a much bigger algebra, but they're isomorphic as cluster algebra. So it's so, and then so this is so we like to call this inflation because you're inflating the growth and degree. And if you think of it in terms of quivers, we're inflating your quiver because we're taking, you know, we're sort of putting i, two i, three i, and so on. And in between, so you have a sort of sync source quiver, and here you make it. Quiver and here you make it monotonic in between, and your sinks and sources are here. So the steady decrease of the contact product becomes on type A. Everything is type A. I mean, proving this for type A. As I said, you use a full machinery of, I mean, these modules aren't. Yeah, I guess you could define this in general, but I don't know if you can prove that they're. Yeah. So yeah. Yeah. So, yeah. And so, so I was when I was talking to Lapid about this, so yeah, so I should say that most of our examples don't fit into the picture of Lapid and Mingez directly because they need regular segments and our segments are never regular. But he has various other constructions and some of them pretty fit. And one of them that they have is called fusing. So they have some way of taking multi-segments and dropping out things that somehow contracting the endpoints of the multi-segments. Endpoints of the multi-seconds. And that seems to be the opposite of inflations, but neither of us know how to do the other things. So there's a lot to be learned from what they do as well. Very interesting stuff that they do. Thank you very much. We are finished for the data session. Um maybe we should say what time tomorrow morning for this. Say we're playing from inquisition.