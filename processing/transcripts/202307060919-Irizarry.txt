I have to acknowledge the people that have brought this problem to me. Dylan is a PhD student, just graduated. Now he's at Stanford doing a postdoc, but he has a assistant professor in Michigan, not biostat. But he'll spend one year in Stanford. And then Fay Chen is the creator, the developer of the technology that we use. The data I'm going to show you. He's also at MIT and the Bro. Okay, so I'm going to start with a quick introduction. I think if you've heard any talk on mine recently, you've seen this. But I want to just get, we want to be all on the same page of what data we're looking at. I want to go back to the original data, what we start working with. So this is an observation that we made, I guess. So there's two that are. I guess there's a two rule, I don't know when it was, like when we first got the data about five years ago now, single-cell data. So, this is a plot of the percent of zeros versus the first PC. That's basically the first PC tells you how many zeros you have in your data. And then, also in color is the total number of UMIs on each profile. The number of UMIs on each row. So, just to be on the same page 100%, we have, we were given a data set that had column, it had genes on the rows and a bunch of cells on the columns. And then each cell, so these were genes and cells. And then each cell had a number. So that's you do you do PCA and that's the first PCA. PCA, and that's the first PC, where each point is a cell. And the color is the sum of the columns, how many kind of total counts you have. Sort of. Not quite, but sort of. Okay. So if you do Tisney or UMAP, now it's UMAP that people do. So this is, I'm sure if you've known Single Cell, you've seen these artistic renditions of the data, where you have like colors and a bunch of little splotches all over the place that are. Little splotches all over the place that I'm not sure how they're interpreted, but this is what you get when you apply that to a data set where there is absolutely no biological anything of interest because it was just they just spiked in RNA into wells. There's no differences, it's all replicates. They're not even real cells. And you see that you have these you discover new cells with You discover new cells with here's one with one cell type, this is real cells, and they're all supposed to be a particular immune cell. And now you're seeing something a little bit more problematic. You have a group up there, and then it's driven by the percent of cereals. Not too surprising given that that's the first PC. All right, so where does this come from? By now, this is, I think. Now this is, I think, kind of solved, but I'll go over it why it is. And I'll go over it just so we're all on the same page of what, at least I think, we should be using as just data we start with our projects. So if we now go back to the data that we got, and I'm going to show you a row of one of these rows, a histogram. And it looks like this. This. Okay, so you have a bunch of zeros, the fraction of zeros is very high, and then you have what appears to be two moles. So if you interpret that, you might think, well, that's a gene. It's not expressed in some cells. It's expressed a little bit in others, and then a bit more in another group of cells. So there's three maybe groups here. And these kinds of plot led a lot of These kinds of plot led a lot of, in the early days of this, statisticians to develop zero inflation models, meaning that they were saying that you can do columns and you see similar things. You say that the generating model is your zero or there's something else. But you need to have a model that includes both things. Okay, so the one thing that The one thing that we realize when you look at this data, that plot isn't the raw data. It's been transformed, and this is the most common transformation. I think it still is. Unfortunately, I hope. I'm hoping we're beyond this, but they take the counts. So you take each one of the original data, you divide by the total sum, you multiply by either a million or a thousand or some number. I don't know how that's chosen, and then you add one. I don't know how that's chosen. And then you add one. To avoid, why do you add one? Because you have a plant to see this. This, I think, was, this came from, I think, bulk RNA-C. This is a pretty okay transformation, bulk RNA-C. It was brought over to single cell, but it turns out to be a big mistake. So here's that data set I showed you earlier. This is the raw data. For now, I forget the transformation. I'm just showing you the original counts, which is what I'm advocating we should be working with. Working with. And it's not zero-inflated, it doesn't have two modes. Where do those come from? Those come from the transformation, which is R. It's not biology, it's R doing. So the first thing we do is we divide by N, and you get the three groups. So because there's a lot of variation in N, so you introduce that. And then the bigger mistake is when you multiply by a thousand or whatever, and then Multiply by a thousand or whatever, and then actually, this already includes a multiplication. Then you add one, you move this a little bit further up by adding the one, and then make all the zeros stay back here. So that separation comes from the transformation. Here's another gene. That gene, I picked that gene because it shows it very clearly, but a typical gene isn't that expressed in single cells. It's more like this. This is a typical gene in a single cell data set. Basically, we have. Basically, we have zeros, ones, some twos, some threes. That's what the typical row here looks like. And then when you do the transformation, you again introduce these fake modes, and then when you add the one and take the log, you separate it out. So this separation is is I think it had l has led this fake separation has led to a lot of you know fake fake uh f false discoveries and False discoveries in single cellar. So, during, when we were doing this back again five years ago, there was a blog post that comes out that finds something similar to what we're finding out saying that, but let me just say that this and the previous one, that looks like a Poisson distribution. Very much so. So, this blog post comes out and says we don't need zero inflation, the post. We don't need serial inflation, the Poisson works. It describes the data. Here's an example of that where we have what I'm doing here is we're taking for each row, we take the sum, and that's the log of that sum is in the x-axis. And then for each row, we take the percent of zeros, and that's on the y-axis, and then the Axis and then that's what each point is. Each point is a gene and then the curves are what the Poisson distribution predicts. If you have a Poisson with this to me, how many zeros do you see? And it's almost perfect. Now this is the example from the completely technical noise experiment with no biological variability. If you have biological variability, then you do need. Variability, then you do need negative binomial, a little bit of extra variance, but you don't need zero inflation. So that's the first part of talk. That's what the data looks like for single cell. These rows, they look like for some distributed. So that's what I have. The methods that I've been developing in the last few years have started off that way. They have counts, they're low-rate counts, so these transformations will sometimes apply for high. We sometimes apply for high Poisson variables, doesn't really work, so we directly attack the Poisson model. So, this is one of the first papers we wrote for in this field was a version of PCA that takes into account the fact that it's a Poisson distribution. So, the model changes to this is the PCA model. So, this is all it does is it says we're going to model the Um you're going to model the the log of the rate as as that instead of the transformed rate. And count as Poisson or negative by null. When you do that, you get rid of a lot of the this is that first plot I showed you. If you take the PC using this method, oh and importantly, the rate is there, right? So if you have the variability introduced from changes in the total ends will be accounted for. So I won't go into the pieces. See that here, the PC1 is no longer correlated. This is after you do it that way. It no longer correlates with the zeros. And then a lot of these fake cells go away, cell types go away. Okay, so these are the papers that describe that. Alright, so now that's the first part of the talk where I'm just trying to advocate for using that, for using. For using for modeling the counts. There's recently a paper came out saying there's another, there is a log transformation that works. Actually, we haven't tried it. It's a paper by Wolfgang Huber and one of his collaborators or students. And if anybody here has ideas of Has Tridal, let me know, because we now have to go back and show it, but it's a much smarter way of using a lot of transform that doesn't, that won't induce that separation. We should have thought of that. We should have thought of that earlier, but now it's another possibility. We can talk about that after the talk if you want. Okay, so now last 10 minutes, a little bit about spatial transcriptomics. So this is what is spatial transcriptomics. We get similar to this with the data that I have from FAIT. This is now pixel. Pixel. And now I get one more thing. For each pixel, I get the location of that pixel. So that's my data now. So now I can take for each one of these vectors, if I can figure out what cell type it is, I can plot it and show the pixel in color, and we get, this is a slice of brain. Color, and you get this is a slice of brain, and you can see the different parts of different cell types in the brain. That's just to give you a sense for what the data is. Okay, so the task that we were asked to help with was finding genes that change expression in location. So, you want a gene that, depending where it is on the spring, it's expressing different. So, back a lot of the papers we were seeing. A lot of the papers we were seeing when this came out were basically just looking for genes that varied with X and Y. So you can take, for example, every one of these genes, every one of these pixels, and you can say fit a low S or some kind of Gaussian process, something, to see if it's moving with X and Y. And if you do that, you get some genes. You get some genes, but what we find is that when you do that, all you end up getting are genes that are cell type specific. So if you look here at the, these are highlighting the gene expression for one of those genes. And you see these, it has a spatial pattern, that's for sure, but it's because it's a target, it's tied, it's a it's a, it must be a A gene that's specific to cell types. So it's basically showing you cell type, not genes that vary with space. It's genes that vary with cell type. Cell type varies with space. Like in the brain, there's layers and stuff. So that was one problem, one challenge. The next one was, so once we see that, then we say, well, all we need to do then is figure out for each one of these what cell type it is. Is and then condition on the cell type and then do the spatial analysis. So you do it for each cell type. So now our task is figuring out which cell type each one of these row columns, which is similar to what they do with single cell, except these are pixels, not cells. So there's another challenge when you have pixels. At least for now, this I think is going to go away soon. So this paper is going to be obsolete pretty soon. But it's still, the problem still persists. But it's still the problem still persists. Vizium, we have used Vizium, definitely has its problem. SlideSeek, which is what this is, has its problem. Merfish doesn't. So what is it? So what are people doing to solve this problem? They were running the standard pipeline from Surat or whatever people use when they don't want to think too much. So they run that procedure, and then each cell, each pixel, gets called a cell type. So here's what you get when you do that. This is now focusing. That's recording in progress. Alright, so each So each, so let's go over what we did here. We ran Sarada and this, and then each one of these columns gets a cell type. I'm picking two of them, Bergman and Perkandi. So it's a subset of these columns. And I'm plotting the call. So there's red and blue. And it kind of follows, you ask the biologists and say that it makes sense that it has that pattern. Sense that it has that panel. That's what those cells do in your brain. However, now we take two marker genes, one for Bergman, one for Kung Gene, or a series of them. We take the average, and then we plot that, and there's a problem. We should be seeing a clump of blue here and a clump of red here. But we have all this mess in the middle, and that's because some of these pixels have both. There's a lot of them actually. A lot of all these things in the middle have the pixel has half Bergman and half Berkman. So that's when we start, that was our first attempt at using statistics to figure this out. So we write down a model. This is the same as before. Same model, Poisson. Put the n in there. Before I divided over here, but now I'm putting it in there. There's a rate. Now I have, again, I have again in the law, I have that it's a sum of the cell type proportion. So this is the number between 0 and 1. And then this is the average expression level for that gene in that cell type. So it's a mixture model. What makes it difficult is that you have the summing happens in the component. The sum is biological, it's happening in the pixel. And so we have to take a lot. And so we have to take a log of a sum, so it's difficult to fit, but you know, you can do it. Dylan has taken a lot of optimization classes, and he can just do this, no problem. I don't get involved in that part. Okay, so now we have, now there's a, to do it like a negative binomial kind of idea, we add some noise here. So it's not just straight plus sign. But then the other problem is that we Is that we, how do we get these guys? Oops. How do we get these guys? How do we get the expression profiles for gene types? Our first thought was, let's take a single cell experiment and train it there. When we do that, the problem is that if you train, this is the cell type that we were given and the prediction if you do the training and testing on the same platform. Platform, but once we go from the single-cell platform to another platform, like for example SlideSee, you start making a lot of mistakes. So this is a data set where we had two platforms, we knew what the cell types were, we were testing out how estimating the muse in one translated to the other, it works great within platform, terrible across platform. I mean, if it's working, I don't know, on its own. Okay, so if it's working, Okay, so if it's working, then it should look like that, right? So, what's the problem is that there's a big batch effect, and I'm not going to be able to explain the details about how we do it, but we have a way to account for the batch effects, the platform effects, really, not batch. And once we do that, we can actually improve it and make it look like it should. So, we fit that model, and it seems to work. That model, and it seems to work. This is now in our model, we have these betas. Instead of a call of your Purkundi or Bergman, we say you have a beta. These are the markers expression for those that have a beta very close to one for perkinji, and these are the ones that have a beta very close to one for Bergman. And you can see the separation you should see. And then over here, we have the betas that are between 0 and 1. That's where they are. So now we have now we have it. We know what set what pick we know each pixel, what proportion of each cell it has. Okay, so now how does this work? First it works at we apply the process, it works well at recovering cell type calls. Someone's telling me to hurry up. So here's a plot where you should. So does this make a difference? So, does this make a difference? Here's a plot where we do find that it does make a difference, it matters. So, these are, these are, Surat calls all these points granule clusters. And they should be in a very strict spatial pattern, but they're not. You see how there's fuzz? There's all these cells kind of not really that sharp. There, when the one over there, we're showing you the beta for granule. So, you go from zero to one in each pixel, and you can see that. One in each pixel, and you can see that it now sharpens it up quite a bit. Alright, last, maybe last slide. It works, the procedure works in SlideSeq, in Visium, and although you don't need it, although you don't need the mixtures, it works in Merfish. And the bottom line is, once we do it this way, we can find genes. Once we know which cell type it is, we can find genes, you condition on cell type, and you then look. You condition on cell type and you then look for genes that move in space, in location. This is an example of a gene like that, where we find a gene that for a given cell type is actually changing expression depending on. Okay, so that's the paper, R D C T and R C T D, sorry, and it is, and now we have another paper where you do. And now we have another paper where you use it does differential expression. If you want to do that, 14 regions, and there's where the target is. Thank you, and thanks to all the collaborators and to the taxpayers for funding this work. Thank you. Okay, while we have a question, well, if I can ask Shitin to come. If I can ask Shijin to come and set up for the next talk, well, I'll take a question from the audience for Rafael. The single cell work, that was all based on 10X remotes. Yes, that was all, well, yes, that was all 10X. So with Smart C2, there's no UMI, so you could have to account for the difference in gene models. So one of those papers that I put up is like the method we used to It's like the method we use to do it for the smart sync. It's like a normalization approach that tries to get it to be like a market. You have smart sync thing? Mark? Maybe you said this. The pixel expression, why do you get such a mix of that? Because they're bigger than a cell. So Visium is like Visium, you can have 10 or 20 cells. True, of course. America is even smaller than a cell. It's less genes. So initially with the special genomics that you apply the surround for our standard clustering, is the main issue that you are doing discrete clustering assignment versus how the screen is? I see. Well, that's, I don't know if it's the main one, but it's one of the issues. Like minus the batch effects, I guess. Like minus the batch effect, I guess. If if you somehow accounted for batch effect and then did probabilistic assignment of cluster effects. No, the batch effect won't affect it because that doesn't require a training set that works right on the... So in that sense, that's an advantage of the clustering as opposed to. Ours isn't clustering. Ours is supervisory. However, one of the papers that we're going to publish soon, or at least put it in my archive soon, is a version that doesn't. Is a version that doesn't require a training set. It works better, actually. You can find because some of these cells are different enough, you can find them. You don't need to. But yeah. So that doesn't. But that was the main issue is that it doesn't take into account the conditions. So you talked about this Poisson multinomial models. I'm wondering with these kind of birdfish or things that maybe very sensitive. Maybe very sensitive for very low counts. Do you think this kind of drawing balls for a bank model starts to break down where maybe you run out of balls to draw? Because if you don't know, you can get any number of counts that you get, but maybe very sensitive past days. You kind of tagged all the transcripts? I don't know. I mean, we're we're we now are looking at merfish and it doesn't uh merfish is in lower commas. Okay, that's not like a sensitivity, but I imagine if you could actually Imagine if you could actually say the the cell has like five genes, let's say, then after you have after you've generated four genes, you have to keep track that's right. So, okay, now I know your diagram, you're asking. That is definitely, we're looking into that as well. So, I think that the