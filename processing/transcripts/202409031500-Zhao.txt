So before I get to what I want to talk about, which is about this elliptic hacking algebra, I want to motivate this talk. So I'm going to start a little bit with our fun hack algebra. So the thing is that this thing shows up a lot in different ways. So I'm just going to check, you guys can read if I write it like that. If I write it like that. So there's one way to think about it: you think of this as pi one of the configuration of endpoints on a punctured plane. And you can draw a little picture here. This is the plane you puncture at, and you put the endpoints on this plane. And so this is also known as the fun grade group. And so there's a bunch of special elements here. For example, I can swap two of this. So let's just call this a swap. And then there's also, you can take one of this and you loop around the puncture. So you also get these windings. And so you take the group algebra over this Laurent polynomial ring. Laurent polynomial ring. And you impose this hacky relation, which is just saying this swamp, if you square it, it satisfies this hacky relation. So in any case, so if you specialize Q to be 1, and this is pretty recognizable, this would just be saying that you're just taking the Laurent polynomial ring. Nominal ring. And then you get this symmetric group on n strings that acts on it, and you just take the semi-direct product. So that's one point of view. The other thing would just be saying that, okay, so instead of this algebra, I got this sub-algebra, which is the spherical sub-algebra. So if you just focus on the spherical part, and this is just saying that this time. Saying that this time you're allowed to just take this polynomial in itself, and you take the invariance. And this thing you recognize that this will just be functions on the symmetric power of whatever you have here. And so now you realize one thing that while I'm presenting this either story one or story two, you only use the fact that You only use the fact that this is what I put here is a curve. I didn't use anything special about C star. And then you think a little bit, that's actually not the full story. So you also use a little bit, which is that you're going to have to use the fact that there's a group structure. So hello. So, how does that help? Well, so once you use the group structure, you come back to story one, and you realize this works for any type for any type. So you can just say that I'm going to start with the root datum. I'm going to say there's two lattices that are paired, and there are two subsets in Seville. Subsets in Seville, and out of this data, you cook up the wild group. And so, what's to replace this gadget would just be saying that you're really taking T, which is you take this lattice you have here, and you tensor the width C star. And this is where the group structure plays a role. But once you've got this thing, the wild group acts here. The wild group X here. And then you take the regular part, you divide it by W, you take the pi 1, you get the first story. And so you also want to talk a little bit about the second story. So what's kind of interesting in the second story is that the loops in the first story here becomes a function when you go to the second story. So in the second story, use the groups to. In the second story, use the group structure. You can get more than just the spherical part. You can get the entire thing. So how exactly does that work? Well, so there are functions on this thing, which in this way we're going to say these are functions on t. So this is a polynomial representation. Of this alpha-Heke algebra. Yeah, I'm going to skip this end because now it works for any type. So this algebra can be realized inside of the following thing. So you take all the polynomials and you allow yourself to have posts. I'm just going to write this lower log to remind me that I'm allowed to do the localization to add posts. And then you do the sum. To add holes. And then you do the summary direct product weight group. And this thing is realized as sub-algebra. And this is a theorem of Ginsburg, Kaprenov, and Vassaro, 97. So they have a complete description of which sub-algebra they say. They said the following thing. So they said that. So if I write everything interpreted right-hand side, I'm going to get the functions times the group element. So every element looks like that. Of course, this function is only a rational function. But you control the pose that you're allowed here. So this thing has to be regular away from the hyperplanes. Hyperplanes. Planes that looks like E alpha minus 1. And so, and along these hyperplanes, you got pole of order 1, pole less than or equal to 1. And the second condition says, so for each of these hyperplanes, now that you know the order of the poles is less than or equal to 1, you can take this coefficient, you calculate. Coefficient, you calculate the residue along this divisor, let's call this d alpha, along the alpha, and you also get a coefficient where you change this w by w as alpha, and you calculate the residue along the same thing. And the condition here being that these two things have to sum up to be zero, and you think a little bit about what that's saying. Little bit about what that's saying. That's saying that this thing acts on this polynomial ring. If you start with something irregular, you plug some elements here to that element. You're going to end with something irregular. And the third one is slightly interesting. So this time I don't want to say too much, but you're going to have to impose some vanishing conditions. You're going to have to impose some vanishing conditions. So, this time you're saying you read each of the coefficients, and this has to vanish along this divisor where e to the alpha is equal to q. So, this is if this alpha, s alpha, so I'm out of space, so let me just say this is if s alpha is less than or equal to w in this. In this bro-hat order. Okay, so once you wrote down this theorem, what you realize is that, okay, so in this way of describing the hackkey, this alpha hacky algebra, so you can replace, so this is a remark, so you can replace this C star by any curve. By any curve C with a group structure. Okay, so you want it to be a curve, you want the dimension to be one just because you want the diagonal to be a divisor and then you want a group structure in order to talk about this thing and in order to talk about what does it mean to take this divisor, either the alpha, either the killed. But once you have that, the entire thing works. So, one example. So one example of a one-dimensional group is an elliptic curve. So as a consequence of this thing, you get the following gadget. This is the elliptic Hacke algebra. So now I'm going to let E to be elliptic curve over the complex numbers. So I'll do exactly what I'm going to do. So, I'll do exactly what we did over here. You take this lattice and you use the group structure of E, and you did this tensor, and you realize this probably have a bunch of elliptic curves. So that's a Belian variety. I was going to write this thing as A. This Abelian variety has the action of this well group. And so we're allowed to take a quotient. I'm going to call this projection pi here. Here. So the definition, this is sort of right after you have this theorem, you get this definition right away. You just say that, okay, so I'm going to push forward functions upstairs and allow myself to have a pose. And I do the summit direct product with the well group. And so this thing is. So, this thing is a sheaf of algebras on this quotient. And I can describe a sub-sheaf using exactly the same conditions that I have over there, where, I forgot to say, so in this star, you're going to have to fix some H-bar inside V, which plays the same role as that Q over there. You're allowed to take this as a free parameter, but I'm just going to do it this way. Way. So this thing is a subshift. And to describe a subshift, I'll just tell you what happens if you plug in any open set. And what you ended up getting is just a linear combination that satisfies well. So this thing is a rational section of OA. Of OA or rational function on OA, and you take this linear combination satisfying conditions 1, 0, 3 that you have in this theorem. And what you ended up getting is that this, this, so this is a subsheaf, and this is a subsheaf of algebras. Um and these are some obvious properties. So oh so the first one is uh pretty much by design. Um this thing um X are functions on A so this is the algebra homophobism. Home of some. So mom of some of shifts of algebra, so let's just say algebra home of some. And the second part says this is actually pretty small. So this thing is a coherent sheaf of algebras. So what that tells you is that it's actually finite rank over the Rank over this quotient. So this is gonna have some consequences. But before that, there's another thing that's obvious. You go back to the definition here, and you realize that I get this type of special element where I just get f identity plus zero times every other w. And that satisfies all the conditions here. So that's saying if I just get the function. If I just get the functions on A, this A is a subalgebra. And so a consequence of this is the saying that if you get a module over this thing, you restrict the sub-algebra, you get a module over that. And so you write down what this means. This says, in particular, there is a forgettable functor from modules over the LLBD. Um from modules over the Libya Hack A algebra just to coherent shifts on A. Um on this thing upstairs. Um so so what does this thing tell us about uh this forgettable functor? Well, that's uh that's that this is telling you, well, this is actually pretty small over functions on A divided by W, therefore it's On A divided by W, therefore, it's also pretty small over this community of algebra itself. So inside of here, if I think of irreducible modules, if I think about simple representations or finite extensions of the simple representations, that's saying that I'm going to look at modules that has a finite Jordan order length. I'm just going to add a thing here to mean this is the full subcontract. The full subcategory consists of modules of finite Jordan-Horder length. So now I forget each action. I'm just going to keep track of what it is as coherent sheaf. It's also going to be a coherent sheaf that has a finite drawdown-hoard length. Those things are also known as coherent sheaves with finite support. So this is finitely supported. Um coherent shapes. Okay. So well we started with elliptic curve. But again, you go through the whole story. Everything works if you put any one-dimensional group here. But we all know elliptic curve is special in many ways. It's a compact. Ways it's a compact and it's a self-dual. So this self-dual thing that I want to explore a little bit here. So what do I mean by self-dual? Well, you can take the Picard group of the ellipse curve, you get this thing itself. So I'm just going to say, I'll write the dual of that abelian variety over there. So let's say all this, all the degree zero line bundles on the abelian variety, and you realize this thing was the ellipse. Realize this thing was the elliptic curve times with the lattice, and therefore the dual will be the same elliptic curve times the dual lattice. And of course, your walk will still act here. And so now you go back to this setup. And so when I was doing this story, I described everything here. I could as well just flip these two lattices and write down the same definition. The same definition, I get the Hackkey algebra, which is the same as the elliptic Hackkey algebra associated to the La Lens dual. So this thing is a shift of algebras on this guy. So that's what's special about the elliptic curve. But what's the consequence of this special property? Well, you go all the way back to the first board here. So, in the C star world, the Hack algebra had two descriptions. You can do these loops, you can do these functions, and we follow the function way, all the way along. But then if you go back to the loop way, so I could as well just put the pi one representations, and that's so in this case, that's telling me. So, I'm sort of deliberately vague here. Vague here. So let me just say this loop description here is suggesting you to consider flat bundles on this dual. And so flat bundles on abelian variety are easy to describe. These are the same as translation invariant. Translation invariant algebraic bundles on this guy. Okay, so right, sorry. There was this thing here, there was this thing here, and now you put these two stories together, it's telling you that That. So previously, we had a special subcategory here, consists of modules that has a finite drawdown hoarder length. It's a bailing subcategory. But you get another bailing subcategory here. You could consider, or you should study the following category. So you look at the modules over the sky, and you look at the modules that are That are flat as vector bundles over that. So let me just kind of write down this thing in a slightly better way. So you have HL modules. So this category of modules over that. And you have the forgettable functor here. It goes to coherent shifts over a check. And so inside of here, you get the subcategory that consists of flat modules. That consists of flat modules. Sorry. So, this is the full subcategory of flat bundles. And you define this to be those modules that you apply for the Guido functor that lens here. Okay? So little remarkable warning, just, I mean, this is sort of an obvious one. I mean this is sort of obvious once you say it, but it might cause some confusion later on along the way. So this thing, this thing is a billing category and a subcategory. Subcategory means a subcategory instead of a call of a check, but not closed under Closed under quotients. So consequently, I'm going to talk about the irreducible objects in this category, but they're not irreducible as modules over this hack algebra. Okay, so now I got these two special subcategories, abilities subcategories of Subcategories of representations of the elliptic Hacke algebra. And the question now is pretty obvious. So this is the sort of the main question of this talk. It just says, okay, so if I look at the coherent sh flat coherent shifts on A check, I look at coherent shifts on A that has a finite support. There is a Fourier Mokai transform, which is equivalent of categories. These two categories are equivalent. Are equivalent. And so there's a category that's fibered over this thing, and there's a category that goes here. So the question would just be, can I lift this free and high functor to get equivalence of categories upstairs? Okay. So that's what I'm gonna do. That's what I'm gonna do for the rest of the talk. So, any questions up to this pointer? Okay. So, so this question is kind of difficult for the reason that, so let's just say that. That, so let's just say the difficulty or whatever. So, this is just, so what you want to do is to put a handle on this elliptic Hack algebra. So, what do I mean by that? Well, if you think about this thing compared to the alpha Hack algebra story at the very beginning, so this thing here has no breed relations. And so, in fact, this is even harder. So, there's not even any special sort of demo-solustic operators. These are the T operators. So, these are the TI elements that I wrote at the very beginning that swaps two of these things. And so, So, what I wrote, there's no bread relation. It's not that you can't find it. There's actually no. And this is a theorem. So, from the point of view of Schubert calculus, so this is the theorem of Brezler and Evans. So, I didn't write down which year was this, but they have a no-go theorem. Have a no-go theorem. And okay, so this conference is about sort of toroidal algebra. So if you think about thinking in quantum group terms, so let me just say from a Shu Wild duality point of view. So you realize this Nogo theorem is kind of suspicious because Felder wrote down Wrote down elliptical R matrix. That satisfies the Young-Baxter equation. So there should be some special element with this breed relations. So what exactly did Felder do that lets you get around the no-go theorem? What he did was that he added, so that's saying you should add this dynamical parameter. These dynamical parameters. So we might have a better talk about this later today. But so let me just say, so from this HAC point of view, so what is the idea of these dynamical parameters? So you go back to Um so you you go back to this uh where was it? Yeah, so this part of this this properties, so there is a polynomial representation, so just functions on on A, so that's a polynomial representation. But that's the same now that I'm really just taking functions on A. So there's nothing really special about this structure shift as a line bundle. So I could, if I want, just replace. So replace by the push forward of any line bundle, just any line bundle. And you want to get a different notion of polynomial representations. And this clearly doesn't work. And for a simple reason, this is like you take a look at what happens here. So while pull back one function is another function. Pullback one function is another function, but if you get a well-grouped pullback section of this line bundle, you get, you not, you don't necessarily get the section of the same line bundle. So the solution, so this is the issue. And then this, so we're, we're gonna, so it depends on how we're doing it with time. So we might come back to that, but here's Here's how you actually get it wrong with this solution to that issue. So you look at a check which puts all the line bundles together. And now you go on this product. And on this thing, this thing, as a PCR lab guy, has a universal line bundle. So this is a. So this also goes under the name of Punquer A line bundle. So I'm going to denote this by P, which is the line bundle on that. And so here is something that happens all the time in representation theory. So the origin is never zero. The origin is always going to be rho. So you're going to have to shift the Row. So you're going to have to shift this thing by rows. So remember that fixed h-bar here, right? So you get h-bar times a row, which is going to be a point here, defines a line bundle there. And you get, for technical reason, there's a negative sign here. You get a row check, which defines a line bundle here. You twist this by that, these two line bundles, and you get this thing that's called L. So this is, if you want a representation series Punker line bundle. Still with Punk Reliant Bundle. And so with this thing, now you can do the following. You can say that, okay, so I'm going to now I can take functions of the product of this two. And so you get two copies of Welcoup acting here. So you could project to the quotient here. Um so push this thing forward and you localize and you get two copies of while group X here. Um and inside of this algebra um and you just mimic what happens over there and you describe a sub-algebra that has dynamical parameters in it. And so this is a similar, let me just say, I'm not gonna write everything down, but let me just say similar to Everything down, but let me just say similar to GKV. But one of the differences is that they so remember that in the GKV definition that I just erased here, there are controls of post controls residual set, but then you impose some vanishing condition. So the vanishing condition here is a little bit tricky. So let me just say the vanishing condition here is in the A direction only. So it doesn't see the A check direction. See the check direction. So, in other words, this algebra for one root datum and the long lens two are not exactly the same, although they look pretty similar. So, and all the rest of this story pretty much goes the same. So, this is a sheaf of algebras on this quotient. And so, the representation series, Tonkery line bundle, is a Concrete line bundle is a representation of this dynamical algebra. And so, yeah. I think I have enough time, but so let me just say, just write down one formula, probably the only formula that I'm going to write down in this talk. So, instead of this algebra, Instead of this algebra, you can find rational sections that we're going to write as T alpha dime, where alpha is a simple root, simple reflection. So these things satisfy spread relations. So, this thing has an explicit formula. So, this is found. So, this formula here I'm going to write down in a second. So, I'm just going to repeat, attribute. This thing is found by Riemanni and Weber. Again, you should work calculus. So here's the formula. So in order to do that, I'm going to say, okay, so I'll write the parameter here as Z, the parameter in this direction as lambda, and then this alpha is going to define a simple reflection. So the one x here I'm going to write this as S alpha. This thing I'm going to write as S alpha per D to remind me that's the OSR check, that reminds me that's acting on the check. That reminds me that's acting on the check direction. So, this thing has a bunch of state factors here. And you get this, and there's there's a second part that alpha and z alpha. And that alpha theta of H minus lambda alpha check, S alpha and S alpha check. Okay, so this thing is combined with flipping the HEC direction. This thing is combined with flipping both directions. All right, so that's great. You find this breed relations in the elliptic world, but there are still interesting things going on. But there are still interesting things going on. So um I mean I use the word strange but interesting is pretty much the same thing. So strange phenomenas. So again in the affine hacky algebra world you square this thing, you got a hacky relation. And now you have the formula here and you can try to square this thing and try to see what happened. And the answer is Happen? And the answer is that you get the identity. So it's kind of saying that this is almost like wow, this is no, not almost, this is exactly saying you get a wild group relation. So they form a wild group. And so in the true world-do well, this is saying that you think about the elliptic R matrices. These are self-inverse. Self-inverse if you interpret it properly. Okay, so you can ask, okay, of course it's a vague question, but how do you explain this well group type of phenomenon? And you can also ask the following question. Okay, so now I added this parameter. Now I get this new algebra, bigger algebra that has actual set of parameters. So what do they do for representation theory? Representation theory. So, what does a check factor do in representation categories? Okay, so finally, I'm gonna get to sort of the solution here. So they um we're gonna see a why one way to explain this thing. One way to explain this thing in that question, and what does that do? That, well, so this is rather, what can you do about it? What can you do about it that helps you to answer that question? Okay. So this is a part. Okay, let me lock this thing. So part three of this talk. This talk. So, this is a joint with Chang Long Zhong. So, we wrote this last year. So, right, so one sentence summary, the answer to that is yes. So, if you're interested in sort of what happens along the way, and here's the details. So, there's a bunch of observations. There's a bunch of observations. So, the first simple observation is just the following. So, you have this product here, right? So, you can project to either one of them. So, I'm going to look at this projection first. So, inside of here, you can remove all these hyperplanes. And inside of here, you can remove all the two sets of hyperplanes that. Two sets of hyperplanes in either of the directions. And this map goes from this open set to that one. And so now you can push forward the hacky algebras. So you can push forward this big algebra. And so now you got a shift of algebras here. And inside here, you have something to start with, which is this localized group algebra. So the observation one is just that there is algebra homophobism from this thing to that. And where if you take And where, if you take the wild group element here, this is really sort of the thing acts on the check. So this goes to these operators that you found. So in this sense, the the reason that this this is this this thing form a wild group is actually it it actually is the wild group, is this the wild group on the on the dual side. Well, go find it on the dual side. And it doesn't stop here because we define, so there's this GKV algebra that we talked about early on. That's a sub-algebra sitting inside of here. And on this side, you can say, like, okay, so this is what happens if I restrict this thing to the regular part and I do the push forward. So I can just Do the push forward so I can just take the entire algebra and push it forward altogether. So when you work with this localized algebra homophobism, it seems that there's a sub-algebra to that. So as a consequence, so you apply this Q push forward of coherent sheaves. So if you start with a module of this. Start with a module of this dynamical algebra, you do the push-forward just using this thing, you ended up getting a module over that. So, push-forward of modules well defined. So, that's observation one. And and observation two is uh uh is kind of as straightforward. So, to now you look at the other projection in the A direction. So, this thing is also special in the sense that you look at what happens here, we have this representation. Happens here, we have this representation series Poincaré line bundle, so which is a polynomial representation of this dynamical guy, the guy with dynamical parameters. But this thing is a line bundle here, which is kind of saying it's a bimodule over the ring of functions. So if I were to write this down, it's gonna be pretty stupid, but there's a content to what I'm writing here. So there is a map here. Um, there is a map here. Um, so this guy is a module over this dynamical algebra, and this guy is a module over this dynamical algebra. This guy without this upper star is a module over this GKV algebra without a dynamical parameter. And so, putting these things together is telling you, well, of course, you need to do some computation. Well, of course, you need to do some computation and take care of lots of details, but there is a kind of a co-product structure, let's say co-product-like structure that goes from this thing to the tensor of that thing. So, there's a kind of a way of writing this precisely, so that's what I'm going to do here. So, you can start with HMO. With H module. And so as a coherent sheaf, you can pull the back using P, and then you twist by this line bundle L. You ended up getting coherent shape on the product. And this kind of thing gives you a module shape. Gives you a module structure over that. Okay. So now you just have all you have- all you got to do is just to compose these two things. Yeah, yeah, so yeah. So um so this is uh so maybe the better way to say is that this is where um where we learned. Where we learned it. But yeah, you're right. Once you have this formula, you go back to Father's Matrix. So all these things are already there. So I'm pretty sure I skipped lots of names here. Okay, so here's the theorem. Here's the theorem. So you have this FM, this Fourier McCartney transform, which is you do the P pullback, and then you twist by this representation theory conquery line bundle. And then you almost push forward, but there's some technical dictator. You have to do a homological shift. You take by the shift you take by the rank of A. Sorry, yes. So this is a functor between a billing categories and it's this sort of free Mokai downstairs that's getting lifted with the following property that in That inside of here, you look at the modules with the finite support. And inside of here, you look at the modules that are flat as coherent shifts. And this is the equivalence of categories. So I'm going to use the rest of the time to sort of illustrate a little bit more about this theorem. So the example is the example. Or example slash applications. So you try to play a little bit what it does to modules. And so in this world, you try to write down the most stupid module there is. So that's the kind of trivial representation. It's a one-dimensional supported at the origin of your ability. Of your abelian variety, and you transform it, and you just get a polynomial representation. And so another type of kind of standard, which is a technical word, modules that you have here is the following. You take a closer point, and then you say that, okay, so. Say that, okay, so functions on A is a sub-algebra in this hack algebra without dynamic or whatever. So you take this skyscraper shift sitting at that point, you induce it up, you get a module over that thing, and you transform this thing over. So you get the following thing. So on the other side. So this point here, point here defines the line so so so so a check is a picar of a a is a picar of a check so this thing defines the line bundle on a check so that's why I'm going to write that line bundle in this way and so you start with that line bundle and you put back with all the possible well group elements and you sum that up so that's what happens on the other side so so why I'm writing down these things so at the quotation mark At the quotation mark. So, what I'm skipping here is that in this both of the quotation marks, there should be proper role shifts. So, app to roll shifts. And you get this type of thing. Okay. So here's a A consequence. So, this is a crawlery to that theorem. So, in this corollary, you're going to assume that this, you're going to, you're going to, I'm going to have to talk about the groups. So, I'm going to assume that you have this algebraic group which is simply connected. And this root datum that we started with is the one that's associated. is the one that's associated to this G here. So early on, we said that you have a billion category here. So you got this A billing category. You can talk about the irreducible objects in this category. So the colour here is a set. The colour here is a say you can classify these things. So there's a one-to-one correspondence with the following data. So these are H-twisted nilpotent G-Higgs bundles on the curve. So you can spell this thing out. So it's an element here, it's a triple. So we're P as a So we're P as a somewhat simple um G bundle on E um and this X is a neopotent section of the adjoint bundle of P twisted by the line bundle associated to this this H bar. Um and uh chi um chi here is is some Pi here is some representation of some finite group. So let me don't get too much details. So it admissible here app of some finite group. That's all the lofty of P of this pair divided by its identity component. So I mean the proof is kind of what you think. I mean, the proof is kind of what you think it should go. So, this is a sort of so many years ago, this is again joined with Chang Long Zhong back in 2015. What we proved back then was that under the same assumption, so you can look at the irreducible modules over on the other side. So, the ERAPs of this side are in one-to-one cross. Of this side are in one-to-one correspondence with this data. Okay, so of course you get the equivalence of a billion categories, so irreducible on both sides, you can say it either way, but why do we insist that this should be thought as irreducible over in this flat module category? So the last part, let's just say this is a kind of a speculations. Well, I'll say a few words about what kind of evidence there is. So the speculation is that this is the irreducible flat representations. So these things come from full support data modules, data ERAPs via Q Difference Remote Hubert. Okay, so So again, many years ago back then, when we proved this thing, and then I talked to Eric and Eric suggested something along these lines, and I didn't really think about it carefully until recently we got that theorem. And I did a standard Australian thing. I asked the graduated students to. I ask the graduate student to run some experiments. So, this is kind of boundary examples. And this is by my student, Julian Tsai. And he did the example in the RAC1 case. And it's the following phase. So you start with this double alpha-Hiki algebra. So there's an alpha-Hiki algebra here. So I'm going to try to be careful about which one it is. Be careful about which one it is. So, this is the one that has functions on T. So, of course, there's going to be another one with functions on T checking inside of it. So, we're also going to use that one as well. So, what you use this one for is that you start with a closed point in T, which is this torus, and that you induce it all the way to a data module. Daha module. There's a TQ, C of Z. And so you try to feed this module through this Riemann-Hilbert and try to see what happens. And how does that work? Well, so this is where the other one plays a role. So you get this community of sub-algebra. You can localize this thing via that. So you allow yourself to have a post. yourself to have a pulse in this direction. So you take this localization, what you ended up getting is just quantum charis. So there's a TQ, there's XY, and then there's a finite well group here, let's just say quantum torus. And then you localize this module, and what you ended up getting is a is It's an explicit Q-difference equation. So let me just write down this connection matrix for this thing. So you gather the R matrix, that's in this variable, didn't write it. So let's say U here, that's in the variable U, and then you modify it with this diagonal matrix. And now you recognize this thing. This is the same. You recognize this thing. This is the same as the QKZ difference equation. And you feed this thing through QK, this Q difference Riemann-Hilbert. So Q Riemann-Hilbert. And what you ended up getting, so this is saying that if Z is generic, you ended up getting X. Generic, you just ended up getting this rank two bundle, that's all of Z, all of Z inverse, where Z is the same point, but now you think that's a point on this elliptic curve. Yeah, which is T divided by Q, put this at. So this is the same as a rank tool flat. Flat H module. And the speculation part here is that this thing should work. So this whole procedure should get the same answer. Should give same answer for any Z. And so a correlated to the theorem. So, a colloquy to this theorem, this equivalence of category part, will be saying that now you look at all the irreducible flat modules. So, because all the irreducible finite modules come from quotients of the induced modules, and so the induced modules, you do free MOKI, you get this thing. So, all irreducible flat modules should be quotients. Irreducible flat modules should be quotient. These are quotients of these things which again come from the induction on the data side. Yeah, I'll just stop here.