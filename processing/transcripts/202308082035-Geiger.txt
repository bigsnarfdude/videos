And this project had a lot of different parts, so I'm not going to tell you about all of them, but I want to still introduce to you the main actors. So of course there are canonical curves and self-dual matrix, as you heard from the title. But there are also in the project we had graph curves, self-tool point configurations, self-dual valuated matrix. There should also be more Kybrus menus on the slide, but they got commented out somehow. They got commented out somehow. And it was a very computational project, so we used a lot of different computer Android software for this. Yeah, so today, because I only have 25 minutes, half an hour, I'm going to focus on these three, but I'm also going to say a little bit about graph proofs and software evaluated metrics. So, okay, let's get started getting to know the Okay, let's get started getting to know the main place. So, I think canonical curves I don't have to introduce to you. You should all, they were already mentioned a couple of times today. And maybe one important thing I should say, today for me, canonical curves will start with genus 3 and upwards, and they will always be non-hyper elliptic, and they will always consider them already embedded in a projective space Pg minus 1. Okay, so we already have a set of coordinates. Coordinates. The canonic levels will be smooth, non-hyperoliptic genuses at least three. Okay, so let's get to the second main actor, which will be self-dual matroids. And even though we heard this week that one should not give a definition of a matrix in a talk, since they're kind of crucial, here is the definition anyway. So I hope you're all familiar with matrix. If not, here is just a very brief introduction. Here is just a very brief introduction. We have an ordered pair with the ground set E and a subset of a power set that satisfies two axioms, so it's not empty. And this kind of second axiom that I'm not going to read to you, but it's called basis exchange axiom. And when you think back to your linear algebra class and you think of basis exchange, this is exactly the same concept, okay? Because matrix come from, the idea comes from the generalization of basis and vector spaces. So as an example, So, as an example, we have a ground set in 1, 2, 3, 4. And if you've never seen a matrix before, the easy way to think about it is you write down a matrix, you label the columns, and you look at the linear dependencies between the columns. And when you have a basis of your vector space, then the set will go into your set B, and the set B is called basis of the matrix. Not every matrix arises this way. The matrix that we get this way are called realizable, but they are all. But there are also matroids that satisfy the axioms, but you cannot write down such a matrix. Okay, what about the self-dual part? So a matrix is, well, technically when you go to matriot theory book, it's called identically self-dual. For bravity, I will just say self-dual. If the set of bases is closed undertaking the component, the set-theoretic component. So if we go to the example from before, we had this basis. The example from before, we had this basis set. This would give us a self-dual matrix because, for any set, any set in here, like 1, 2, the complement 3, 4 is also a basis of the matrix. If I would have an additional basis, like 1, 4 in this set, it's no longer self-dual because 2, 3 is not basis. Okay. That's a brief introduction of the. Now you know the words from the title, self-dual matrix from canonical curves, but how do these Canonical curves, but how do these things get together? For that, we need the third main actor, which are self-dual point configurations. It looks a bit technical, but it's really quite harmless. So we have two endpoints that span a pn minus one. And they're self-dual if I can find non-zero elements lambda such that this matrix equality holds. So I have my points in a projective space. I'm choosing some representatives. I write them. Some representatives and write them in the columns of a matrix. I have this diagonal matrix, I have the transpose, I take matrix product, I get zero, then my points are solvable. For those of you who want a geometric intuition of what this is, so if we're looking at examples, for example, the smallest thing that we are going to look at are four points in P1. Four points in P1, if they're distinct, will always be solvable. Will always be self-dual. So you can always find such a diagonal matrix with numbers of entries. If we go one step higher, we have six points in P2, and they're going to be self-dual if and only if they lie on a conic. Five points can always live on a conic, or they always do. And if the sixth point also lives on the codic, then they're self-dual. And once they've higher eight points in P3, if they're self-dual, they're called KD optimids. Okay. So. So now we know the three main players, but how do they come together? What happens? So let's start with the canonical curve. I have my canonical curve in my PG minus 1, and now I'm intersecting it with the generic hyperplane. So what I will get are two G minus 2 points that live in a PG minus 2. And this is exactly the setting that we need for cell-to-point configurations, and it's actually a concept. And it's actually a consequence from Riemann-Roch theorem that these generic hyperplane sections of canonical curves actually are really self-dual hyperpopulations. Okay. I'm sorry? Is there a canonical choice of the... Not that I mean no of. So the Riemann-Rock theorem will just tell us that if we have... So the hyperplane section gives us a canonical divisor, right? And then if I take half of it, And then, if I take half of it, it will tell me they live on a hyperplane if and only if the other lives on a hyperplane, which is the self-geodic condition, but it does not tell us how to choose the matrix. Not that I know that there is a canonical choice. Okay, so we have our self-dual point configuration. Why is that self-duality condition? So this comes This comes. Let me think if I can explain that quickly, or if I have to think about it for a second. So I have to think about it. I cannot answer. Sorry. But we can talk about it afterwards. Um okay, so we have our uh self-to-point configurations. Self-tool point configurations. And of course, the thing to do is I have my points in projective space, I write them in my matrix, right? I label the columns and look at the linear dependencies. And it turns out that gives me a soft door matrix. Okay? So that's nice. What if I want to go the other direction? So I have my favorite self-dual matrix, and I'm asking, can I realize it as a self-dual point configuration? Can I write down what? Point configurations. Can I write down coordinates in projective space that will satisfy the soft duality conditional? This is the question of realization. And of course, the next step is if I have these coordinates, if I have these points in projective space, I want to pass, see if I can pass the canonical curve through them such that these points are a hyperplane section of the curve. Second part, the question of lifting. And we investigated these two questions. And we investigated these two questions for small ranked matroids. So for rank 2, there is exactly one self-dual matrix. So this is the case of four points in P1. There's not really much to do. For rank 3, again, there's just two self-dual matroids. So the interesting thing starts with rank 4. So for rank 4, up to isomorphism, there are 13 self-dual matroids, and they were all already. And they were all already available in the database called ColiDB that has a nice set of matriates, in particular all the self-dual ones of 1,4. And we computed the dimensions of the realization space and the self-dual realization space, so the space where the realizations of the matrix satisfy the self-duality condition. And we see that in general, this self-dual realization space. Dual realization space is smaller, but in some cases the dimensions agree so that the closures of the two spaces will coincide. So that's the first question. What we see also is like this dimension, it's nearly always positive. So except for this one matrix that's not realizable of a characteristic zero anyway, they're all realizable as self-dual. Realizable as self-dual configurations. Sometimes the space might be smaller, but it's always possible. So, this one we don't care about because it's not realizable anyway. The one that I colored in red, it does not satisfy a certain stability condition that I don't want to get into the details, but we'll not consider this one for the next step of the question, which was like lifting towards canonical things. Sorry, are you saying that if you have a self-dual realizable matribe, and not every realization will be self-dual? Realization will be self-dealing in some sort of both. I will come to that. So, here it works for rank 4 matroids. All of them, right? All of them that are realizable also have a non-empty realization space for self-dual point configurations. Right, it's not all realizable. But it's still smaller than the whole realization. Yeah, in general it will be smaller. Here for the for the gen uh uniform matrix we have a nine-dimensional realization space, but self-tool it's codimension three, so it will be smaller. So it will be smaller. Okay, so the next step is lifting to canonical curves. And there were 11 out of the 13 soft dual matrix that we were interested in, right? And each of them can be obtained from smooth canonical curves of G of 5 by hyperplane section. And so in this table, it lists for 9 of the matroids just the three quadratic forms that will give you a smooth canonical curve. The other two that are not on here. The other two that are not on here are come from canonical curves that are generated by three quadrats and two cubics. So they yeah that's why they're not on the slide. But it's still possible. And it's even comparatively easy here where you can like take your points, you can tweak them by hand and you can generate these canonical colors. So what about the next step? Rank 5 matrix? The first problem with rank 5 The first problem with rank 5 matrix is that there is no database of all rank 5 matrix or 10 elements. So the first thing we had to do was to generate the data of all the self-dual rank 5 matrix. And now up to isomorphism, there are 1042 of those. And again, we did the same thing, we sat down, wanted to compute realization space, software realization space. This time it's like a much larger computation. It's like a much larger computation. So we ran into some problems, and we were not able, for example, to really compute the self-dualization space of all these matroids, of all the realizable matrix. But still for quite a lot of them, because there's saturation and Grobler basis computations involved that just didn't terminate at some point anymore. But one thing, so I don't want to say much about the numbers, just one thing that. I don't want to say much about the numbers, just one thing that is interesting to see here is we have 346 matroids that are not realizable at all of the characteristics zero, but we have 349 matroids that are not realizable by self-dual point configurations. The number is bigger. So there are three matroids that are realizable over characteristics 0, but you cannot write down a self-dual point configuration, even though the matrix itself is self-dual. That was the That was a very interesting thing that we observed here and I would expect this gap to be get even bigger for IRN. We don't know because we have no data for length 6. So this is, of course, this was a lot of data that we computed, so we obviously wanted to make it available. If you can't read it, don't worry. This is just to show. We have a math repo page. This is a mathematical repository page from Repository page from the Max Flank Institute, where, for example, you can go on the page and you can get out all the group databases for the realization space or software realization space or even the templates for how to write a realization of a matrix, a software realization of the matrix. And if you're maybe have used Polymate before, so we also contributed our data to the database Polytechnic. To the database Politb, where we got the Bankfora data also from. And one can search the database on the web, for example, like this, and want to see a Matroid that's soft-during realizable, that's not soft-duringly realizable, but in general realizable. And then it will print out some data, which you can also download and load into your favorite computer article software. So, next step is the lifting problem, right? Problem, right? So give himself to a point configuration in P4, does there exist a canonical curve of genus 6 passing through the points? And the answer is, well, yes, if your points are in generally linear position. That was already proven by Bath nearly a hundred years ago. The problem is just linearly general position in terms of matriarch means it's the uniform matrix. So it's exactly one out of our one thousand and forty two. out of our 1014. That's not very satisfactory. So we looked into the work by Bath and our conjecture is that from this work from Bath we can form an algorithm. So we have this algorithm and our conjecture is that this solves the lifting problem for any soft tool configuration of 10 points in P4 where the idea of the points has this value table. So, in particular, the canonical curve that we'll get from this will just be the intersection of quadrics. There will be no cubic demoers. And well, so of course one thing is we looked at the conjecture at the work from bath and we came up with this algorithm. But we did not only do this, we also did some computational corroboration. So we took all our matroids and checked. And checked, okay, which of them are self-dual duly realizable, for which of those do we actually have point configurations that are self-dual that realize our Matroid. And then we applied the algorithm. And so over the rational numbers, this worked very nicely for all the realizations that we had. It gave us a smooth genus 6 curve. For some of the matrix, we only had realizations of a number field. And there we see, so And there we see, so there is this number 402 that were the ones with the correct battery table, but our algorithm only worked for 217 of them because for the others, the number fields was just too large. So the minimal polynomial had a coefficient with thousands of digits, and it would just not work to compute with this. But in all the cases that the algorithm did terminate, we get a smooth canonical curve. And this is why we believe that our conjecture is actually true. Believe that our conjecture is actually true. Okay, so we learned about the three main players, so I also considered on the other graph curves. Graph curves are kind of when we take a canonical curve, I said they always have to be smooth for us. Graph curves are kind of like a go into the most non-smooth thing that I can get. This is just a union of lines. So I have a union of 2g minus 2 lines. So I have a union of two G minus two lines that intersect in a stable way. So that means each line intersects exactly three other ones. And that means that the dual graph of this curve will be a trivalent graph. It will be three connected and simple. And these graph groups, they're called graph groups because they're uniquely determined by this graph up to projective transformation. And again, if we take a generic hyperplane section, we'll end. Take a generic hyperplane section, you'll end up with a software configuration. And from there, we can get to a nature. And a project I just started a week ago is we want to find a common natural way to look at the graph of the dual graph of the graph group and directly get to the self-dual matrix without actually doing this in between step. Okay, so last but not least, self-dual evaluated matrix. So they were like the last matrix. So, they were like the last main player that I want to say at least a little bit about. And where do they come in from? So, they come in from if I say I have my software point configurations and I degenerate them. So, before I had always a distinct set of points, but of course points can collide, right? They can move closer and closer together, and they're still distinct, but at some point they will collide, and then the correct thing to do is like itself to allow it to return. So just to give you the first idea, we want to look at the baby case, so four points in P1. So if they're distinct, I will get the uniform matrix. So any set of two, any subset of two will be a basis. And now what can happen is, for example, three and four did collide. And we don't really like that because if I form the matrix of this, it will no longer be self-duals, kind of like they. Be self-duals. Kind of like the example that we saw at the very beginning. One and two will still form a basis, but three and four does not, so it doesn't give us a self-dual material. Okay, so two things are the same that I want to be distinct. So what I could do, I could load them up, and now I get a nicer picture that kind of looks more symmetric. And I, of course, it's no longer, I'm no longer in P1, then kind of, okay, this might be the correct thing to think about. And of course, I get some. About. And of course, I get a similar picture if I try to do the symmetric thing, like collide one and two. So, what does this all mean in terms of matroids? So, for the uniform matroid, I can write down so-called matroid polytube. So, each vertex of this polytube connects to a basis, and then there are edges distributed in a certain way. Anyway, so this is an octahedron, it's the genome hypolygon. If now two of my points collide, like three and four, three and four will no longer be a basis, right? So I will have a vertex less in my nature hypolyger, so all I will see is this upper pyramid. And symmetrically, if one and two collide, three and four is j distinct, I only see the lower half. And the analog to this picture would be, I take the octahedron, I remember that I cut it in half, just like remember this subdivision, this matrix subdivision. Remember this subdivision, this matrix subdivision. And for those of you who've seen these types of subdivisions or matrix subdivisions before, you know, this is a regular subdivision, it comes with a height function, and this is what will be, these points will be the valuated matrix. To go to a bit more uh advanced example, we have six points of iconic, like here, and I want to degenerate, so I want to let t go to zero. Generate, so I want to let t go to zero. Okay, so if I do that in the matrix, it's very simple to see what happens. T goes to zero, the first two points will collide, the second two, and the third two, and we'll just end up with three distinct points. In terms of clicker coordinates, so we're passing to the setting of the Crossmanians, I let t go to zero. What happens is only the red entries, the twos, the red twos, they will be the ones that survive. Everything else goes to zero. Okay? Goes to zero. Okay, and each of these entries corresponds, of course, to an index, a fluctuate index, right? So the first one will be 1, 2, 3, but this will go to 0, so it will not be a basis. So 1, 2, 3 will not be a basis of the matrix that I see when I degenerate. So this will give me the coordinates of a matrix that I see for the degeneration. But I can take a different representative of the same point configuration because we're in projection. Same point configuration. Because we're in projective space, I can just scale the columns of my matrix. I can get this matrix, which is maybe a little less pretty at first glance. But I can still let t go to zero. Now I don't want to do this in the matrix. I'm directly going to do it in the flicker coordinates. Again, we see everything that's colored in red will survive. The rest goes to zero. And what we see is that different fliker coordinates will survive. 1, 2, 3, for example, here will stay in basis. Example here will stay a basis of the matroid. Before, it was not. Here it is. So, choosing a different representative gives us kind of a different matrix. And in terms of the matriid subdivision that we saw before, it kind of highlights different cells of the matrix subdivision. So, if you think of here, it either would highlight the upper pyramid, for example, or the lower pyramid. And since I cannot draw the uniform matrix for For rank three on six elements, because it's too high-dimensional. This is the attempt to do it. So each of the black circles would correspond to a full-dimensional cell in the matrix polytube, like the pyramids we had before. And there's an edge if they intersect in a facet, and the interior one is the lower-dimensional intersection of all. And each of these I can associate to a degenerated point configuration. So in the middle, we see. Generated point configuration. So in the middle, we see there are three points, each coming from two, right? So there's one, two, three, four, five, six. This would correspond to the first matrix that we saw when we let t go to zero. Okay, so this would be the matrix cell that's highlighted in this degeneration. The second one would be this one up here. And then choosing different representatives, I'm able to realize all these different types of degenerations in the matrix of division. Okay, so this is all I wanted to say about the self-tool evaluated matroids. I still have a few more minutes, right? We started five minutes. You have six minutes. Perfect. Other questions on this maybe just now? Because now there's going to be a topic switch. Because I still have five more minutes. Because I still have five more minutes, I want to tell you a little bit about some other projects that I've been working on and topics I'm interested in. So recently, more or less recently, a few weeks ago, we've got a paper out in the archive on positive value passive geometry. This is joint work with Nick Early, Malta Panic, Subvan Schultz, and Claudia Yu. And so there's a lot of interesting stuff to say about this, but maybe just one But maybe just one main player here would be, of course, the alpesurfaces with their lines. So here we have a Klebsch cubic with its 27 lines, and we were looking, amongst other things, for example, at the regions that we obtain if we remove the lines from the surface. So here it's colored in a checkerboard pattern, but it's a set of quadrilaterals. I think 120, if I remember correctly. 120 quadrilaterals. 120 quadrilaterals that we would get on a real clutch qubit if we remove the lines. And we were interested in the positive geometry of these surfaces. So positive geometry, you might have already heard of like positive Grusmannian, but it's a bit more general concept. And we applied it to the surfaces and also to the moduli space of the surfaces. And this picture here is supposed to try to capture the To try to capture the boundary complex of the one connected component of the real moduli space of degree 3 Del Paso surfaces. So there are five cubes and ten asociohedra. The associahedra are really hard to spot in this picture, but it's like supposed to depict something four-dimensional. So if you have questions or interested in this, Have questions or interested in this? Come talk to me at some point. Do the dual complexes of real loci have some algebraic geometry interpretation? I don't know, but I also don't know what you mean with dual loci. You said that the left-hand side was the depiction of the dual complex? No, this is supposed to be the boundary complex of a connected component of the real homogeneous space. So there's a stratification of this where the boundary is like consisting of things that are homeomorphic to cubes and associated draft. So do boundary complexes of real loci and algebraic varieties have an algebraic geometry interpretation the way that boundary complexes of complex varieties do? No, no, no, that's a very interesting question. We did not, yes, yeah. So, um So, something that's a bit more in the past, but we still find it interesting. It's a project with Mata Pani suit on tropical colour of wheel by tendons to plane boarding curves. And because it's very curve-related, I thought I need to tell it to this audience. So there is work by Hannah Maifik and Angelica Quino on tropical bitangents of blank vertices. Off-blank void curves. So here is a picture of like 28 real bitangents, and topically there are infinitely many, but they can be grouped together into seven classes. You see them as these like dots and line segments of array here. But they are combinatorily encoded in the dual subdivision. And we used this with Polymake in order to get a tropical count. Yeah, get a tropical count of the number of fuel by tendons. And during this, we developed an extension to Polymeg where you can, for example, so Kerr would be your favorite tropical coordinate. Ask for the, it's called flicker numbers, maybe it's not the best name, it should be like number of real die tangents. So this specific one would have like, you can get any lift, you can get a lift of a quartet curve with any number of real ditangens. Any number of real light tensions, 4, 8, 16, or 28. So for possible numbers. And it can even give you sign representatives for the coordinates of your quartic curve. So it tells you if you have a quartic, if you pick this quartic curve and all the signs of your coefficients over the real Passy series are positive, then you will see exactly four realms changes. Yeah, and I think, so these were just like two of the projects. These were just two of the projects I picked out. If you're interested or interested in other things I'm working on, I'm here at the moment, like everybody else. I'm also interested in Fair Data and Math and Technique Artemis software. I think that was also visible from some of the projects. What does FAIR data mean? Yeah, so this stands for findable, accessible, interoperable, and reusable. So any data you produce in math should be findable for other people, should be interoperable, so you can use it with a computer software. Accessible, of course, so I can get it from somewhere, I can download it, like the matrix that we put on the database. And it should be reusable, like the rank 4 matrix that we put. Like the rank four matrix that we put from took from the database and we reuse it for our project so that people can build relay on the stuff. So the tangents to codex that you mentioned at the end, so they are hyperplane sections in the canonical embedding. Is there anything interesting to say in terms of self-dual metroids about that? Yeah, so this is the case. Yeah, so this is the case of rank two. So we have a quartic curve as a canonical.