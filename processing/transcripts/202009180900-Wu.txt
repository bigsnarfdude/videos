Use the chat for asking questions during the meeting. And at the end of the talk, please also use the chat to indicate that you have a question instead of raising the hand. Okay, thank you. So we will start our first. Will start our first speaker today is Ji Wu from Abe Normal University and he will talk about topological complexity of the work map. G, are you ready? Okay, yeah, sure. Please. Okay, so thank you very much. And I would like to thank Jesus and Dem for inviting me to join this interesting workshop. This interesting workshop. Basically, I want to share our ideas on topological complexity of slightly different ideas on this topic. And I need to mention that this is a joint work with Enicito Marillo. So, I think a project started three years ago. And now the article already, okay, let me see. Let me see. Article it's it's a it's ready. Okay. So let me oh here. Okay. So the the talk of paper now is online ready. Okay. So I think a main point for my talk is to share the slightly different ideas views on the topological complexity. So that's I will start to to review a little bit on It on Barbara's description, right? So just we just look at the backwards on the fundamental questions and we'll check a progressive approach, how to read what you see of a map. Okay, so let me make a slightly different approach. I will see examples for motivations why we want to introduce them. Okay, so let's look at the fabric description. Okay, so this is our Description okay, so this is I quote from the papers paper. I think that's an amazing description. Why you want to look at this TC on the on this you know logatics, right? So basically there will be some system called the configuration space for i i in the terminology, it's not a configuration space of space in our sense. Space of graphical space in our sense. But that's basically like a system that, like a robot, the controlling robot. Now, the main point, I guess, from the practical side that for controlling theory, many problems actually already can be solved by knowing contribution space of system. So that's why the problem is proposed the questions like for the Body topological introduce topological complicity to study like this low-batter motion planning. Okay, so this will be, I think everybody in the workshop knows this already. And here's the fabric definition. So I think it's also far. Well, I should give a little remark that in Father's paper in the beginning seems to start counting from one. This is a category, the counting. The category, the counting, counting. Sometimes in the beginning, I will be a bit confused. Like James, I think for LS category, counting starts from one, and then there's a counting from zero. And in Faber's talk, it's counting starts from zero. So everything now consistent. Now, okay, so now let's look at a bit. Then I think after we finish some substance. Some substance on our preprint where we look to actually community with people, and we found that Prevasic already also look at how to introduce topological complexity for a map. So assume now you're studying with a map from a space from X to Y, and why try to look at the topological complexity on On this mapping. So, I think the Pavesikov over talk, so he may explain more for details on what he's doing on this topic. So, here I just display a little bit, right? So, I think in his talk and his papers, there were detailed discussions. There will be a lot of interesting results. Caption, there will be a lot of interesting results in his papers. I really enjoyed that. So the main game is to look at the free passes over space C, so you can look at the graph over here. So there's some point here and a mapping over here. Because F is a mapping, so look at the graph, then look at the lifting. So from such a Lee, I think he got a very nice and natural notion. Natural notion for TC of app, for case use TCF. Okay, so now I try to explain a little bit our approach. Since our approach is different from the probabilistic approach, so that's why I need to explain our motivations while looking. So backwards to look at the lobatics because this topic we have a topological lobatics. A topic: we have a topological robotics, so I started to read this, try to read what's going on in the practice. So I picked the books in the topic. So here's the, I think the description, the first chapter, they start to describe looped arms. So we don't want to look at, I don't want to look at the more complex systems first. So I try to First, so I try to understand a simple one. So, I think in their first chapter was discussing this simple case. So, how looped arms working. Okay, well, the lobby arm, they are consistent with several things, like links, joints, right? Okay, so then there will be end, there's a factor, and a A factor, and a factor, like a school driver or something. They are working on some space. Okay, here's a picture of the loaded arms. So the typical picture I download from website. So you are allowed to take some notifications. So that's the jobs working. And there's some place we may be able to move. Okay, so I think that's like pictures. Well, I think some links they. Well, I think some links they can make longer and smaller, and possibly you allow. Okay, then, of course, in the end point, okay, so there's an end effector. So the system, there will be different parameters on these links, joints, will determine a point. This point will be how this screw driver is working on. So then the target one will be. The target one we can call like a workspace. So that's like that. Okay, so let's do a little bit mathematically to try to do that. So that means that for logarithm, actually they give a continuous map. It's supposed to be a continuous map. So the domain will be something what they call configuration space. So that's just some, and in the case, And in the case, if you get some low, okay, so if you just moving around the like joint, the moving is possible given by circles, right? So you've got to change your parameters. So in the joints, you move. So you may have several joints, so you get several circles. And of course the uh the the there there are some part links that make a longer, smaller, so so so that will be some additional parameter. Some additional parameter on this one. But in some case, maybe you may not be able to take a full circle. So, general situation, possibly you only get a subspace. Okay, so that's the domain. Actually, if you think a bit more, so if you take well, in some case, okay, so in some case, this may not be moving around by circle, you could be in three-dimensional space. Be in three-dimensional space if you moving around in the joint for the joints. It could be in part in these S2, two spheres, right? It's possible to move around two spheres. So in this case, you may change S1 to be S2. And it could be possible you have several joints so that determining some domain here. And then what And then will be there will be some some place maybe not able to move along. So you in general speaking should be like a subspace. Okay, so that's like and then the screwdriver. Okay, so the end factor support be working on some plates. So in this if to I read this, I search back actually there are some I searched back actually there some amazing study actually in good stage. So I found the Got the paper actually he wrote a paper called topology and the robot atoms in 90 published in 1988. Okay, so he introduced topology geometry geometry method to do that. So there are some people discussed this discussion a little bit. Okay. Lupert arm. Okay, so now let's like the description for Lupert arms. Also, here's the simple example we try to look at the difference. So remember now we try to look at the mapping. So I assume that there's two joints they are moving along. Okay, so lens supposed to be fixed. So first the lens is longer and the second length. Longer and the second length of arm is smaller. Then you get a rotation. Okay, so fix this one. So allow this guy to rotate by moving along. And assume like a second one is moving along. So what happens? If you put two arms on the plane, so this is just supposed to be moving around on the plane and not a small guy is moving around the plane. guys moving around plan so you create a worker uh work uh place okay so what we got workplace we will get the annulus right because you check everything is working on a plane so you get the actual annulus now let's assume like you you do do another way so assume like this guy the smaller one is moving around on this three dimension so so it's transversal to to to the plane okay so you're moving this way Plane. Okay, so you're moving this way. And then another arm is moving along the circle. So you essentially create your workplace is a polar. So in this case, the configuration is the same, just like S1 times S1, because we only have two parameters to change this one. But the workplace is quite different, right? I think this example we try to say that. I think this example we try to see that. So that means the mapping, the mapping app, it goes to some two different workplace. Okay, so now another example which I to say again. So this is a look at the robot arm. Let's look at another example. So let's assume like we have two or more robots working together. Working together, okay. So they try to finish some collaborative tasks. Okay, so you're requiring like collaborations among them. So that means that assume like this N robot, so it's running in certain space. Okay, so that's like your place. You try to work, well basically the place you are running, okay, so that's the robots. Okay, so that's the robot working. So in this model, then of course we see that the domain can be modeled by a usual contribution space of X. Now the, but because if we look at the task, supposed to be they have a supposed to be certain task working on the target work place. Okay, so then we actually look at a work map, continuous map to show because if only To so because from the collaboration, then you create something. Okay. And assume like we want to consider the motion plan on the target space. Okay, so now the question could be what that. So suppose that we look at this motion planning. Okay, so we get the two points. So we assume f from x to y is continuous and y is a workplace. So this f supposed. The workplace, so this F supposed to be subjective. Now you give two points A and B in the workplace. Okay, so now we want to find some paths. But the things that configuration, we only can make algorithms on the configuration space. That means you change some angles or changing lengths or changing some parameters in the system. So the way to find So the way to find some path is actually it's defined as lambda is a path in X instead of this one. But the purpose of this one, the purpose is supposed to be create a path under F from A to B. So that's the background motivations which are to see how to make algorithms. To make algorithms for the motion planning. So, mathematically, then this will be: you look at the mapping. So, I suppose that will say I map, so from X to Y, map to F to Y, so because this is sending some A to B, so I can catch it. Okay, so it's subjective, so every point catching. But what we can define here, the algorithm U, it is supposed to be open subset in X. To be open subset in X times X. So the algorithm will be create some lifting to the free path space on X. So because this is in the systems, the configuration space of the system. So that we can do the algorithm. But what we want is make the target to make, so under F, okay, so this is the pass under F again. Pass under F again and they will catch catching the starting flow on the underf will catch A and B. So that's, I think, the motion frame we try to look at. So that gives our definition for the topological complexity of work maps. So for work maps. Okay, so let's now this Okay, so let's now do this. Let's do mathematically. So, first of all, actually, I proposed the question and I mentioned that Anisuda was visiting Singapore when I was at the, say, we worked together for fun. So, so the well, the question is this was this question exactly the proposing previous slide. So, what we need, you see, we can introduce topological complexity for this work map. Complexity for this work map. So, just as usual, so you take list the integers of these like open covers for x times x, right? So, for each UI, you have a lifting, lifting to the free path space of x, okay, so the cross-section to the free path space of x, and so that this diagram commutes. Okay, so that's the load required there. there uh well uh i should mention that uh the this uh this notion for the naive uh topological complexity was suggested by uh wimber okay uh i think through our communications for discussing these uh topics okay now uh this will be uh seems a natural uh natural notion of the topological complexity on only for maps but there are some For maps, but there is some bad point for this naive, or if you like it, called strict topological complexity of the map you have. The bad point is that this naive or strict topological complexity is not homometer being built. So from practical question, as I explained, like a loop at arms, seems naturally, they want to be very ego. They don't want to be something like funny to be homotopy. To be homotopy. Okay, so, but if you want to make that diagram to be strictly equal, then it becomes not a homotopy. Now, for mathematically, we introduce another notion. Okay, so we just change this equality, change it to be up to hometown. So in this case, we call this formally called this one to be topological complexity, then Complexity than the previous one strictly equal makes to be a strict topological complexity or naive topological complexity. Okay, so then we have another natural way to introduce a topological complexity of mapping, just changing this equality to be up only up to home top. Okay, so the lifting allow you to only up to home top. Okay, so now of course, before. Okay, so now of course before I present mathematics, I would just say back we still concern. I think Wilberg is also concerned what happens for the because original questions about strict topological complexity or naive topological complexity, right? That seems impractical has some good meanings. So well, but the capital T C, as I said, will be good. This is quite a good. I said, it will be good. This is quite good. This is a comfortable beer. Now, at least, at least, okay, so this is something like coming from practical. At least we have a lower bound. So we can catch a lower bound. Now, if a mapping is not so bad, it's a vibration. That's okay. They are equal. So people, well, you can imagine if a vibration, then the up to home to people enough to catch it. So that's exactly the good point of vibration. Really good point of vibration case. Now, of course, if it's, as I said, if it's not vibration, that will be another problem. It will be more complicated. Now, also, we have at least an upper bound. Okay, so for that general case, so maybe it's not so easy to see the strict topological complexity specifically, at least you have a lower bound, upper bound. A lower bound, upper bound, and in some cases, say into this mapping, there's a cross-section, there's a section, okay, from y backwards to S, then the stricter topological complexity can be computed. Just use the usual topological complexity on the space of Y, which will be enough. Okay, so now, so here's a bit of a remark: is that so far, if we if So far, if you strongly concern the strict topological complexity, these two guys are home-toping billions. So you get some lower bound and upper bound that we can see. Now, if it's a vibration, everything works perfectly. Now, if it's not vibration, well, there's something tricky happen. Okay, these are different topics here. Now, also there. So we, uh, G, so I mute you for error. By error. Oh, okay, you are here. Okay. It's okay now. Is that okay? Good. Okay. So should I continue? Okay, so shall I continue? Yes, yes. Sorry. Sorry. Okay. Jean-Paul, can you mute, please? Okay. Okay, sorry. Okay. So here's another remark is that if you capital TCF and little TCF, there will be some big, the gap could be extremely large. Okay. So there you get some low boundaries, well, our low bound could be zero. Be zero. So, this example tells that the lower bound could be zero, but the little TC could be very high, very high. So, you see, you just take a look at the X embedding into the comb. So, it's into each comb. So, since the comb is contractible, you can easily compute that the capital Tc of this mapping will be zero, but the little Be zero, but the little TC will be just the same as the topological complexity of any space X. So it could be any large number you want. Okay, so that's the remark. Okay, so now I think I'll just display a little more on the concentration more about this capital TCF because we are very happy for this because it is a home to be in V. Okay, so that's the In the end. Okay, so let's be so there back to review a little bit. I guess everybody in the workshop already knows. So I just review a little bit. So there's a category. So LS category of space is covered by least number of M plus 1 contractible covers, contractible in X. Now also for a map, you have a category of map. So you speak of a cover map, so that means that your domain, you got cover. That your domain covered by m plus one open sets, that average sector, each open set is homotopically trivial, right? It's not homotopy, okay. So then take the least number, and also there's a sectional category of a mapping P, right? So this is a taken least number. You have a P can be covered by M plus one open set, and then there's a local. open sets and it has a local computer B sectional P. Now what we introduce a little bit is the so-called F sectional category. So we consider this as a map go down from E to B then you look at another map from B to X okay so you under some mapping and then the this local cross-section where you do not have A local cross-section where you do not allow, like you want to go back here, but under F, they are homed. Okay, under this mapping, they are homed to be then with what we call the like F category. And in this case, then you can naturally introduce F sectional category of a map. Okay, essentially, you look at the two mappings. So one is the like a P is from E to B, like the S bundles you have to do, and then from Those you want to do, and then from the base space, you want to map to another, let's say, some works space to X. Okay, so you want, then you want to look back what's going on for sectional category. Okay, so that's the notion what we call F sectional category. Okay, now it will be easy to see that F sectional category is actually hometop invariant. So if you change the F to be up to hometop, P up to hometop, then they have the same. Be then saying. And then you then make F to be identity, go backwards to the usual sectional category. So let's just make a slight generalization of the usual one. And now then, of course, it can mathematically can work because paper now is already ready. So interesting can read the paper for details. So now we can produce. And we can produce many inequalities, right? So you assume like there's a map and then there's another map. So you look at the app cache sectional category of P. Okay, so then it will be controlled by the sectional category of P and the category of F. Okay, now if you if the E is contractible, then The E is contractible, then it will be abstractional category of P will be same as category of F. So now particularly if you look at the F sectional category of P will be can be bounded by the cataly and catal X, right? Okay, so now if you if you one of guys Now, if one of the guys say x is a coh space, then it's bounded by one. So that will be for coh space, we know the cat is one, so we can get the upper bound that. Okay, now another thing will be if you take the, if you look at the property, so if you take F from B to B prime, okay, so assume like there's a vibration from E prime. Vibration from E prime to B. Now, E to B is a pullback. So, if you assume like E prime is contractable, then you can get equality. Now, there will be a bit more equalities you can create it. So, if you P is a principal vibration, okay, so if you if F is a go to a mapping to K pi M space, okay. Space. I don't know in practice what it means the work space is a k pi m space. Mathematically, it should be okay, no problem. We can map to k pi m space. So it's a natural natural way to look at k pi m. And in this case, then we can compute it that section category of p is the same as the category. As the cat F, okay, so cat F. Okay, so now, well, as usual, when you look at the T C, then the new potential index, the language will create a lower bound. So that's that's a that's this is also true for sectional category. Category. So there's an inequality, right? This part is from the algebra, so you should look at the new potency. Now this way, what we look at the speed of actually we can look at like this hop to be joint of like mapping like a E plan Y. From y to p, okay, composition to y, okay. So, let me that just means like you take the pullback and then take a hometop pullback and then take a home to be push out. Okay, so then you can create it related construction. So, this theorem will say that will be a theorem that this is how to read this absectional category will be become to be a lead. Category will be become to be a least number, you get a lifting to homotopy joint of that. So that's a lifting of F to the home to be joined. So for the F sectional category, now we use the F sectional category. We tend to define the homotopy version of topological complicity, right? That's in the beginning where we already introduced topological complicity. complexity of the work map. Okay, so capital T C, capital T C, as I as I said, this is defined up to homotopy. Okay, so this is a homotopy version of the couple of complexity. Then we can use the sectional category to define. Okay, so you take the projection here, then you have a map, map, f time. map map f times f from x times x to y times y so there's a mapping okay so there's a mapping then we can define the uh there's a notion of we introduce for f sectional category so which can be exactly the exactly well actually prove it is the same as the topological complexity of f what we introduced okay now uh none then uh use the result on the Result on the F-sectional category, so then we can create the inequalities for the capital Tc of F. Okay, so there's a lower bound and the upper bound. Okay, this is lower bound, cat F will lower bound, upper bound, of course you get the Tc X will be this one or cat F times F. Okay, and now the As usual, expectation, so this is capital topological complexity of F is trivial, is zero, zero, if and only if F is not complex. Also, like the you can use the cohomology to look at, right? So, okay, so new potency index of the Neopotency index of these kernels will be give the lower bound of GCF. So that means there's some way at least help to compute what is GCF is. You can use algebraic. So here we display a bit of examples on this one. So you take a sphere, so if M is smaller than M, then what we'll be M smaller than m, then will be trivial because this is a non-computer. Then the for for the same degree, then you can compute the device. Okay, so it's zero or for zero. If F is essential, then turns out the TCF will stay the same, either one or two. Okay, depends on M is hot or even. And therefore for the For the map, from the well, we can just use a degree of these maps. Okay, so if we have a map from the complex projective space to another, okay, I one, then degree zero, this will be Tc will be zero, degrees positive, then you get two F. Okay, now also, of course, if a target is. Also, of course, if the targeted space is a coach space, then capital GCF will be at most two. So then if you well, there are some simple example actually where we just compute the GC. We are happy for capital GC. So we can compute the first case is one and the second case is remember there's a first one we have an example for this. So I maybe go back to the slide. I mean, if you go back to the slides here, so that's the example, right? If you look at this first example, second case. So it's the answer for at least for homotopy version, the answer is different. Okay. So first one, the capital T C F is one. Second case, T C F is two. Okay, so now well we can look at Locate the rational case, or rational case since the situation will be better, okay, in some sense. So you can compute the then you can use the Sullivan model to control it. So TCP, at least theoretically, you can use Solomon model. You just look at the least number of M so that this sign will vector through the This module like KM. KM means the kernel of this and the mapping of here. Now, particularly if let's see, so if it's formal, then the well if the mapping, this is a rational case, right? If it is formal, then Formal, then the chains, the co-chain will be controlled by the cohomology. So, in this case, you will be able to compute the topological complexity of the rationalization of the map, which is purely you can compute in LGBT. Okay, I think. Okay, I think the let's the main story we are making, and therefore the I think that's that seems what what all I try to explain. Okay, so you're in the question, we'll be happy to answer. Okay, so thank you. Okay. So thank you very much. Yeah. Oh. Okay. I cannot seem to I cannot hear you. Is it? Yeah, yeah, we're here. Okay, now it works. Now it works. Lucille, you're muted. Sorry, sorry, sorry. Okay, so thank you very much, G. And is there any question? Well, I think I have one. Okay, Jesse was go. It's not really very the the same. The same setting as in Michael's talk yesterday, but it's somehow also related because, well, you know, you have an effect, a task that you want to solve and then some effect that you really want to have in your robot. And somehow, more or less, that's kind of the same idea. Well, it's similar idea to the talk. Idea to the talk of Michael yesterday. I wonder if there is some subtle connection between the two points. Yes, that's also I would like to know the point here. What should be similar ideas, but as I explained, our motivation is not to look at the loop of the arm. So we try to follow what the structures of this loop of the arm supposed to be. And of course, you get And of course, you get if you can get multi-lobarts, then you get to say, well, a lot of people like it seems in robotics, they study the multi-lobuts, they have some one cooperative test or more, or more tests. So if that system, well, this is just a way to propose some ideas of that. So I aim to try to look. that so I aim to try to look at back back to to to the to the ideas here so so I looked at this model model in in this this part okay so that's like this is something like we're working on here okay so this is just a system here then that's the place to try to work so X can be where whatever space but the either say uh as we say if you're moldy As we say, if you're multi-lubuts, then you get a configuration space here, but there are some tasks that maybe they will be distributed by lobuts, but they finish something over here. Then I put this as a space. So the question actually, the idea we try to say, okay, so here's a mapping. So now you give two points to me. So one point A in Y and another point B in Y. Okay, so why you have two points? B in Y. Okay, so Y you have two points. Now we try to make a path from A to B in the space Y. But I assume that what we can only do is do this contribution system of the numbers. So we can only do the parameters in the system, not change the parameter in the working place. So the algorithm is supposed to be working on X. So that's why I will put this. Okay, so let's make. say okay so let's make make a lifting lifting on the open set of the x times x to the path space of x because this part in of on x is what we can control how how to how how how to make it now the the the part uh on y is just something like you know it's a it's Please, instead of sister, the left hand. But it would be nice to look at what the connections with Papers, what he proposed yesterday. Some place, somehow, if there is a similarity. Also, I saw that. Okay. Peter has a comment. Yes, Peter. Peter, do you have a comment? Yeah, just a second. Yeah, just a second. Hopefully, you can hear me and even see me, right? Let me see this. Yeah. Okay, so I have actually now two comments. One of them is related to this topological complexity of a map, and then maybe a second one in relation to yesterday's talk by Michael. So, first, I want to I want to explain that there are several, if you want, ways to define, describe topological complexity of a map, and they essentially depend on what you want to achieve. If you think, so G mentioned some papers by Gottlieb and other people about kinematic maps. And the fact, the fact of nature, if you want, is that Of nature, if you want, is that kinematic maps are smooth maps most of the time, but they have almost always singularities, so they are not vibrations, and also they almost never have sections. They have typically local sections, but they don't have what's called inner kinematic map. So, I mean, if you want to be close to applications, then you need to work. Then you need to work with maps which are not vibrations, which have singularities and which have not sections. And so that's the reason why I consider the definition that we had. And actually, it wasn't really my idea. It was proposed by Sasha Tranishinko a couple of years before. So in a way, you study either You study either robotics in this context or you study homotopy theory. And I had some results saying, well, I mean, if I, because the idea essentially is, you know, if you if you want to navigate in some space, the great idea, the great Maples idea is that complexity of it is it doesn't matter if you if you navigate in a room with two chairs. In a room with two chairs or on a wedge of two circles is exactly the same. But unfortunately, it's not like that when you get with some map, some kinematic map, then singularities change everything. And now the main problem here is whenever you try to estimate something and you estimate with uh so you estimate something which is homotopy invariant with things with invariance of homotopy. Invariance of homotopy kind, then you are not estimating this map, but rather its vibrational substitute. So, I mean, and then you actually get some estimates, but you're estimating something different. So, that was my comment on the first part. Now, just on a brief comment on the second part, what is the relation with Michael's talk yesterday? So, what he or they are calling parametra. They are calling parametrized topological complexity. That's exactly the, I mean, what would be called fibervized topological complexity by, I don't know, Johan James and people from that school. Because it's exactly that. You take the fibervised path space, map it to the fibervised product and take the Schwarz genus, if you want, or a sectional category. A sectional category. But if you think it's not similar, I would rather say it's complementary to both topological complexity in the sense of anisetro and G and in my sense because what Michael is doing, he's solving a problem when the initial and the final point are in the same fiber. They are never in different fibers. While the case when the initial and final point in the same The initial and final point are in the same fiber, that just means that you don't move, you stay where you are. I mean, the interesting case is when your initial and final point are in different fibers, then you have something to do. So I would say it's rather, I mean, complementary than similar. Okay, so that was my comment. Okay, thank you very much. See this very explicitly. If you have a fibration with a section, then the topological complexity of that map will just be the topological complexity of the base. And the parameterized topological complexity, or whatever you prefer to call it, can be significantly larger, as Michael showed yesterday. But it's actually closer to the topological complexity of the fiber. More related. It's significantly bigger than both. Yeah, sure. There, any further comment questions? Okay, so thanks again, G. And the next talk is at 10. Yeah, thank you. Okay, thank you. Thank you, Yi. This and then I think you're doing well.