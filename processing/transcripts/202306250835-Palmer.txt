That's sort of off. Okay, so uh the first thing we'll start off with is a simple definition here. Uh we'll be working with graphs, so let G be a graph, and we say that it's f3 if it doesn't contain f as a subgraph. Okay, I'll just be using f3 constant in the route, this is just a shorthand way of describing it. What, sort of, like subgraphs? So f could be any fixed subgraph. It could be a triangle, a complete graph, a path, a cycle, anything like that. And you just say, oh, my graph. Cycle, anything like that, and you just say, oh, my graph doesn't have a cycle of length seven, then it's C7 free, is what we'd state there. My question was, is it induced the graph? Ah, good. That's an important question. Not necessarily induced. Yeah, that's very, very important. All these questions can be asked for induced version, but that will not be my focus. Yeah, that's worth adding to the slide. That's an important distinction. So not necessarily induced subcompresses. Okay, and then the classic sort of Terang question is exactly this: that suppose I forbid a particular That suppose I forbid a particular subgraph, F, say a triangle, and then I ask how many edges can I have in that graph and avoid having a triangle. The first theorem of extremal graph theory is Mantel's theorem that says how many edges you can't have. I included a parameter n there. You better have n vertices, or the number of vertices should be some fixed number. It depends on n. Otherwise, the answer is infinity, right? Just make a long infinite path, as we heard quite a bit about yesterday. And here's the first answer to this question. It's Toran's theorem. I hope that's familiar. Everyone's at least seen it in a class at one point. You can think about it. And this says that if you have a complete graph on k vertices, so the k vertex clique, that I denote by k sub k, if you don't have that in your graph, then the maximum number of edges you can have is this quantity here. Well, approximately. That's the upper bound. I'll draw for you the lower bound, because it'll be relevant, that matches that quantity, and I'll explain why I've written it in precisely this form. This is the form I prefer. In precisely this form. This is the form I prefer, but there's sort of a reason to write it this way. Okay? So, no clique, we want to have a graph with a lot of edges and n vertices that has approximately that many edges to show that this upper bound is sharp. And this is given by, of course, the Terrain graph. In this specific case, it's the Terrain graph on n vertices and k minus 1 classes, and it looks as follows. I split the vertex setup into I set up into blobs of independent sets, so there's no edges inside of these things. And I draw all edges between pairs of classes. And this should be k minus one of these classes. And each has size approximately A over K minus one. One of the reasons this is, I said approximate, is there are divisibility issues whether you can make all the class sizes equal. But a big takeaway from today will be that we'll Today will be that we'll almost always assume that things work nicely, so there will come on a bunch of new screens. Okay? This graph here does not have a clique on k vertices. It's a wonderful pigeonhole argument. If there were a clique on k vertices, there'd be two in one of the k minus one classes. But there's no edge inside the class. So there's no kids. How many edges are in this graph here? Well, we have Well, we have k minus 1 choose 2 pairs of classes where the edges exist between. So k minus 1 choose 2. And between every pair of classes, we have approximately n over k minus 1 squared. n over k minus 1 squared. And if you work this out, you get this lovely, I'll just actually write it here. What happens? You get your n squared, you get your over 2. You get your over 2. This is k minus 1 times k minus 2. k minus 1 cancels with k minus 1. You're left with a k minus 2 over k minus 1, which if you do a little arithmetic, you can write in this format instead. 1 over k minus. Okay. So there's our lower bound that hits the sky here. This was subject to divisibility working. If it doesn't work, you get something a little different, but approximately this. So, the reason I like to put it in this format, there's two reasons. First, I like to pull, instead of having everything be a coefficient of n squared, I like to write n squared over 2, because n squared over 2 is approximately the total number of edges you can have in an n-vertite scrap. It's technically n choose 2, but that's close to n squared over 2. And this quantity out front here tells you what proportion of the total possible number of edges are allowed in the case that you don't have a clique on k vertices. And it's 1 minus somethingness. So, as k gets larger, you can get close. So, as k gets larger, you can get closer and closer and closer to 100% of the edges. All right. And that's something we're going to get to in a moment, but we're going to think about a lot here is what percentage of the total possible edges are present. And so I'm going to change the format here, please. All right, a far-reaching generalization of Turin's theorem is what I like to call the fundamental theorem of extremal graph theory that says, well, this upper bound basically works for any graph F, where you replace. Where you replace k being the number of vertices of the clique with k being the chromatic number of the graph in question. So if you have a graph F and you compute its chromatic number, color its vertices with as few colors as possible, that means you use its chromatic number. And the most edges you can have is this quantity here, where you basically get the same leading term as if you simply forbid a complete graph on k-vertices. There is an error term here, but this is small compared to the leading term here. And you can see that this is truly a generalization of Turin's theorem because a clique on k vertices does have chromatic number k. So it gives that upper bound plus error term. I won't focus on it a lot today, but there is one little bonus here that comes out of this, or maybe it's not a bonus, but if chromatic number is 2, if you have a bipartite graph, this doesn't say much, right? That leading coefficient, 1 over k minus 1, becomes 1, and the whole coefficient becomes 0. And so you just have an upper bound of little O of n. And so you just have an upper bound of little o of n squared. And that's a very active area of research. That's not something I'm really going to talk about today. So this sort of doesn't give us much for a bipartite graph. And that sort of makes sense, too. If you look at Turan's graph, Turan theorem, the clique on two vertices is a clique. And if you forbid a clique on two vertices, then you have, well, the zero edges. How many edges do you have in a graph with no edges? And this does give the right answer, but it's not interesting. Okay, so now I want to generalize. Now, I want to generalize a little bit, and we're going to talk about R graphs instead. We heard a little bit about R graphs yesterday. These are just, well, let me just jump ahead here: R uniform hypergraphs. Yeah. So is there anything known about that O n squared jump? Yes, if I go back. Is there anything known about that as a function of k? Sometimes, yes. Sometimes not. I guess as k goes up, that O of n squared moves down. It really actually depends not. It really actually depends not on the chromatic number, but additional properties of the graph after you sort of if you remove a bunch of stuff. In fact, it's sort of a big disappointment, I think, for everyone is that this little O term can be as big as n to the 1.99999, whatever you want. You can construct graphs in which the upper bound is, yeah, okay, it's subquadratic, but in practice, it's awfully close. So you can construct graphs to get up very close to each other. But for a concrete athlete, But for a concrete F, yes, one might want to know exactly how that behaves, and that is an active area where one might look to understand that better. Okay, so an R graph is just a family of subsets of size R. I'm going to draw something, even though I hope this is utterly simple, but instead of a graph where all my edges are of size 2, now all my edges are sets of size R. It doesn't have to be intersecting. So this is an R graph. So, this is an R graph. And the notions of subgraphness and F freeness and so on extend very naturally into the settings. You can draw a concrete F graph and say, hey, how many of these edges can I have and have no F graph? No F. My vertex set is always going to be the integers 1 up to n, just to remind us that there's n vertices and it's convenient that they're labeled as well. So our uniform hypergraph is a different term as heard yesterday for Banner. And just And just like I said here, a two-graph as our ordinary graph. And a lot of people think about triple systems. For instance, the Thano plane we saw also yesterday is a triple system. That's just a three graph, right? That's a family sets of sizes. And so what I want to do is extend the notions of extremal problems, like the first two theorems I stated, to the setting of three graphs or R graphs in general. Again, this is a notoriously difficult question, but that's why we work on it. So, important function here that I'll get away from after a little bit is just what we call the extremal number or the Terrand number of f. And this just denotes what is that maximum hypothetical number of edges we can have in an n-vertex R graph that doesn't have a copy of F in it. Okay? So actually, just so that we understand this notation, I'll rewrite, I don't think that was mine, is the two theorems we've seen already, Turan's theorem and the Erdős Stone. Already, Turin's theorem and the Erdős Stone-Shimonovich theorem written in this format here with the extremal number. So, extremal number sub 2 for the uniformity of K b. And I put this little tilde here because I wanted to write that as times n choose 2, not n squared over 2. They're approximately the same here. But it looks nice in that format. And then Erdős Stone says the same thing here. I use chromatic number, Nelchi of F instead, times n choose 2 plus that error chart. Okay, so that's just translated to this format. Okay, so that's just translated to this format. What about an example for three graphs? I want to mention this famous, maybe the most famous question in extremal graph theory, I think, at least, is this tetrahedral conjecture. So now we're looking at three graphs, and I want to forbid a K43. I'll draw what that is in a moment so you understand exactly. It says that this should be approximately 5 ninths of n choose 3. Now, I bet it's clear, but let me ask: why did I write it in that format as 5 ninths times n choose 3 instead of 5 over 9th? Choose 3 instead of 5 over 9 times 6 times n cubed, right? That solve for n cubed instead. Why did I put this form at 5 ninths of n choose 3? Exactly. There's n choose 3 possible triples among n vertices, and so 5 ninths of that total, 100%, I can have, is what the conjecture says. So let me draw y. This is a conjecture. I think it's a fun exercise. It's not difficult, but. So, there is a lower bound. We can. Okay, let me first tell you what a K43 is. So, K43 is basically the three-uniform clique on four vertices. So, all it is is four vertices here, and it's all four triples among these things here. A complete graph is all pairs among a set of vertices. This complete graph is all triples, so there's four of them. And then the hard one to draw. And then the hard one to draw. Yeah, I mean, this is one reason we don't love working with three graphs, the pictures are not as fun to draw. But this is all, so all three edges on four verses. Okay? So in some sense, this is the first thing you might consider forbidding from a three graph. Say, I don't have this structure in there. How many edges can I draw and avoid this thing here? And let me give a construction of a graph on n vertices with five edges. Construction of a graph on n vertices with 5 ninths and choose 3 approximate vertices. So, similar to the Terrain graph, in fact, you could call this a Terrain graph if you wanted, I'm going to split my vertex set into sets of size n over 3. And then I have to draw triples now, not pairs. And so I'll draw the following triples. They'll look like this. So that's a triple, right? Two vertices from this class and one from this. And then here again, down to this guy. Down to this guy. And then this one here. And then finally, I'm also allowed to have triples where I take one from each class. Okay, everyone understand this triple system? I only have these types. There are some triples that exist that are not selected. For instance, I never took a triple of vertices inside of this, so these sites are independent. And I never took a triple sort of pointing in this direction, where I took two here and went back here. They have this nice sort of cyclic structure. So there's two things. So there's two things to check here. Is this indeed K433 and how many edges are there? Let's do both. It's a very simple exercise, but this is how a lot of these arguments go. So number of edges. Well, okay, let's do the easy ones first. How many are there of this type? Okay, this is, I'm kind of asking you guys to help me out there. How many triples are there of this type? Perfect. N over 3. n over 3 cubed, right? To get this in the format of n choose 3 at the end, we're going to have to do a little massage work, which I'm not going to do. I just want to write out the quantities here. Okay. What about this type here? There's three of them, right? One, two, three types. And then how many ways can I pick such a thing here? Yes, exactly. N over 3, and then 3 and then times n over 3. Whoops. Oh, yeah, yeah, choose 2. As far as I'm concerned, this is n over 3 over 3 squared over 2. You work this thing out, you sort of put it in the n choose 3 format, you get that exact coordinate there. Okay? So 5 ninths is reasonable. This is a nice construction. What's maybe more important is: is it K4 free? K4 3 free. Let's check that real quick. That's a little bit more work than that one, but. More work than that one, but so if there were a K43, its four vertices would be distributed among these three classes. One class would get two. In the original terrain setting, that was immediately a problem. You don't have an edge in a class. Here, just because I have two of my four in a class doesn't immediately cause any problems because there are edges of that type of thing. So let's consider two cases. Could my K4 have three in a class? No, there's no edge inside a class. Could it have two here? Could it have two here and two there? And it's, of course, symmetric. No, Van, which edge is missing. Yeah, the one that's double here and one there. In fact, there's two missing edges. And then finally, this one. Well, this forces you to have one instance where you have this backward edge. It's not there as well. So no matter how I distribute the four edges, I don't get the k-fourth. Oh, I jumped ahead, but that's fine. So that's the construction. So that's the construction. Turan conjectured in 64, I think, that this should be the maximum, and we still don't know after 60 plus years, which is, I mean, astounding, really. I'll say a little bit more about this later. But this is the first question for three graphs, and we want to talk about R graphs. All right, so now in order to get rid of all these issues of like, what if n isn't divisible by 3? What about error terms, all that stuff? No, we don't even know that that's the upper bound. It's not just that we don't know that this is the only expression. It's not just that we don't know that this is the only extreme class. Yes, your question answered itself as well. I'll get there in a moment, but we don't know the upper bound, and we know actually, I'll say it now, there's exponentially many non-isomorphic constructions with this many edges in them that don't have k4 degrees. That's probably the reason we don't know how to prove it. Over here, for Ferrand's theorem, I didn't say, but these graphs are unique. They're totally special. They're the only ones that hit the maximum. This is one of many that hit the maximum, and that seems to make things. Of many that hit the maximum, and that seems to make things hard. Great question. Okay, so yeah, now I just want to normalize things instead. I want to drop these n cubed terms or n choose 3 terms or n squared terms. And so I'm going to define the Turan density of a graph F as, well, look for its maximum. That's EXR and F. That's the maximum number of edges you can have. And those tend to be of the format, right, something times N choose to. times n choose 2, or something times n choose 3. I'm just going to divide out by that n choose 2 n choose 3 term. And then I'm going to take the limit as n goes to infinity. So this should spit out just some nice constant. And again, just to make sure it's clear, oh, so one thing, this pi of f essentially measures the proportion of edges without a copy of f. Actually, the thing inside of the limit technically does that. This just shows what the limit of that process is. And then we have Turan's theorem that says that, right? We have n squared. Right, you have n squared over 2 divided by n choose 2. As n goes to infinity, you just get the leading coefficient. And there are just don't chew on it, which gives you that leading coefficient there. If we applied this here and we knew the answer, the limit of that would be five ninths, right? The n choose the range. That's the Terrain density. And that's the parameter we're going to focus on here today instead. Now, this slide immediately begs a natural question. It's like, well, does that limit actually even exist? I just said that it. Limit actually even exists. I just said that it's the limit of this process, but think about the behavior of the extremal number there. As n increases, like yes, we expect we can get more and more edges, but is it well-behaved? Maybe it sort of jumps up and down. In fact, I've even alluded to that. In these constructions, divisibility causes some headache, and maybe that interferes with the limit. So the first thing I want to do to you and do is prove that the limit exists. Actually, you guys are going to prove it. So the answer is yes. And it's just because of this simple fact that that function is monotone and pre- Simple fact that that function is monotone increasing in n. I'll justify that. And it's bounded above by, of course, 1, right? You can't have more than 100% of the edges that are available to you in the graph there. So those two things say that the limit exists. So why is it monotone increasing? Well, it follows from this nice proposition in 64 by Kotan and Nemets and Shimonovich. This is a very important paper in extremal graph theory that says this function is monotone increasing. This is not their main result. They, well, we'll see one of their main results in that paper. We'll see one of the results in that paper. But I want to prove this because it's an absolutely lovely, one of my favorite double counting arguments. It just comes out so nice. So we're thinking about R graphs. And this is one really nice thing about this is that we don't understand the extremal numbers for R graphs, but this function we do understand for R graphs just as well as we do for two graphs. Okay, so I've got some R graph. I'll call it H. On N vertices, it has these R H. On n vertices, it has these r edges in it. And let's say that it has as many edges as it can, and it's f free. F's just some fixed thing, it could be k43, it could be some kind of hypergraph cycle, who knows. And I'm going to double count, I'll just write it out, I want to double count the pairs, so count pairs E comma V where E and V are Where E and V are non-incident. Okay? So I just want to double count this pair of things: an edge and a vertex that's not inside of that edge. I'm going to count it in two ways. Okay, I won't write anything yet. So, what are the two ways? Well, we can pick the edge, then the vertex, so the vertex, then the edge, right? How many ways can I pick an edge if I want to count these pairs? You may have to read the slide a little bit. No, no, it's written on the board, too. Slide a little bit. No, no, it's written on the board too. How many ways can I figure H? Yeah, or well, we're given a concrete graph H here, right? So certainly it's no more than H's R, but we have exactly the extremal number amount of edges here, so that's the quantity of edges. So fix E in EX, R, and F waves. Right? I mean, that's just, in other words, in the number of edges on H wave. In other words, in the number of edges on H ways. Just pick an edge in half ways. Once I've picked an edge, how many ways can I pick a vertex that's non-incident? Now I want to pick any vertex that's not in that edge. Just n minus the size of, yep, exactly. Then v in n minus, oops, n minus r ways. So the number of pairs here is this times this, and that's exact, right? This times this, and that's exact, right? That's exact. The second count's going to be an overestimate. So let me put what I have here. I don't know if I can make this fit. Ex, oops. Rnf R minus N minus R. Okay. And now, in the other way, how many ways can I pick a vertex? Silly question. N, there's n vertexes. Just pick a vertex. Okay? So n ways to pick that. And ways to pick that. After I've picked that, how many edges are non-incident to that? Depends, right? Like, well, we could say, well, the degree, that's how many we lose, but I don't want to get involved in that. What if I just do this and say, just look at the remaining n minus 1 vertices, right? Among the remaining n minus 1 vertices, certainly every edge inside of there doesn't include that vertex. And what's the most that could be in there? Well, What's the most that can be in there? Well, it's the extremal number. It may be lower than that, but it's certainly not better than the most that you can have. So in that case, it's upper bounded by n times the extremal number, or n minus 1, f. This is clearly an upper bound because we may not actually achieve this. It's not totally clear that a graph with the most number of edges, all of its subgraphs have the most of all those things there. Maybe you remove it a certain way and you get something else. Okay, so you have this thing here. Okay, so I have this thing here, and I think that's what's probably in my next jumps here. So double count that pair, fix E then V, fix V then E. We did those two, and you get this inequality here, right? Now all you have to do is a little bit of arithmetic. It's very wonderful. So solve for EXNF and divide both sides by N choose R. I'll just do it here. Gives you this thing here. So you have the extremal node nerve divided by N choose R. You have left over N over You have left over n over n minus r times the extremal number of one less divided by the binomial coefficient. The binomial coefficient interacts with these things just so perfectly that you get n minus one choose r on the bottom there. And that's our function. And it's monot something's wrong, right? Wait. It's monotone? It's monotone. Yeah, which is fine. I mean, monotone is like, what did I do wrong? Is it monotone decreasing in n? I mean, that's what we just proved, right? N goes up. No, no, no, no, no, no, no, no, no. What? So n, larger n than there is smaller. Think for one moment, then we'll move on. This is not that important. Well, it is important, but it's not important for, I mean, the reasoning is what I wanted you guys to see. I think that's sound. What I'm concluding. I think that's sound. What I'm concluding here: so, as n's going up, it's driving. So, I guess we prove its monotone decreasing. Something's bothering me. Monotone decreasing less than or equal to. Right. This is potentially smaller than it was for a previous value, and this n continues to increase at maybe n, which is fine. The function is also bounded below by zero, right? Below by zero, right? So we can still use the same proof to prove that it converges, but anyway, okay, let me move on. Oh boy, what? Have I already taken 30 minutes? Okay, that's fucking up, right? All right, well, I'll get moving a little faster then. So maybe we'll do some fewer proofs on it. This was like a class, I hope it was fun, but okay. Okay, beautiful picture here. I'm not responsible for these figures, that's why I can say that. For these figures, that's why I can say that. Here are some concrete Turan densities for different forbidden subgraphs. The K43 we've seen before, we've seen that its Terrand density is 5 ninths. And look at that upper bound. 0.5615, that's not far from 5 ninths, which is 0.55515, but that's the best that we know. For the K4 minus, what's a K4 minus? It's a K4 with one edge removed from it. That's a different subgraph. You can have two sevenths of the total number of edges. It's fewer because it's harder to avoid. It's fewer because it's harder to avoid a K4 minus than it is to avoid a K4. And there's an upper bound. That quantity you can check on your calculator. That's really close to 2 sevenths, but it's not 2 sevenths. For a phanoplane, the answer is 3 quarters, and we know that it's 3 quarters. And J4, that's what we call a DAISY. This is the famous DAISY problem here. This is a set of all six edges that include this vertex and a pair from outside here. And that's bounded below by a half and above by it's within 1% of a half, but it's still not. Of a half, but it's still not enough for this. All right, there are many other values where we have estimates. These are the ones that I like the most. The small things are the attributions to these. All right. I'm going to skip supersaturation here, because Anna's going to end up talking about that in a specific context. And then stability, shoot. Okay. I'm going to say in a sentence what supersaturation is. If you go above. If you go above the extremal number, you get a copy of the forbidden graph, right? That's what the extremal number means. That's the most you have without. If you go above, you get a copy. Supersaturation says that, oh, it's even worse than that. If you go above the hypothetical extremal number, you don't get just one forbidden copy. You get tons and tons and tons of forbidden copies if you go exceed the threshold by enough. So it's like a phase transition. You have no copies of your graph. You hit this threshold, and then it's abundant. In fact, you have delta, n choose v of f many copies. This is a positive. Vera many copies, this is a positive proportion of all possible copies that could ever exist. Sort of a startling thing. The flip side of that is what we call stability. So stability says that what if you're close to the extremal number, close to having the maximum number of edges, and you still don't have that forbidden graph. Stability says you look like the extremal graph. You look like that special graph that avoids it, if it's unique. The Terrain graph was unique. And if you have nearly as many edges as the Terrain graph and don't have a copy of the cleave, you And don't have a copy of a cleave, you look like a terrand graph. That's what stability is. Not shocking, it makes some sense, but like it's not abundantly clear that that should be true. One of the problems with this situation is because there's exponentially many different versions of this thing, you can't be stable to a bunch of graphs simultaneously. You can't look like all of them at once. But if it's unique, you can't. So that's the idea of stability. If you're close to the extremal construction in edges, you look like the extremal construction. And stability, if you go over that point. And stability, if you go over that quantity, you get lots of your forbidden subgraphs. Okay. Now, notice stability. The theorem's only written for r equals 2 here. We do not have a stability theorem for three graphs. And here's one of the reasons, is because this doesn't have a unique graph to be stable to. But sometimes we do. The phanoplane construction is unique and is stable, actually. So we know what that means. And when I say the phanoplane, I mean the graph not contained. And when I say the fan, I mean the graph not containing the fan. Alright. Oh, yeah, this is pretty important stuff. I like this a lot. So these densities are between 0 and 1, right? We're just taking the ratio of what's possible to the total here, and we get a quantity between 0 and 1. And the only possible densities are infractions of this type for two graphs. The Erdős-Stone theorem actually tells us that. You can only get 0, 12, 2 thirds, and so on and so forth. And for our graphs, And for R graphs, we really don't understand what's going on for R graphs. So you can ignore the degeneracy theorem here. For a three graph, you do not have values between 0 and 2 ninths. 0 is achievable, and 2 9ths is achievable. But we don't know in general. And Erdős has this very nice question that asks, well, do these densities jump? If we look at two graphs, those are the only possible densities. What do I mean by a density here? You fix a forbidden subgraph, you try. You fix a forbidden subgraph f, you try to estimate its Terrand density, and it's one quantity in that list no matter what f is. For three graphs or hypergraphs in general, we don't know which values are possible. And in fact, there might be even these continuous regimes where you have two ninths and all the values from two ninths up to delta. And Erdős asked, are there jumps? In fact, that's what I want to say here. So does the density 2 9ths jump like the two graphs? The two graph densities, these are isolated values among all the values between 0 and 1. They sort of sit by the... The values between zero and one, they sort of sit by themselves, they're isolated. But for three graphs, we don't even know if that happens. Like, we know particular values, but we don't know if they're continuous intervals of achievable values. And we still don't, and this is a very important area of research. I'm going to show two important slides to you. So the question here, what densities jump, right? Does two ninths sit by itself, or are there values right next to it? This lovely titled paper, Hypergraphs Do Not Jump, my Franklin Ruhole kind of says that they don't. Kind of says that they don't. What it says is there are values of densities where they're within a continuous interval. So that was the first paper in 84. Super important and surprising. We thought that, well, I wasn't thinking that this time, but the idea was that they do jump like two ways. And this says that they don't in general. And then there was, I'll call, a follow-up, that hypergraphs do jump. These don't contradict each other. It says there are values that sit alone by themselves and don't have other densities around them. Have other densities around them. So sometimes they do, sometimes they don't. The takeaway here is like we don't know what's going on with three graphs or beyond in terms of how their densities behave, which is amazing, I think. Okay, so now on to the other extremal function, and that's codegree. So instead of maximizing the number of edges subject to no copy of f, I would like to maximize the codegree. And let me explain what the codegree is here. So we're working with an R graph, and let's fix So we're working with an R graph, and let's fix a set A of R minus one vertices. And I simply want to ask, what's the degree of this set? So how many hyperedges contain this set, right? So a hyper edge like that, like that, like that. Okay, my picture is sort of misleading because I'm looking at R edges. I affixed to R minus one set. You can only have one additional vertex. So that's the degree of an R minus one set. You can ask the degree of any set. In fact, the degree of a single vertex. In fact, the degree of a single vertex is its usual vertex degree in graphs. So I want to look at codegree here and maximize this quantity instead. Why this quantity? Well, think about ordinary graphs. In an ordinary graph, codegree is the degree of a vertex. r minus 1 is 1. And so instead of saying, hey, degrees of individual vertices are important, I'm saying it's degrees of sets of size 1 less than the uniformity that's important. It's just another thing of fan series. What's nice about this is this actually. What's nice about this is this acts very differently from the ordinary terrain numbers. If you look at degrees in one of Maxwell's degrees, that acts like the ordinary terrain number function. It's almost the same question. Okay, so we want to do a codegree instead. So I have a hypergraph H, and its minimum over all codegrees, sets of size R minus 1, is denoted by that one there. And I want to make that as large as possible and still not have a copy of F. So forbid, say, this graph again, and force my minimum codegree to be as high as possible. Minimum codegree to be as high as possible. In other words, once I exceed this threshold in codegree, all my sets of size r minus 1 go above this, I must get a copy of f that's the meaning of this function. And I want to understand this function instead. I'm going to do the same thing. I'm going to normalize this into a density function. So gamma of f is this limit here. I divide it by n, because the maximum codegree you could ever have of an r minus 1 set. It's about n. It's not technically n. It's about n. It's not technically n. There are n minus r plus 1 possible extensions to a hypergraph here. But dividing by n is the same as dividing by that and r is fixed relative to that. Okay, so that's our density there. That's, yeah, indeed, that's the proportion of maximum codegree that you can have, normalized by. Does the limit exist? Same question as before, right? It does. Lubai and Zhao proved, gave a probabilistic argument that this thing does. Gave a probabilistic argument that this thing does definitely exist. You can't get this nice double-counting argument that you had before. And here's some concrete examples of this density here. Same four graphs, and here are the densities. And notice we also don't know things here, just like an ordinary code degree. So the K4, 3 is bounded below by a half, and above by 5, 2, 9, almost a half. For the K4 minus in the fanal plane, we have the exact answer. And for the DAISY, actually, there's a huge gap. Notice. The lower bound is a quarter, the upper bound is a point. The lower bound is a quarter, the upper bound is 0.473. So it's not even clear in this case that a quarter is even the answer for the data. Very, very open. I really want to argue this construction. Okay, here's what I'm going to do. If I have time, I'm going to come back and tell you this cool construction for the graph that is K43 and has a codegree about 1/2. And if I don't, you'll just have to look it up. It's very, very nice. Have to look it up. It's very, very nice. But here's the description: it's a probabilistic tournament thing, it's way cool. I want to make sure I cover all the other things. Okay, so supersaturation, again, works here. If you go above the codegree threshold, you get not one copy of F, but lots of copies of F. Stability is not known in codegree situation. If you're close to having the max codegree and you're F free, you may or may not look like those extremal graphs. I haven't drawn any of the extremal graphs, so you may or may not. For K4 minuses, So, you may or may not. For k4 minuses, we actually know it is stable, but in general, we don't know it's stable. This suffers from the same issue that the random numbers suffer from, for r greater than 2, is that the extremal constructions often aren't unique. There's often a bunch of candidates, so it's hard to get stability there. And then the jumps question, what densities are possible? This is really cool. For terrain, we saw densities are weird. There are intervals of densities that are possible. There are individual standalone values of densities that are possible. Lubai and Zhao showed for Jaob showed for these codegree densities that the values are dense in 0, 1, so like almost all of 0, 1 is achieved here. There's no jumps. And they conjecture that actually every single value in that interval should be, there should be a particular forbidden graph to achieve that density. That's open, though. That's a very nice question, I think. So every single value among 0, 1 should be possible as a code degree. Okay. Now I want to talk about positive code degree. So, this is the same definition before. What's codegree? Codegree is just the number of extensions, number of edges containing R minus 1 set. That's its codegree. And now, I don't care about R minus 1 sets that have codegree 0. An R minus 1 set has codegree 0 if it's not contained in any hyperface. I'm going to throw those ones away here. Okay, so now I'm interested in the minimum positive codegree denoted by this delta R minus 1 plus of F. That's the minimum K, such that all R minus 1 sets A either have code. R minus 1 sets A either have codegree 0, and then I just ignore them, or they have codegree at least K. Before, we wanted all of them to be at least K, now I say they're at least K, or you can have some zeros. This seems awkward and unnatural, and maybe it is, but it has a very nice consequence to it, that ordinary code degree doesn't. Let me illustrate it. So, for ordinary code degree, if I want it to be at least k, Code degree, if I want it to be at least k, it means every single r minus 1 set will have at least k hyper edges containing it. If I allow zeros, it means that some r minus 1 sets don't have any hyperedges on them. What that allows is in ordinary codegree, there are no independent sets, or at least no independent sets of some appreciable size, right? Of some appreciable size, right? If I have an independent set here of more than r minus one vertices, then if I grab a set of r minus one of them, there's no hyperedge containing it, so the codegree of this graph is zero, because that one is zero. But if I'm only interested in minimum positive code, I'm allowed to do this. It's just as soon as I have an r minus one set contained in an edge, it better be contained in a fair amount. So the reason for introducing this definition is to not throw out independent sets. Why do we like independent sets? Why do we like independent sets? Well, all of our constructions for Terrand graphs and Terrand-type problems have big independent sets, right? This had big independent sets. But this has codegree zero, right? A set of size two down here. Well, okay, sorry. A set of size what? What do I want to say? That one has five. Oh, this one happens to be. This one doesn't have to. Yeah, okay, this is a bad example. But like an ordinary terrain graph has independent sets inside of it, okay? So the key takeaway here is that. Okay? So the key takeaway here is that with positive code degree, I'm allowed to have independent sets in my construction. With ordinary code degree, where everything should be at least k, I can't have independent sets. So the two functions operate very differently. What do I mean by functions? Well, I'm going to want to maximize this as well. So the positive codegree Turan number is the max value of the minimum positive codegree over all F free graphs H here. So how big does this have to be in order to force a copy of Free? A copy of F. This is closely related to ordinary codegery, but it's different. I'll show you another table like the previous. And again, I'm going to normalize by n. That's the max that you could have up among the positive code. So does this limit exist? Are there supersaturation results? The answer is yes, but you have to wait. Anna's going to tell you all about this stuff. So that's the next talk. This is a big chunk of the work we've been doing. And then And then concrete values, like we've seen these graphs again here: the K43, the K4-the Phanel plane, the DAISY. We provided these lower bounds here, and there are these upper bounds, some of which are ours. You can see these are pretty close, 0.54 and 0.58 versus 1 half. But if you compare these to the previous two slides, everything's different. None of these densities are ever the same for Terrand, for code and read, for positive, code-reed. Well, the K43 might be the same for code and greed, positive, code-green. That's a major problem. That's a major question. Okay, so here I do want to provide a very simple proof. I want to look at the K4 minus 3 example there. And we have an upper matching upper and lower bound. I'd like to show you these. Our actual theorem is stronger than what I'm going to show you here. I think that you'll see that that has to be the case because the proof is incredibly simple, what I'm going to show you here. But it does give an idea how this thing can function. Okay. So. So, first of all, to get the lower bound, I need to construct a graph on n vertices that has no k4 minus in it and has positive codegree 1 third n. So my graph is going to be this one. Take classes of size n over 3, and then my triples are just this thing here. Another sort of tripartite. Another sort of tripartite graph here with these triples. I claim that this is K43 and I claim that it's positive code degree density is one-third, or one-third n. So if I take a pair of vertices, right, in, yeah, this is the, maybe I haven't made this abundantly clear. Here I'm working with three graphs, not r graphs in this specific case. So codegree for three graphs is the degree of a pair of vertices, r minus one is two. Okay, sanity checker. What is the codegree of these? What is the codegree of these two vertices? That's zero, right? There's no edge containing these two vertices. Edges go one per class. So the codegree of this graph is zero, but we're a minimum of positive codegree, so that's a lot. That's zero. What's the codegree of two between different classes? How many edges are they contained in? Well, the size of the class up top here. So the codegree, the positive codegree, is n third. Okay? You divide by n, you take the limit. Okay? You divide by n, you take the limit, you get one-third as desired. Lower bound. What about the upper bound? This is almost simpler. So let's suppose that we have, oh, oh, yeah, one thing. What did I miss? Everyone tell me what did I miss? Is this K4 minus 3? It's not an interesting construction if it contains a forbidden graph. But yes, indeed it is. But yes, indeed it is. If I have a K4 minus, it has four vertices, two in the class, and maybe looks like those are the four vertices. Among these you have two, but not three edges. A K4 minus has three edges on four vertices. There's only two drawings in between. So it isn't too frequent. Okay, upper bound. Let's say that the minimum positive codegree of my graph H is more than n third. Is more than n 3. Then I will exhibit a k4 minus for you. The three graph H better have edges, otherwise its codegree is not n third. I take a pair of vertices that have it. Flip with A, B, and C. And now A and B have positive codegree because they have at least one hyper edge on them. If they have at least one, then they have more than n over 3. So there's at least n over 3. There's at least n over 3 edges on AB, there's at least n over 3 edges on B C, there's at least 3 n over 3 edges on AC here. So I could talk about the neighborhood of AB. That's all the vertices contained in a hyper edge with AB and something else. That includes C, that includes N over three other vertices. And that's true with N over N of B C and N of A C. Each of these quantities. Each of these quantities is greater than n over 3. Or if I want, I can remove these from it, and they're still at least n over 3. The point is, though, that these three sets, each being of size at least n over 3, can't avoid having two of them with common intersection. They can't partition the space if they're all size of greater than n over 3. So what that means, actually, simply, is that there's an edge on AB that includes, say, On AB, that includes, say, D, and there's an edge on B C, say, that also includes D. Okay, a little without loss of generality there. But this is, you may not see it immediately, this is in K4 points. So upper bound indeed is, you can't go above that, but they're instantaneous. We prove a little bit more. There's two unique nice. I'll make comments about how secure my password is. Okay, how how am I doing here? Robert, with was I supposed to finish at 20 or 25? No, no, we well, we finished this 25. Okay, well I'll wrap it up in a couple of minutes here. Certainly not beyond 25. Okay, so in this setting here, we don't have a general theorem for stability, but we do have it in some specific instances. The K4 minus, which I've talked about here, that's one of the extremal graphs. If you blow up the Graphs, if you blow up the 632 design, you also get a K4 minus free graph that has minimum positive code degree NO worth 3. So it's like totally different than that graph there. It has the same code degree and is free. So you have two extremal graphs. And NA has this wonderful result that if you're close to the maximum number of edges and you're K4 free, you look like that or the blow-up of the 632 and nothing else. So it's stable to two things simultaneously that are not stable to one another. To go from that graph to us, Another. To go from that graph to a scale of a 632 design, you have to make MQ and the edge genes. Very rare to see results of this type. We heard supersaturation. Anna will talk to us about. The jumps here are really cool. So jumps are different too. So this is definitely open in general. What densities are possible? Are they isolated values? So we first discovered that there are no values between 0 and 1 third. 1 third is achievable, just showed you. Example there. 0 is achievable, but. Example there, zero is achievable, but everything between zero and three, a third, there's no graph F you can forbid whose positive total degree density is in that interval A. In a follow-up paper, we showed that you also can't have them between a third and two-fifths. So this means one-third is sort of isolated, right? Nothing directly below or above it. But this is all we know. We don't know if two-fifths is itself, again, another jump or if there are other intervals that are jumps. So this is what we're actively trying to understand here from those. Okay, and maybe my final slide here. Okay, and maybe my final slide here is: here's a table enumerating upper and lower bounds for all three types of densities. There's even more than this. I can only fit this mail on the slide. The K4, the K4 minus, the Fano, F5 is something else, F32 is something else, J4 is the DAISY, C5, there's a bunch of three graphs here. And you can compare and contrast. I haven't written all the attributions here, but for cycles, we know the answer here, but we don't know it here, and we don't know it here. All manner of variety here for concrete graphs to understand their densities. To understand what their densities. And then also I have this sort of tabulation. This is not the full story, but in these three phases, supersaturation works in all, all three parameters. Stability, for Turan, it works for R equals 2, as we discussed. For R equals 3 and above, it sometimes works, sometimes doesn't work. I put just an individual example for stability. For codegree and positive code degree, the K4 minus, we know the extremal constructions are stable in some sense, but we don't have a general theorem. And then the jumps. And then the jumps, I've described the terrain situation as strange. Hypergraphs do jump, hypergraphs don't jump, do not jump. For ordinary codegree, it's dense and 0, 1. And for positive code degree, all we know is that you don't have values in these two intervals, but we don't understand what it is. All right. Cool. Thanks very much. At least one or two questions. So in this last slide, if you have some very lovely small fractions, then some less lovely. Do you think this fractions are the right answer? They better be, right? Yeah, they better be. Yeah, so actually, this leads to something interesting. These not nice fractions, the majority of them come from the flag algebra calculus, which some of you may be familiar with. It's like an optimization style. Like an optimization style, I don't know, it's very complicated to get into the details here, but it's very good for attacking small forbidden subgraph-type problems here. And you use computers to assist the proofs here, and they tend to give you these numbers that you don't understand. But when you see something like 0.5615 and the lower bounds, 0.55555, one tends to think. I think that 1013 minus 3 is a bit weird. That is a weird one, and I don't I think that is weird because the construction for that is some kind of iterated construction. For that, it is some kind of iterated construction. You know, the other constructions I've shown are nice, right? You have these blow-ups and you have edges of this type, and you just sit down and compute what they should be. This is you build a graph, and then build a graph on top of it, on top of it, on top of it, and it's like some limiting process. If I'm not mistaken, everyone has their calculator. I think this quantity might be close to that, so that the two are close, but still the upper isn't isn't exactly equal. Trying to see what's the biggest gap there. Maybe the J four code agree, one fourth and.473. That's pretty big. Other question? Oh, sorry. Bernie, do you think Muvaija's conjecture is true? And if not that, maybe some sort of like the complet adjustment where you can forbid a family of graphs. Yeah, so I okay, I didn't really speak about that. There does involve forbidding families, and so does some of ours. I didn't say much about this, but you can also forbid several graphs. But you can also forbid several graphs simultaneously. And sometimes to get some of the jump stuff to work the way you want, you don't forbid just a K4, but you forbid a K4 and a F5 simultaneously. Both of those forbidden subrefs have an influence on the structure of maximizing edges. In fact, this table can be extended with. There are many results where it's like fano, f5, and what does that do? You can take any, I mean, you could do this forever. You would never be done. I guess unless you could find some Erdish function. I guess unless you can find some errors on the movies, I think I'll be there. Do you believe there are valid deregulating values which are achievable by forbidding a family, but not by forbidding a single graph? Yeah, I mean, yes, but I hope not. I think it's way cooler if, when you talk about these densities, that we only ever forbid one graph at a time. But probably it matters whether we forbid a family or not. Yeah, a nice conjecture would be, hey, Yeah, a nice conjecture would be: hey, if you forbid this family of graphs and you get density blah, is there one of the ones in that list you can forbid that's responsible for giving you that density, and the other ones don't actually matter. I mean, in general, that's, I think, false, but any other questions? Let's thank Corey again. We start again in five minutes.