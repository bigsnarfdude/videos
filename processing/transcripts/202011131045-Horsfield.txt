Thank you very much for the introduction. So, my name is Sam Horsfield. I'm a PhD student at Imperial College London. I'm supervised by Nick Croucher, John Lees, and Nick Grassley. I've been developing GGCaller, which is a gene caller for bacterial pangenome graphs. So, there are two ways in which So there are two ways in which you can represent the pangenome sequence bioinformatically, either as a collection of linear genomes shown here, or as a graph where you collapse similar sequences down into nodes and represent variation between them as pedagogies. A much more succinct data structure to represent. For bacterial epidemiology and evolution analysis, we'll be able to compare gene content across a population. And then cluster your genes and calculate their individual. Same process isn't available currently in graphs. I need to talk into the microphone a bit. We can't hear you. Sorry, I think my microphone and my headset is playing up. Sorry, can you hear me now? Yeah, that's fine. Cool. Sorry about that. Cool, sorry about that. So, there are no current tools available to call genes within graphs. So, I developed ggCaller. I developed ggCaller to be able to call genes in BioFrost graphs. So, BioFrost is a highly scalable graph construction tool which produces drawing graphs. GGCaller recursively calls genes within these graphs by pairing start and stop codons within your graph in the forward and reverse strand. It also gives you frequency information. It also gives you frequency information using the node colouring information provided by BioFrost, which tells you in what genomes your node is found. So a quick benchmarking study I conducted compared GGCaller against a popular bacterial gene caller prodigal using a pneumococcus capture biosynthetic operon data set, which contained many manually curated genes. So just to compare the recall of known genes, GG call up. Recall of known genes, GG call up, recalls known genes well, as shown by the blue bars, but still unfortunately cause a large number of pusative genes because gg caller cause all open reading frames regardless of whether they read gene is likely to be functional or not. So future work is I'm aiming to improve the gene caller precision, bring down those large number of pieces of genes, and to enable gene clustering as well so you can identify gene families. So, you can identify gene families and conduct frequency-based analysis. And applications I can see that's been useful are gene comparison and investigation of selection across distinct species, real-time gene identification through read-alignment to annotated graphs, and also metagenomic gene calling as well. So, GigiCaller is available on GitHub and Conda, and if you'd like to discuss this more offline, then please drop me an email. 