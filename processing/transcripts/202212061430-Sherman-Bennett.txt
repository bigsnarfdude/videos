Charmaine Bennett is going to talk about classification varieties of the climate rats. Thanks very much to the organizers for invitation to speak, which I guess came a long time ago, but I'm glad that we all made it here eventually. Yeah, so I'm sorry about two things. The first is to break a long streak of very nice chalk talks. A very nice chalk talks. I'm afraid during COVID, I got very lazy, so I just give talks on my iPad now. The other thing I'm a bit sorry for is there won't really be torque degenerations in this talk. So yeah, I'll say kind of a couple of words, but really it's a hint to talk to other experts in the audience about some torque degenerations arising from these clusters. So that said, what am I going to talk about? Well, it's some joint work with Tasha Golashin, Thomas Lam, and David Speyer. Thomas Lamb and David Speyer. It's up on the archive, so details are available. Okay, so what is it? Well, I'm going to talk about some varieties, type A braid varieties, and a particular combinatorial structure on their coordinate rings, which is called a cluster structure. And so Nathan talked a little bit about what this means yesterday. I'll kind of refresh. And okay, so it's a combinatorial structure. So there should be some combinatorial objects in the background that give you this information. And those You this information, and those combinatorial objects we call 3D playback graphs. It's little pictures that look like this. Okay, and I guess I should say also slides from my talk or some version of these slides are on my website, so you don't have to worry about taking notes. And okay, and before I get going, I'll just say, so I'll say this a couple of times, if you have a cluster structure on corner of your Cluster structure on corner of your variety, you can, under certain assumptions, produce torque degenerations. And those correct degenerations, they really depend on this combinatorial gadget that you cook up to give you the cluster structure. So that's sort of the, if you maybe don't care about cluster algebras by themselves, that's fine. If you wanted to get your hands on any of these torque generations, you do need this combinatorial information. Okay. So first, let me just tell you about type A braid varieties. So for the type A talks, So, type A talk. So, my G is SLN, and B is the subgroup of upper triangular matrices. And as usual, I identified a quotient G mod V with the complete flag paradigm. Okay, just to be really concrete, everyone has different conventions. How do I go from a coset GB to a complete flag? Well, the one-dimensional subspace in my flag that should be spanned by the first column of G, leftmost column. The second. Leftmost column. The second, so the dimension two substates, that's the leftmost two columns of G, etc. Okay, so to define these braid varieties, I'm going to need the notion of relative position of two flags, which is a permutation. So it's easiest to describe when two flags are in relative position SI, so a simple transposition. So f and f prime are in SI position if they differ in exactly the i subspace, right? So this transposition SI is telling you that's the subspace. Transposition SI is telling you that's the subspace you have to change to get from one to the other. If you don't like thinking about flags and instead you like thinking about cosets, well, I think you're a little weird, that's okay. There's always a little way to phrase a simplicity process. Okay, so what about if two flags are in position W, where W is just a permutation, not necessarily a simple transposition? Well, there's this same code set condition, or the way I prefer to think about it, Or, the way I prefer to think about it, what this means is: well, pick any reduced word for the permutation W that you want. Then there's a unique sequence of flags, which will interpolate between F and F prime, where, well, to go from F to the first flag in the sequence, I change the I1 subspace. So, as dictated by my choice of reduced word, and then to go from F1 to F2, I change the I2 subspace, et cetera, et cetera, all the way until I get to F1. So that's what being done. Wait until I get to Frank. So that's what being W related means. Okay. So that said, let me say what type B and grade varieties are. Okay, so these are indexed by a pair. The first element in my pair, I'm going to denote by beta underlined. And this is just some word in simple transpositions, not necessarily reduced. So any word you want. And the other element in my pair, U, is going to be a permutation. U is going to be a permutation that lives inside of this word somewhere. So in this word, beta underline, I have to be able to find a reduced expression for u. Okay, so given that pair, here is my braid variety, x beta underline u. Okay, so a tuple of flags which fit into a diagram like this. So I like to think about these tuples of flags as walks. So they're walks that start at the standard flag. That starts at the standard flag. And then in the first step of my walk, I take, well, I take a step in direction SI1. So I change the I1 subspace. And then in the second step, I change the I2 subspace, et cetera, all the way until I get to the last one. So this data of beta underline is telling me the direction my walk has to move in. And then this data of U is going to constrain where I end up. So the exact way it constrains it is my final flag in this walk, it has to be in relative position. It has to be in relative position W not U with the anti-standard flag. Okay, this feels kind of weird. Like, I will admit there are many more kind of natural ways to use the data of U to constrain the final flag. I'm making this choice to make connections with Richardson varieties. So I should say, okay, so another way to phrase this, which maybe uses words heard before. Well, if I just think about this space of walks where direction is dictated by. Walks where direction is dictated by beta underline, that's an open part of a bot Samuelson variety. So, in the bot Samuelson, in my walk, I could kind of like trip, or maybe I could be lazy. So, in my walk, I could not take a step at all. So, that would be an option in the full Bot Samuelson, but I'm demanding that at each step of my walk, I really change the flag. So, this is some open part of Bot Samuelson. And then there's a natural map from this open part of Bot Samuelson down to the flag variety where I just look at the last flag. Flag variety, where I just look at the last flag in my walk. And my brave variety is just the fiber over a particular opposite supert cell in the flag variety of this map U projecting to the last flag. Okay, so those are my those are my braid varieties. They were, well, not exactly these, but some quite close to these were studied by Laura Escobar under the name of Brick Manifold. They're also kind of studied by Mellick, who didn't call them anything. And then Cathal, Gorsky, Gorski, and Simmons all called. Gorstee, Gorstein, Simmons all called them great brains. That's the name of that. Okay, any questions about the definition? Oh, very good question. That's the next point of the next slide. Yeah, so if you have two of these words, so beta underline and gamma underline, and they're related by grade moves, so either you're commuting like So either you're commuting like SI and SJ, where I and J are far apart, or you're doing the braid mode, you know, I SI plus one SI goes to spring. So if they're related by braid modes, then the braid varieties are isomorphic. So in fact, what I'm going to do is instead of indexing my braid varieties by the pair beta underline u, I'm just going to index it by beta u, where beta is the element of the positive grade monoid represented by beta underline. Okay. By beta underlines. Okay, positive brave monoid. You don't know what that is, it's not really important. It's just, it's just like the symmetric group, except you throw away that SI squared equals beta. So yeah, so really what I'm trying to say is I have kind of a large isomorphism class of these varieties, and I really just kind of, well, yeah, I kind of want to think about them all as so. Some things we know about these varieties, well, there. Know about these varieties? Well, they're smooth, they're irreducible, they're affine, or maybe quasi-affine, if you want to be picky. And their dimension is the length of beta minus the length of u. Is that actually affecting? So there definitely are units. Yeah, yeah, there really are units on these varieties. Okay, and so if you if you Okay, and so if you feel a little bit like, okay, I mean, this is fine, but why are we looking at these? Let me give you a couple of examples, some nice examples, which I guess if you don't know about the nice examples in advance, they won't be helpful, but if you do, hopefully it's some motivation for examining these. Okay, so the really the nicest case to think about is when your, or the kind of nicest special case to think about, is when your word beta underline is. word beta underline is actually a reduced word. So it's a reduced expression for some permutation V. Okay, in that situation, having a walk like this between B and your final flag is actually just saying that B and your final flag are in position V with each other. That's all that it's saying. So all of the information, like all of these flags, okay, and moreover, all of these flags in the middle of the block, they're actually Flags in the middle of the block, they're actually completely determined by this flag at L plus one. So, in the situation where beta underline is reduced, you may as well just pay attention to the final flag in your block. And so, when you do that, you get an isomorphism from this kind of breed variety just to a subset of the full flag variety. And what's the subset? Well, it's just all the flags F that are in position V with the standard flag and position W and O E with the end of standard flag. And position W and y with the anti-skibert flag. And if you think about this a little bit harder, this is just an intersection of a Schubert cell and an opposite Schubert cell inside of the drill flag. This is called an open-Richardson variety. So I think they kind of come up in a lot of contexts, including total positivity, work of Lucig and Reach. Another interesting thing about them is their point counts over finite fields give you R polynomials. Fields give you R polynomials, which are important for computing Cauchy-listed polynomials. Okay, so an even more special case of this nice special case is if your permutation V has a unique descent. So beta underline is reduced expression for this special kind of permutation V. In that situation, your grade variety is actually isomorphic to a subset of a Grossmannian. So even better than being a subset of a full flat. It's isomorphic to what's called an open public grade variety. Open polytroid variety. So these were, that name was coined and these were defined by Knutson Lam and Spire. Very inspired by work of Kosnikov on positroid cells. And I should also mention that Reach previously did work on Richardson's projected two-brasmonians and other cow carbonoplasm varieties. Okay, so I can't actually give you any real information about these open positric varieties. What I will say is that there's a lot of really Will say is that there's a lot of really lovely combinatorics here, and these open pository brands I think are like fairly well understood and they're worth of study in their own right. I'm just going to say, oh, there are special pieces of this thing that I'm going to talk about today. Okay, and then kind of the very nicest open pository variety, well, or at least the biggest one, is a particular subset of GRKN that I'm going to call GRKN-CERC. And that's the subset of the Grothmanian where the sick. Subset of the Grothmannian where the cyclically consecutive Kukert coordinates are non-zero. And then this came up in Nathan's talk yesterday. Okay, so this is a special, very special example of one of these great varieties. Okay, so those are the varieties I'll be dealing with. And now let me say. So that one there is the complement to the divisor, but that's not too in general. Yeah, it is. So let me just so this looks like a cop. Someone's actually right. So yeah, that's right. Yeah, we're always going to be thinking about complements of divisors. That's what all the varieties will be. Or inside the brick manifold, it's the complement of an anti-canonical divisor. And what about here? That is here. Yeah. Yeah. So the obvious. Yeah, so the also seems to be sort of monomed a sort of monomial divisor, as it were, in the super embedding. Those are the coordinates, but I wonder whether so I mean, you have to say what coordinates you're choosing here, but if you choose the right coordinates, then I guess I'll tell you, yes. Okay. Yeah. Your coordinates are not always going to be, they're not always going to be secure. Yeah, but I will tell you, I mean, the coordinates will be suffering variable that across the structure. So there is a meta-theoretium that we're all doing the same thing. Yeah, yeah. Indeed. Okay, so those are the varieties. Now let me tell you what I'm going to tell you about them. So, okay. So what I'm going to do is, okay, so I pick up, I fix a braid. is okay so I pick a I fix a braid variety of interest so x beta u and moreover I pick actually a braid word for this braid so I pick a beta underline and from this I will hook up a combinatorial gadget it will be a bicolored graph that's embedded in three space in a particular way so we'll call it GBU for people in the know these generalized plasma house clavic graphs which is why we're calling them 3d clavic graphs uh kind of it's not a very good name but it's what we came up with and But that's what we came up with. And then from this combinatorial information, I'm going to cook up some geometric or algebraic information called a seed. And that seed is the thing I plug into the cluster algebra machinery and it spits out a ring. And the result is that the ring that the cluster algebra machinery spits out with that input is exactly the coordinate ring of this grave right. Sorry, this one should stop. No, just the ones I started. So, yeah, beta is some arbitrary word, and you is a, there's a subword for you in beta. Okay, and so before I say anything else, I should give some context. Okay, so one thing is this is a type A result. We have some general type work in progress where we lose the combined words, but keep the statement. There's also related work by another group of mathematicians, Kasalz-Gorski-Gorsky, Len. Mathematicians, Kasal, Sporsky, Gorski, Lesha, and Simon Paul. So they also produce sort of this seed input to the cluster alpha machinery, and out comes the coordinate ring of the braid variety. But their seed, we have no idea how it relates to ours. So they have a different combinatorial construction. It looks really different. It feels like it picks up the same information. Who knows? We will think about it in the future. So you don't even know if the classification is the same? That's right. And in fact, I think they're definitely not, but they're Definitely not, but there are some notions of, well, what do you mean when you say cluster structures are the same? And maybe if you pick the right notion, then they believe. Okay, heavy out of the side. So I should also say this resolved the conjecture of Leclerc, who just thought, who made some conjectures about the Richardson case and also generalizes some previous work on Generalize this on previous work on positric varieties and something called double glupox cells and also double block cells. And the last thing I should say is that our approach was a big intellectual depth of Gracie Ingermansen, who was a PhD student of Davis who left for industry immediately after her PhD. So her work's not published, but sort of the things we do are very much inspired by what she did. Okay, so before I tell you more details about sort of everything. Sort of everything in this theorem statement. Let me give you a corollary, which is sort of an interesting puddle, which is that if you take one of these gray varieties and you take its point count over a finite field, none of the pops are not invariant. So yeah, that's so the braid here should make you suspicious. One thing you can do for braids is you can take closures and get links, stuff like that. Yeah, so I won't say anything more about this. So, I won't say anything more about this, but I will say there are hopes that these brave varieties encode even more not information, not information than this column. I'm sorry? Ah, so it is a link which is created from the information of beta and u, but is not just the closure of the grade beta. Yeah, I can tell you more about it later. Okay, so let me now. So, let me now talk a bit about the ingredients of this theorem. So, first, let me recap what cluster algebras are. Is there a two-variable conjecture for that corollary where you would deal with like Hodge groups and such instead of just cohomology? No. Okay, so I should be a bit careful about this. So, there This so there, right, there should be a two-variable conjecture, which is known in the Richardson case, is due to Galachian and Lamb. Um, yeah, basically, it's sort of if you take the cohomology, you can recover not all of the Kavanaugh-Brzonski homology, but like the top A degree piece. Yeah, and so, yeah, I guess the conjecture is exactly what is known in the Richardson situation, but conjecture perfect. Okay. Okay, so let me talk a little bit about cluster algebras. I'm going to give a little bit more detail than Nathan, but not much. So, for cluster algebra people in the audience, I'm intentionally being vague, don't be meh. Okay, so what is a cluster algebra? So it's an algebra that you grow from a single seed. So instead of being a reasonable person and handing you all of the generators and all of the relations for this algebra at once, I'm going to hand you a few generators, which are algebraically independent. Which are algebraically independent. And then I'm going to generate more and keep generating more and more and more. And then at the end, you have all the work. Okay, so this input, this few generators, so they're packaged in a seed. So the generators themselves, so that's this X underline, they're called cluster variables. And the tuple of all the cluster variables in a seed is called the clusters. So like in this, in my little example here, the cluster variables for the seed are x, y. The cluster variables for the seed are x1, x2, x3. And then to create the rest of the generators, I need more than just the cluster. I also need some combinatorial information to tell me how to get a new cluster or new cluster variables. That combinatorial information is a quiver or just a directed graph with no loops or two cycles. Okay, so here is a seed, right? And it's important that x1, x2, x3 are algebraically dependent. And you can see here that there's sort of two kinds of vertices. Of two kinds of vertices of my quiver. Oh, I should say the cluster variable labeled the vertices of my quiver in as gone. And there's two kinds of vertices: there is some little dots and some little squares. The little squares are called frozen vertices. The variables sitting on top of them are frozen variables and they will stay present the whole time. Okay, so this is a seed. Now I'm going to give you a recipe or tell you some of a recipe to get more seeds. So this is called More seeds. So, this is called mutation. And to mutate, you pick some non-frozen vertex of your quiver, so like this one. And then there is a concrete combinatorial procedure that produces from that choice and the data of the seed a new seed. So in this situation, if I mutate at x1, what I get is some new quiver labeled converges are labeled by new cluster variables. Cluster variables. In fact, the only cluster variable that will have changed is the one sitting on top of that vertex that I selected. And how does it change? Well, it's going to, I'm going to put a Laurent monomial in the cluster variables over here on this vertex. What is this Laurent monomial? Okay, well, I'll just say that the denominator is always the cluster variable sitting on top of where I mutated. And the numerator is always going to be a binomial. And the terms in the binomial. Binomial, and the terms in the binomial are completely determined by this quiver. So in the quiver, I had two arrows pointing into x1 from x2 and x3. So that's one of the terms in my binomial. There are no arrows pointing out of x1. So there's a one. The other term in my binomial is a one. That's like a product over the end of the set. Okay. So yeah, and I won't tell you how the quiver changes, but it changes in a very concrete combinatorial way. Combinatorial way. And so I so given a seed, I have this operation called mutation at any non-frozen vertex. That gives me a new seed. I can perform it again and again and again. So usually, if I do, if I just start with an arbitrary seed, I will get infinitely many new seeds by repeated mutation. So there's not usually periodicity. And that all of those seeds that I got by arbitrary sequences of mutations, those Of mutations, those cluster variables sitting on those seeds, those are my generators for my algebra. So the cluster algebra A sigma is the C algebra generated by the frozen variables and their inverses and all of the cluster variables that I got in any seed from arbitrary mutations of my initial seed. Okay, so I will point out: usually this set is infinite. Usually, this set is infinite, and usually it sort of doesn't need to be. Like, my ring is actually finitely generated. But yeah, I sort of want to pay attention to all of these variables. I want to keep track of all of them. So I sort of throw in these extra generators that aren't strictly necessary. Okay, so in this example, okay, so it turns out mutation is an involution. So if I start with this seed here, there's only this one mutation to perform. And then if I went to this seed and I mutated here, I'll just get back. Mutated here, I'll just get back. So, this is a sort of very special situation where I only have two speeds. And that means that my cluster algebra, the associated cluster algebra, well, it's the C algebra generated by the two frozen variables, x2, x3, their inverses, and then the other two cluster variables that I see. So x1 and x2, x3 plus 1 over x1. Okay, so does anyone recognize this ring? This ring? I think no one will. So this is a, this is a, you shouldn't feel bad if you're like, what? Yes, it is SL2. So what you should do is you should think, oh, well, I've got this funny generator, and let me call it X4. And it satisfies that X4 times X1 minus X2X3 equals one. equals form okay so um that's right yeah that's right so it's it's this that's all to certain so um we've got that the determinant is equal to one and then also that the off-diagonal entries are not zero okay so what i just uh demonstrated to you is that if i took the functions on sl2 circ those are a cluster algebra and um we i say in that situation that sl2 circ has a cluster That SL2 SERC has a cluster structure. Okay. So, oh, wait, let me. Any questions about this? Okay, so this is the algebraic version. You can also kind of think about it more geometrically, which I won't really do. I'll just talk about some geometric consequences. So, okay, right, so this is what I said before. If we have an alphin or quasi-fin for IDV, we say it has a cluster structure. Variety V, we say it has a cluster structure if its coordinate ring is isomorphic to a cluster algebra. And what this means geometrically is that your variety V is covered up to codimension two by a union of cluster tori. Okay, so what are these cluster tori? Well, okay, there's one for each seed, and T sigma is just going to be exactly the locus in V, and sorry, or the subset of V where the cluster variables of sigma are non-vanishing. Of sigma are non-vanishing. And it turns out that that's always a torus. And so, from this perspective, maybe it's easier to think about what this seed is. So my writing has a cluster structure. That means it's covered up to co-dimension two by all these foray. And the choice of cluster here is just a choice of distinguished bases of characters on each Taurus. That's what choosing it. That's what the cluster is. So you have to. So you actually know what the identity is in that torus. Yeah, that's right. That's all. It's just part of the data. Taurus or is it a torus? Yeah. Okay, yeah. So this cluster is really just a distinguished basis of characters of your collector torus. And the quiver, what the quiver is doing, well, it's encoding some relations in your variety, but it's also sort of encoding. Sort of encoding the some birational maps between nearby tori. So some of your tori, if you look at these distinguished bases of characters, they only differ by like a single function. And this quicker Q is telling you, well, how do I get from the distinguished basis of characters of one torus to the next? So what is the mutation map that is gluing them together? Okay, so from this perspective, if I'm thinking about SL2 CERC, there are two cluster tori. There are two cluster tori. The first one is where x1, x2, x3 are non-vanishing, and the second one is where x2, x3, x4 are non-vanishing. Okay, so why care about this? So everything in this section is, we're assuming that the cluster algebra is sufficiently nice. I'm not going to say what that means, but in geometric context, it usually is. So why to care if your variety has a cluster structure? Well, what this identification does is This identification does is it endows your coordinate ring with a canonical basis of functions with positive structure constants. So, this is a vector space basis, so infinite. This is a big, very major result in the field due to growth packing, Keeling, Kinsevich. The cluster variables are part of this canonical basis, which is why we want us to keep track of all of them. And also some other functions encoded by the covenant works of clusters. Okay, so that's one reason to care. You get your hands on this nice basis. This nice basis. Another reason to care is that each seed, so this is the torque degeneration part. So each seed in your cluster algebra gives rise to a valuation. And from that valuation, you can produce a torque degeneration of some compactification or partial compactification of your variety. Okay, I'm not going to say really anything about this. I'll just say some names. So people in the audience actually. So Laura Bothinger has done a So, Laura Bothinger has done a lot of work kind of thinking about this and relating it to other nice 40 generations of varieties that we know. Also, Alfredo Najera Chavez and Timothy McGee and Mandy Chung. They have a, well, I think Tim is going to talk about this upcoming paper in his talk, which is kind of about these details. Another very interesting paper along these lines is by Fujita and Oya. So they obtain They obtain auric degenerations of Schubert varieties in the full flag using cluster structure on well, some open part of that Schubert variety. Yeah, so from this cluster structure, you can obtain some torque degenerations. Other things that you might be interested in, so some results of lambda and spire give us information about the cohomology of V, and in particular some symmetry satisfied by the cohomology. Won't really talk much about that, even just in a skip. Really, talk much about that, even just in a skill aspect. Okay, so um, okay, so that's what a cluster structure is, and now I'm going to tell you about the cluster structure on these braid varieties. So, um, okay, so I kind of set, I outlined this in the order I'm going to do it. So first, I'll tell you about some cluster tori that we can identify. And then I'll tell you how to, so not all of them, but some nice finite collection. And then I'll tell you how to pick this distinguished basis of. You, how to pick this distinguished basis of characters. So, this is all geometric information. And then at the end, I'll get into the combinatorics of how do you write down this quiver, which is encoding algebraic information, but the quiver is not complete. Okay, so first the tori. So we call these deodar tori because they really, in the Richardson case, kind of come from a stratification of Richardsons given by Deodar. Sense given by Theodar. Okay, so what are these things? Well, I get one torus for each braid word beta underline. Some of them will be related by sequences of mutations, and some of them will actually just be equal, but I'm going to describe them all at once. Okay, so to describe these, I need a little bit of combinatorial notation, which is the Demoger product. So if V is a permutation and SI is a simple transposition, the Demoger product, V star SI, is going to Is going to, well, it acts like the normal product if that goes up in the Bruhat order, and otherwise it does not. So the Demajur product picks the bigger one of V S I and P. So now I can tell you what is the torus that I'm looking at. T beta underline U. Well, it's the subset of the braid variety where if I look at my walk and I go backwards, at each step, I'm going to At each step, I'm going to greedily increase the distance from the anti-standard flag. Okay, so this sounds maybe hard, but it is not too hard. So let me do an example. So let me pick this braid word and say U is W naught. So this is, so my grade variety, I don't have these arrows. It's just those points. Okay, so what is the torus in this situation? Well, okay, so I said. Situation. Well, okay, so I said I'm going to start at the final flag and I'm going to take a step backwards. And I'm going to demand that if I could get further from F minus by taking that step, I do. So when I take this step, the flag here, it's either going to be in the same position to F minus as this flag, or the position will have changed by exactly this simple transposition. And so what I'm saying is, well, I do whichever one. I'm saying is, well, I do whichever one of those takes me further away from F minus. So in this position, so in this situation, the flag that I see here, it will either be in identity position to F minus, or it will be in S1 position. The one that's further is S1. So in my torus, I have to see an S1 on this arrow. Now this flag, it's either going to be again in position S1 to F-, or it will be in position S1, S1, and the identity. Which one's further? S1. So that's what I see here. S1, so that's what I see. And then this flag is either going to be an S1 position or S1S2 position. S1S2 is bigger. And then this flag, well, either S1S2 or S1S2S1. S1S2S1 is bigger, right? And in fact, it's the longest element of S3. So actually, forever afterwards, my flags will be in position W for the P points. Will it go on? Okay, so that's the torus. I understand your boss Samuelson variety or an open subset? Yeah, I'm uh I believe so, but I'm not uh totally sure. I can't think about it all this fast. Yeah, I think it's a smaller open system. Is it smaller? Okay. All right, yeah, so I can't, I cannot connect it with the bot Samuelson, but is the definition as I've given it relatively clear. Okay, great. Okay, great. Okay, so that's the Taurus. And I need a little bit. Okay, so if you look at this Taurus, so I should go to this page. If you look at this Taurus, actually, not all flags in the walk will be equally important. Because sometimes, okay, so let's think about inside of this torus, I sort of have two kinds of triangles. So I look at the C plus one. So I look at the C plus one flag and the C flag, okay, and they form like a little triangle, and I've got some permutations on these two edges. And I've got two kinds of triangles. I've got triangles where I've got the same permutation on these two edges, and I've got triangles where I've got a permutation and then a larger permutation over here. And if you think about properties of relative positions of flags, these sorts of triangles are relatively uninteresting because if you know this flag, If you know this flag, you will actually also, this flag will be uniquely determined. So these sorts of triangles, the flags in them are not that interesting. They don't really carry any additional information. So I'm going to call these sorts of triangles hollow. I'll also call the simple transpositions labeling the horizontal edges here hollow. And they're hollow because, well, you should kind of ignore them, shouldn't rely on them. And the other ones are solid. These are the reliable ones. They're actually going to give us information. They're actually going to give us information about the law. Okay, so if you, so right, let me quickly highlight the solid and hollow crossings here. Okay, so this one is hollow because I see two different permutations on the triangle. The next one's solid, this one is hollow, this one is hollow, and then the final one is solid. Okay. So it's the number of solid ones that you mentioned in this term. Exactly. So it's going to get a quarter of a case to get a solid. That's right. That's exactly. That's right, that's exactly right. Um, and if you don't want to write down the whole Taurus, the hollow crossings are just the right most sub-expression for you that you can find, the right most reduced sub-expression. So you can just figure it out straight from the brain word. Yeah, and exactly as Frank mentioned, we have how many solid crossings do we have? Well, we have length of beta minus length of u. That's the dimension of my variety. That's also the number of cluster variables I should see in a cluster. So I'm going to use my solid crossings to index my cluster variables. Crossings to index my cluster variables. Okay, so there's my Taurus. I've told you what I'm going to index my cluster variables by, and now I should tell you what my cluster variables are. Okay, so from a geometric perspective, the cluster variables are sort of really straightforward. From a combinatorial perspective, they're actually not so nice because I can't really write down formulas for them. So I can tell you what they are geometrically, but can't write down formulas for easily. Formal screens. Okay, so here are these. So, to define my cluster variables, I'm going to look at the complement of my torus in the breed variety. So, this complement will decompose into a union of irreducible hypersurfaces, and those irreducible hypersurfaces will be labeled, will be indexed by my solid crossings. I'm going to call these Dodar hypersurfaces. And it's actually, it's very easy to describe what these hypersurfaces are. Surfaces are. I'll say it really quickly, or you can at least describe a dense open subset of them. It's those walks where, so in the torus, we kind of made it, did a greedy walk. That's how we define the torus. And in the hyper surfaces, we're going to do a greedy walk up to crossing C and then make a mistake and do the non-greedy thing. And then we're going to continue to do the greedy greedy thing. So that is, there is some easy description of these dayodar hypersurfaces. And what And what are the cluster variables? Well, they're just the functions that cut out the Deodor hypersurfaces. So they're Taurus characters that vanish to order. Okay, so the cluster variable indexed by the solid crossing C is the Taurus character that vanishes to order one on the corresponding Diodar hypersurface, BC, and order zero on all the other points. Okay, and I should give you a warning. This doesn't actually work for frozen variables because the frozen variables were units. Because the frozen variables are in units on my brain writing. So this definitely can't be the right description, but it is in spirit. How do you know what scale exactly? So you're asking like, what if I should I take like two times the thing? So right. I'm sweeping some things under the rug, which is that there are some very easy Taurus characters to get your hands on called Chamberminers. Called chamber minors. And what we actually do is we define, so the chamber minors give a basis of characters, but not the right one because they're not irreducible. And then we just define like a unit triangular matrix that goes from the chamber minors to reconstitutes. Other questions? Okay, so that is all of the geometry. Geometry. So we've got, I've given you a bunch of tori, one for each braid worth, and I've told you what my cluster variable should be. And so now I need this additional combinatorial mutation of, sorry, combinatorial information of the quiver. So the quiver is going to tell you how to go from one torus to the other. Right, so if you don't really like cluster algebras, this is a purely geometric question. I've got a couple of tori inside of, well, two. Inside of, well, two isomorphic varieties, and I've got an isomorphism between them. And my question is: if I pull back one of my tori along this isomorphism, how is it related to this torus? That's the geometric question I'm asking. And the answer is, well, I'm going to, well, as long as this isomorphism is not too hard, I can kind of encode exactly the relationship between spora and a single cooker. If the isomorphism is harder, then you have to mutate this cooker a bunch of times. Mutate this quiver bunches. Okay, so um, okay, so now is the time for combinatorics. So, at the end of this process, I'll get a quiver, but I'm going to start somewhere else. So, I just start with my grade word, beta underline, and u. And the first thing I'll do is I'll turn this into a bicolored graph and then marked points. Okay, and so remember, my solid crossings, those gave me. Solid crossings, those gave me cluster variables, so they should also give me quiver vertices. And each of my solid crossings, I'm going to turn into a cycle inside of this graph, a relative cycle. And the interactions of the relative cycles are going to tell me the number of arrows between quiververs. So really what I'm going to do is I'm going to take my bicolored graph and upgrade it to an oriented surface, and then my relative cycles will actually be relative cycles. My relative cycles will actually be relative cycles in a surface, and the number of arrows between like quiver vertices is just the sign intersection number of the cycles C, C, and C D in my surface. So I will say this sounds a bit intricate. Because it is a bit intricate, this is a difficult combinatorial problem. So it is what it is. Don't worry, I'll go through this with many examples, or actually only by. Okay, so let's start at the beginning. So I start with my beta underlying. So I start with my beta underline and U, and I produce a bicolor graph. And this step is easy. Okay, so here is my beta underline and then my UW naught. So I start by drawing the wiring diagram of beta underline, except I actually want it to be living in three dimensions, not two, so I'm going to make it a braid diagram. Okay, so if you don't know what a wiring diagram is, I've got in this situation three wires, horizontal wires, and for wires horizontal wires and for every one that i see in beta underline i'm going to put a crossing of the wires at levels one and two and for every two i'm going to put a crossing between the wires at levels two and three okay and then so if it were a wiring diagram i would draw this in a plane and have my wires cross i'm going to think of this in three dimensions so my wires are not crossing one is going to pass on top of the other okay so here is this gray diagram and next i need to highlight my hollow crossings so that To highlight my hollow crossings, so those are just the rightmost sub-expression for W naught that I see. So that's going to be these. Okay, and then to get my bicolored graph, all I do is I take my solid crossing, any of my all of my solid crossings, and I replace them with a little white-black bridge. So here is this local transformation. And I really do, I want to emphasize, I'm thinking. Do I want to emphasize I am thinking of my graph as being embedded in free space in kind of exactly this way as indicated by the action. And then, for technical reasons, I add mark points on the left endpoints. Okay, so this is my graph. It does not yet contain the information of the quiver or the information of how to get between these two tori. I need to fill in the things that stand for cluster variables. So I need to fill in some cycles. Yes. Yes. Do you care about the over-under some citizen 3D? I just always pick the same convention. So the scrand that's coming from the bottom is going to pass over. That's a good question. That's a positive braid thing. Yes, it is a positive braid thing. Or maybe a negative grade thing, actually. I can never remember. Yeah, it depends on how I orient my strands. It doesn't really matter for the construction, but there's Really matter for the construction, but there's a simple what I'm going to tell you about is a simplification, and I needed to make this choice for that straightforward. Okay, so yeah, so now I need to put in these cycles that kind of represent cluster variables. And okay, the easiest way to define these cycles is to actually define kind of a soap film or a disk in the graph that's bounded by the edges of the graph, and then the cycle will be the boundary of that soap film. Soap film makes it easy. Film. Soap film makes it easier to describe what's going on. So, my soap film for the solid crossing C is called DC and it's going to begin at the little grid I put in for the solid crossing C. Okay, and then it's going to start out by just propagating to the left, kind of clinging to these two edges of the graph. So, my soap film starts out by going like this, and then it propagates according to these rules. So, for example, So, for example, if my soap foam is approaching a bridge and it kind of passes over this edge of the graph and under this one, then it just passes through the bridge completely undisturbed. And there are other rules for different ways to approach a bridge. Okay, the easiest way to understand this is definitely by example. So let me do some examples. So let me think about the disk for seven. Okay, so it starts off. So it starts off. So it starts off just like this, and the first thing that happens is it runs into this bridge six, and I see this local situation. So my soap film just stops. Okay, so this cycle, this cycle is just these edges of my graph, and I'm going to orient it so it goes up to bridge seven. So there is my cycle. So that's uninteresting. Let's do six. That would be more interesting. Do six, that would be more interesting. So, the soda foam for six starts out like this, and then it's going to cling to this under strand at this crossing. And then it sees the bridge four, and it is approaching four in this way, so it just passes through undisturbed. Okay, and then it also approaches three in the same way, so it'll pass through undisturbed. Same way, so it will pass through undisturbed, and it continues like this. Okay, and you'll see my disk is not really a disk. So the cycle here will be a relative cycle, right? The boundary of this thing, I'm gonna ignore this part. So the boundary will be boundary will be like this. And your relative cycle in the graph. Okay, so at this point, I should tell you. So right now I can tell you which vertices or which cluster variables are mutable and which ones are frozen. So the mutable ones are the ones that correspond to honest cycles in the graph, and the frozen ones are the ones that correspond to relative cycles. So the things that will be, yeah, the things that will be mutable are like cycles like this. Are like cycles like this, and this long cycle like that, that will be that corresponds to a frozen variable. Okay, so at this point, I could actually stop. So if I wanted to, once I've drawn the cycles in this graph, that completely determines the quiver, but I'll do another transformation to make it easier to oh, and I guess actually before I do that, let me give you some examples. So, first, let's start with the night, kind of the very, very nicest special. The very, very nicest special case, which is the GR CAN CERC situation. So here's GR37 CERC. And I'm just going to tell you, okay, so beta underline is a reduced word for this particular permutation, F7, and U is the identity. So I've drawn here actually the wiring diagram for a reduced word for this permutation. Sorry, I forgot to do the over-under crossings. And then if I follow, okay, so there are no hollow crossings here. Okay, so there are no hollow crossings here because U is the identity. So the recipe to create a graph, just I just replayed each cropping with a little white-black bridge. So I get something that looks like this. And if you follow the kind of propagation rules of the cycles, there are no like there, no over-under crossings survive here, right? This is actually onwardly a planar graph. So these propagation rules, each slope bubble will actually just be a single phase. Soap bubble will actually just be a single face of the graph, and the cycles will just be well the boundary of that single face. So, if you are familiar with this area, this is the same information as one of Klosnikov's reduced playback graphs for the Grasmanian. To get that information, all I do is I delete these tails hanging out to the right of the diagram, and I put everything in a scroll. So then I get a graph that looks like this. This is one of Hoffman-Kott's reduced paper graphs for the breast one. Reduce paved grass for the breast line. Okay, so that's the very nicest case. And I guess, well, it's a very, very special case of brave riding. So you can imagine things are going to get worse and worse as we look at less and less special cases. So the kind of next level up, though not quite as nice, but still fairly nice is the positron situation. So my beta underline is still reduced, a reduced word, but the permutation V, it just has unique descent. That's all we ask. So here's an example of the So, here's an example of the graph I get from one of those wiring diagrams. And I've drawn the soap film for this crossing here. And you can see it's like pretty complicated. I had to use these propagation rules a lot of times. But there's a magical simplification that happens, which is if I delete the tails of each wire. So I look at the right endpoints of the wires and then I trace along it until I hit the first bridge. Those are the tails. Those are the tails. If I delete all of those, lo and behold, I get a planar graph again. And my soap film magically is just bounding, or sorry, it's just covering a single face of the planar graph. So yeah, this is the magic that happens in the positroid case. You get from our construction, basically, honestly, a planar graph. These cycles are really easy to understand. And this is the, yeah, this case was already known. So these pictures are called reduced. So these pictures are called reduced pivot graphs. Like I said before, they're due to push the call. Yeah, so really nice simplification in this case. And so you might think, well, maybe the problem with your construction is that you were too ambitious and you just went too far. Like grade varieties are too big of a generality. When you go there, you have to like deal with these propagation rules and things are really confusing and complicated. But no, even in the But no, even in the Richardson situation, you already run into these combinatorial complications. So, here are two examples of the Richardson situation. So, here's one of my 3D playback grounds embedded in three space. Here's another one. And I've drawn two soap films. And you can see, so in this one, if I do the delete tails trick, you do get a planar graph, but my soap film isn't bounding a single face. So I needed some additional information. So, I needed some additional information to tell me: like, oh, the thing to pay attention to for this graph is not a single face, it's this union of two faces. Okay, so there's already a complication here, and then here's another Richardson situation where the delete the tails trick doesn't give you something plainer. So that also feels the Richardson case. Okay, so that's the combinatorics. I drew these soap films and these cycles in this graph, and now I said, well, just look at how they interact. That gives you the quarter. That gives you the quarter. In my last few minutes, I'll just say pretty concretely how to do that. So, what you do is you take your graph and you just turn it into a surface. You turn it into a surface by taking a little neighborhood around each white vertex and replacing it with a snippet of a surface with boundary, and we should in this fashion. And then your black vertices, you're also going to replace with a snippet of a surface. The yellow part is the underside of the surface. The yellow part is the underside of the surface, it's orientable. Okay, so I have done that local replacement here. And then to get the surface, you just connect your little surface fragments along the F is G. So, you know, I do this and this, et cetera. So here is the surface you get, and the cycles, I've drawn the cycles the orientation. Cycles, I've drawn the cycles, the oriented cycles. Okay, and now they're just cycles sitting on a surface. So there's a notion of signed intersection number, and the signed intersection number between this cycle and this cycle, that tells you how many arrows there are between vertex seven in your cover and vertex six. So, okay, I have not drawn this that well, but well, for one thing, you can see that this cycle, this purple cycle. Cycle, this purple cycle one over here, it doesn't interact with four or seven at all, so it has no arrows to them. If you look at, okay, so these two cycles intersect once here, and these two cycles intersect once here. And if you look at those, the blue and the golden cycles play the same role. So there's arrows kind of pointing this way. So yeah, so that's how you get your quiver. And then, so I'll remind you: this quiver tells you. And so I'll remind you: this quiver tells you how do I go from the basis of characters that I chose for one of my tori to the basis of characters I chose for my neighboring characters. Okay, and that's basically it. I'll just summarize really quickly. So the theorem that I told you about today was I defined these brave varieties and I showed you or I said their coordinate rings are cluster algebras. And the data of the cluster algebra, well, I need to tell you kind of what to plug in, what C to Tell you kind of what to plug in, what seed to plug in. And so I told you, well, what torus gives me the seed. It's a Deodar torus defined by a greedy procedure. And then the distinguished basis of characters, my cluster for that torus, is just functions defining the Deodar hypersurfaces. And then from the information of my beta underline and u, I concocted a combinatorial object which gave you the rest of the information, which was this quitter. Yeah, and I guess the last thing I'll say, so I talked a little bit. Yeah, I guess the last thing I'll say. So I talked a little bit about this not theory corollary, and then I would say we can apply the results of lamb and spire in this situation. So we also get some symmetry for the cohomology of these brands. And I'll stop there. Thank you so much.