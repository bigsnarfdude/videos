Thank you for the invitation and for letting me speak. I will be talking about a recent result we proved with Maria and Sophie. So we have been looking at questions of the following generic form, that if you have a graph of huge tree width, then can you guarantee that it contains an induced subgraph of relatively large tree width that is somehow special? And a couple of years ago, And a couple of years ago, we stumbled onto this conclusion by Elzara and Erd≈ës from 1985 that if you have a graph of sufficiently large chromatic number, then it contains either two anti-complete and two subgraphs of large chromatic number or a large complete subgraph. And anti-complete by the way means disjoint and now edges between them. And so you have to make room for complete subgraphs as an exception because complete graphs have arbitrary large tree. Because complete graphs have every turned large treatment. And if you choose any two NT completes, it's an incomplete graph, then we're going to say. So this would be a sharp characterization of when large enough chromatic number implies the existence of two indicate sets of large chromatic number. And then we said, what if we ask this question about tribute instead of chromatic number? So when does a graph of sufficiently large tribute have 20 complete substances? Tribute have 20 complete sets of large treebridge. So it's more or less the same situation. You have to make room for complete graphs because complete graphs have arbitrary large tribute and no two interests in empty complete sets. Complete bipred graphs also have arbitrary large tree bit. And if you choose two empty complete sets and a complete bipred graph, then either one of them is empty or they're both stable. So complete graphs and complete biped graphs. So, complete graphs and complete bipedal graphs are structures. And what we prove is very much the analog that we heard Elza and Rodriguez conjecture for tree bit, that complete graphs and complete right-wing graphs are the only exceptions. So if you have a graph with any change largely tree-bit, then it contains either 20 complete sets of large tree-bit or a large complete graph or large complete white meter graph. Except we were not. We were not able to get the complete byproduct graph as an induced subpoena. So we got it as an induced minor. The difference is that, so when you content K3, 3, for instance, as an induced minor, it means you have six connected into subgraphs of your graph. 3 on left, 3 on the right hand. Everyone on the left sees everyone on right. So there's at least one edge between everyone on the left and everyone on the right. Everyone on the left and every one on the right. So at least one edge. They're not anti-complete. I don't know what else is happening. And I know that these three are pairwise anti-complete, and those three areas anti-complete. So induced lineup means you blow up each verdict connected into subgraph, and adjacent means not empty complete, not adjacent means empty. So that's the bad news. We were not able to get complete biparticraphs as induced subgraphs. Graphs as and do sub graphs, the good news is that we were not supposed to, or it would be false. So there's this beautiful construction by this very long list of authors. It's Bonamie, Bonnet, Defray, S.R.E., Jeanie, Hillet, Thomas A. and Gusalek. And agree 50% of the pronunciation was wrong, and we were sorry, but so they came up with this beautiful construction of. So they came up with this beautiful construction of graphs with a very large free-bit that are K4-free, K3, 3-free, and they do not contain 20 complete-induced sub-graphs of 2-bit more than 2. And most people, I think, have seen this before, but let me just quickly go over it because it's really fun. So, we ended up calling these interrupted constellations, for lack of a better name. So, what is this? This is a graph that consists of a path, let's call it L. Let's call it L. And the stable set of vertices, so here we have four vertices, and let's consider them as linear the order. So the rule is that every vertex in the stable set has at least one neighbor in the path, and every vertex in the path has at most one neighbor in this table set, so the people in the stable set do not have common neighbors on the path. And the first vertex and the second vertex are allowed to do whatever they want. So from the third vertex onward, whenever there is a gap between neighbors of two distinct people below, that Below, that plane must have at least one neighbor in that gap. And I don't care about gaps between consecutive neighbors of the same group. So here are the gaps between the neighbors of X1 and X2. And X3 is going to have at least one neighbor in each one of these programs. And that is the only rule. X3 is free to do whatever else it wants. And again, I'm looking at the gaps between the neighbors of X1, X2, and X3. And X4 is going to. And X4 is going to have at least one neighbor in each one of those games. So you get the idea. And it's not difficult to show that this has arbitrary large trivia. I mean, to be safe, I think if you have S plus two vertices in this table set, then the trivia is at least S. And it doesn't contain K4, it doesn't contain K33, and it doesn't contain two anti-concluded sets of trivial 1 and 2. So yeah, this is the good news that This is the good news that we are not meant to get complete by graphs as induce sub-graphs because this would be a counterexample. And even better news is that this is the only counterexample. What we actually proved is that if you have a graph of sufficiently large tribute, then it contains either 20-complete sets of large tribut, or a large complete graph as a subgraph, or a large complete byproduct-induced subgraph, or an Or an interrupted cancellation as an induced sublap with as many vertices in the state as you want. So S cancellation means you have S vertices in these tables. Yeah, so this is now a full answer with induce subgraph outcomes. Complete graphs, complete byproduct graphs and interrupted constellations are the only induce subgraph obstructions to large tree rate implies to anticomplete sets of large tree. Try to complete that large truth. Okay, so for the next 20 minutes or so, I'll try to show you the proof of this result, the previous one, the weaker one, with the induced minor outcome, which is actually a step in the proof of the stronger result, but that is much more complicated. So I would definitely not be able to cover it in a 20-minute So, okay, we're going to go over the proof of it. Okay, so I have a graph of exposure in large tree, and it doesn't contain 20 complete sets of large tree, and it doesn't contain a large complete sub-graph. The goal is to say that it contains a large complete pipeline. And boost money. So, roughly, the proof is in three steps. The first step is to show that it can. The first step is to show that it contains a large, complete minor. So a lot of connected sets, and there is at least one inch between every two of them. Then the second step is to show that it contains a large, complete, bipartite minor that is half induced. So the branch sets on one half are present-complete, but I don't know what is happening on the other half. Then the third step is to make it completely induced. And do Steer and do this thing. So, okay. The first step is to get a The first step is to get a large complete model, minor model, and I'm going to work with linear models. Linear means each one of these connected induce sub-branches are actually paths. So each branch step induces a path. And from now on, whenever I use the word path, I mean I induce that. So that's the first step. I'm not going to show you the proof of that. It's a little technical. I think I would have been able to cover it. I would have been able to cover it if I had like an extra 15 minutes, but definitely not now. So let's assume that we got to a large linear complete model. So a lot of paths, there was not anti-complete. So the second step is to convert this into a linear complete bipartite model that is half and between. Bipartite model that is half-induced again. The branch sets of one half opera response and the other half management. So for this one, okay, let me show you a nice tree first. So here's a graph GN. I have a path in G. It's called B. And I have a collection, let's say A, of this joint subsets of vertices. So very many of these. I mean, let's say this is huge. This is huge. So these are just pairwise distrained subsets of vertices. I don't know if they're anti-complete or not. I don't know what is happening inside them. The only restriction is that each one of these sets sees the path piece. There's at least one edge between each set and the path. So I'm claiming that one of the following three things holds. Either there's somebody There's somebody in B that sees many of the subsets in A. Or there are a lot of subpaths of B, so these are all contained in B, and their pair was destroyed, so I might as well assume that their pair was empty complete, it could just get every other one. I could just get every other one. And a lot of sets in A such that each set sees each subpad. So for instance, if I knew these are connected subsets, then this would be a complete minor model, complete byproduct minor model that is half induced. Model that is half induced. So this is towards what I'm looking for. Or I get a subpath of V that, and again, a lot of sets in A. So this time let me call them something. So A1, A2, A3, A4. Such that when I traverse this subplatform, one end to another, the neighbors of these guys just appear in order. So I can bring. Just appear in order. So I can break this into four subpaths, four segments, such that I see the neighbors of A1 here, and then the neighbors of A2 here, and the neighbors of A3 here, and the neighbors of A2 here. And they do have neighbors. So this may sound a little technical, but it's actually pretty easy. The way you do it is: so for every single one of these sets, let's think about the shortest subpath of B that contains That contains all neighbors of that set. So this end is adjacent to somebody here, that end is adjacent to somebody here. And this guy does not have neighbors anywhere else. So this is the... So if this is set A, let's tell who's P. So these are just sub-paths of P, and might just be just one verse, but it's definitely not. So let's think about the intersection graph of these subpaths. It's an integral graph, right? And since A is big, this integral graph contains either a large clip or a large stable set. And the large stable set is just this, right? I mean, there are a lot of sets in A, and the full expense of their neighbors is just pairwise destruction. And so let's assume that there's a large grid. I have a lot of these sets here such that the subpaths corresponding to them pairwise intersect. So there is some vertex summer. So there is some vertex number such that for a lot of these guys, each set has both a neighbor this way and that way, to the left and we and the right. So if we sees many of them, then that's outcome one. If we doesn't see many of them, then it means for most of them, they have a neighbor strictly to the left and to the right of V. Meaning, if I just remove V, I still have two subpaths and a lot of sense. And a lot of sits here that see both this subpad and that subpad. So these are two anti-complete subpads with R. And a lot of people see both of them. Now just keep one of the subpads and repeat the same thing here again. Break this into two subpads and just keep doing it. That's many things on to have subpads here. Right? So Europe 3. Is the part of the bottom meant to be the entire part of the bottom? No, it's contained. Oh, yeah. Yeah, I might like ending up in the second or somewhere thirds. Okay, so why is this useful? I'm going to use this here in my complete minor model. And so let's, okay, first of all, I can assume that, I claim I can assume that every vertex on every path sees only a few other paths, right? So suppose somebody here. So, suppose somebody here sees a lot of other pads. Let's just think about those pads. And suppose someone here sees a lot of other pads. Let's just think about those pads. And I eventually end up getting a lot of vertices and a lot of pads. And each vertex is seeing each pad. These are just vertices by Ramsey because I'm excluding a bit please. I can get a bit disabled here. And now this is a complete bipartite minor model, but it's half induced. So I can assume that. I can assume that every word that's on each bat is only a few other bats. And then so let's try to apply that trick. So this is going to be my set B and these are the subsets forming the set of subsets A. And so this is a complete minute model, meaning each one of these type Each one of these guys C, and so I can apply that thing. I've already arranged for people on B to only see a few other paths, so the first outcome is not going to happen. And if the second outcome happens, then I did a lot of subpaths like this, and a lot of these paths on top, that each one of them sees every single subpath. And that is, again, a complete byproduct induced minor model. Complete byproduct minor model that is half induced, because these output was not adjacent. Because these are provided not adjacent, I think. So the last outcome happens, they form an alignment. I can break this into, I can go to a subpath of B and break it into, let's say, five subpaths such that the neighbors of one, two, three, four, five appear along path number six in order. States in order. Okay, and I'm going to do it again. So from now on, let's order 1, 2, 3, 4, 5 paths. This is the order that is induced on these guys by this path. So I'm going to do it again for 1, 2, 3, 4, 5, and 1, 2, 3, 4, and path 5. So this is going to be my new B and this is going to be new A. Again, the second outcome happens. Sorry, the last outcome, the third outcome happens. The last alpha, the third alpha happens. Meaning, I can go to a bunch of segments here, and for a lot of these guys, their neighbors are going to appear in order. So, let's just call them so 1, 2, 3, 4. The order is not 1, 2, 3, 4 again, but I can assume that it is by Ramsey, right? You can just go to a subset of it such that the order is either the same or the reverse. That's just very central, right? I mean, I can just flip the path and the order becomes the same. And your group becomes the same. So I get one, two, three, four, again. And let's do it again. Same and get one, two, three, and so. When you did it sufficiently many times, so let's break this into two halves. Okay, what is happening here? So the paths on bottom, every single one of them sees each path on top, right? So this sees one, two, three, one, two, three, one, two, three. And what is happening? And what is happening between these frags? If there is an edge between 4 and 5, the end of that edge, n 5, is contained in here, right? That's the segment on path number 5 that contains all the neighbors of path number 4. And if there's an edge between 4 and 6, it's going to be contained in here. And if there's an edge between 5 and 6, it's going to be contained in here. There's an issue between five and six, it's going to be contained here. So if I just forget about these, these are up there was NT complete. But they still see each path in top. So that's a complete byproduct mining model that is half of those. Right? And it's linear. Every single branching set is a path. Okay, so that's that's So that's like the tricky step. Now the third step would be to convert a half-induced model into an induced one. So here is my half-induced linear complete byproduct model. In middle. They have a lot of pats on the bottom and a lot of pats on top. So these are what is empty complete. These, I don't know what is happening. And every pattern class is every pattern class. Pattern tops is every pattern. So again, let's do that for every single one of these paths being B, with this whole thing being A. Again, if for many paths on bottom, I have somebody that sees a lot of people on top, then for most of them, it's going to be the same set of paths on top. And so I did a lot of paths on top, and a lot of vertices from the bottom. That every vertex sees every path. And this time, these are there wasn't even keys. These are there wasn't even keys. And that's just a set of vertices that extract the stable set from it, and that's going to be an actual induced minor model, right? So I can assume that every single time I'm applying that lemma to one of these guys being B and this being A, the first outcome doesn't happen. The second outcome, again, would easily give me an induced minor model because I did. Induced minor model because I get a lot of sub paths in a row of these guys that see each other. So I get the alignment again. It's going to be the third outcome. So I can keep a lot of these guys, and I can assume that it's the same subset for every single path, such that their neighbors along the path appear in order. And again, by Ramsey, I can assume that it's always the same order, if we have sufficiently many paths. In particular, I can just write this. I can just write this picture, let's say, into these little boxes such that the neighbors of these guys and every single one of these paths is just containing these segments. And they do have neighbors. And the same happens in every single box. So this is the alignment, and now I'm just breaking it into several slightly smaller sets. Several slightly smaller sets. Okay, and now we can almost done. The reason is, so think about two of the boxes. This is box number one. This is box number two. So what is happening between these two induced subreps? This isn't complete to that. These are all pairwasnets. This isn't complete to the bottom because Inteced to the bottom bit because this is an alignment. All the neighbors of these bits are identical. And this isn't completely to that. So the only thing that could go wrong preventing these two from being integrated to each other is that there might be chords between the segments from box one and the segments from box two. So let's try to see what may happen. So for every single segment here and every single segment for box two, I'm going to ask, is there a chord between these two or not? That's either a yes or a no. Or no. So I'm going to ask nine questions. I get a profile of nine yes or no's. That's a total of 512 different answers. And I'm going to color this pair of boxes with one of those 512 colors. So by Ramsey, I can keep a lot of boxes such that the answer is always the same for every single pair. And if the answer is a profile of nine no's, then it means for box one and box. That it means for box one and box two, every single segment on left is anti-complete to every single segment on right. And that is not two anti complete sets. And they have large tribute because they contain a complete bipartite minor, right? And just contraid these and contraid those, that you can complete my brand. So the answer is yes, somewhere. But the point is that it's the same place for every single pair. Meaning, for instance, if it's between For instance, if it's between the first segment from left and the third segment from right, then these three segments see every single one of those three segments. But these are pre-written complete because they're containing the same tab. And the same is true here. So this is a complete bipartite in Goose Magnum. That's it, that's true. I think that would be about it. I mean, if someone has a specific question about any of the details that I gloss over, then I would be happy to answer. Thank you. So how do you get your purpose for information? Yeah, but the way the proof of this works is we first prove this, the second theorem. So we like the first two outcomes, right? Because they're the same. I don't like a complete bipartite induced minor. Then we prove a second theorem. And in any graph, if you contain a large complete bipartite induced minor, then we know exactly what are the unavoidable induced. And then we know exactly what are the unavoidable induce subgraphs. So there's a list of induced subgraphs that must be present, one of them must be present, and those things themselves have arbitrarily large tribute. It's an exhaustive, like pretty long list. Then the third step is to use that theorem. So you go through every single outcome, and you prove that in each case, you either contain two sets of large triggers, or a large complete byproduct and do subgraph, or you pick your constellation. Actually, the constellation, the interpreted constellation, is one of the outcomes. Is one of the outcomes of that theorem? Okay, any other questions? So if I understand correctly, the result on the top, it implies that if you have no KT, no KTT, no constellation, and no K anti-qubit cycles, you have boundary trade widths. Yes, this implies our ninth spading. Real proof? Are you using this? No, we're not using it. Are you using this? No, we're not using it. That result follows from this, and one lemma from the earlier paper, it's fairly straightforward. It's just. So one thing to note is that if you have complex sets of large tribes, so one of them has large tribute, it contains a cycle, the other one tribute is huge. Let's do it again here. 