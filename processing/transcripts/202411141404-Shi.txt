For my talk. And so let me get started. So first of all, this is like a reinforced game for financial market equilibrium. But whereas me and my collaborators are still not certain whether this is like an appropriate name, and we're gonna see. So let me get a little bit of background to make sure like everyone is on the same page here. First of all, like no training is actually perfectly frictionless. So even Perfectly frictionless, so even the most liquid asset actually hasn't bad asset spread inside of the market. And this limited liquidity of asset actually can drastically change the behavior of the participants. And back in the 1990s, where Steve Fried and Matt Sonar is being investigated in this type of problem and figure out that there actually exists a no-free region. Exists at no-trade region if you encounter like proportional costs inside of the market. And still, trading with limited liquidity is a hot topic in this area. And we can see that it really drastically modulates the behavior of the agents from like trading note crazily in exchanging their positions. But on the other hand, if Hand, if some investments are more liquid than the others, then potentially the superior liquidity should come at a price. This is just like as pointed out by the banker report in 2017. In other words, we have a financial market where only limited liquidity is being provided. On one hand, you will modulate the agents trading. The agent's trading behavior, but also on the other hand, due to the limitation of the liquidity, the asset price should change. And how to determine the asset price and the agent's optimal trading behavior is actually by this relationship, which is the market is clear. That means the outstanding supplies inside of the market will match the aggregate demand on all. Aggregate demand on all the participating agents. So, therefore, we would like to expand a model where the price level, the equilibrium return, as well as the volatility response to the market yield liquidity is actually through the agent's endogenous trading behavior. That means we need to study this problem inside of an equilibrium model. So, now here comes the question. Here comes the question, which we will see in a second. Under the most general case, the equilibrium return will actually be provided implicitly through this market clearing conclusion. So we would like to ask us what is actually the intrinsic reaction of the price dynamic with respect to the participating agents' behavior. Because this is not really like in some very oversimplified model. Over a simplized model, you can actually get the return reaction explicitly through a system of equations, but in the most general case, you can't. And also, often for equilibrium models, especially with trading paths, the numerical method was only being provided from like a case-to-case idea. It was basically specifically designed. Specifically designed for specific models. And in this talk, I would like to provide a general framework that accounts for general utility functions and general trading cost format. So we can at least learn the intrinsic reaction of the price dynamic numerically. So without further ado, let me start to introduce the model. So again, this is just like a very simple Like a very simple illustrative example, so everything can be actually generalized. We assume that the market uncertainty is being captured by a one-dimensional brand emotion, and we assume there exists finite number of agents inducted with a stream of non-tradable risky incomes, where the income is mostly focused on the brown emotion part. So this is like a Browning motion part. So, this is like a technology shot, or he's being exposed to the uncertainty provided inside of the market. So, in order to share the risk, there exists two trading instruments. One is an exogenously fixed risk-free asset with zero interest rate, and the other one is the risky asset, which is the DST here, and the return and volatility. The return and volatility of this stock is to be determined inside of the market. Here exists some further assumptions: like, first of all, the risk-free asset is perfectly liquid. You can just trade or exchange the position in this risk-free asset with no trading costs. And the trading inside of the stock market is actually costly. So, therefore, the wealth dynamic for individual agent can be written down as follows. It consists of three parts. The first part comes from trading inside of a stock account because there is no interest rate, so we can just forget about that part. And subtracting the cost, changing the position of your risky account, and then plus the endowment that this agent faces, and that's the reason why he or she is willing to. Why he or she is willing to trade inside of the market. And here, the dynamic for the trading cost, we assume, is going to be an instantaneous penalty on the trading rate that this agent faces. So, which means we're going to focus on the absolutely continuous trading strategy for this agent. So, So here, this lambda parameter is the liquidity level inside of the market, but we can definitely make it more complicated. This is just like an illustrative example, but I just want to point out here the only assumption we have is that this liquidity level parameter is being exogenously determined. So now we have the wealth, we have the cost, we need to We have the cost, we need to assign a preference for each agent to trade. And here we took the simplest one we can think of, which is a linear quadratic preference for this agent inside of a finite trading horizon. So basically, this agent N is going to optimize her expected growth with a penalty upon the leading order risk, which is the quadratic variation she faces. Variation she faces. And the risk aversion parameter with gamma here represents how this agent is going to hate the risk. And also, I want to point out, in the most general case, we can assign any utility functions or preference functions with or without terminal wealth. And or running consumption costs or consumption utilities in here. We have a preference for the agents. We introduce the equilibrium type we're going to think of. So we're going to say the market is in equilibrium, provided that every agent participating in the market is going to maximize their individual goal. Going to maximize her individual goal functional. And second, the market actually clears. That is, the agent's total demand will match us with a given exogenous and even supplies. And we have then three unknowns inside of the system, which is the initial stock price, the return, and the volatility. But we only have like two conditions, so we need to impose an So, we need to impose an actual condition, and this is like one of the many ways we're doing so. We just assume that the terminal stock price will equal some exogenously fixed terminal conditions at maturity. And this gives us like a backward confusion. You can think it as like a terminal liquidity confusion or like a terminal liquidation or some fundamental value. Or some fundamental values at the terminal time. So let's see, this is our target. So first, for individual agents, the optimality condition can actually be described by a forward-backward, so passive differential equation system. That is, for each of the agents, I know exactly where I started. So the position, the optimal position for these agents can be served as like the forward barrel. Serve as the forward variable inside of the system. And the backward component here is because I know at the terminal time and maturity is never optimal for me to trade because the price does not really have any time to recover from wherever it is, but the cost is immediate. So I'm not gonna trade at maturity, and that means my optimal trading rate at capital T is going to be zero. T is going to be zero. So, this is already in the most general literature going to be very complicated, but at least it can be still described through an SPSV system. Now, what about for equilibrium? So, we can see that the equilibrium return can be determined through this individual optimal trading rate and equilibrium volatilities, provided that the market clearing condition is being. That the market clearing condition is being satisfied. And together with the terminal liquidity condition, it is actually a backward SDE system attached to the coupled FPSDE for each individual agent. So it's going to be miserably fully coupled FPSDE system. And of course, no regularity result exists for such a system, and classical numerical solutions basically. Solutions basically doesn't work. And I hope Dylan disagrees with me on that part. And what is even worse? That is, sometimes this equilibrium return, the equations, is actually of a very implicit format. For example, with suppose we have a proportional trading cost. If there's only two agents, I know exactly. There's only two agents. I know exactly my counterparty is going to have exactly the opposite position with me. So it's kind of easier. But what if there comes another guy? And the three of us, we just have no idea what to do. So in that case, the equilibrium return is actually of the input as a function, of the equilibrium volatility and the optimal trading rate. Which means you just Which means you just basically can't really write down the generator for the backward SDE for the stop size. Then, what should we do? We think about numerical algorithms that could at least give us some hope. And here's a little bit of what people have done in the past. The first one is that if you're lucky to obtain an FBSD system, you can solve it using this FBSD solver. Using this FBSD solver. And if you have Nash equilibrium, which means you believe you understand the equilibrium returns reaction, then you can apply the Nash DQN. That's a Nash equilibrium. And right, but that means that you really have to know the equilibrium return. I didn't understand. Are we able to prove that there is a Lynakal unique perhaps? Um, well. Um, well, at least you can just close your eyes and try, which is basically like all the other deep learning algorithms. You just want to at least first test it to some extent. And we're going to show in the case where no exactly the existence and mainness, our algorithm actually works. With a little bit more. It's one or two more slides. So here, this is our model. This is our model, which is still in progress. That is, we don't really assume the equilibrium return is of an explicit formula that we know. All we need is very simple thinkings. And that is the GAN structure. So the very important key factor for this FBSC system or equilibrium system is that it's miserably coupled with each other. Miserably coupled with each other. But for the machine, you have to tell him what to do. Or at least as a mathematician who is trying to use the numerical algorithm, you have to decouple the problem into simple sub-problems. So this is why we think about this GAN structure that NIHAP. One minute background for GAN is usually used to augment more data. It's like a data. Data. It's like a data augmentation instrument. And basically, this is the original gap structure, which in the generator you are going to generate examples, and the discriminator is going to tell you the quality of the generator. So you basically have a simple path. That is the result you learn from the generator. You're going to push it through the discriminator. And the output from the discriminator does not really go back and fit the training on the generator. The training of the generator. So the reinforcement part, the reinforcement part comes here in our structure. That is, the discriminator's result will still have to fit in the generator. And in the next slide, I'm going to show you how to use it. So for the generator of this neural network, is that we're going to throw insight of the individual optimization problem. So, suppose we are given an equilibrium or a dynamic of the stock price. We treat the return on volatility as given. So, for the individual agents optimization problem, we can use deepadging, we can use the FBI solver, or both. So that we can output the generator as the low. As the learned optimal policies or the optimal trading rate from each of these individual participating agents. And because the stock price is given, so everyone's optimization problem kind of decouple from each other. And you can do it in parallel in a very fast training time. And for the discriminator, we're going to learn the We're going to learn the equilibrium asset price dynamic. So, therefore, the individual optimal trading rates, which is the thing that we just learned from the generator, is going to be input inside of the discriminator. And the market clearing condition and the terminal surprise is going to be the loss function of the discriminator. And we're just going to penalize if the market clearing condition is not being satisfied. Being satisfied. So, with explicit expression, it can just be as simple as the FBSD solver proposed by Han Jason in 2018, which is like one of the most popular algorithms to solve FBSDs. And if you only have like an implicit expression, then basically what you have to do is to teach the machine or hard encoded to do a gutto derivative. Do a gattote derivative of the individual optimization problem. And then the equilibrium volatility and the return will be the output of the discriminator and to therefore push inside of the generator. Anyway, it's just like a decoupling scheme that we're going to have. So this is like the result of the output again. So with quadratic trade. So with quadratic trading costs, we know the existence and to some extent the uniqueness of this frictional equilibrium. And then we're going to test whether this algorithm actually works. So on the left hand side, this is assume that we already know the relationship of the equilibrium. Of the equilibrium return with respect to the equilibrium volatility and the optimal individual training strategies. On the left, basically, I have three agents inside of the system, and you can see they're supposed to be like six lines, but you only see approximately three. This is because the generator actually learned the optimal training strategy quite well. And I believe this last one. This loss function is of 10 to the minus 5/5 power, which is like really minimum power. And on the right-hand side, this is the equilibrium mobility. And the solid orange line is the solution provided by the so-called brown shoes, which is by a system of ODEs. And the blue line here is what we learned from this gap. Learned from this GAM, the discriminator of the GAM. This is really quite accurate. And what if we pretend we don't really know the dependence of mu and the volatility? So can we actually learn the dynamic or the equilibrium return dependence on the volatility? So this is the Volatility. So, this is the output from the generator, which still looks more or less very accurate. And we can see that at the terminal time, all three agents stop trading, which makes sense. And also, I plotted the solution given by the ground truth, because we know that there exists one. So, what about the discriminator? On the left-hand side, this is the equilibrium return. This is the equilibrium return. Again, this blue line is learned by the reinforced GAN, and the orange line is provided by the ground truth. So, still, I think the loss function as the arrow is 10 to the minus 3's power. So, it's still very accurate. And on the right-hand side, this is the equilibrium velocity. So, of course, it's slightly worse than the case where we know the dependence. Case where we know the dependence, but that's just acceptable error, I would say. So, this is a case where we know exactly what the round truth is. And I'm going to show like another, sorry, I should, I should, there's a title. So, another trading cause is actually the three over two power trading cause. And it corresponds to the square root loss. Root loss, sorry, square root cause function. So we have two agents inside of the system where we still kind of know what to expect in the leading order. And the green and red line is the solution provided by the leading order asymptotic analysis of this equilibrium. And the blue and orange is these two agents inside of the equilibrium column. Inside of the eucalyptum provided by the gun network. And we can see that at the terminal time, they stop trading, whereas the leading order ones are still trading just because they are traded as like the time horizon is infinite. And now here comes the equilibrium return and velocities accordingly. So on the left-hand side, this is the equilibrium return, and on the right-hand side, Term and on the right hand side, this is the equilibrium volatility. So the orange line has the asymptotic volatility if there exists real tooth power costs. And the blue line is the one provided by the reinforced GAN network. At the terminal time, we see that it basically clashes to the case where your volatility is There's no trading cost inside of the market. Just because, like, if there is no time to trade, then everyone doesn't really interact with each other and it's just the same as the frictionless one. And if you're really further away from maturity, it kind of coincides with the orange line provided by the leading order asymptotic analysis. Okay, so um then in addition, I would like to emphasize a little bit uh the capability of the uh of this network structure. So first of all, it can deal with multiple agents and multiple SOCs. And second, you can even you know endogenize the interest rate to some extent if you provided that the consumption market also. Consumption market also clears. So, for other utility or preferences functions, it can be also using this GAM framework with a little bit changes inside of this network structure. And more importantly, like for the proportional trading cost, because you will have to change the learning target inside of the trading rate. The trading rate, you will probably end up with like dangerous types of trading strategies. Then you have to, instead of parametrizing the trading cost, you will have to parametrize non-trade region for each of the agents. So it can basically provide like sell as fact observed in real or small cost regime, that is to the knowledge that we know. And also, it will Also, it will actually work in some cases where we don't really know what to expect. For example, if we have like nonlinear trading costs or nonlinear price impact functions and with more than two agents, we really literally don't know what's going to happen. But you can still provide us some reasonable result that matches with the style aspects. And so the road ahead is, of course, where you're Is of course we're going to see if this reinforced scans can actually have a nice convergence analysis. For example, if the equilibrium actually exists as a solution, whether it can converge to that solution. And if there exists some global approximation problems theorem to be established, like the nice neural operators we just know of several days ago. Yes, so basically that. Um yes. So basically that's a very uh simple ideas and it gives us like some really good results here and uh that's basically everything I'd like to talk about. Thank you. Any questions for the audits? I don't know anything about this numerical method because I already pointed out in my own talk. But what I do know is that there are lots of Is that there are lots of equilibrium models where everything works in discrete time, but I'm sure your numerical method is a discrete time method. Nothing works in continuous time. There's absolutely no reason that any discrete time solution should converge. So these pictures, what do they really show me? They show me equilibrium in a discrete time world. They show me really a big time. They show me really a an approximation of an equilibrium in a continuous setting for which one can actually prove some kind of convergence. What are these pictures showing at the end of the stage? So first of all, this yellow line here is a continuous time equilibrium model solution. Yes, I show the existence of it. It's a giant FPSD system. It's incomplete. It's incomplete. It's incomplete and with frictional. It's incomplete frictional equilibrium. And so the solution is provided by a system of ODEs. And I know it's a continuous time equilibrium model. And here, I have to discretize the time horizon to apply this numerical method. And if I And if I actually know some nice properties of this solution, it can actually converge to the if you if you discretize the time horizon fine enough. So I do show some type of I mean that's just like empirical observation. Again, for any of this convergence analysis, I think we need to dig deeper inside of it. Is he impressive? Other questions from the audience? Okay, let's access. Maybe one more time and a little more desktop.