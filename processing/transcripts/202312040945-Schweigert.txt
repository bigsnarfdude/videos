Okay, thank you very much for having me here and grateful to be for being back to this very nice place. So I want to tell you about some structures that are more general than rigidity that appear in nature in a sense. And I want to explain what you can learn about module categories in this case. Now I don't have to explain to this audience what rigidity is, you know what Is, you know, what an object has a left dual, an object has a right dual. A category is called rigid if it has every object has a left and a right dual. And what I would like to emphasize that this is a property, this is not structure. Now, the structure seems to appear everywhere, but really you should remember that it's a property of finite dimensional vector spaces, which you have somehow extended almost by definition to finite dimensional. By definition, to finite dimensional modules of a finite dimensional Hopf algebra, you find it on finitely generated projective modules, and you find it in geometric contexts, which of course gives us the feeling that this is the general thing to think about. It has severe consequences. Well, first of all, the tensor product is exact. It has implications for homological algebra, in particular about the In particular, about the structure of projective objects, and the dual has a very strong structure, it becomes omonoidal. Well, now in general, in nature, rigidity is not generic. So, for example, if you take a finite dimensional k algebra, k will be a field, all vector spaces in this talk are finite-dimensional, then the category of bimodules, well, it cannot be. Well, it cannot be rigid because tensoring is not an exact factor, otherwise, our homological algebra class would be shorter. And also, if you're interested in vertex algebras, then it's well known that there are examples of vertex algebras where the tensor product is not exact. These are important vertex algebras which are very close to things like critical percolations, so, really things you want to understand and you cannot dismiss as being pathological. And also, the category of finite-dimensional modules over a finite-dimensional Hof algebra proid is in general not rigid. This is not so surprising if you think that this is essentially a Hofmonad on some category of bimodules, a very specific Hofmonad. Okay, good. So now let's briefly look at bimodules. This is of course textbook stuff. And again, all vector spaces are finite dimension. Spaces are finite dimensional. Of course, you have the linear dual, and then you can turn obtain from an A1, A2 bimodule, and A2, A1 bimodule. And already very simple example shows that if you take here A as a bimodule over itself, which is the monoidal unit, that then A dual is not isomorphic to A. So A dual is in general another interesting object in this category. And let's Category. And let's before explaining this, let's look at the tensor product of bimodals. The textbook definition is as a co-equalizer. It is right exact if you work in the appropriate setting. But you can define here a second tensor product. And I want to insist on this second tensor product, which is of course known to everybody who has worked with co-modules and co-algebra. So this is not really new. This is not really new. So if you have A star under our conditions is a co-algebra, M is a bico-module, and then you can define another tensor product as a co- not as a co-equalizer, but as an equalizer. And this gives a left exact tensor product, which has a monoidal unit, which is exactly this other time by module A star. And we have this relation here, which essentially, if you're If you're bored, prove it in the rest of the talk and otherwise give it to your well-andacratic students, essentially. So A will be a dualizing object in a moment. Let me emphasize just in passing that this second tensor product is very useful. I mean, this is nothing new, but it's a nice way to write things. So we know the Eilberg-Watts theorem, which roughly states that every Which roughly states that every right-exact functor is obtained by tensoring with a bimodule. And not just any bimodule, but the bimodule is computed by taking the monoidal unit and applying the functor to it. Now, if you are given a left-exact functor, there's also an Eildaquatt's theorem. It's usually written down differently, but you can write it down here in a very symmetric way by taking the other tensor product, the left-exact tensor product. Product, the left exact tensor product, and applying it to the monoidal unit of the other tensor product. This is very beautiful to rewrite it. You could have it in textbooks of algebra. And similarly, you can write induction, well, in terms of one tensor product, you call induction in terms of the other tensor product. This is not what I want to talk about. One thing I want to mention before I go to the subject proper of the talk. Subject proper of the talk is this notion of duality also appears in a context that's close to the interest of many of here. Let's assume you have a vertex algebra that's nice. Nice means the HLZ theory applies. And let's assume that everything is finite in the appropriate sense, which means possibly of the gradients the homogeneous components are finite. So then you can take a contragradient modules, which means you're taking. Modules, which means you're taking the dual, the linear dual of these homogeneous components. They're hydrodimensional, no subtleties here. And then you can define on this a module structure. And what I should emphasize, and that's the only thing you need to remember here, is if you define this module structure, it depends on L0 and L1. It depends on the conformal structure of the vertex algebra. So this is very obvious then that defining a dual. Defining a dual here is structure. And again, there are vertex algebras which are not simple and which are extensions actually of two simple modules, for example, and where the dual is not isomorphic. So this is the generic situation for which we have to set up a theory and in which we have to develop conformal field theory and the necessary tensor categorical tools. Okay, so. There is a definition, it's an old definition, let's take it here in the form as it appears in a paper by Trinfeld and Broyachenko. We have a molloidal category. An object is called a dualizing object if this functor here is representable by some object g of y. So we have this equivalence and k is called, well, it's a choice, it's unique up to tensor. It's unique up to tensor U with invertible objects, and G is called the duality factor functor, which is contravariant. It depends on K. And the crucial assumption here, which is a finiteness assumption in spirit, is that G is an anti-equivalence. And so we are looking at this type of structure. You've seen examples in the first part of the talk. First part of the talk, and well, they've appeared in the 70s as autonomous categories, first requiring things to be symmetric, and then they have been developed in several contexts, in particular in linear logic, because in linear logic it's kind of very nice to have two tensor products. In logic, we have AND and OR, and we have a negation, which is a duality. So quite a few tools come from this field. And here, duality is structure. Is structure. Okay, so actually a re-reading of the HLZ theory, which we've done a couple of years ago, shows that here under the suitable conditions, that the category of representations over such a vertex algebra has the structure of a croton-de-Querdier category with this grade-wise dual of the vertex algebra S. Dual of the vertex algebra as the dualizing object. And this is something you can find almost literally in the HLZ papers, but the HLZ papers is a couple of hundreds of pages, so you need an expert to find them. Okay, and there's a recent theorem by Rob Allen, who's one of the co-authors here. And he showed that also for a Hobbes algebra read under conditions which I'm not specifying, but essentially finite dimension. But essentially, finite dimensionality again. The category of representations is called D Gretier. And the natural dualizing object you can choose is there is a base algebra, so it's a Hof mod on A by mod. You take A dual, and that's the natural object, a dualizing object for an Hof-Lj prod. Okay, now let me recall something probably everybody. Something probably everybody here knows. It's the notion of an internal hom. And of course, I could have also chosen the other factor in the tensor. And later I will take internal homs of module categories. That's why I've done it in this way. So the internal home is a right adjoint. It is left exact. If you have a left exact tensor product, it is interesting to ask for the internal cohome as the left adjoint. Home as the left adjoint. So now the nice thing is that in Codendee quotient categories, internal horms exist. Now, for those of you who worry about the relation to logic, do the little exercise. The internal horm is a logic implication. And if you have x implies z, then probably the beginning of courses you tell people this is equivalent to the negation of x and the X and the negation of Z. That's what we are writing down here. So just to show you that you have worked with quote-quequier categories in the first year at university. But I didn't tell you. Okay, so now there is also a second tensor product. It's defined as follows. Of course, we could take g and g to the minus one, we could exchange it, it would be monoly equivalent. And you see, this is due to the And you see, this is due to the fact that the duality is not omonoidal. So that's important, that's built in. And this second tensor product has internal cohoms. You can write them down explicitly. I didn't do it. You can prove that the double dual is monoidal. And so there are pivotal quotantiquetier categories, they are braided, quote unquote categories, and written code and deeper categories. Okay, good. Now Now, I should just mention in passing that there are important developments by Athena Gauchier, Lucas Müller, Lucas Volcker, and they showed that if you look at algebras over appropriate operators, like the cyclic associative algebras, and you look at algebras with values in the category where you find it categories, left exact founders and natural. Natural transformations, then these algebras are just pivotal quotant equator categories, written quote in equator categories. So they appear in many natural contexts. They build up a whole theory, which is interesting for quantum topologists here. Using this operatic approach, they build an answer functor. An answer functor is like a modular functor. A modular functor is the coherent system of mapping class groups. That's the coherent system of hand-class. A coherent system of handle-modic groups, and it's under control when this extends to a modular functor. So, in principle, we already have a modular functor for categories at our disposal. It's not very explicit for the more algebraically minded people, but they are there. So, not yet a description a la Aljubachenko. Okay, so now let's go for the second part of this talk. For the second part of this talk, to module categories over code and degrading categories. What are the motivations? So, well, as you know, I have a long-standing interest in conformal field theories and full CFTs combining left and right movers, they need module categories, and this has been always an important interplay, module categories and CFT series. But we need them to provide Frobenius algebras, and we need Frobenius algebra. And we need Frobenius algebras to describe field objects. So, how can we get in the colour? What structure do we have in this setting on module categories? And what ways do we have to get Frobenius algebras? This is the question which I want to tell you. At the same time, I want to give you some understanding of the following question. We have two tensor products. If you are given just one tensor product, well, it is not associative on the nose, but there's an associator, and everybody An associator, and everybody knows what this means to have an associator. The second tensor product, the bullet here or par in the logic notation, that has also an associator. There is a coherence. But how are they compatible? And it turns out that you're reading in logic that there are structural morphisms, but they are not ideals. So, what are these structural morphisms? Why are they there? How can we understand them? How can we understand them? And I want to show you why they are there. I'm not saying we completely understand them, but we made some progress in understanding them. That's the second and mathematical goal for the second part is talk. Okay, so let's start with a definition. Well, a left-quote nigga module category, well we take the G V category with its one tensor product, imagine the right exact tensor product. Imagine the right exact tensor product. It's a module category and such that all the functions you naturally consider admit right adjourns. This is a right exactness argument. So in particular, this functor, which goes from m to mn, which means you're acting by an element, an object in the monoidal category, this is an endo functor, it has a right adjoint and it can take this right adjoint and build And build another action. So we take GC, well, if I could just take RC, I would go from a left adjoint to a right adjoint. This twelve around everything, but we have duality. So I'm taking here duality functor of this and the right adjoint. And you check that this defines a second action. But it's an action for the other tensor product. So in this way, if you have to start with such a tensor, If you have started with such a tensor product, you have really two tensor products of the monoidal category and two module category structures. So everything is very nicely symmetric. You have one tensor product which has inner homes, or one action on module categories which has inner homes, and you have inner cohorts. Okay, good. Now there is the following factor. The following fact of life, let's call it this way. If you have a monoidal category and module categories, take a linear functor and take it which admits a right adjoint, then if you have oblax structures on F, they are in bijection to lax functors on G. And it's important to say lax and oblax. And if I say in bijection, I have to say what is preserved. What is preserved? Well, what is preserved is best understood in terms of profunctors. So if you have module profunctors, there's a notion of module profunctors, then you want to have that the adjunction introduces an isomorphism of module profunctors. That's very natural to have. Now, in particular, if F is a strong module functor, then G gets a structure of a lax body. The structure of a lex body functor, the adjoint, but it's only lex. And that's since the inner home is welcome back. Since the inner home is defined as an adjoint, this is very relevant for us. So the inner home should be only a lax module functor. So, okay. So if we take this module functor from C to M, which sends C to C acting on a fixed element. To see acting on a fixed object here, then you see that this here is a maximum functor in the second argument. So you get coherent morphisms, but they have a direction. So that's the message here. And if you write out the internal home, remember that I told you it's implication, and you can write it as a tensor product, then you see. This is the reason to get here such a structure morphism. And since this is a module, And since this is a module function, it obeys a pentagon diagram and you get a pentagon. It's a pentagon with directions. Okay, good. And you work a bit more and you get almost all diagrams you find in the work of Cockett and Siddy on linearly distributive categories. One is missing, to be honest. Okay, so now let's investigate when is this module functor strong? Functor strong. And this Lax module functor here is a strong module functor if and only if X has the property of having a right dual X2. And in this case, the right dual can be realized in terms of the internal ohms. And so you see, this is where rigid duality as a property has its place. It ensures that multiple functors are strong. Okay. This is in the context of monoidal categories. Well, here it's kind of very instructive to analyze this for the category of bimodules and take a textbook. The textbook could be Boba Key, for example. If you dislike to Boba Key, find your favorite textbook. So this is a strong module factor if and only if it has with respect to this right exact tensor product. Right, exact tensor product, the dual, if it is projective in the right sense, and in this case, the distributor, which is kind of rearranging these two different tensor products, so the ones for quote-in-quote modules and co-modules, right, if this is an isomorphism. And of course, there's a second part to this lemma. You can also do this for the second distributor, and it works the same. And it works the same way. Okay, good. Now, let's come to the core of the structure I want to discuss in this talk. So let's single out objects in a module category, in a module category over a quote-unquote Vatier category. And let's single out those for which the inner home is particularly nice. So what I'm asking is that it is a strong mortal functor, that's not automatic. Functor that's not automatic, and secondly, that it has a right adjoint. Well, it always has a left adjoint by definition, so I'm imposing also some examples. And obviously, I can play the same game by using the other tensor product. It's a completely symmetric story. It's a de Morgan type duality, as you have it between and R. And it and you are using then, of course, the cohom here. Course, the cohom here. Well, in this case, you find two full. Well, let's introduce full subcategories. These are the full subcategories of objects that are admissible. And let's also introduce here this for the monoidal category itself simply by considering the monoidal category as a left module category over itself. So let's do this. So let's do this, and then we can prove the following proposition. And Victor was saying this is work in progress because it's not published. I think it's not anymore in progress, but it's not published. These categories here are unital monoidal categories. Unital is a bit of duplicating with care because the unit here is the monoidal one, the unit here is the dualizing object, so a unital here. A unital here, and then by restriction, this subcategory in the module category is a module category over C hat, and similarly for the dotted word. So these are the things you find here. And now let's do a bit of more advanced theory. The first thing is when is a category is a module category a category of modules? This is a classical question. This is a classical question. The answer here is it's not necessarily true, even if you're asking the category to be semi-simple and ability. So this is not enough. But you can do the following game. Well, it's the usual game. The inner ends are associative unital algebras. You find a functor from the module category here, and you wonder when is this an equivalence of module? An equivalence of modular categories, and the answer is: again, this is work in finished brokers. If you take an object which is in this category of good sub-objects, and if it is sufficiently big, which means that for any object M there exists some object in the monologue categories and such that there is a subjection here, then Objection here, then this is an equivalence of C module categories. The proof is not difficult, and it's essentially an extension of the proof you can find in things people call in this field the book when two of the orders are. Okay, yeah, okay, but anyhow, uh but this is one of the things these objects in M head do, and a similar story is can be made up for co modules. For home modules. But there's a different thing. Let's look at the following situation. Let's compare inner homes and inner co-homes. Well, in general, well, if you don't have a bar here, this is trying to introduce SAR functors. Ser functors exist if the algebra is semi-simple, unless you work in a derived setting. But if you take inner homes, inner cohomes, the question becomes interesting. The question becomes interesting. For exact module categories, they exist, but exact module categories over rigid, in the rigid situation. So now we work with partially defined relative staff functors. This is not unusual to work with partially defined relative staff functors. So there exists in this situation between these on these subcategories and Is a functor which achieves this here and which turns out to be an equivalence. Now, in a sense, in business and before doing this, well maybe I should look at the Serfunctors. So the Serfunctor is, if you go to the monoidal case on these good categories, it is a monoidal equivalence. And if you go to a module category, If you go to a module category, it is a twisted module functor, which is very natural and very important in this context. So, of course, this has to be proven, but this cannot be proven in a 30-minutes talk, and the paper will be out, well, whatever you understand by suit. Yeah, so now imagine that I want to fight for Binius algebras. Internal homes are in pivotal module categories. Are in pivotal module categories, are perfect source of Frobenius algebras. In the rigid case, there is a natural notion of a GE for Benius algebra in the sense that you need a product and the co-product and the subpiece, that product and co-product have to be taken by different tensor, by the two different tensor products. And if you accept this, then you can prove the following thing. If you have Follow anything. If you have an object again in this good subcategory and you have an isomorphism, so from M to a Ser functor on M, then the inner home gets such a structure for Biggest algebra. So this category here, these good subcategories, they achieve two things. They achieve that you can represent a module category as a category of modules and they achieve. They it achieves that you get for Venus algebras. Okay, good. So, this is the main theorem of the talk. And let me wrap up. So, potentially query duality is a very natural algebraic structure. It deserves to be studied. Rigidity is a property which makes life easy, but which is not the real life. A theory for module categories is under development and Development. And of course, there's a lot of work to be done. So, for example, methods of quantum topology have to be developed. So, if you do keen theoretic approaches, how good are these good subcategories to set them up? I'm pretty confident about it. This is a necessary step to investigate CFT correlators. Of course, there is a question, how frequent are How frequent are these good objects? If you just sit down and you give a random module category, this category can consist only of the zero object. But the real question is, take, for example, a vertex algebra that obeys the H and Z theory. And is there always such a good object which subjects to an arbitrary given object? This is in the sense that there are enough for... Is in the sense that there are enough projectives. And I would hope that this is true. And if you are very optimistic, I would even hope that there is something like a model category structure in which these objects are really something like the covibrant objects. And then you have a very strong hint that the next step of the theory will be in a derived setting and you're not talking about categories anymore. But that's for the future. For the future, and I think for this reason these categories deserve to be studied. Thank you. Do you have some understanding of Morita's theory? Not yet. It's simply a matter of time. It's possible to get this. But it has to be developed yet. And of course, what we want to get is. What we want to get in the end for applications is even a pivotal monitor theory. So this will come. It's very friendly to pivotality, so the real issue is to set up a monitor theory. Our notion of trace in this category, since you talk about the notion of trace. Well, I think the notion of a trace is an interesting one and Interesting one, and I would start with the notion of what people call a modified trace. Because if you start with the notion of a trace which quantum topologists might have in mind, take the evaluation and co-evaluation and matching by a pivotal structure, well, that becomes subtle because you have a co-evaluation, you have an evaluation, but they are for different tensor products. But traces can be defined in a setting of linear categories. In a setting of linear categories. And this works out quite generally as long as you're defining them on projectives. What remains to be understood is projectives are in this setting not anymore an ideal, so you cannot very naively take every result. But this will be the good notion of trace. What happens is that your object here is that Your horizontal object K is equal to one. You do not get reaching K T P, you get something. No, no. This is what's called in the Boyachenko-Trinfold paper an R category, little R category. Honestly, this can happen. But even if you have an R category, then you can take an invertible object and take change to dualizing object. Change the dualizing object. And already this is interesting. So if you want to study the Feynman Fuchs boson, then essentially that's what you're doing. You're starting in with a rigid category and you change the dualizing object. Sorry? Treyandbertable. Yeah, to the invertible. But of course, once you enrich the story by adding screening charges and this stuff, there's no reason why the original object is invertible. So I think this can happen, but it's more or less. I think this can happen, but it's more or less more of an accident and I wouldn't build the theory on this property. And as you see, it's very important. Even you can take a three-dimensional algebra with already counterexample these two R categories. Is there a notion here of two thought center also that they mean associated with this particular choice of oh, the notion I have to confess. I have to confess here something. When we saw this, we thought, okay, we are writing down now what the Trinfeld center is, we're getting central model, and the whole machine runs. Yes, but there is an important, there are many subtleties concerning the Trinity Center. And the first thing is if you are using the theory, whether you realize it or not, you are using that the Trinfeld Center is equivalent to the model. The Trinford center is equivalent to the modules over the central monad. But the central monad essentially already uses all monoidality of the cube. And that doesn't hold. So if you try to cure it, you can cure certain aspects, but others get worse. And also for the braiding, it's kind of subtle because anything in this category wants naturally to go from one tensor product into the other. In logic, you want to go from an end to an or. But once you are in the or. But once you are in the R, yeah, you can take this as a new proposition, but you cannot decompose it anymore. And if you show that modules over the central monad, that in this case the grading is invertible, we are using heavily, that the category is rigid. So there have to be modifications for the Trinfeld center, and I don't know at the moment exactly which ones. Know at the moment exactly which ones. But this is really, this is the crucial part where the theory must make some progress. You're completely right. May I ask question from Zoom? May I ask question from Zoom? Sure. Please go ahead. Go ahead. Yes. So I have a question from Zoom. So let's consider. So you are saying that this is a structure and not property because of the choice of this dualizing object K. Is this correct? This is correct, yeah. And if you talk about R categories, which I think was asked about, then it is a. Asked about that, it is a property, right? Being an R category. Yes, this is a property, that's correct. Okay, now if we consider R categories, do you know an example of a semi-simple R category with finitely many simple objects which is not region? I don't think I know an example, but let me think about it because there is an example, so do I Because there is an example, so to understand correctly that if you have a semi-simple category, and you the difference between such grotted and rigid is that the zigzag morphism can be zero for simple objects. Is this right? No, no, no. The zigzag morphism is always the identity. That's a miracle in a sense. You can write down a zigzag morphism and And okay. And you have to interpret it in the right way. So you see here you have an evaluation. Evaluation is for this tensor product. But the co-evaluation is for this tensor product. And it makes sense to say that this is the identity, and indeed it is the identity. But ah, okay. Okay. I see. So for semi-simple basically, will there be a difference between the dot product and the usual product? You choose the dualizing object different from the monoidal unit, it will be different. No, no, for the arcade. Then the two products will be the same. But natural morphism is not necessarily morphism. Exactly. If you just take a category generated by one object x, x squared is zero, isn't that a quote-unquote E category? That's a quote-unquote category category. And it's not rigid. So financing is simple, not rigid, quote-unquote E category, right? Let me write it. Let me write it down. Thanks, David. This was a comment by David Hoyt or Justin. This was a comment by David Hoyt or Justin Hughes. You take a semi-simple category, you take two objects, one is the monoidal unit, right? And the only non-trivial tensor product is that you impose this to be zero. This is not rigid, and it is quote de Guerki, and the dualizing object is x. And by the way, this module category, which doesn't admit a representation as modules over an. A representation as modules over an algebra. This is simply take vect and act with the object X on any vector space by zero. But this isn't an R category. Sorry? That's not an R category. This is not an R category, right? No, so so maybe maybe my question more precisely formulated would be suppose you have a fusion ring and you have a purification which is growing the third year. Which was grown in the third year. Does it imply that it is actually region? Well, maybe it's for the discussion session. Maybe we can put that on the board for our open problems session later this afternoon. That sounds a good idea. Okay, thank you. Yeah, thank you for your questions. Thanks, David, for bringing up this important example. It's a workhorse. Okay, we're going to cut off. Okay, we're going to cut off the questions here. Let's thank Christoph again.